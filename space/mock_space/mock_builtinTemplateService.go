// Code generated by mockery v2.35.2. DO NOT EDIT.

package mock_space

import (
	app "github.com/anyproto/any-sync/app"
	mock "github.com/stretchr/testify/mock"

	space "github.com/anyproto/anytype-heart/space"
)

// MockbuiltinTemplateService is an autogenerated mock type for the builtinTemplateService type
type MockbuiltinTemplateService struct {
	mock.Mock
}

type MockbuiltinTemplateService_Expecter struct {
	mock *mock.Mock
}

func (_m *MockbuiltinTemplateService) EXPECT() *MockbuiltinTemplateService_Expecter {
	return &MockbuiltinTemplateService_Expecter{mock: &_m.Mock}
}

// Init provides a mock function with given fields: a
func (_m *MockbuiltinTemplateService) Init(a *app.App) error {
	ret := _m.Called(a)

	var r0 error
	if rf, ok := ret.Get(0).(func(*app.App) error); ok {
		r0 = rf(a)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockbuiltinTemplateService_Init_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Init'
type MockbuiltinTemplateService_Init_Call struct {
	*mock.Call
}

// Init is a helper method to define mock.On call
//   - a *app.App
func (_e *MockbuiltinTemplateService_Expecter) Init(a interface{}) *MockbuiltinTemplateService_Init_Call {
	return &MockbuiltinTemplateService_Init_Call{Call: _e.mock.On("Init", a)}
}

func (_c *MockbuiltinTemplateService_Init_Call) Run(run func(a *app.App)) *MockbuiltinTemplateService_Init_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*app.App))
	})
	return _c
}

func (_c *MockbuiltinTemplateService_Init_Call) Return(err error) *MockbuiltinTemplateService_Init_Call {
	_c.Call.Return(err)
	return _c
}

func (_c *MockbuiltinTemplateService_Init_Call) RunAndReturn(run func(*app.App) error) *MockbuiltinTemplateService_Init_Call {
	_c.Call.Return(run)
	return _c
}

// Name provides a mock function with given fields:
func (_m *MockbuiltinTemplateService) Name() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// MockbuiltinTemplateService_Name_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Name'
type MockbuiltinTemplateService_Name_Call struct {
	*mock.Call
}

// Name is a helper method to define mock.On call
func (_e *MockbuiltinTemplateService_Expecter) Name() *MockbuiltinTemplateService_Name_Call {
	return &MockbuiltinTemplateService_Name_Call{Call: _e.mock.On("Name")}
}

func (_c *MockbuiltinTemplateService_Name_Call) Run(run func()) *MockbuiltinTemplateService_Name_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockbuiltinTemplateService_Name_Call) Return(name string) *MockbuiltinTemplateService_Name_Call {
	_c.Call.Return(name)
	return _c
}

func (_c *MockbuiltinTemplateService_Name_Call) RunAndReturn(run func() string) *MockbuiltinTemplateService_Name_Call {
	_c.Call.Return(run)
	return _c
}

// RegisterBuiltinTemplates provides a mock function with given fields: _a0
func (_m *MockbuiltinTemplateService) RegisterBuiltinTemplates(_a0 space.Space) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(space.Space) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockbuiltinTemplateService_RegisterBuiltinTemplates_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'RegisterBuiltinTemplates'
type MockbuiltinTemplateService_RegisterBuiltinTemplates_Call struct {
	*mock.Call
}

// RegisterBuiltinTemplates is a helper method to define mock.On call
//   - _a0 space.Space
func (_e *MockbuiltinTemplateService_Expecter) RegisterBuiltinTemplates(_a0 interface{}) *MockbuiltinTemplateService_RegisterBuiltinTemplates_Call {
	return &MockbuiltinTemplateService_RegisterBuiltinTemplates_Call{Call: _e.mock.On("RegisterBuiltinTemplates", _a0)}
}

func (_c *MockbuiltinTemplateService_RegisterBuiltinTemplates_Call) Run(run func(_a0 space.Space)) *MockbuiltinTemplateService_RegisterBuiltinTemplates_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(space.Space))
	})
	return _c
}

func (_c *MockbuiltinTemplateService_RegisterBuiltinTemplates_Call) Return(_a0 error) *MockbuiltinTemplateService_RegisterBuiltinTemplates_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockbuiltinTemplateService_RegisterBuiltinTemplates_Call) RunAndReturn(run func(space.Space) error) *MockbuiltinTemplateService_RegisterBuiltinTemplates_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockbuiltinTemplateService creates a new instance of MockbuiltinTemplateService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockbuiltinTemplateService(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockbuiltinTemplateService {
	mock := &MockbuiltinTemplateService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
