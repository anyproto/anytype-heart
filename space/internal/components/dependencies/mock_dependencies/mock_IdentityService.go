// Code generated by mockery. DO NOT EDIT.

package mock_dependencies

import (
	context "context"

	crypto "github.com/anyproto/any-sync/util/crypto"

	mock "github.com/stretchr/testify/mock"

	model "github.com/anyproto/anytype-heart/pkg/lib/pb/model"

	types "github.com/gogo/protobuf/types"
)

// MockIdentityService is an autogenerated mock type for the IdentityService type
type MockIdentityService struct {
	mock.Mock
}

type MockIdentityService_Expecter struct {
	mock *mock.Mock
}

func (_m *MockIdentityService) EXPECT() *MockIdentityService_Expecter {
	return &MockIdentityService_Expecter{mock: &_m.Mock}
}

// GetMyProfileDetails provides a mock function with given fields: ctx
func (_m *MockIdentityService) GetMyProfileDetails(ctx context.Context) (string, crypto.SymKey, *types.Struct) {
	ret := _m.Called(ctx)

	if len(ret) == 0 {
		panic("no return value specified for GetMyProfileDetails")
	}

	var r0 string
	var r1 crypto.SymKey
	var r2 *types.Struct
	if rf, ok := ret.Get(0).(func(context.Context) (string, crypto.SymKey, *types.Struct)); ok {
		return rf(ctx)
	}
	if rf, ok := ret.Get(0).(func(context.Context) string); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Get(0).(string)
	}

	if rf, ok := ret.Get(1).(func(context.Context) crypto.SymKey); ok {
		r1 = rf(ctx)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(crypto.SymKey)
		}
	}

	if rf, ok := ret.Get(2).(func(context.Context) *types.Struct); ok {
		r2 = rf(ctx)
	} else {
		if ret.Get(2) != nil {
			r2 = ret.Get(2).(*types.Struct)
		}
	}

	return r0, r1, r2
}

// MockIdentityService_GetMyProfileDetails_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetMyProfileDetails'
type MockIdentityService_GetMyProfileDetails_Call struct {
	*mock.Call
}

// GetMyProfileDetails is a helper method to define mock.On call
//   - ctx context.Context
func (_e *MockIdentityService_Expecter) GetMyProfileDetails(ctx interface{}) *MockIdentityService_GetMyProfileDetails_Call {
	return &MockIdentityService_GetMyProfileDetails_Call{Call: _e.mock.On("GetMyProfileDetails", ctx)}
}

func (_c *MockIdentityService_GetMyProfileDetails_Call) Run(run func(ctx context.Context)) *MockIdentityService_GetMyProfileDetails_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context))
	})
	return _c
}

func (_c *MockIdentityService_GetMyProfileDetails_Call) Return(identity string, metadataKey crypto.SymKey, details *types.Struct) *MockIdentityService_GetMyProfileDetails_Call {
	_c.Call.Return(identity, metadataKey, details)
	return _c
}

func (_c *MockIdentityService_GetMyProfileDetails_Call) RunAndReturn(run func(context.Context) (string, crypto.SymKey, *types.Struct)) *MockIdentityService_GetMyProfileDetails_Call {
	_c.Call.Return(run)
	return _c
}

// RegisterIdentity provides a mock function with given fields: spaceId, identity, encryptionKey, observer
func (_m *MockIdentityService) RegisterIdentity(spaceId string, identity string, encryptionKey crypto.SymKey, observer func(string, *model.IdentityProfile)) error {
	ret := _m.Called(spaceId, identity, encryptionKey, observer)

	if len(ret) == 0 {
		panic("no return value specified for RegisterIdentity")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string, crypto.SymKey, func(string, *model.IdentityProfile)) error); ok {
		r0 = rf(spaceId, identity, encryptionKey, observer)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockIdentityService_RegisterIdentity_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'RegisterIdentity'
type MockIdentityService_RegisterIdentity_Call struct {
	*mock.Call
}

// RegisterIdentity is a helper method to define mock.On call
//   - spaceId string
//   - identity string
//   - encryptionKey crypto.SymKey
//   - observer func(string , *model.IdentityProfile)
func (_e *MockIdentityService_Expecter) RegisterIdentity(spaceId interface{}, identity interface{}, encryptionKey interface{}, observer interface{}) *MockIdentityService_RegisterIdentity_Call {
	return &MockIdentityService_RegisterIdentity_Call{Call: _e.mock.On("RegisterIdentity", spaceId, identity, encryptionKey, observer)}
}

func (_c *MockIdentityService_RegisterIdentity_Call) Run(run func(spaceId string, identity string, encryptionKey crypto.SymKey, observer func(string, *model.IdentityProfile))) *MockIdentityService_RegisterIdentity_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string), args[1].(string), args[2].(crypto.SymKey), args[3].(func(string, *model.IdentityProfile)))
	})
	return _c
}

func (_c *MockIdentityService_RegisterIdentity_Call) Return(_a0 error) *MockIdentityService_RegisterIdentity_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockIdentityService_RegisterIdentity_Call) RunAndReturn(run func(string, string, crypto.SymKey, func(string, *model.IdentityProfile)) error) *MockIdentityService_RegisterIdentity_Call {
	_c.Call.Return(run)
	return _c
}

// UnregisterIdentitiesInSpace provides a mock function with given fields: spaceId
func (_m *MockIdentityService) UnregisterIdentitiesInSpace(spaceId string) {
	_m.Called(spaceId)
}

// MockIdentityService_UnregisterIdentitiesInSpace_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'UnregisterIdentitiesInSpace'
type MockIdentityService_UnregisterIdentitiesInSpace_Call struct {
	*mock.Call
}

// UnregisterIdentitiesInSpace is a helper method to define mock.On call
//   - spaceId string
func (_e *MockIdentityService_Expecter) UnregisterIdentitiesInSpace(spaceId interface{}) *MockIdentityService_UnregisterIdentitiesInSpace_Call {
	return &MockIdentityService_UnregisterIdentitiesInSpace_Call{Call: _e.mock.On("UnregisterIdentitiesInSpace", spaceId)}
}

func (_c *MockIdentityService_UnregisterIdentitiesInSpace_Call) Run(run func(spaceId string)) *MockIdentityService_UnregisterIdentitiesInSpace_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *MockIdentityService_UnregisterIdentitiesInSpace_Call) Return() *MockIdentityService_UnregisterIdentitiesInSpace_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockIdentityService_UnregisterIdentitiesInSpace_Call) RunAndReturn(run func(string)) *MockIdentityService_UnregisterIdentitiesInSpace_Call {
	_c.Call.Return(run)
	return _c
}

// UnregisterIdentity provides a mock function with given fields: spaceId, identity
func (_m *MockIdentityService) UnregisterIdentity(spaceId string, identity string) {
	_m.Called(spaceId, identity)
}

// MockIdentityService_UnregisterIdentity_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'UnregisterIdentity'
type MockIdentityService_UnregisterIdentity_Call struct {
	*mock.Call
}

// UnregisterIdentity is a helper method to define mock.On call
//   - spaceId string
//   - identity string
func (_e *MockIdentityService_Expecter) UnregisterIdentity(spaceId interface{}, identity interface{}) *MockIdentityService_UnregisterIdentity_Call {
	return &MockIdentityService_UnregisterIdentity_Call{Call: _e.mock.On("UnregisterIdentity", spaceId, identity)}
}

func (_c *MockIdentityService_UnregisterIdentity_Call) Run(run func(spaceId string, identity string)) *MockIdentityService_UnregisterIdentity_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string), args[1].(string))
	})
	return _c
}

func (_c *MockIdentityService_UnregisterIdentity_Call) Return() *MockIdentityService_UnregisterIdentity_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockIdentityService_UnregisterIdentity_Call) RunAndReturn(run func(string, string)) *MockIdentityService_UnregisterIdentity_Call {
	_c.Call.Return(run)
	return _c
}

// WaitProfile provides a mock function with given fields: ctx, identity
func (_m *MockIdentityService) WaitProfile(ctx context.Context, identity string) *model.IdentityProfile {
	ret := _m.Called(ctx, identity)

	if len(ret) == 0 {
		panic("no return value specified for WaitProfile")
	}

	var r0 *model.IdentityProfile
	if rf, ok := ret.Get(0).(func(context.Context, string) *model.IdentityProfile); ok {
		r0 = rf(ctx, identity)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.IdentityProfile)
		}
	}

	return r0
}

// MockIdentityService_WaitProfile_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'WaitProfile'
type MockIdentityService_WaitProfile_Call struct {
	*mock.Call
}

// WaitProfile is a helper method to define mock.On call
//   - ctx context.Context
//   - identity string
func (_e *MockIdentityService_Expecter) WaitProfile(ctx interface{}, identity interface{}) *MockIdentityService_WaitProfile_Call {
	return &MockIdentityService_WaitProfile_Call{Call: _e.mock.On("WaitProfile", ctx, identity)}
}

func (_c *MockIdentityService_WaitProfile_Call) Run(run func(ctx context.Context, identity string)) *MockIdentityService_WaitProfile_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string))
	})
	return _c
}

func (_c *MockIdentityService_WaitProfile_Call) Return(_a0 *model.IdentityProfile) *MockIdentityService_WaitProfile_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockIdentityService_WaitProfile_Call) RunAndReturn(run func(context.Context, string) *model.IdentityProfile) *MockIdentityService_WaitProfile_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockIdentityService creates a new instance of MockIdentityService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockIdentityService(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockIdentityService {
	mock := &MockIdentityService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
