// Code generated by mockery. DO NOT EDIT.

package mock_device

import (
	app "github.com/anyproto/any-sync/app"

	mock "github.com/stretchr/testify/mock"

	model "github.com/anyproto/anytype-heart/pkg/lib/pb/model"
)

// MockNetworkState is an autogenerated mock type for the NetworkState type
type MockNetworkState struct {
	mock.Mock
}

type MockNetworkState_Expecter struct {
	mock *mock.Mock
}

func (_m *MockNetworkState) EXPECT() *MockNetworkState_Expecter {
	return &MockNetworkState_Expecter{mock: &_m.Mock}
}

// GetNetworkState provides a mock function with given fields:
func (_m *MockNetworkState) GetNetworkState() model.DeviceNetworkType {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetNetworkState")
	}

	var r0 model.DeviceNetworkType
	if rf, ok := ret.Get(0).(func() model.DeviceNetworkType); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(model.DeviceNetworkType)
	}

	return r0
}

// MockNetworkState_GetNetworkState_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetNetworkState'
type MockNetworkState_GetNetworkState_Call struct {
	*mock.Call
}

// GetNetworkState is a helper method to define mock.On call
func (_e *MockNetworkState_Expecter) GetNetworkState() *MockNetworkState_GetNetworkState_Call {
	return &MockNetworkState_GetNetworkState_Call{Call: _e.mock.On("GetNetworkState")}
}

func (_c *MockNetworkState_GetNetworkState_Call) Run(run func()) *MockNetworkState_GetNetworkState_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockNetworkState_GetNetworkState_Call) Return(_a0 model.DeviceNetworkType) *MockNetworkState_GetNetworkState_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockNetworkState_GetNetworkState_Call) RunAndReturn(run func() model.DeviceNetworkType) *MockNetworkState_GetNetworkState_Call {
	_c.Call.Return(run)
	return _c
}

// Init provides a mock function with given fields: a
func (_m *MockNetworkState) Init(a *app.App) error {
	ret := _m.Called(a)

	if len(ret) == 0 {
		panic("no return value specified for Init")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*app.App) error); ok {
		r0 = rf(a)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockNetworkState_Init_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Init'
type MockNetworkState_Init_Call struct {
	*mock.Call
}

// Init is a helper method to define mock.On call
//   - a *app.App
func (_e *MockNetworkState_Expecter) Init(a interface{}) *MockNetworkState_Init_Call {
	return &MockNetworkState_Init_Call{Call: _e.mock.On("Init", a)}
}

func (_c *MockNetworkState_Init_Call) Run(run func(a *app.App)) *MockNetworkState_Init_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*app.App))
	})
	return _c
}

func (_c *MockNetworkState_Init_Call) Return(err error) *MockNetworkState_Init_Call {
	_c.Call.Return(err)
	return _c
}

func (_c *MockNetworkState_Init_Call) RunAndReturn(run func(*app.App) error) *MockNetworkState_Init_Call {
	_c.Call.Return(run)
	return _c
}

// Name provides a mock function with given fields:
func (_m *MockNetworkState) Name() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Name")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// MockNetworkState_Name_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Name'
type MockNetworkState_Name_Call struct {
	*mock.Call
}

// Name is a helper method to define mock.On call
func (_e *MockNetworkState_Expecter) Name() *MockNetworkState_Name_Call {
	return &MockNetworkState_Name_Call{Call: _e.mock.On("Name")}
}

func (_c *MockNetworkState_Name_Call) Run(run func()) *MockNetworkState_Name_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockNetworkState_Name_Call) Return(name string) *MockNetworkState_Name_Call {
	_c.Call.Return(name)
	return _c
}

func (_c *MockNetworkState_Name_Call) RunAndReturn(run func() string) *MockNetworkState_Name_Call {
	_c.Call.Return(run)
	return _c
}

// RegisterHook provides a mock function with given fields: hook
func (_m *MockNetworkState) RegisterHook(hook func(model.DeviceNetworkType)) {
	_m.Called(hook)
}

// MockNetworkState_RegisterHook_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'RegisterHook'
type MockNetworkState_RegisterHook_Call struct {
	*mock.Call
}

// RegisterHook is a helper method to define mock.On call
//   - hook func(model.DeviceNetworkType)
func (_e *MockNetworkState_Expecter) RegisterHook(hook interface{}) *MockNetworkState_RegisterHook_Call {
	return &MockNetworkState_RegisterHook_Call{Call: _e.mock.On("RegisterHook", hook)}
}

func (_c *MockNetworkState_RegisterHook_Call) Run(run func(hook func(model.DeviceNetworkType))) *MockNetworkState_RegisterHook_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(func(model.DeviceNetworkType)))
	})
	return _c
}

func (_c *MockNetworkState_RegisterHook_Call) Return() *MockNetworkState_RegisterHook_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkState_RegisterHook_Call) RunAndReturn(run func(func(model.DeviceNetworkType))) *MockNetworkState_RegisterHook_Call {
	_c.Call.Return(run)
	return _c
}

// SetNetworkState provides a mock function with given fields: networkState
func (_m *MockNetworkState) SetNetworkState(networkState model.DeviceNetworkType) {
	_m.Called(networkState)
}

// MockNetworkState_SetNetworkState_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SetNetworkState'
type MockNetworkState_SetNetworkState_Call struct {
	*mock.Call
}

// SetNetworkState is a helper method to define mock.On call
//   - networkState model.DeviceNetworkType
func (_e *MockNetworkState_Expecter) SetNetworkState(networkState interface{}) *MockNetworkState_SetNetworkState_Call {
	return &MockNetworkState_SetNetworkState_Call{Call: _e.mock.On("SetNetworkState", networkState)}
}

func (_c *MockNetworkState_SetNetworkState_Call) Run(run func(networkState model.DeviceNetworkType)) *MockNetworkState_SetNetworkState_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(model.DeviceNetworkType))
	})
	return _c
}

func (_c *MockNetworkState_SetNetworkState_Call) Return() *MockNetworkState_SetNetworkState_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockNetworkState_SetNetworkState_Call) RunAndReturn(run func(model.DeviceNetworkType)) *MockNetworkState_SetNetworkState_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockNetworkState creates a new instance of MockNetworkState. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockNetworkState(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockNetworkState {
	mock := &MockNetworkState{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
