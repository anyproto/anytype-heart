// Code generated by mockery. DO NOT EDIT.

package mock_fileobject

import (
	domain "github.com/anyproto/anytype-heart/core/domain"

	files "github.com/anyproto/anytype-heart/core/files"

	mock "github.com/stretchr/testify/mock"
)

// MockFileObject is an autogenerated mock type for the FileObject type
type MockFileObject struct {
	mock.Mock
}

type MockFileObject_Expecter struct {
	mock *mock.Mock
}

func (_m *MockFileObject) EXPECT() *MockFileObject_Expecter {
	return &MockFileObject_Expecter{mock: &_m.Mock}
}

// GetFile provides a mock function with given fields:
func (_m *MockFileObject) GetFile() (files.File, error) {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetFile")
	}

	var r0 files.File
	var r1 error
	if rf, ok := ret.Get(0).(func() (files.File, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() files.File); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(files.File)
		}
	}

	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockFileObject_GetFile_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetFile'
type MockFileObject_GetFile_Call struct {
	*mock.Call
}

// GetFile is a helper method to define mock.On call
func (_e *MockFileObject_Expecter) GetFile() *MockFileObject_GetFile_Call {
	return &MockFileObject_GetFile_Call{Call: _e.mock.On("GetFile")}
}

func (_c *MockFileObject_GetFile_Call) Run(run func()) *MockFileObject_GetFile_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockFileObject_GetFile_Call) Return(_a0 files.File, _a1 error) *MockFileObject_GetFile_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockFileObject_GetFile_Call) RunAndReturn(run func() (files.File, error)) *MockFileObject_GetFile_Call {
	_c.Call.Return(run)
	return _c
}

// GetFullFileId provides a mock function with given fields:
func (_m *MockFileObject) GetFullFileId() domain.FullFileId {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetFullFileId")
	}

	var r0 domain.FullFileId
	if rf, ok := ret.Get(0).(func() domain.FullFileId); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(domain.FullFileId)
	}

	return r0
}

// MockFileObject_GetFullFileId_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetFullFileId'
type MockFileObject_GetFullFileId_Call struct {
	*mock.Call
}

// GetFullFileId is a helper method to define mock.On call
func (_e *MockFileObject_Expecter) GetFullFileId() *MockFileObject_GetFullFileId_Call {
	return &MockFileObject_GetFullFileId_Call{Call: _e.mock.On("GetFullFileId")}
}

func (_c *MockFileObject_GetFullFileId_Call) Run(run func()) *MockFileObject_GetFullFileId_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockFileObject_GetFullFileId_Call) Return(_a0 domain.FullFileId) *MockFileObject_GetFullFileId_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockFileObject_GetFullFileId_Call) RunAndReturn(run func() domain.FullFileId) *MockFileObject_GetFullFileId_Call {
	_c.Call.Return(run)
	return _c
}

// GetImage provides a mock function with given fields:
func (_m *MockFileObject) GetImage() files.Image {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetImage")
	}

	var r0 files.Image
	if rf, ok := ret.Get(0).(func() files.Image); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(files.Image)
		}
	}

	return r0
}

// MockFileObject_GetImage_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetImage'
type MockFileObject_GetImage_Call struct {
	*mock.Call
}

// GetImage is a helper method to define mock.On call
func (_e *MockFileObject_Expecter) GetImage() *MockFileObject_GetImage_Call {
	return &MockFileObject_GetImage_Call{Call: _e.mock.On("GetImage")}
}

func (_c *MockFileObject_GetImage_Call) Run(run func()) *MockFileObject_GetImage_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockFileObject_GetImage_Call) Return(_a0 files.Image) *MockFileObject_GetImage_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockFileObject_GetImage_Call) RunAndReturn(run func() files.Image) *MockFileObject_GetImage_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockFileObject creates a new instance of MockFileObject. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockFileObject(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockFileObject {
	mock := &MockFileObject{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
