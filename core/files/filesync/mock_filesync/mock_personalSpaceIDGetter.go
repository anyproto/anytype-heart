// Code generated by mockery. DO NOT EDIT.

package mock_filesync

import mock "github.com/stretchr/testify/mock"

// MockpersonalSpaceIDGetter is an autogenerated mock type for the personalSpaceIDGetter type
type MockpersonalSpaceIDGetter struct {
	mock.Mock
}

type MockpersonalSpaceIDGetter_Expecter struct {
	mock *mock.Mock
}

func (_m *MockpersonalSpaceIDGetter) EXPECT() *MockpersonalSpaceIDGetter_Expecter {
	return &MockpersonalSpaceIDGetter_Expecter{mock: &_m.Mock}
}

// PersonalSpaceID provides a mock function with given fields:
func (_m *MockpersonalSpaceIDGetter) PersonalSpaceID() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for PersonalSpaceID")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// MockpersonalSpaceIDGetter_PersonalSpaceID_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'PersonalSpaceID'
type MockpersonalSpaceIDGetter_PersonalSpaceID_Call struct {
	*mock.Call
}

// PersonalSpaceID is a helper method to define mock.On call
func (_e *MockpersonalSpaceIDGetter_Expecter) PersonalSpaceID() *MockpersonalSpaceIDGetter_PersonalSpaceID_Call {
	return &MockpersonalSpaceIDGetter_PersonalSpaceID_Call{Call: _e.mock.On("PersonalSpaceID")}
}

func (_c *MockpersonalSpaceIDGetter_PersonalSpaceID_Call) Run(run func()) *MockpersonalSpaceIDGetter_PersonalSpaceID_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockpersonalSpaceIDGetter_PersonalSpaceID_Call) Return(_a0 string) *MockpersonalSpaceIDGetter_PersonalSpaceID_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockpersonalSpaceIDGetter_PersonalSpaceID_Call) RunAndReturn(run func() string) *MockpersonalSpaceIDGetter_PersonalSpaceID_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockpersonalSpaceIDGetter creates a new instance of MockpersonalSpaceIDGetter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockpersonalSpaceIDGetter(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockpersonalSpaceIDGetter {
	mock := &MockpersonalSpaceIDGetter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
