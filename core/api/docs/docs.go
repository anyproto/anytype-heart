// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "https://anytype.io/terms_of_use",
        "contact": {
            "name": "Anytype Support",
            "url": "https://anytype.io/contact",
            "email": "support@anytype.io"
        },
        "license": {
            "name": "Any Source Available License 1.0",
            "url": "https://github.com/anyproto/anytype-ts/blob/main/LICENSE.md"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/display_code": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Start new challenge",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App name requesting the challenge",
                        "name": "app_name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Challenge ID",
                        "schema": {
                            "$ref": "#/definitions/auth.DisplayCodeResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "$ref": "#/definitions/util.ValidationError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/util.ServerError"
                        }
                    }
                }
            }
        },
        "/auth/token": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Retrieve token",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Challenge ID",
                        "name": "challenge_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "4-digit code retrieved from Anytype Desktop app",
                        "name": "code",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Authentication token",
                        "schema": {
                            "$ref": "#/definitions/auth.TokenResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "$ref": "#/definitions/util.ValidationError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/util.ServerError"
                        }
                    }
                }
            }
        },
        "/search": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "search"
                ],
                "summary": "Search objects across all spaces",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "The number of items to skip before starting to collect the result set",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "maximum": 1000,
                        "type": "integer",
                        "default": 100,
                        "description": "The number of items to return",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "description": "Search parameters",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/search.SearchRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of objects",
                        "schema": {
                            "$ref": "#/definitions/pagination.PaginatedResponse-object_Object"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/util.UnauthorizedError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/util.ServerError"
                        }
                    }
                }
            }
        },
        "/spaces": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "spaces"
                ],
                "summary": "List spaces",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "The number of items to skip before starting to collect the result set",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "maximum": 1000,
                        "type": "integer",
                        "default": 100,
                        "description": "The number of items to return",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of spaces",
                        "schema": {
                            "$ref": "#/definitions/pagination.PaginatedResponse-space_Space"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/util.UnauthorizedError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/util.ServerError"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "spaces"
                ],
                "summary": "Create space",
                "parameters": [
                    {
                        "description": "Space to create",
                        "name": "name",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/space.CreateSpaceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Space created successfully",
                        "schema": {
                            "$ref": "#/definitions/space.CreateSpaceResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/util.ValidationError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/util.UnauthorizedError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/util.ServerError"
                        }
                    }
                }
            }
        },
        "/spaces/{space_id}/members": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "spaces"
                ],
                "summary": "List members",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "space_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "The number of items to skip before starting to collect the result set",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "maximum": 1000,
                        "type": "integer",
                        "default": 100,
                        "description": "The number of items to return",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of members",
                        "schema": {
                            "$ref": "#/definitions/pagination.PaginatedResponse-space_Member"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/util.UnauthorizedError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/util.ServerError"
                        }
                    }
                }
            }
        },
        "/spaces/{space_id}/objects": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "objects"
                ],
                "summary": "List objects",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "space_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "The number of items to skip before starting to collect the result set",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "maximum": 1000,
                        "type": "integer",
                        "default": 100,
                        "description": "The number of items to return",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of objects",
                        "schema": {
                            "$ref": "#/definitions/pagination.PaginatedResponse-object_Object"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/util.UnauthorizedError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/util.ServerError"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "objects"
                ],
                "summary": "Create object",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "space_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Object to create",
                        "name": "object",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/object.CreateObjectRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The created object",
                        "schema": {
                            "$ref": "#/definitions/object.ObjectResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/util.ValidationError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/util.UnauthorizedError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/util.ServerError"
                        }
                    }
                }
            }
        },
        "/spaces/{space_id}/objects/{object_id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "objects"
                ],
                "summary": "Get object",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "space_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Object ID",
                        "name": "object_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The requested object",
                        "schema": {
                            "$ref": "#/definitions/object.ObjectResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/util.UnauthorizedError"
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "$ref": "#/definitions/util.NotFoundError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/util.ServerError"
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "objects"
                ],
                "summary": "Delete object",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "space_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Object ID",
                        "name": "object_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The deleted object",
                        "schema": {
                            "$ref": "#/definitions/object.ObjectResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/util.UnauthorizedError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/util.ForbiddenError"
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "$ref": "#/definitions/util.NotFoundError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/util.ServerError"
                        }
                    }
                }
            }
        },
        "/spaces/{space_id}/objects/{object_id}/export/{format}": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "export"
                ],
                "summary": "Export object",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "space_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Object ID",
                        "name": "object_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "markdown",
                            "protobuf"
                        ],
                        "type": "string",
                        "description": "Export format",
                        "name": "format",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object exported successfully",
                        "schema": {
                            "$ref": "#/definitions/export.ObjectExportResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/util.ValidationError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/util.UnauthorizedError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/util.ServerError"
                        }
                    }
                }
            }
        },
        "/spaces/{space_id}/search": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "search"
                ],
                "summary": "Search objects within a space",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "space_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "The number of items to skip before starting to collect the result set",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "maximum": 1000,
                        "type": "integer",
                        "default": 100,
                        "description": "The number of items to return",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "description": "Search parameters",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/search.SearchRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of objects",
                        "schema": {
                            "$ref": "#/definitions/pagination.PaginatedResponse-object_Object"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/util.UnauthorizedError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/util.ServerError"
                        }
                    }
                }
            }
        },
        "/spaces/{space_id}/types": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "types"
                ],
                "summary": "List types",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "space_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "The number of items to skip before starting to collect the result set",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "maximum": 1000,
                        "type": "integer",
                        "default": 100,
                        "description": "The number of items to return",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of types",
                        "schema": {
                            "$ref": "#/definitions/pagination.PaginatedResponse-object_Type"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/util.UnauthorizedError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/util.ServerError"
                        }
                    }
                }
            }
        },
        "/spaces/{space_id}/types/{type_id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "types"
                ],
                "summary": "Get type",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "space_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Type ID",
                        "name": "type_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The requested type",
                        "schema": {
                            "$ref": "#/definitions/object.TypeResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/util.UnauthorizedError"
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "$ref": "#/definitions/util.NotFoundError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/util.ServerError"
                        }
                    }
                }
            }
        },
        "/spaces/{space_id}/types/{type_id}/templates": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "types"
                ],
                "summary": "List templates",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "space_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Type ID",
                        "name": "type_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "The number of items to skip before starting to collect the result set",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "maximum": 1000,
                        "type": "integer",
                        "default": 100,
                        "description": "The number of items to return",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of templates",
                        "schema": {
                            "$ref": "#/definitions/pagination.PaginatedResponse-object_Template"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/util.UnauthorizedError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/util.ServerError"
                        }
                    }
                }
            }
        },
        "/spaces/{space_id}/types/{type_id}/templates/{template_id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "types"
                ],
                "summary": "Get template",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "space_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Type ID",
                        "name": "type_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Template ID",
                        "name": "template_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The requested template",
                        "schema": {
                            "$ref": "#/definitions/object.TemplateResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/util.UnauthorizedError"
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "$ref": "#/definitions/util.NotFoundError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/util.ServerError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "auth.DisplayCodeResponse": {
            "type": "object",
            "properties": {
                "challenge_id": {
                    "type": "string",
                    "example": "67647f5ecda913e9a2e11b26"
                }
            }
        },
        "auth.TokenResponse": {
            "type": "object",
            "properties": {
                "app_key": {
                    "type": "string",
                    "example": "zhSG/zQRmgADyilWPtgdnfo1qD60oK02/SVgi1GaFt6="
                },
                "session_token": {
                    "type": "string",
                    "example": "eyJhbGciOeJIRzI1NiIsInR5cCI6IkpXVCJ1.eyJzZWVkIjaiY0dmVndlUnAifQ.Y1EZecYnwmvMkrXKOa2XJnAbaRt34urBabe06tmDQII"
                }
            }
        },
        "export.ObjectExportResponse": {
            "type": "object",
            "properties": {
                "path": {
                    "type": "string",
                    "example": "/path/to/export"
                }
            }
        },
        "object.Block": {
            "type": "object",
            "properties": {
                "align": {
                    "type": "string",
                    "enum": [
                        "AlignLeft",
                        "AlignCenter",
                        "AlignRight",
                        "AlignJustify"
                    ],
                    "example": "AlignLeft"
                },
                "background_color": {
                    "type": "string",
                    "example": "red"
                },
                "children_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "['6797ce8ecda913cde14b02dc']"
                    ]
                },
                "file": {
                    "$ref": "#/definitions/object.File"
                },
                "id": {
                    "type": "string",
                    "example": "64394517de52ad5acb89c66c"
                },
                "text": {
                    "$ref": "#/definitions/object.Text"
                },
                "vertical_align": {
                    "type": "string",
                    "enum": [
                        "VerticalAlignTop",
                        "VerticalAlignMiddle",
                        "VerticalAlignBottom"
                    ],
                    "example": "VerticalAlignTop"
                }
            }
        },
        "object.CreateObjectRequest": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "string",
                    "example": "Object Body"
                },
                "description": {
                    "type": "string",
                    "example": "Object Description"
                },
                "icon": {
                    "type": "string",
                    "example": "📄"
                },
                "name": {
                    "type": "string",
                    "example": "Object Name"
                },
                "object_type_unique_key": {
                    "type": "string",
                    "example": "ot-page"
                },
                "source": {
                    "type": "string",
                    "example": "https://source.com"
                },
                "template_id": {
                    "type": "string",
                    "example": "bafyreictrp3obmnf6dwejy5o4p7bderaaia4bdg2psxbfzf44yya5uutge"
                }
            }
        },
        "object.Detail": {
            "type": "object",
            "properties": {
                "details": {
                    "type": "object",
                    "additionalProperties": true
                },
                "id": {
                    "type": "string",
                    "enum": [
                        "last_modified_date",
                        "last_modified_by",
                        "created_date",
                        "created_by",
                        "last_opened_date",
                        "tags"
                    ],
                    "example": "last_modified_date"
                }
            }
        },
        "object.File": {
            "type": "object",
            "properties": {
                "added_at": {
                    "type": "integer"
                },
                "hash": {
                    "type": "string"
                },
                "mime": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "state": {
                    "type": "string"
                },
                "style": {
                    "type": "string"
                },
                "target_object_id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "object.Object": {
            "type": "object",
            "properties": {
                "blocks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/object.Block"
                    }
                },
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/object.Detail"
                    }
                },
                "icon": {
                    "type": "string",
                    "example": "📄"
                },
                "id": {
                    "type": "string",
                    "example": "bafyreie6n5l5nkbjal37su54cha4coy7qzuhrnajluzv5qd5jvtsrxkequ"
                },
                "layout": {
                    "type": "string",
                    "example": "basic"
                },
                "name": {
                    "type": "string",
                    "example": "Object Name"
                },
                "root_id": {
                    "type": "string",
                    "example": "bafyreicypzj6uvu54664ucv3hmbsd5cmdy2dv4fwua26sciq74khzpyn4u"
                },
                "snippet": {
                    "type": "string",
                    "example": "The beginning of the object body..."
                },
                "space_id": {
                    "type": "string",
                    "example": "bafyreigyfkt6rbv24sbv5aq2hko3bhmv5xxlf22b4bypdu6j7hnphm3psq.23me69r569oi1"
                },
                "type": {
                    "type": "string",
                    "example": "Page"
                }
            }
        },
        "object.ObjectResponse": {
            "type": "object",
            "properties": {
                "object": {
                    "$ref": "#/definitions/object.Object"
                }
            }
        },
        "object.Template": {
            "type": "object",
            "properties": {
                "icon": {
                    "type": "string",
                    "example": "📄"
                },
                "id": {
                    "type": "string",
                    "example": "bafyreictrp3obmnf6dwejy5o4p7bderaaia4bdg2psxbfzf44yya5uutge"
                },
                "name": {
                    "type": "string",
                    "example": "Template Name"
                },
                "type": {
                    "type": "string",
                    "example": "template"
                }
            }
        },
        "object.TemplateResponse": {
            "type": "object",
            "properties": {
                "template": {
                    "$ref": "#/definitions/object.Template"
                }
            }
        },
        "object.Text": {
            "type": "object",
            "properties": {
                "checked": {
                    "type": "boolean",
                    "example": true
                },
                "color": {
                    "type": "string",
                    "example": "red"
                },
                "icon": {
                    "type": "string",
                    "example": "📄"
                },
                "style": {
                    "type": "string",
                    "enum": [
                        "Paragraph",
                        "Header1",
                        "Header2",
                        "Header3",
                        "Header4",
                        "Quote",
                        "Code",
                        "Title",
                        "Checkbox",
                        "Marked",
                        "Numbered",
                        "Toggle",
                        "Description",
                        "Callout"
                    ],
                    "example": "Paragraph"
                },
                "text": {
                    "type": "string",
                    "example": "Some text"
                }
            }
        },
        "object.Type": {
            "type": "object",
            "properties": {
                "icon": {
                    "type": "string",
                    "example": "📄"
                },
                "id": {
                    "type": "string",
                    "example": "bafyreigyb6l5szohs32ts26ku2j42yd65e6hqy2u3gtzgdwqv6hzftsetu"
                },
                "name": {
                    "type": "string",
                    "example": "Page"
                },
                "recommended_layout": {
                    "type": "string",
                    "example": "todo"
                },
                "type": {
                    "type": "string",
                    "example": "type"
                },
                "unique_key": {
                    "type": "string",
                    "example": "ot-page"
                }
            }
        },
        "object.TypeResponse": {
            "type": "object",
            "properties": {
                "type": {
                    "$ref": "#/definitions/object.Type"
                }
            }
        },
        "pagination.PaginatedResponse-object_Object": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/object.Object"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/pagination.PaginationMeta"
                }
            }
        },
        "pagination.PaginatedResponse-object_Template": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/object.Template"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/pagination.PaginationMeta"
                }
            }
        },
        "pagination.PaginatedResponse-object_Type": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/object.Type"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/pagination.PaginationMeta"
                }
            }
        },
        "pagination.PaginatedResponse-space_Member": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/space.Member"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/pagination.PaginationMeta"
                }
            }
        },
        "pagination.PaginatedResponse-space_Space": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/space.Space"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/pagination.PaginationMeta"
                }
            }
        },
        "pagination.PaginationMeta": {
            "type": "object",
            "properties": {
                "has_more": {
                    "description": "whether there are more items available",
                    "type": "boolean",
                    "example": true
                },
                "limit": {
                    "description": "the current limit",
                    "type": "integer",
                    "example": 100
                },
                "offset": {
                    "description": "the current offset",
                    "type": "integer",
                    "example": 0
                },
                "total": {
                    "description": "the total number of items available on that endpoint",
                    "type": "integer",
                    "example": 1024
                }
            }
        },
        "search.SearchRequest": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string"
                },
                "sort": {
                    "$ref": "#/definitions/search.SortOptions"
                },
                "types": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "search.SortOptions": {
            "type": "object",
            "properties": {
                "direction": {
                    "type": "string",
                    "default": "desc",
                    "enum": [
                        "asc",
                        "desc"
                    ]
                },
                "timestamp": {
                    "type": "string",
                    "default": "last_modified_date",
                    "enum": [
                        "created_date",
                        "last_modified_date",
                        "last_opened_date"
                    ]
                }
            }
        },
        "space.CreateSpaceRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "example": "New Space"
                }
            }
        },
        "space.CreateSpaceResponse": {
            "type": "object",
            "properties": {
                "space": {
                    "$ref": "#/definitions/space.Space"
                }
            }
        },
        "space.Member": {
            "type": "object",
            "properties": {
                "global_name": {
                    "type": "string",
                    "example": "john.any"
                },
                "icon": {
                    "type": "string",
                    "example": "http://127.0.0.1:31006/image/bafybeieptz5hvcy6txplcvphjbbh5yjc2zqhmihs3owkh5oab4ezauzqay?width=100"
                },
                "id": {
                    "type": "string",
                    "example": "_participant_bafyreigyfkt6rbv24sbv5aq2hko1bhmv5xxlf22b4bypdu6j7hnphm3psq_23me69r569oi1_AAjEaEwPF4nkEh9AWkqEnzcQ8HziBB4ETjiTpvRCQvWnSMDZ"
                },
                "identity": {
                    "type": "string",
                    "example": "AAjEaEwPF4nkEh7AWkqEnzcQ8HziGB4ETjiTpvRCQvWnSMDZ"
                },
                "name": {
                    "type": "string",
                    "example": "John Doe"
                },
                "role": {
                    "type": "string",
                    "enum": [
                        "Reader",
                        "Writer",
                        "Owner",
                        "NoPermission"
                    ],
                    "example": "Owner"
                },
                "type": {
                    "type": "string",
                    "example": "member"
                }
            }
        },
        "space.Space": {
            "type": "object",
            "properties": {
                "account_space_id": {
                    "type": "string",
                    "example": "bafyreihpd2knon5wbljhtfeg3fcqtg3i2pomhhnigui6lrjmzcjzep7gcy.23me69r569oi1"
                },
                "analytics_id": {
                    "type": "string",
                    "example": "624aecdd-4797-4611-9d61-a2ae5f53cf1c"
                },
                "archive_object_id": {
                    "type": "string",
                    "example": "bafyreialsgoyflf3etjm3parzurivyaukzivwortf32b4twnlwpwocsrri"
                },
                "device_id": {
                    "type": "string",
                    "example": "12D3KooWGZMJ4kQVyQVXaj7gJPZr3RZ2nvd9M2Eq2pprEoPih9WF"
                },
                "gateway_url": {
                    "type": "string",
                    "example": "http://127.0.0.1:31006"
                },
                "home_object_id": {
                    "type": "string",
                    "example": "bafyreie4qcl3wczb4cw5hrfyycikhjyh6oljdis3ewqrk5boaav3sbwqya"
                },
                "icon": {
                    "type": "string",
                    "example": "http://127.0.0.1:31006/image/bafybeieptz5hvcy6txplcvphjbbh5yjc2zqhmihs3owkh5oab4ezauzqay"
                },
                "id": {
                    "type": "string",
                    "example": "bafyreigyfkt6rbv24sbv5aq2hko3bhmv5xxlf22b4bypdu6j7hnphm3psq.23me69r569oi1"
                },
                "local_storage_path": {
                    "type": "string",
                    "example": "/Users/johndoe/Library/Application Support/Anytype/data/AAHTtt1wuQEnaYBNZ2Cyfcvs6DqPqxgn8VXDVk4avsUkMuha"
                },
                "marketplace_workspace_id": {
                    "type": "string",
                    "example": "_anytype_marketplace"
                },
                "name": {
                    "type": "string",
                    "example": "Space Name"
                },
                "network_id": {
                    "type": "string",
                    "example": "N83gJpVd9MuNRZAuJLZ7LiMntTThhPc6DtzWWVjb1M3PouVU"
                },
                "profile_object_id": {
                    "type": "string",
                    "example": "bafyreiaxhwreshjqwndpwtdsu4mtihaqhhmlygqnyqpfyfwlqfq3rm3gw4"
                },
                "space_view_id": {
                    "type": "string",
                    "example": "bafyreigzv3vq7qwlrsin6njoduq727ssnhwd6bgyfj6nm4hv3pxoc2rxhy"
                },
                "tech_space_id": {
                    "type": "string",
                    "example": "bafyreif4xuwncrjl6jajt4zrrfnylpki476nv2w64yf42ovt7gia7oypii.23me69r569oi1"
                },
                "timezone": {
                    "type": "string",
                    "example": ""
                },
                "type": {
                    "type": "string",
                    "example": "space"
                },
                "widgets_id": {
                    "type": "string",
                    "example": "bafyreialj7pceh53mifm5dixlho47ke4qjmsn2uh4wsjf7xq2pnlo5xfva"
                },
                "workspace_object_id": {
                    "type": "string",
                    "example": "bafyreiapey2g6e6za4zfxvlgwdy4hbbfu676gmwrhnqvjbxvrchr7elr3y"
                }
            }
        },
        "util.ForbiddenError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "object",
                    "properties": {
                        "message": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "util.NotFoundError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "object",
                    "properties": {
                        "message": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "util.ServerError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "object",
                    "properties": {
                        "message": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "util.UnauthorizedError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "object",
                    "properties": {
                        "message": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "util.ValidationError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "object",
                    "properties": {
                        "message": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    },
    "externalDocs": {
        "description": "OpenAPI",
        "url": "https://swagger.io/resources/open-api/"
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:31009",
	BasePath:         "/v1",
	Schemes:          []string{},
	Title:            "Anytype API",
	Description:      "This API allows interaction with Anytype resources such as spaces, objects and types.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
