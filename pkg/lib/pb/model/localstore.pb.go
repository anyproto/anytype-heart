// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: pkg/lib/pb/model/protos/localstore.proto

package model

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type ObjectInfo struct {
	Id              string        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ObjectTypeUrls  []string      `protobuf:"bytes,2,rep,name=objectTypeUrls,proto3" json:"objectTypeUrls,omitempty"`
	Details         *types.Struct `protobuf:"bytes,3,opt,name=details,proto3" json:"details,omitempty"`
	Relations       []*Relation   `protobuf:"bytes,4,rep,name=relations,proto3" json:"relations,omitempty"`
	Snippet         string        `protobuf:"bytes,5,opt,name=snippet,proto3" json:"snippet,omitempty"`
	HasInboundLinks bool          `protobuf:"varint,6,opt,name=hasInboundLinks,proto3" json:"hasInboundLinks,omitempty"`
}

func (m *ObjectInfo) Reset()         { *m = ObjectInfo{} }
func (m *ObjectInfo) String() string { return proto.CompactTextString(m) }
func (*ObjectInfo) ProtoMessage()    {}
func (*ObjectInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_9c35df71910469a5, []int{0}
}
func (m *ObjectInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ObjectInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ObjectInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ObjectInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ObjectInfo.Merge(m, src)
}
func (m *ObjectInfo) XXX_Size() int {
	return m.Size()
}
func (m *ObjectInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ObjectInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ObjectInfo proto.InternalMessageInfo

func (m *ObjectInfo) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ObjectInfo) GetObjectTypeUrls() []string {
	if m != nil {
		return m.ObjectTypeUrls
	}
	return nil
}

func (m *ObjectInfo) GetDetails() *types.Struct {
	if m != nil {
		return m.Details
	}
	return nil
}

func (m *ObjectInfo) GetRelations() []*Relation {
	if m != nil {
		return m.Relations
	}
	return nil
}

func (m *ObjectInfo) GetSnippet() string {
	if m != nil {
		return m.Snippet
	}
	return ""
}

func (m *ObjectInfo) GetHasInboundLinks() bool {
	if m != nil {
		return m.HasInboundLinks
	}
	return false
}

type ObjectDetails struct {
	Details *types.Struct `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (m *ObjectDetails) Reset()         { *m = ObjectDetails{} }
func (m *ObjectDetails) String() string { return proto.CompactTextString(m) }
func (*ObjectDetails) ProtoMessage()    {}
func (*ObjectDetails) Descriptor() ([]byte, []int) {
	return fileDescriptor_9c35df71910469a5, []int{1}
}
func (m *ObjectDetails) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ObjectDetails) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ObjectDetails.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ObjectDetails) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ObjectDetails.Merge(m, src)
}
func (m *ObjectDetails) XXX_Size() int {
	return m.Size()
}
func (m *ObjectDetails) XXX_DiscardUnknown() {
	xxx_messageInfo_ObjectDetails.DiscardUnknown(m)
}

var xxx_messageInfo_ObjectDetails proto.InternalMessageInfo

func (m *ObjectDetails) GetDetails() *types.Struct {
	if m != nil {
		return m.Details
	}
	return nil
}

type ObjectLinks struct {
	InboundIDs  []string `protobuf:"bytes,1,rep,name=inboundIDs,proto3" json:"inboundIDs,omitempty"`
	OutboundIDs []string `protobuf:"bytes,2,rep,name=outboundIDs,proto3" json:"outboundIDs,omitempty"`
}

func (m *ObjectLinks) Reset()         { *m = ObjectLinks{} }
func (m *ObjectLinks) String() string { return proto.CompactTextString(m) }
func (*ObjectLinks) ProtoMessage()    {}
func (*ObjectLinks) Descriptor() ([]byte, []int) {
	return fileDescriptor_9c35df71910469a5, []int{2}
}
func (m *ObjectLinks) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ObjectLinks) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ObjectLinks.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ObjectLinks) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ObjectLinks.Merge(m, src)
}
func (m *ObjectLinks) XXX_Size() int {
	return m.Size()
}
func (m *ObjectLinks) XXX_DiscardUnknown() {
	xxx_messageInfo_ObjectLinks.DiscardUnknown(m)
}

var xxx_messageInfo_ObjectLinks proto.InternalMessageInfo

func (m *ObjectLinks) GetInboundIDs() []string {
	if m != nil {
		return m.InboundIDs
	}
	return nil
}

func (m *ObjectLinks) GetOutboundIDs() []string {
	if m != nil {
		return m.OutboundIDs
	}
	return nil
}

type ObjectLinksInfo struct {
	Inbound  []*ObjectInfo `protobuf:"bytes,1,rep,name=inbound,proto3" json:"inbound,omitempty"`
	Outbound []*ObjectInfo `protobuf:"bytes,2,rep,name=outbound,proto3" json:"outbound,omitempty"`
}

func (m *ObjectLinksInfo) Reset()         { *m = ObjectLinksInfo{} }
func (m *ObjectLinksInfo) String() string { return proto.CompactTextString(m) }
func (*ObjectLinksInfo) ProtoMessage()    {}
func (*ObjectLinksInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_9c35df71910469a5, []int{3}
}
func (m *ObjectLinksInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ObjectLinksInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ObjectLinksInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ObjectLinksInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ObjectLinksInfo.Merge(m, src)
}
func (m *ObjectLinksInfo) XXX_Size() int {
	return m.Size()
}
func (m *ObjectLinksInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ObjectLinksInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ObjectLinksInfo proto.InternalMessageInfo

func (m *ObjectLinksInfo) GetInbound() []*ObjectInfo {
	if m != nil {
		return m.Inbound
	}
	return nil
}

func (m *ObjectLinksInfo) GetOutbound() []*ObjectInfo {
	if m != nil {
		return m.Outbound
	}
	return nil
}

type ObjectInfoWithLinks struct {
	Id    string           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Info  *ObjectInfo      `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
	Links *ObjectLinksInfo `protobuf:"bytes,3,opt,name=links,proto3" json:"links,omitempty"`
}

func (m *ObjectInfoWithLinks) Reset()         { *m = ObjectInfoWithLinks{} }
func (m *ObjectInfoWithLinks) String() string { return proto.CompactTextString(m) }
func (*ObjectInfoWithLinks) ProtoMessage()    {}
func (*ObjectInfoWithLinks) Descriptor() ([]byte, []int) {
	return fileDescriptor_9c35df71910469a5, []int{4}
}
func (m *ObjectInfoWithLinks) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ObjectInfoWithLinks) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ObjectInfoWithLinks.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ObjectInfoWithLinks) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ObjectInfoWithLinks.Merge(m, src)
}
func (m *ObjectInfoWithLinks) XXX_Size() int {
	return m.Size()
}
func (m *ObjectInfoWithLinks) XXX_DiscardUnknown() {
	xxx_messageInfo_ObjectInfoWithLinks.DiscardUnknown(m)
}

var xxx_messageInfo_ObjectInfoWithLinks proto.InternalMessageInfo

func (m *ObjectInfoWithLinks) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ObjectInfoWithLinks) GetInfo() *ObjectInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *ObjectInfoWithLinks) GetLinks() *ObjectLinksInfo {
	if m != nil {
		return m.Links
	}
	return nil
}

type ObjectInfoWithOutboundLinks struct {
	Id            string        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Info          *ObjectInfo   `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
	OutboundLinks []*ObjectInfo `protobuf:"bytes,3,rep,name=outboundLinks,proto3" json:"outboundLinks,omitempty"`
}

func (m *ObjectInfoWithOutboundLinks) Reset()         { *m = ObjectInfoWithOutboundLinks{} }
func (m *ObjectInfoWithOutboundLinks) String() string { return proto.CompactTextString(m) }
func (*ObjectInfoWithOutboundLinks) ProtoMessage()    {}
func (*ObjectInfoWithOutboundLinks) Descriptor() ([]byte, []int) {
	return fileDescriptor_9c35df71910469a5, []int{5}
}
func (m *ObjectInfoWithOutboundLinks) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ObjectInfoWithOutboundLinks) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ObjectInfoWithOutboundLinks.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ObjectInfoWithOutboundLinks) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ObjectInfoWithOutboundLinks.Merge(m, src)
}
func (m *ObjectInfoWithOutboundLinks) XXX_Size() int {
	return m.Size()
}
func (m *ObjectInfoWithOutboundLinks) XXX_DiscardUnknown() {
	xxx_messageInfo_ObjectInfoWithOutboundLinks.DiscardUnknown(m)
}

var xxx_messageInfo_ObjectInfoWithOutboundLinks proto.InternalMessageInfo

func (m *ObjectInfoWithOutboundLinks) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ObjectInfoWithOutboundLinks) GetInfo() *ObjectInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *ObjectInfoWithOutboundLinks) GetOutboundLinks() []*ObjectInfo {
	if m != nil {
		return m.OutboundLinks
	}
	return nil
}

type ObjectInfoWithOutboundLinksIDs struct {
	Id            string      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Info          *ObjectInfo `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
	OutboundLinks []string    `protobuf:"bytes,3,rep,name=outboundLinks,proto3" json:"outboundLinks,omitempty"`
}

func (m *ObjectInfoWithOutboundLinksIDs) Reset()         { *m = ObjectInfoWithOutboundLinksIDs{} }
func (m *ObjectInfoWithOutboundLinksIDs) String() string { return proto.CompactTextString(m) }
func (*ObjectInfoWithOutboundLinksIDs) ProtoMessage()    {}
func (*ObjectInfoWithOutboundLinksIDs) Descriptor() ([]byte, []int) {
	return fileDescriptor_9c35df71910469a5, []int{6}
}
func (m *ObjectInfoWithOutboundLinksIDs) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ObjectInfoWithOutboundLinksIDs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ObjectInfoWithOutboundLinksIDs.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ObjectInfoWithOutboundLinksIDs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ObjectInfoWithOutboundLinksIDs.Merge(m, src)
}
func (m *ObjectInfoWithOutboundLinksIDs) XXX_Size() int {
	return m.Size()
}
func (m *ObjectInfoWithOutboundLinksIDs) XXX_DiscardUnknown() {
	xxx_messageInfo_ObjectInfoWithOutboundLinksIDs.DiscardUnknown(m)
}

var xxx_messageInfo_ObjectInfoWithOutboundLinksIDs proto.InternalMessageInfo

func (m *ObjectInfoWithOutboundLinksIDs) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ObjectInfoWithOutboundLinksIDs) GetInfo() *ObjectInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *ObjectInfoWithOutboundLinksIDs) GetOutboundLinks() []string {
	if m != nil {
		return m.OutboundLinks
	}
	return nil
}

type ObjectStoreChecksums struct {
	BundledObjectTypes               string `protobuf:"bytes,1,opt,name=bundledObjectTypes,proto3" json:"bundledObjectTypes,omitempty"`
	BundledRelations                 string `protobuf:"bytes,2,opt,name=bundledRelations,proto3" json:"bundledRelations,omitempty"`
	BundledLayouts                   string `protobuf:"bytes,3,opt,name=bundledLayouts,proto3" json:"bundledLayouts,omitempty"`
	ObjectsForceReindexCounter       int32  `protobuf:"varint,4,opt,name=objectsForceReindexCounter,proto3" json:"objectsForceReindexCounter,omitempty"`
	FilesForceReindexCounter         int32  `protobuf:"varint,5,opt,name=filesForceReindexCounter,proto3" json:"filesForceReindexCounter,omitempty"`
	IdxRebuildCounter                int32  `protobuf:"varint,6,opt,name=idxRebuildCounter,proto3" json:"idxRebuildCounter,omitempty"`
	FulltextRebuild                  int32  `protobuf:"varint,7,opt,name=fulltextRebuild,proto3" json:"fulltextRebuild,omitempty"`
	FulltextErase                    int32  `protobuf:"varint,11,opt,name=fulltextErase,proto3" json:"fulltextErase,omitempty"`
	BundledTemplates                 string `protobuf:"bytes,8,opt,name=bundledTemplates,proto3" json:"bundledTemplates,omitempty"`
	BundledObjects                   int32  `protobuf:"varint,9,opt,name=bundledObjects,proto3" json:"bundledObjects,omitempty"`
	FilestoreKeysForceReindexCounter int32  `protobuf:"varint,10,opt,name=filestoreKeysForceReindexCounter,proto3" json:"filestoreKeysForceReindexCounter,omitempty"`
	AreOldFilesRemoved               bool   `protobuf:"varint,12,opt,name=areOldFilesRemoved,proto3" json:"areOldFilesRemoved,omitempty"`
	AreDeletedObjectsReindexed       bool   `protobuf:"varint,13,opt,name=areDeletedObjectsReindexed,proto3" json:"areDeletedObjectsReindexed,omitempty"`
	LinksErase                       int32  `protobuf:"varint,14,opt,name=linksErase,proto3" json:"linksErase,omitempty"`
	MarketplaceForceReindexCounter   int32  `protobuf:"varint,15,opt,name=marketplaceForceReindexCounter,proto3" json:"marketplaceForceReindexCounter,omitempty"`
	ReindexDeletedObjects            int32  `protobuf:"varint,16,opt,name=reindexDeletedObjects,proto3" json:"reindexDeletedObjects,omitempty"`
	ReindexParticipants              int32  `protobuf:"varint,17,opt,name=reindexParticipants,proto3" json:"reindexParticipants,omitempty"`
}

func (m *ObjectStoreChecksums) Reset()         { *m = ObjectStoreChecksums{} }
func (m *ObjectStoreChecksums) String() string { return proto.CompactTextString(m) }
func (*ObjectStoreChecksums) ProtoMessage()    {}
func (*ObjectStoreChecksums) Descriptor() ([]byte, []int) {
	return fileDescriptor_9c35df71910469a5, []int{7}
}
func (m *ObjectStoreChecksums) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ObjectStoreChecksums) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ObjectStoreChecksums.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ObjectStoreChecksums) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ObjectStoreChecksums.Merge(m, src)
}
func (m *ObjectStoreChecksums) XXX_Size() int {
	return m.Size()
}
func (m *ObjectStoreChecksums) XXX_DiscardUnknown() {
	xxx_messageInfo_ObjectStoreChecksums.DiscardUnknown(m)
}

var xxx_messageInfo_ObjectStoreChecksums proto.InternalMessageInfo

func (m *ObjectStoreChecksums) GetBundledObjectTypes() string {
	if m != nil {
		return m.BundledObjectTypes
	}
	return ""
}

func (m *ObjectStoreChecksums) GetBundledRelations() string {
	if m != nil {
		return m.BundledRelations
	}
	return ""
}

func (m *ObjectStoreChecksums) GetBundledLayouts() string {
	if m != nil {
		return m.BundledLayouts
	}
	return ""
}

func (m *ObjectStoreChecksums) GetObjectsForceReindexCounter() int32 {
	if m != nil {
		return m.ObjectsForceReindexCounter
	}
	return 0
}

func (m *ObjectStoreChecksums) GetFilesForceReindexCounter() int32 {
	if m != nil {
		return m.FilesForceReindexCounter
	}
	return 0
}

func (m *ObjectStoreChecksums) GetIdxRebuildCounter() int32 {
	if m != nil {
		return m.IdxRebuildCounter
	}
	return 0
}

func (m *ObjectStoreChecksums) GetFulltextRebuild() int32 {
	if m != nil {
		return m.FulltextRebuild
	}
	return 0
}

func (m *ObjectStoreChecksums) GetFulltextErase() int32 {
	if m != nil {
		return m.FulltextErase
	}
	return 0
}

func (m *ObjectStoreChecksums) GetBundledTemplates() string {
	if m != nil {
		return m.BundledTemplates
	}
	return ""
}

func (m *ObjectStoreChecksums) GetBundledObjects() int32 {
	if m != nil {
		return m.BundledObjects
	}
	return 0
}

func (m *ObjectStoreChecksums) GetFilestoreKeysForceReindexCounter() int32 {
	if m != nil {
		return m.FilestoreKeysForceReindexCounter
	}
	return 0
}

func (m *ObjectStoreChecksums) GetAreOldFilesRemoved() bool {
	if m != nil {
		return m.AreOldFilesRemoved
	}
	return false
}

func (m *ObjectStoreChecksums) GetAreDeletedObjectsReindexed() bool {
	if m != nil {
		return m.AreDeletedObjectsReindexed
	}
	return false
}

func (m *ObjectStoreChecksums) GetLinksErase() int32 {
	if m != nil {
		return m.LinksErase
	}
	return 0
}

func (m *ObjectStoreChecksums) GetMarketplaceForceReindexCounter() int32 {
	if m != nil {
		return m.MarketplaceForceReindexCounter
	}
	return 0
}

func (m *ObjectStoreChecksums) GetReindexDeletedObjects() int32 {
	if m != nil {
		return m.ReindexDeletedObjects
	}
	return 0
}

func (m *ObjectStoreChecksums) GetReindexParticipants() int32 {
	if m != nil {
		return m.ReindexParticipants
	}
	return 0
}

func init() {
	proto.RegisterType((*ObjectInfo)(nil), "anytype.model.ObjectInfo")
	proto.RegisterType((*ObjectDetails)(nil), "anytype.model.ObjectDetails")
	proto.RegisterType((*ObjectLinks)(nil), "anytype.model.ObjectLinks")
	proto.RegisterType((*ObjectLinksInfo)(nil), "anytype.model.ObjectLinksInfo")
	proto.RegisterType((*ObjectInfoWithLinks)(nil), "anytype.model.ObjectInfoWithLinks")
	proto.RegisterType((*ObjectInfoWithOutboundLinks)(nil), "anytype.model.ObjectInfoWithOutboundLinks")
	proto.RegisterType((*ObjectInfoWithOutboundLinksIDs)(nil), "anytype.model.ObjectInfoWithOutboundLinksIDs")
	proto.RegisterType((*ObjectStoreChecksums)(nil), "anytype.model.ObjectStoreChecksums")
}

func init() {
	proto.RegisterFile("pkg/lib/pb/model/protos/localstore.proto", fileDescriptor_9c35df71910469a5)
}

var fileDescriptor_9c35df71910469a5 = []byte{
	// 766 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x55, 0xcb, 0x6e, 0xd3, 0x40,
	0x14, 0xad, 0x93, 0x26, 0x69, 0x6e, 0x48, 0x1f, 0x53, 0x10, 0x43, 0x41, 0x96, 0x15, 0x55, 0x28,
	0xaa, 0x20, 0x81, 0x3e, 0x36, 0x2c, 0x40, 0x6a, 0x4b, 0xa5, 0x42, 0xa5, 0x20, 0xb7, 0x08, 0x89,
	0x9d, 0x1d, 0x4f, 0xda, 0x21, 0x13, 0x8f, 0xe5, 0x19, 0xa3, 0x66, 0xc1, 0x92, 0x0d, 0x2b, 0x7e,
	0x80, 0xff, 0x61, 0xd9, 0x25, 0x4b, 0xd4, 0xfe, 0x01, 0xe2, 0x03, 0x90, 0x67, 0x9c, 0xd4, 0x71,
	0xdd, 0x14, 0x09, 0x96, 0x3e, 0xf7, 0x9c, 0xe3, 0x33, 0xf7, 0x7a, 0xae, 0xa1, 0x19, 0xf4, 0x8f,
	0xdb, 0x8c, 0xba, 0xed, 0xc0, 0x6d, 0x0f, 0xb8, 0x47, 0x58, 0x3b, 0x08, 0xb9, 0xe4, 0xa2, 0xcd,
	0x78, 0xd7, 0x61, 0x42, 0xf2, 0x90, 0xb4, 0x14, 0x82, 0xea, 0x8e, 0x3f, 0x94, 0xc3, 0x80, 0xb4,
	0x14, 0x6d, 0xe5, 0xc1, 0x31, 0xe7, 0xc7, 0x8c, 0x68, 0xba, 0x1b, 0xf5, 0xda, 0x42, 0x86, 0x51,
	0x57, 0x6a, 0xf2, 0xca, 0xea, 0x75, 0xb6, 0xea, 0x41, 0x68, 0x56, 0xe3, 0x97, 0x01, 0xd0, 0x71,
	0x3f, 0x90, 0xae, 0xdc, 0xf7, 0x7b, 0x1c, 0xcd, 0x43, 0x81, 0x7a, 0xd8, 0xb0, 0x8c, 0x66, 0xd5,
	0x2e, 0x50, 0x0f, 0x3d, 0x84, 0x79, 0xae, 0xaa, 0x47, 0xc3, 0x80, 0xbc, 0x0d, 0x99, 0xc0, 0x05,
	0xab, 0xd8, 0xac, 0xda, 0x19, 0x14, 0x3d, 0x85, 0x8a, 0x47, 0xa4, 0x43, 0x99, 0xc0, 0x45, 0xcb,
	0x68, 0xd6, 0xd6, 0xef, 0xb6, 0x74, 0xb8, 0xd6, 0x28, 0x5c, 0xeb, 0x50, 0x85, 0xb3, 0x47, 0x3c,
	0xb4, 0x05, 0xd5, 0x90, 0x30, 0x47, 0x52, 0xee, 0x0b, 0x3c, 0x6b, 0x15, 0x95, 0x68, 0xe2, 0x80,
	0x2d, 0x3b, 0xa9, 0xdb, 0x97, 0x4c, 0x84, 0xa1, 0x22, 0x7c, 0x1a, 0x04, 0x44, 0xe2, 0x92, 0x8a,
	0x39, 0x7a, 0x44, 0x4d, 0x58, 0x38, 0x71, 0xc4, 0xbe, 0xef, 0xf2, 0xc8, 0xf7, 0x0e, 0xa8, 0xdf,
	0x17, 0xb8, 0x6c, 0x19, 0xcd, 0x39, 0x3b, 0x0b, 0x37, 0xb6, 0xa1, 0xae, 0xcf, 0xbc, 0x9b, 0x64,
	0x49, 0xc5, 0x37, 0xfe, 0x2e, 0x7e, 0xa3, 0x03, 0x35, 0xed, 0xa1, 0x2c, 0x91, 0x09, 0x40, 0xf5,
	0x2b, 0xf6, 0x77, 0x63, 0x93, 0xb8, 0x49, 0x29, 0x04, 0x59, 0x50, 0xe3, 0x91, 0x1c, 0x13, 0x74,
	0x17, 0xd3, 0x50, 0xe3, 0x13, 0x2c, 0xa4, 0x0c, 0xd5, 0x34, 0x36, 0xa0, 0x92, 0x58, 0x28, 0xc7,
	0xda, 0xfa, 0xbd, 0x4c, 0x83, 0x2e, 0x27, 0x67, 0x8f, 0x98, 0x68, 0x0b, 0xe6, 0x46, 0xb6, 0xea,
	0x35, 0x53, 0x55, 0x63, 0x6a, 0xe3, 0x8b, 0x01, 0xcb, 0x97, 0x85, 0x77, 0x54, 0x9e, 0xe8, 0x83,
	0x65, 0xbf, 0x88, 0xc7, 0x30, 0x4b, 0xfd, 0x1e, 0xc7, 0x05, 0xd5, 0xa7, 0x29, 0xd6, 0x8a, 0x86,
	0x36, 0xa1, 0xc4, 0xd4, 0x28, 0xf4, 0x67, 0x61, 0xe6, 0xf2, 0xc7, 0x27, 0xb6, 0x35, 0xb9, 0xf1,
	0xcd, 0x80, 0xfb, 0x93, 0x61, 0x3a, 0x49, 0xce, 0xff, 0x12, 0xea, 0x05, 0xd4, 0x79, 0xda, 0x0f,
	0x17, 0x6f, 0xea, 0xd3, 0x24, 0xbf, 0xf1, 0xd9, 0x00, 0x73, 0x4a, 0xbe, 0x78, 0xe0, 0xff, 0x18,
	0x71, 0x35, 0x2f, 0x62, 0x35, 0x9b, 0xe3, 0x77, 0x19, 0x6e, 0x6b, 0xe9, 0x61, 0xbc, 0x26, 0x76,
	0x4e, 0x48, 0xb7, 0x2f, 0xa2, 0x81, 0x40, 0x2d, 0x40, 0x6e, 0xe4, 0x7b, 0x8c, 0x78, 0x9d, 0xf1,
	0x45, 0x15, 0x49, 0x9a, 0x9c, 0x0a, 0x5a, 0x83, 0xc5, 0x04, 0xb5, 0xc7, 0x77, 0xb2, 0xa0, 0xd8,
	0x57, 0xf0, 0x78, 0x27, 0x24, 0xd8, 0x81, 0x33, 0xe4, 0x91, 0xd4, 0xb3, 0xad, 0xda, 0x19, 0x14,
	0x3d, 0x87, 0x15, 0xbd, 0x25, 0xc4, 0x1e, 0x0f, 0xbb, 0xc4, 0x26, 0xd4, 0xf7, 0xc8, 0xe9, 0x0e,
	0x8f, 0x7c, 0x49, 0x42, 0x3c, 0x6b, 0x19, 0xcd, 0x92, 0x3d, 0x85, 0x81, 0x9e, 0x01, 0xee, 0x51,
	0x46, 0x72, 0xd5, 0x25, 0xa5, 0xbe, 0xb6, 0x8e, 0x1e, 0xc1, 0x12, 0xf5, 0x4e, 0x6d, 0xe2, 0x46,
	0x94, 0x79, 0x23, 0x51, 0x59, 0x89, 0xae, 0x16, 0xe2, 0xcd, 0xd1, 0x8b, 0x18, 0x93, 0xe4, 0x54,
	0x26, 0x15, 0x5c, 0x51, 0xdc, 0x2c, 0x1c, 0x8f, 0x65, 0x04, 0xbd, 0x0c, 0x1d, 0x41, 0x70, 0x4d,
	0xf1, 0x26, 0xc1, 0x54, 0x37, 0x8f, 0xc8, 0x20, 0x60, 0x8e, 0x24, 0x02, 0xcf, 0x4d, 0x74, 0x73,
	0x8c, 0xa7, 0xba, 0xa9, 0xe7, 0x21, 0x70, 0x55, 0x59, 0x66, 0x50, 0xf4, 0x0a, 0x2c, 0x75, 0xda,
	0x78, 0xce, 0xaf, 0xc9, 0x30, 0xb7, 0x2b, 0xa0, 0x94, 0x37, 0xf2, 0xe2, 0xaf, 0xc3, 0x09, 0x49,
	0x87, 0x79, 0x7b, 0x31, 0xd3, 0x26, 0x03, 0xfe, 0x91, 0x78, 0xf8, 0x96, 0x5a, 0x96, 0x39, 0x95,
	0x78, 0x92, 0x4e, 0x48, 0x76, 0x09, 0x23, 0x72, 0x1c, 0x28, 0xb1, 0x24, 0x1e, 0xae, 0x2b, 0xdd,
	0x14, 0x46, 0xbc, 0x1c, 0xd5, 0xbd, 0xd6, 0x2d, 0x9b, 0x57, 0x29, 0x53, 0x08, 0xda, 0x03, 0x73,
	0xe0, 0x84, 0x7d, 0x22, 0x03, 0xe6, 0x74, 0x49, 0xde, 0xc9, 0x16, 0x94, 0xe6, 0x06, 0x16, 0xda,
	0x84, 0x3b, 0xa1, 0x46, 0x26, 0x93, 0xe0, 0x45, 0x25, 0xcf, 0x2f, 0xa2, 0x27, 0xb0, 0x9c, 0x14,
	0xde, 0x38, 0xa1, 0xa4, 0x5d, 0x1a, 0x38, 0xbe, 0x14, 0x78, 0x49, 0x69, 0xf2, 0x4a, 0xdb, 0x6b,
	0xdf, 0xcf, 0x4d, 0xe3, 0xec, 0xdc, 0x34, 0x7e, 0x9e, 0x9b, 0xc6, 0xd7, 0x0b, 0x73, 0xe6, 0xec,
	0xc2, 0x9c, 0xf9, 0x71, 0x61, 0xce, 0xbc, 0x5f, 0xcc, 0xfe, 0x74, 0xdd, 0xb2, 0xfa, 0x83, 0x6c,
	0xfc, 0x09, 0x00, 0x00, 0xff, 0xff, 0x63, 0x84, 0x4f, 0x64, 0xe6, 0x07, 0x00, 0x00,
}

func (m *ObjectInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ObjectInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ObjectInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.HasInboundLinks {
		i--
		if m.HasInboundLinks {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x30
	}
	if len(m.Snippet) > 0 {
		i -= len(m.Snippet)
		copy(dAtA[i:], m.Snippet)
		i = encodeVarintLocalstore(dAtA, i, uint64(len(m.Snippet)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Relations) > 0 {
		for iNdEx := len(m.Relations) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Relations[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintLocalstore(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x22
		}
	}
	if m.Details != nil {
		{
			size, err := m.Details.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintLocalstore(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ObjectTypeUrls) > 0 {
		for iNdEx := len(m.ObjectTypeUrls) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.ObjectTypeUrls[iNdEx])
			copy(dAtA[i:], m.ObjectTypeUrls[iNdEx])
			i = encodeVarintLocalstore(dAtA, i, uint64(len(m.ObjectTypeUrls[iNdEx])))
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintLocalstore(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ObjectDetails) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ObjectDetails) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ObjectDetails) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Details != nil {
		{
			size, err := m.Details.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintLocalstore(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ObjectLinks) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ObjectLinks) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ObjectLinks) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.OutboundIDs) > 0 {
		for iNdEx := len(m.OutboundIDs) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.OutboundIDs[iNdEx])
			copy(dAtA[i:], m.OutboundIDs[iNdEx])
			i = encodeVarintLocalstore(dAtA, i, uint64(len(m.OutboundIDs[iNdEx])))
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.InboundIDs) > 0 {
		for iNdEx := len(m.InboundIDs) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.InboundIDs[iNdEx])
			copy(dAtA[i:], m.InboundIDs[iNdEx])
			i = encodeVarintLocalstore(dAtA, i, uint64(len(m.InboundIDs[iNdEx])))
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *ObjectLinksInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ObjectLinksInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ObjectLinksInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Outbound) > 0 {
		for iNdEx := len(m.Outbound) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Outbound[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintLocalstore(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.Inbound) > 0 {
		for iNdEx := len(m.Inbound) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Inbound[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintLocalstore(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *ObjectInfoWithLinks) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ObjectInfoWithLinks) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ObjectInfoWithLinks) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Links != nil {
		{
			size, err := m.Links.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintLocalstore(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Info != nil {
		{
			size, err := m.Info.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintLocalstore(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintLocalstore(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ObjectInfoWithOutboundLinks) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ObjectInfoWithOutboundLinks) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ObjectInfoWithOutboundLinks) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.OutboundLinks) > 0 {
		for iNdEx := len(m.OutboundLinks) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.OutboundLinks[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintLocalstore(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if m.Info != nil {
		{
			size, err := m.Info.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintLocalstore(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintLocalstore(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ObjectInfoWithOutboundLinksIDs) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ObjectInfoWithOutboundLinksIDs) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ObjectInfoWithOutboundLinksIDs) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.OutboundLinks) > 0 {
		for iNdEx := len(m.OutboundLinks) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.OutboundLinks[iNdEx])
			copy(dAtA[i:], m.OutboundLinks[iNdEx])
			i = encodeVarintLocalstore(dAtA, i, uint64(len(m.OutboundLinks[iNdEx])))
			i--
			dAtA[i] = 0x1a
		}
	}
	if m.Info != nil {
		{
			size, err := m.Info.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintLocalstore(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintLocalstore(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ObjectStoreChecksums) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ObjectStoreChecksums) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ObjectStoreChecksums) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.ReindexParticipants != 0 {
		i = encodeVarintLocalstore(dAtA, i, uint64(m.ReindexParticipants))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x88
	}
	if m.ReindexDeletedObjects != 0 {
		i = encodeVarintLocalstore(dAtA, i, uint64(m.ReindexDeletedObjects))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x80
	}
	if m.MarketplaceForceReindexCounter != 0 {
		i = encodeVarintLocalstore(dAtA, i, uint64(m.MarketplaceForceReindexCounter))
		i--
		dAtA[i] = 0x78
	}
	if m.LinksErase != 0 {
		i = encodeVarintLocalstore(dAtA, i, uint64(m.LinksErase))
		i--
		dAtA[i] = 0x70
	}
	if m.AreDeletedObjectsReindexed {
		i--
		if m.AreDeletedObjectsReindexed {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x68
	}
	if m.AreOldFilesRemoved {
		i--
		if m.AreOldFilesRemoved {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x60
	}
	if m.FulltextErase != 0 {
		i = encodeVarintLocalstore(dAtA, i, uint64(m.FulltextErase))
		i--
		dAtA[i] = 0x58
	}
	if m.FilestoreKeysForceReindexCounter != 0 {
		i = encodeVarintLocalstore(dAtA, i, uint64(m.FilestoreKeysForceReindexCounter))
		i--
		dAtA[i] = 0x50
	}
	if m.BundledObjects != 0 {
		i = encodeVarintLocalstore(dAtA, i, uint64(m.BundledObjects))
		i--
		dAtA[i] = 0x48
	}
	if len(m.BundledTemplates) > 0 {
		i -= len(m.BundledTemplates)
		copy(dAtA[i:], m.BundledTemplates)
		i = encodeVarintLocalstore(dAtA, i, uint64(len(m.BundledTemplates)))
		i--
		dAtA[i] = 0x42
	}
	if m.FulltextRebuild != 0 {
		i = encodeVarintLocalstore(dAtA, i, uint64(m.FulltextRebuild))
		i--
		dAtA[i] = 0x38
	}
	if m.IdxRebuildCounter != 0 {
		i = encodeVarintLocalstore(dAtA, i, uint64(m.IdxRebuildCounter))
		i--
		dAtA[i] = 0x30
	}
	if m.FilesForceReindexCounter != 0 {
		i = encodeVarintLocalstore(dAtA, i, uint64(m.FilesForceReindexCounter))
		i--
		dAtA[i] = 0x28
	}
	if m.ObjectsForceReindexCounter != 0 {
		i = encodeVarintLocalstore(dAtA, i, uint64(m.ObjectsForceReindexCounter))
		i--
		dAtA[i] = 0x20
	}
	if len(m.BundledLayouts) > 0 {
		i -= len(m.BundledLayouts)
		copy(dAtA[i:], m.BundledLayouts)
		i = encodeVarintLocalstore(dAtA, i, uint64(len(m.BundledLayouts)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.BundledRelations) > 0 {
		i -= len(m.BundledRelations)
		copy(dAtA[i:], m.BundledRelations)
		i = encodeVarintLocalstore(dAtA, i, uint64(len(m.BundledRelations)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.BundledObjectTypes) > 0 {
		i -= len(m.BundledObjectTypes)
		copy(dAtA[i:], m.BundledObjectTypes)
		i = encodeVarintLocalstore(dAtA, i, uint64(len(m.BundledObjectTypes)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintLocalstore(dAtA []byte, offset int, v uint64) int {
	offset -= sovLocalstore(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *ObjectInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovLocalstore(uint64(l))
	}
	if len(m.ObjectTypeUrls) > 0 {
		for _, s := range m.ObjectTypeUrls {
			l = len(s)
			n += 1 + l + sovLocalstore(uint64(l))
		}
	}
	if m.Details != nil {
		l = m.Details.Size()
		n += 1 + l + sovLocalstore(uint64(l))
	}
	if len(m.Relations) > 0 {
		for _, e := range m.Relations {
			l = e.Size()
			n += 1 + l + sovLocalstore(uint64(l))
		}
	}
	l = len(m.Snippet)
	if l > 0 {
		n += 1 + l + sovLocalstore(uint64(l))
	}
	if m.HasInboundLinks {
		n += 2
	}
	return n
}

func (m *ObjectDetails) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Details != nil {
		l = m.Details.Size()
		n += 1 + l + sovLocalstore(uint64(l))
	}
	return n
}

func (m *ObjectLinks) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.InboundIDs) > 0 {
		for _, s := range m.InboundIDs {
			l = len(s)
			n += 1 + l + sovLocalstore(uint64(l))
		}
	}
	if len(m.OutboundIDs) > 0 {
		for _, s := range m.OutboundIDs {
			l = len(s)
			n += 1 + l + sovLocalstore(uint64(l))
		}
	}
	return n
}

func (m *ObjectLinksInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Inbound) > 0 {
		for _, e := range m.Inbound {
			l = e.Size()
			n += 1 + l + sovLocalstore(uint64(l))
		}
	}
	if len(m.Outbound) > 0 {
		for _, e := range m.Outbound {
			l = e.Size()
			n += 1 + l + sovLocalstore(uint64(l))
		}
	}
	return n
}

func (m *ObjectInfoWithLinks) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovLocalstore(uint64(l))
	}
	if m.Info != nil {
		l = m.Info.Size()
		n += 1 + l + sovLocalstore(uint64(l))
	}
	if m.Links != nil {
		l = m.Links.Size()
		n += 1 + l + sovLocalstore(uint64(l))
	}
	return n
}

func (m *ObjectInfoWithOutboundLinks) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovLocalstore(uint64(l))
	}
	if m.Info != nil {
		l = m.Info.Size()
		n += 1 + l + sovLocalstore(uint64(l))
	}
	if len(m.OutboundLinks) > 0 {
		for _, e := range m.OutboundLinks {
			l = e.Size()
			n += 1 + l + sovLocalstore(uint64(l))
		}
	}
	return n
}

func (m *ObjectInfoWithOutboundLinksIDs) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovLocalstore(uint64(l))
	}
	if m.Info != nil {
		l = m.Info.Size()
		n += 1 + l + sovLocalstore(uint64(l))
	}
	if len(m.OutboundLinks) > 0 {
		for _, s := range m.OutboundLinks {
			l = len(s)
			n += 1 + l + sovLocalstore(uint64(l))
		}
	}
	return n
}

func (m *ObjectStoreChecksums) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.BundledObjectTypes)
	if l > 0 {
		n += 1 + l + sovLocalstore(uint64(l))
	}
	l = len(m.BundledRelations)
	if l > 0 {
		n += 1 + l + sovLocalstore(uint64(l))
	}
	l = len(m.BundledLayouts)
	if l > 0 {
		n += 1 + l + sovLocalstore(uint64(l))
	}
	if m.ObjectsForceReindexCounter != 0 {
		n += 1 + sovLocalstore(uint64(m.ObjectsForceReindexCounter))
	}
	if m.FilesForceReindexCounter != 0 {
		n += 1 + sovLocalstore(uint64(m.FilesForceReindexCounter))
	}
	if m.IdxRebuildCounter != 0 {
		n += 1 + sovLocalstore(uint64(m.IdxRebuildCounter))
	}
	if m.FulltextRebuild != 0 {
		n += 1 + sovLocalstore(uint64(m.FulltextRebuild))
	}
	l = len(m.BundledTemplates)
	if l > 0 {
		n += 1 + l + sovLocalstore(uint64(l))
	}
	if m.BundledObjects != 0 {
		n += 1 + sovLocalstore(uint64(m.BundledObjects))
	}
	if m.FilestoreKeysForceReindexCounter != 0 {
		n += 1 + sovLocalstore(uint64(m.FilestoreKeysForceReindexCounter))
	}
	if m.FulltextErase != 0 {
		n += 1 + sovLocalstore(uint64(m.FulltextErase))
	}
	if m.AreOldFilesRemoved {
		n += 2
	}
	if m.AreDeletedObjectsReindexed {
		n += 2
	}
	if m.LinksErase != 0 {
		n += 1 + sovLocalstore(uint64(m.LinksErase))
	}
	if m.MarketplaceForceReindexCounter != 0 {
		n += 1 + sovLocalstore(uint64(m.MarketplaceForceReindexCounter))
	}
	if m.ReindexDeletedObjects != 0 {
		n += 2 + sovLocalstore(uint64(m.ReindexDeletedObjects))
	}
	if m.ReindexParticipants != 0 {
		n += 2 + sovLocalstore(uint64(m.ReindexParticipants))
	}
	return n
}

func sovLocalstore(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozLocalstore(x uint64) (n int) {
	return sovLocalstore(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *ObjectInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowLocalstore
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ObjectInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ObjectInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLocalstore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthLocalstore
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthLocalstore
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ObjectTypeUrls", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLocalstore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthLocalstore
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthLocalstore
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ObjectTypeUrls = append(m.ObjectTypeUrls, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Details", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLocalstore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthLocalstore
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthLocalstore
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Details == nil {
				m.Details = &types.Struct{}
			}
			if err := m.Details.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Relations", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLocalstore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthLocalstore
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthLocalstore
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Relations = append(m.Relations, &Relation{})
			if err := m.Relations[len(m.Relations)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Snippet", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLocalstore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthLocalstore
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthLocalstore
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Snippet = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasInboundLinks", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLocalstore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.HasInboundLinks = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipLocalstore(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthLocalstore
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ObjectDetails) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowLocalstore
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ObjectDetails: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ObjectDetails: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Details", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLocalstore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthLocalstore
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthLocalstore
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Details == nil {
				m.Details = &types.Struct{}
			}
			if err := m.Details.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipLocalstore(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthLocalstore
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ObjectLinks) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowLocalstore
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ObjectLinks: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ObjectLinks: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InboundIDs", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLocalstore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthLocalstore
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthLocalstore
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.InboundIDs = append(m.InboundIDs, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OutboundIDs", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLocalstore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthLocalstore
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthLocalstore
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OutboundIDs = append(m.OutboundIDs, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipLocalstore(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthLocalstore
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ObjectLinksInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowLocalstore
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ObjectLinksInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ObjectLinksInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Inbound", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLocalstore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthLocalstore
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthLocalstore
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Inbound = append(m.Inbound, &ObjectInfo{})
			if err := m.Inbound[len(m.Inbound)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Outbound", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLocalstore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthLocalstore
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthLocalstore
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Outbound = append(m.Outbound, &ObjectInfo{})
			if err := m.Outbound[len(m.Outbound)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipLocalstore(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthLocalstore
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ObjectInfoWithLinks) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowLocalstore
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ObjectInfoWithLinks: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ObjectInfoWithLinks: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLocalstore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthLocalstore
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthLocalstore
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Info", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLocalstore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthLocalstore
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthLocalstore
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Info == nil {
				m.Info = &ObjectInfo{}
			}
			if err := m.Info.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Links", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLocalstore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthLocalstore
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthLocalstore
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Links == nil {
				m.Links = &ObjectLinksInfo{}
			}
			if err := m.Links.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipLocalstore(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthLocalstore
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ObjectInfoWithOutboundLinks) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowLocalstore
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ObjectInfoWithOutboundLinks: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ObjectInfoWithOutboundLinks: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLocalstore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthLocalstore
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthLocalstore
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Info", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLocalstore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthLocalstore
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthLocalstore
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Info == nil {
				m.Info = &ObjectInfo{}
			}
			if err := m.Info.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OutboundLinks", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLocalstore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthLocalstore
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthLocalstore
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OutboundLinks = append(m.OutboundLinks, &ObjectInfo{})
			if err := m.OutboundLinks[len(m.OutboundLinks)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipLocalstore(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthLocalstore
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ObjectInfoWithOutboundLinksIDs) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowLocalstore
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ObjectInfoWithOutboundLinksIDs: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ObjectInfoWithOutboundLinksIDs: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLocalstore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthLocalstore
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthLocalstore
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Info", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLocalstore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthLocalstore
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthLocalstore
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Info == nil {
				m.Info = &ObjectInfo{}
			}
			if err := m.Info.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OutboundLinks", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLocalstore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthLocalstore
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthLocalstore
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OutboundLinks = append(m.OutboundLinks, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipLocalstore(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthLocalstore
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ObjectStoreChecksums) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowLocalstore
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ObjectStoreChecksums: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ObjectStoreChecksums: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BundledObjectTypes", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLocalstore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthLocalstore
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthLocalstore
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BundledObjectTypes = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BundledRelations", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLocalstore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthLocalstore
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthLocalstore
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BundledRelations = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BundledLayouts", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLocalstore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthLocalstore
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthLocalstore
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BundledLayouts = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ObjectsForceReindexCounter", wireType)
			}
			m.ObjectsForceReindexCounter = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLocalstore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ObjectsForceReindexCounter |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FilesForceReindexCounter", wireType)
			}
			m.FilesForceReindexCounter = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLocalstore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FilesForceReindexCounter |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IdxRebuildCounter", wireType)
			}
			m.IdxRebuildCounter = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLocalstore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.IdxRebuildCounter |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FulltextRebuild", wireType)
			}
			m.FulltextRebuild = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLocalstore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FulltextRebuild |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BundledTemplates", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLocalstore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthLocalstore
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthLocalstore
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BundledTemplates = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BundledObjects", wireType)
			}
			m.BundledObjects = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLocalstore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BundledObjects |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FilestoreKeysForceReindexCounter", wireType)
			}
			m.FilestoreKeysForceReindexCounter = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLocalstore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FilestoreKeysForceReindexCounter |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FulltextErase", wireType)
			}
			m.FulltextErase = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLocalstore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FulltextErase |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AreOldFilesRemoved", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLocalstore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AreOldFilesRemoved = bool(v != 0)
		case 13:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AreDeletedObjectsReindexed", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLocalstore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AreDeletedObjectsReindexed = bool(v != 0)
		case 14:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LinksErase", wireType)
			}
			m.LinksErase = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLocalstore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LinksErase |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 15:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MarketplaceForceReindexCounter", wireType)
			}
			m.MarketplaceForceReindexCounter = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLocalstore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MarketplaceForceReindexCounter |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 16:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReindexDeletedObjects", wireType)
			}
			m.ReindexDeletedObjects = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLocalstore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReindexDeletedObjects |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 17:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReindexParticipants", wireType)
			}
			m.ReindexParticipants = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLocalstore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReindexParticipants |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipLocalstore(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthLocalstore
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipLocalstore(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowLocalstore
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowLocalstore
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowLocalstore
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthLocalstore
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupLocalstore
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthLocalstore
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthLocalstore        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowLocalstore          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupLocalstore = fmt.Errorf("proto: unexpected end of group")
)
