// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: pkg/lib/cafe/pb/api.proto

package pb

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type AccountStateStatusType int32

const (
	AccountState_Active          AccountStateStatusType = 0
	AccountState_PendingDeletion AccountStateStatusType = 1
	AccountState_StartedDeletion AccountStateStatusType = 2
	AccountState_Deleted         AccountStateStatusType = 3
)

var AccountStateStatusType_name = map[int32]string{
	0: "Active",
	1: "PendingDeletion",
	2: "StartedDeletion",
	3: "Deleted",
}

var AccountStateStatusType_value = map[string]int32{
	"Active":          0,
	"PendingDeletion": 1,
	"StartedDeletion": 2,
	"Deleted":         3,
}

func (x AccountStateStatusType) String() string {
	return proto.EnumName(AccountStateStatusType_name, int32(x))
}

func (AccountStateStatusType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_362f216c1b9aeb43, []int{4, 0}
}

type AccountDeleteRequest struct {
	IsReverted bool `protobuf:"varint,1,opt,name=isReverted,proto3" json:"isReverted,omitempty"`
}

func (m *AccountDeleteRequest) Reset()         { *m = AccountDeleteRequest{} }
func (m *AccountDeleteRequest) String() string { return proto.CompactTextString(m) }
func (*AccountDeleteRequest) ProtoMessage()    {}
func (*AccountDeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_362f216c1b9aeb43, []int{0}
}
func (m *AccountDeleteRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AccountDeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *AccountDeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountDeleteRequest.Merge(m, src)
}
func (m *AccountDeleteRequest) XXX_Size() int {
	return m.Size()
}
func (m *AccountDeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountDeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AccountDeleteRequest proto.InternalMessageInfo

func (m *AccountDeleteRequest) GetIsReverted() bool {
	if m != nil {
		return m.IsReverted
	}
	return false
}

type AccountDeleteResponse struct {
	Status *AccountStateStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (m *AccountDeleteResponse) Reset()         { *m = AccountDeleteResponse{} }
func (m *AccountDeleteResponse) String() string { return proto.CompactTextString(m) }
func (*AccountDeleteResponse) ProtoMessage()    {}
func (*AccountDeleteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_362f216c1b9aeb43, []int{1}
}
func (m *AccountDeleteResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AccountDeleteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *AccountDeleteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountDeleteResponse.Merge(m, src)
}
func (m *AccountDeleteResponse) XXX_Size() int {
	return m.Size()
}
func (m *AccountDeleteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountDeleteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AccountDeleteResponse proto.InternalMessageInfo

func (m *AccountDeleteResponse) GetStatus() *AccountStateStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

type GetAccountStateRequest struct {
}

func (m *GetAccountStateRequest) Reset()         { *m = GetAccountStateRequest{} }
func (m *GetAccountStateRequest) String() string { return proto.CompactTextString(m) }
func (*GetAccountStateRequest) ProtoMessage()    {}
func (*GetAccountStateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_362f216c1b9aeb43, []int{2}
}
func (m *GetAccountStateRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetAccountStateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *GetAccountStateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAccountStateRequest.Merge(m, src)
}
func (m *GetAccountStateRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetAccountStateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAccountStateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAccountStateRequest proto.InternalMessageInfo

type GetAccountStateResponse struct {
	AccountState *AccountState `protobuf:"bytes,1,opt,name=accountState,proto3" json:"accountState,omitempty"`
}

func (m *GetAccountStateResponse) Reset()         { *m = GetAccountStateResponse{} }
func (m *GetAccountStateResponse) String() string { return proto.CompactTextString(m) }
func (*GetAccountStateResponse) ProtoMessage()    {}
func (*GetAccountStateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_362f216c1b9aeb43, []int{3}
}
func (m *GetAccountStateResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetAccountStateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *GetAccountStateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAccountStateResponse.Merge(m, src)
}
func (m *GetAccountStateResponse) XXX_Size() int {
	return m.Size()
}
func (m *GetAccountStateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAccountStateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetAccountStateResponse proto.InternalMessageInfo

func (m *GetAccountStateResponse) GetAccountState() *AccountState {
	if m != nil {
		return m.AccountState
	}
	return nil
}

type AccountState struct {
	// field 1 is deprecated
	Status *AccountStateStatus `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (m *AccountState) Reset()         { *m = AccountState{} }
func (m *AccountState) String() string { return proto.CompactTextString(m) }
func (*AccountState) ProtoMessage()    {}
func (*AccountState) Descriptor() ([]byte, []int) {
	return fileDescriptor_362f216c1b9aeb43, []int{4}
}
func (m *AccountState) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AccountState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *AccountState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountState.Merge(m, src)
}
func (m *AccountState) XXX_Size() int {
	return m.Size()
}
func (m *AccountState) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountState.DiscardUnknown(m)
}

var xxx_messageInfo_AccountState proto.InternalMessageInfo

func (m *AccountState) GetStatus() *AccountStateStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

type AccountStateStatus struct {
	Status       AccountStateStatusType `protobuf:"varint,1,opt,name=status,proto3,enum=pb.AccountStateStatusType" json:"status,omitempty"`
	DeletionDate int64                  `protobuf:"varint,2,opt,name=deletionDate,proto3" json:"deletionDate,omitempty"`
}

func (m *AccountStateStatus) Reset()         { *m = AccountStateStatus{} }
func (m *AccountStateStatus) String() string { return proto.CompactTextString(m) }
func (*AccountStateStatus) ProtoMessage()    {}
func (*AccountStateStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_362f216c1b9aeb43, []int{4, 0}
}
func (m *AccountStateStatus) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AccountStateStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *AccountStateStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountStateStatus.Merge(m, src)
}
func (m *AccountStateStatus) XXX_Size() int {
	return m.Size()
}
func (m *AccountStateStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountStateStatus.DiscardUnknown(m)
}

var xxx_messageInfo_AccountStateStatus proto.InternalMessageInfo

func (m *AccountStateStatus) GetStatus() AccountStateStatusType {
	if m != nil {
		return m.Status
	}
	return AccountState_Active
}

func (m *AccountStateStatus) GetDeletionDate() int64 {
	if m != nil {
		return m.DeletionDate
	}
	return 0
}

func init() {
	proto.RegisterEnum("pb.AccountStateStatusType", AccountStateStatusType_name, AccountStateStatusType_value)
	proto.RegisterType((*AccountDeleteRequest)(nil), "pb.AccountDeleteRequest")
	proto.RegisterType((*AccountDeleteResponse)(nil), "pb.AccountDeleteResponse")
	proto.RegisterType((*GetAccountStateRequest)(nil), "pb.GetAccountStateRequest")
	proto.RegisterType((*GetAccountStateResponse)(nil), "pb.GetAccountStateResponse")
	proto.RegisterType((*AccountState)(nil), "pb.AccountState")
	proto.RegisterType((*AccountStateStatus)(nil), "pb.AccountState.Status")
}

func init() { proto.RegisterFile("pkg/lib/cafe/pb/api.proto", fileDescriptor_362f216c1b9aeb43) }

var fileDescriptor_362f216c1b9aeb43 = []byte{
	// 321 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0xcf, 0x4a, 0xf3, 0x40,
	0x14, 0xc5, 0x33, 0x29, 0xe4, 0xfb, 0xb8, 0x2d, 0x1a, 0xc6, 0x3f, 0xad, 0x0a, 0x43, 0x99, 0x95,
	0xab, 0x04, 0x5a, 0x71, 0x5f, 0x29, 0xe8, 0xae, 0x92, 0xba, 0x72, 0x37, 0x49, 0xae, 0x25, 0x58,
	0x92, 0xb1, 0xb9, 0x2d, 0xf8, 0x16, 0x3e, 0x96, 0xcb, 0x2e, 0xbb, 0x94, 0xf4, 0x11, 0x7c, 0x01,
	0x49, 0x3b, 0x6a, 0x52, 0x11, 0xdc, 0x9e, 0x73, 0x7e, 0x9c, 0x93, 0xdc, 0x81, 0x13, 0xfd, 0x38,
	0xf1, 0xa7, 0x49, 0xe8, 0x47, 0xea, 0x01, 0x7d, 0x1d, 0xfa, 0x4a, 0x27, 0x9e, 0x9e, 0x65, 0x94,
	0x71, 0x5b, 0x87, 0xf2, 0x12, 0x0e, 0x07, 0x51, 0x94, 0xcd, 0x53, 0x1a, 0xe2, 0x14, 0x09, 0x03,
	0x7c, 0x9a, 0x63, 0x4e, 0x5c, 0x00, 0x24, 0x79, 0x80, 0x0b, 0x9c, 0x11, 0xc6, 0x1d, 0xd6, 0x65,
	0xe7, 0xff, 0x83, 0x8a, 0x22, 0x6f, 0xe0, 0x68, 0x87, 0xcb, 0x75, 0x96, 0xe6, 0xc8, 0x7d, 0x70,
	0x72, 0x52, 0x34, 0xcf, 0x37, 0x50, 0xb3, 0xd7, 0xf6, 0x74, 0xe8, 0x99, 0xe8, 0x98, 0x14, 0xa1,
	0x37, 0xde, 0xd8, 0x81, 0x89, 0xc9, 0x0e, 0x1c, 0x5f, 0x23, 0x55, 0x13, 0x66, 0x83, 0x1c, 0x41,
	0xfb, 0x87, 0x63, 0x5a, 0x2e, 0xa0, 0xa5, 0x2a, 0xba, 0xe9, 0x72, 0x77, 0xbb, 0x82, 0x5a, 0x4a,
	0xbe, 0x33, 0x68, 0x55, 0xed, 0xca, 0x58, 0xfb, 0x4f, 0x63, 0x4f, 0x15, 0x38, 0x5b, 0x85, 0xf7,
	0x6b, 0xdf, 0xb9, 0xd7, 0x3b, 0xfb, 0x05, 0xbd, 0x7b, 0xd6, 0xf8, 0x89, 0x73, 0x09, 0xad, 0xb8,
	0xfc, 0x5d, 0x49, 0x96, 0x0e, 0xcb, 0xd9, 0x65, 0x6b, 0x23, 0xa8, 0x69, 0x72, 0x04, 0xf0, 0x4d,
	0x72, 0x00, 0x67, 0x10, 0x51, 0xb2, 0x40, 0xd7, 0xe2, 0x07, 0xb0, 0x7f, 0x8b, 0x69, 0x9c, 0xa4,
	0x93, 0xa1, 0x01, 0x5c, 0x56, 0x8a, 0x63, 0x52, 0xe5, 0x4d, 0xbe, 0x44, 0x9b, 0x37, 0xe1, 0xdf,
	0xf6, 0x2c, 0xb1, 0xdb, 0xb8, 0xea, 0xbe, 0x16, 0x82, 0x2d, 0x0b, 0xc1, 0x56, 0x85, 0x60, 0x6f,
	0x85, 0x60, 0x2f, 0x6b, 0x61, 0x2d, 0xd7, 0xc2, 0x5a, 0xad, 0x85, 0x75, 0x6f, 0xeb, 0x30, 0x74,
	0x36, 0xef, 0xa1, 0xff, 0x11, 0x00, 0x00, 0xff, 0xff, 0x52, 0xa7, 0xb0, 0xee, 0x2c, 0x02, 0x00,
	0x00,
}

func (m *AccountDeleteRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AccountDeleteRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AccountDeleteRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.IsReverted {
		i--
		if m.IsReverted {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *AccountDeleteResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AccountDeleteResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AccountDeleteResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Status != nil {
		{
			size, err := m.Status.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetAccountStateRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetAccountStateRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetAccountStateRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *GetAccountStateResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetAccountStateResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetAccountStateResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.AccountState != nil {
		{
			size, err := m.AccountState.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *AccountState) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AccountState) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AccountState) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Status != nil {
		{
			size, err := m.Status.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	return len(dAtA) - i, nil
}

func (m *AccountStateStatus) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AccountStateStatus) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AccountStateStatus) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.DeletionDate != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.DeletionDate))
		i--
		dAtA[i] = 0x10
	}
	if m.Status != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Status))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintApi(dAtA []byte, offset int, v uint64) int {
	offset -= sovApi(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *AccountDeleteRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.IsReverted {
		n += 2
	}
	return n
}

func (m *AccountDeleteResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Status != nil {
		l = m.Status.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	return n
}

func (m *GetAccountStateRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *GetAccountStateResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AccountState != nil {
		l = m.AccountState.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	return n
}

func (m *AccountState) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Status != nil {
		l = m.Status.Size()
		n += 1 + l + sovApi(uint64(l))
	}
	return n
}

func (m *AccountStateStatus) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Status != 0 {
		n += 1 + sovApi(uint64(m.Status))
	}
	if m.DeletionDate != 0 {
		n += 1 + sovApi(uint64(m.DeletionDate))
	}
	return n
}

func sovApi(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozApi(x uint64) (n int) {
	return sovApi(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *AccountDeleteRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AccountDeleteRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AccountDeleteRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsReverted", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsReverted = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AccountDeleteResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AccountDeleteResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AccountDeleteResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Status == nil {
				m.Status = &AccountStateStatus{}
			}
			if err := m.Status.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetAccountStateRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetAccountStateRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetAccountStateRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetAccountStateResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetAccountStateResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetAccountStateResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AccountState", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AccountState == nil {
				m.AccountState = &AccountState{}
			}
			if err := m.AccountState.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AccountState) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AccountState: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AccountState: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Status == nil {
				m.Status = &AccountStateStatus{}
			}
			if err := m.Status.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AccountStateStatus) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Status: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Status: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= AccountStateStatusType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeletionDate", wireType)
			}
			m.DeletionDate = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DeletionDate |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipApi(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowApi
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowApi
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowApi
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthApi
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupApi
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthApi
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthApi        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowApi          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupApi = fmt.Errorf("proto: unexpected end of group")
)
