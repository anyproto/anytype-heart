/*
Code generated by pkg/lib/bundle/generator. DO NOT EDIT.
source: pkg/lib/bundle/relations.json
*/
package bundle

import (
	"github.com/anyproto/anytype-heart/core/domain"
	"github.com/anyproto/anytype-heart/pkg/lib/pb/model"
)

const RelationChecksum = "e7b7dc1196702d61efece57fd1db120838fb3d3f40ca3ca5670092f609d56538"
const (
	RelationKeyTag                       domain.RelationKey = "tag"
	RelationKeyCamera                    domain.RelationKey = "camera"
	RelationKeyHeightInPixels            domain.RelationKey = "heightInPixels"
	RelationKeyCreatedDate               domain.RelationKey = "createdDate"
	RelationKeyToBeDeletedDate           domain.RelationKey = "toBeDeletedDate"
	RelationKeyRelationFormatObjectTypes domain.RelationKey = "relationFormatObjectTypes"
	RelationKeyRelationKey               domain.RelationKey = "relationKey"
	RelationKeyRelationOptionColor       domain.RelationKey = "relationOptionColor"
	RelationKeyLatestAclHeadId           domain.RelationKey = "latestAclHeadId"
	RelationKeyInstructions              domain.RelationKey = "instructions"
	RelationKeyDone                      domain.RelationKey = "done"
	RelationKeyMediaArtistURL            domain.RelationKey = "mediaArtistURL"
	RelationKeyTemplateIsBundled         domain.RelationKey = "templateIsBundled"
	RelationKeyDateOfBirth               domain.RelationKey = "dateOfBirth"
	RelationKeyRestrictions              domain.RelationKey = "restrictions"
	RelationKeyReadersLimit              domain.RelationKey = "readersLimit"
	RelationKeyWritersLimit              domain.RelationKey = "writersLimit"
	RelationKeySharedSpacesLimit         domain.RelationKey = "sharedSpacesLimit"
	RelationKeyIsHighlighted             domain.RelationKey = "isHighlighted"
	RelationKeyThumbnailImage            domain.RelationKey = "thumbnailImage"
	RelationKeyAttachments               domain.RelationKey = "attachments"
	RelationKeyAudioArtist               domain.RelationKey = "audioArtist"
	RelationKeyTasks                     domain.RelationKey = "tasks"
	RelationKeySnippet                   domain.RelationKey = "snippet"
	RelationKeyHypothesisAssumptions     domain.RelationKey = "hypothesisAssumptions"
	RelationKeyRelationFormat            domain.RelationKey = "relationFormat"
	RelationKeyRelationReadonlyValue     domain.RelationKey = "relationReadonlyValue"
	RelationKeyIconImage                 domain.RelationKey = "iconImage"
	RelationKeyIngredients               domain.RelationKey = "ingredients"
	RelationKeyGenre                     domain.RelationKey = "genre"
	RelationKeySolution                  domain.RelationKey = "solution"
	RelationKeyReleasedYear              domain.RelationKey = "releasedYear"
	RelationKeyCoverScale                domain.RelationKey = "coverScale"
	RelationKeyTwitter                   domain.RelationKey = "twitter"
	RelationKeyUserStories               domain.RelationKey = "userStories"
	RelationKeyRelationDefaultValue      domain.RelationKey = "relationDefaultValue"
	RelationKeyLinkedProjects            domain.RelationKey = "linkedProjects"
	RelationKeyAudioAlbum                domain.RelationKey = "audioAlbum"
	RelationKeyProblem                   domain.RelationKey = "problem"
	RelationKeyLayoutAlign               domain.RelationKey = "layoutAlign"
	RelationKeyClass                     domain.RelationKey = "class"
	RelationKeyDifficulty                domain.RelationKey = "difficulty"
	RelationKeyDirector                  domain.RelationKey = "director"
	RelationKeyStatus                    domain.RelationKey = "status"
	RelationKeyLogic                     domain.RelationKey = "logic"
	RelationKeyAlternative               domain.RelationKey = "alternative"
	RelationKeyLinkedContacts            domain.RelationKey = "linkedContacts"
	RelationKeyRottenTomatoesRating      domain.RelationKey = "rottenTomatoesRating"
	RelationKeyIsHidden                  domain.RelationKey = "isHidden"
	RelationKeyIsHiddenDiscovery         domain.RelationKey = "isHiddenDiscovery"
	RelationKeyAdditional                domain.RelationKey = "additional"
	RelationKeyBudget                    domain.RelationKey = "budget"
	RelationKeyMediaArtistName           domain.RelationKey = "mediaArtistName"
	RelationKeyRating                    domain.RelationKey = "rating"
	RelationKeyEmail                     domain.RelationKey = "email"
	RelationKeyCompany                   domain.RelationKey = "company"
	RelationKeyAperture                  domain.RelationKey = "aperture"
	RelationKeyLastModifiedDate          domain.RelationKey = "lastModifiedDate"
	RelationKeyStakeholders              domain.RelationKey = "stakeholders"
	RelationKeyMeasureOfSuccess          domain.RelationKey = "measureOfSuccess"
	RelationKeyRecommendedRelations      domain.RelationKey = "recommendedRelations"
	RelationKeyCreator                   domain.RelationKey = "creator"
	RelationKeyRecommendedLayout         domain.RelationKey = "recommendedLayout"
	RelationKeyResult                    domain.RelationKey = "result"
	RelationKeyReflection                domain.RelationKey = "reflection"
	RelationKeyLastOpenedDate            domain.RelationKey = "lastOpenedDate"
	RelationKeyAuthor                    domain.RelationKey = "author"
	RelationKeyArtist                    domain.RelationKey = "artist"
	RelationKeyDueDate                   domain.RelationKey = "dueDate"
	RelationKeyRecords                   domain.RelationKey = "records"
	RelationKeyIconEmoji                 domain.RelationKey = "iconEmoji"
	RelationKeyCoverType                 domain.RelationKey = "coverType"
	RelationKeyCoverY                    domain.RelationKey = "coverY"
	RelationKeyTime                      domain.RelationKey = "time"
	RelationKeySizeInBytes               domain.RelationKey = "sizeInBytes"
	RelationKeyCollectionOf              domain.RelationKey = "collectionOf"
	RelationKeyEvents                    domain.RelationKey = "events"
	RelationKeyTimeframe                 domain.RelationKey = "timeframe"
	RelationKeyIsReadonly                domain.RelationKey = "isReadonly"
	RelationKeyAddedDate                 domain.RelationKey = "addedDate"
	RelationKeyAssignee                  domain.RelationKey = "assignee"
	RelationKeyExposure                  domain.RelationKey = "exposure"
	RelationKeyTargetObjectType          domain.RelationKey = "targetObjectType"
	RelationKeyMaterials                 domain.RelationKey = "materials"
	RelationKeyIsFavorite                domain.RelationKey = "isFavorite"
	RelationKeyStars                     domain.RelationKey = "stars"
	RelationKeyWorkspaceId               domain.RelationKey = "workspaceId"
	RelationKeySpaceId                   domain.RelationKey = "spaceId"
	RelationKeyAudioGenre                domain.RelationKey = "audioGenre"
	RelationKeyTelegram                  domain.RelationKey = "telegram"
	RelationKeyTrailer                   domain.RelationKey = "trailer"
	RelationKeyName                      domain.RelationKey = "name"
	RelationKeyMood                      domain.RelationKey = "mood"
	RelationKeyAudioLyrics               domain.RelationKey = "audioLyrics"
	RelationKeyInstagram                 domain.RelationKey = "instagram"
	RelationKeyClassType                 domain.RelationKey = "classType"
	RelationKeyHowToReproduce            domain.RelationKey = "howToReproduce"
	RelationKeyFocalRatio                domain.RelationKey = "focalRatio"
	RelationKeyPriority                  domain.RelationKey = "priority"
	RelationKeyFileMimeType              domain.RelationKey = "fileMimeType"
	RelationKeyType                      domain.RelationKey = "type"
	RelationKeyLayout                    domain.RelationKey = "layout"
	RelationKeyAudioAlbumTrackNumber     domain.RelationKey = "audioAlbumTrackNumber"
	RelationKeyPlaceOfBirth              domain.RelationKey = "placeOfBirth"
	RelationKeyComposer                  domain.RelationKey = "composer"
	RelationKeyInternalFlags             domain.RelationKey = "internalFlags"
	RelationKeySocialProfile             domain.RelationKey = "socialProfile"
	RelationKeyOccupation                domain.RelationKey = "occupation"
	RelationKeyCoverX                    domain.RelationKey = "coverX"
	RelationKeyDescription               domain.RelationKey = "description"
	RelationKeyFacebook                  domain.RelationKey = "facebook"
	RelationKeyPicture                   domain.RelationKey = "picture"
	RelationKeyId                        domain.RelationKey = "id"
	RelationKeyUrl                       domain.RelationKey = "url"
	RelationKeyObjectives                domain.RelationKey = "objectives"
	RelationKeyCameraIso                 domain.RelationKey = "cameraIso"
	RelationKeyIsDeleted                 domain.RelationKey = "isDeleted"
	RelationKeyLinks                     domain.RelationKey = "links"
	RelationKeyServings                  domain.RelationKey = "servings"
	RelationKeyCategory                  domain.RelationKey = "category"
	RelationKeyCoverId                   domain.RelationKey = "coverId"
	RelationKeyLastModifiedBy            domain.RelationKey = "lastModifiedBy"
	RelationKeyRelationMaxCount          domain.RelationKey = "relationMaxCount"
	RelationKeyQuestions                 domain.RelationKey = "questions"
	RelationKeyWidthInPixels             domain.RelationKey = "widthInPixels"
	RelationKeyProgress                  domain.RelationKey = "progress"
	RelationKeySetOf                     domain.RelationKey = "setOf"
	RelationKeyGender                    domain.RelationKey = "gender"
	RelationKeyIsArchived                domain.RelationKey = "isArchived"
	RelationKeyFileExt                   domain.RelationKey = "fileExt"
	RelationKeyScope                     domain.RelationKey = "scope"
	RelationKeyJob                       domain.RelationKey = "job"
	RelationKeyFeaturedRelations         domain.RelationKey = "featuredRelations"
	RelationKeyPhone                     domain.RelationKey = "phone"
	RelationKeyImdbRating                domain.RelationKey = "imdbRating"
	RelationKeySmartblockTypes           domain.RelationKey = "smartblockTypes"
	RelationKeySource                    domain.RelationKey = "source"
	RelationKeySourceObject              domain.RelationKey = "sourceObject"
	RelationKeyOldAnytypeID              domain.RelationKey = "oldAnytypeID"
	RelationKeySpaceDashboardId          domain.RelationKey = "spaceDashboardId"
	RelationKeyIconOption                domain.RelationKey = "iconOption"
	RelationKeySpaceAccessibility        domain.RelationKey = "spaceAccessibility"
	RelationKeySpaceAccessType           domain.RelationKey = "spaceAccessType"
	RelationKeySourceFilePath            domain.RelationKey = "sourceFilePath"
	RelationKeyFileSyncStatus            domain.RelationKey = "fileSyncStatus"
	RelationKeyFileBackupStatus          domain.RelationKey = "fileBackupStatus"
	RelationKeyFileIndexingStatus        domain.RelationKey = "fileIndexingStatus"
	RelationKeyLastChangeId              domain.RelationKey = "lastChangeId"
	RelationKeyStarred                   domain.RelationKey = "starred"
	RelationKeyDefaultTemplateId         domain.RelationKey = "defaultTemplateId"
	RelationKeyUniqueKey                 domain.RelationKey = "uniqueKey"
	RelationKeyBacklinks                 domain.RelationKey = "backlinks"
	RelationKeyIsUninstalled             domain.RelationKey = "isUninstalled"
	RelationKeyOrigin                    domain.RelationKey = "origin"
	RelationKeySpaceLocalStatus          domain.RelationKey = "spaceLocalStatus"
	RelationKeySpaceRemoteStatus         domain.RelationKey = "spaceRemoteStatus"
	RelationKeySpaceShareableStatus      domain.RelationKey = "spaceShareableStatus"
	RelationKeyIsAclShared               domain.RelationKey = "isAclShared"
	RelationKeySpaceAccountStatus        domain.RelationKey = "spaceAccountStatus"
	RelationKeySpaceInviteFileCid        domain.RelationKey = "spaceInviteFileCid"
	RelationKeySpaceInviteFileKey        domain.RelationKey = "spaceInviteFileKey"
	RelationKeyParticipantPermissions    domain.RelationKey = "participantPermissions"
	RelationKeyIdentity                  domain.RelationKey = "identity"
	RelationKeyParticipantStatus         domain.RelationKey = "participantStatus"
	RelationKeyIdentityProfileLink       domain.RelationKey = "identityProfileLink"
	RelationKeyProfileOwnerIdentity      domain.RelationKey = "profileOwnerIdentity"
	RelationKeyTargetSpaceId             domain.RelationKey = "targetSpaceId"
	RelationKeyFileId                    domain.RelationKey = "fileId"
	RelationKeyLastUsedDate              domain.RelationKey = "lastUsedDate"
	RelationKeyRevision                  domain.RelationKey = "revision"
	RelationKeyImageKind                 domain.RelationKey = "imageKind"
	RelationKeyImportType                domain.RelationKey = "importType"
	RelationKeyGlobalName                domain.RelationKey = "globalName"
	RelationKeySyncStatus                domain.RelationKey = "syncStatus"
	RelationKeySyncDate                  domain.RelationKey = "syncDate"
	RelationKeySyncError                 domain.RelationKey = "syncError"
)

var (
	relations = map[domain.RelationKey]*model.Relation{
		RelationKeyAddedDate: {

			DataSource:       model.Relation_details,
			Description:      "Date when the file were added into the anytype",
			Format:           model.RelationFormat_date,
			Id:               "_braddedDate",
			Key:              "addedDate",
			MaxCount:         1,
			Name:             "Added date",
			ReadOnly:         true,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyAdditional: {

			DataSource:       model.Relation_details,
			Description:      "",
			Format:           model.RelationFormat_longtext,
			Id:               "_bradditional",
			Key:              "additional",
			MaxCount:         1,
			Name:             "Additional",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyAlternative: {

			DataSource:       model.Relation_details,
			Description:      "",
			Format:           model.RelationFormat_longtext,
			Id:               "_bralternative",
			Key:              "alternative",
			MaxCount:         1,
			Name:             "Alternative",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyAperture: {

			DataSource:       model.Relation_details,
			Description:      "",
			Format:           model.RelationFormat_longtext,
			Id:               "_braperture",
			Key:              "aperture",
			MaxCount:         1,
			Name:             "Camera aperture",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyArtist: {

			DataSource:       model.Relation_details,
			Description:      "Name of artist",
			Format:           model.RelationFormat_longtext,
			Id:               "_brartist",
			Key:              "artist",
			MaxCount:         1,
			Name:             "Artist",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyAssignee: {

			DataSource:       model.Relation_details,
			Description:      "Person who is responsible for this task or object",
			Format:           model.RelationFormat_object,
			Id:               "_brassignee",
			Key:              "assignee",
			Name:             "Assignee",
			ObjectTypes:      []string{TypePrefix + "profile", TypePrefix + "contact", TypePrefix + "participant"},
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Revision:         1,
			Scope:            model.Relation_type,
		},
		RelationKeyAttachments: {

			DataSource:       model.Relation_details,
			Description:      "",
			Format:           model.RelationFormat_file,
			Id:               "_brattachments",
			Key:              "attachments",
			Name:             "Attachments",
			ObjectTypes:      []string{TypePrefix + "file", TypePrefix + "image", TypePrefix + "video", TypePrefix + "audio"},
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyAudioAlbum: {

			DataSource:       model.Relation_details,
			Description:      "Audio record's album name",
			Format:           model.RelationFormat_longtext,
			Id:               "_braudioAlbum",
			Key:              "audioAlbum",
			MaxCount:         1,
			Name:             "Album",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyAudioAlbumTrackNumber: {

			DataSource:       model.Relation_details,
			Description:      "Number of the track in the",
			Format:           model.RelationFormat_number,
			Id:               "_braudioAlbumTrackNumber",
			Key:              "audioAlbumTrackNumber",
			MaxCount:         1,
			Name:             "Track #",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyAudioArtist: {

			DataSource:       model.Relation_details,
			Description:      "The artist that performed this album or recording",
			Format:           model.RelationFormat_longtext,
			Id:               "_braudioArtist",
			Key:              "audioArtist",
			MaxCount:         1,
			Name:             "Recording Artist",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyAudioGenre: {

			DataSource:       model.Relation_details,
			Description:      "Audio record's genre name",
			Format:           model.RelationFormat_longtext,
			Id:               "_braudioGenre",
			Key:              "audioGenre",
			MaxCount:         1,
			Name:             "Genre",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyAudioLyrics: {

			DataSource:       model.Relation_details,
			Description:      "The text lyrics of the music record",
			Format:           model.RelationFormat_longtext,
			Id:               "_braudioLyrics",
			Key:              "audioLyrics",
			MaxCount:         1,
			Name:             "Lyrics",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyAuthor: {

			DataSource:       model.Relation_details,
			Description:      "",
			Format:           model.RelationFormat_object,
			Id:               "_brauthor",
			Key:              "author",
			Name:             "Author",
			ObjectTypes:      []string{TypePrefix + "profile", TypePrefix + "contact", TypePrefix + "participant"},
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Revision:         1,
			Scope:            model.Relation_type,
		},
		RelationKeyBacklinks: {

			DataSource:       model.Relation_local,
			Description:      "List of links coming to object",
			Format:           model.RelationFormat_object,
			Id:               "_brbacklinks",
			Key:              "backlinks",
			Name:             "Backlinks",
			ReadOnly:         true,
			ReadOnlyRelation: true,
			Revision:         3,
			Scope:            model.Relation_type,
		},
		RelationKeyBudget: {

			DataSource:       model.Relation_details,
			Description:      "",
			Format:           model.RelationFormat_number,
			Id:               "_brbudget",
			Key:              "budget",
			MaxCount:         1,
			Name:             "Budget",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyCamera: {

			DataSource:       model.Relation_details,
			Description:      "Camera used to capture image or video",
			Format:           model.RelationFormat_longtext,
			Id:               "_brcamera",
			Key:              "camera",
			MaxCount:         1,
			Name:             "Camera",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyCameraIso: {

			DataSource:       model.Relation_details,
			Description:      "",
			Format:           model.RelationFormat_number,
			Id:               "_brcameraIso",
			Key:              "cameraIso",
			MaxCount:         1,
			Name:             "ISO",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyCategory: {

			DataSource:       model.Relation_details,
			Description:      "",
			Format:           model.RelationFormat_tag,
			Id:               "_brcategory",
			Key:              "category",
			Name:             "Category",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyClass: {

			DataSource:       model.Relation_details,
			Description:      "",
			Format:           model.RelationFormat_object,
			Id:               "_brclass",
			Key:              "class",
			Name:             "Class",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyClassType: {

			DataSource:       model.Relation_details,
			Description:      "",
			Format:           model.RelationFormat_tag,
			Id:               "_brclassType",
			Key:              "classType",
			Name:             "Class type",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyCollectionOf: {

			DataSource:       model.Relation_details,
			Description:      "Point to the object types that can be added to collection. Empty means any object type can be added to the collection",
			Format:           model.RelationFormat_object,
			Id:               "_brcollectionOf",
			Key:              "collectionOf",
			Name:             "Collection of",
			ObjectTypes:      []string{TypePrefix + "objectType"},
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyCompany: {

			DataSource:       model.Relation_details,
			Description:      "",
			Format:           model.RelationFormat_object,
			Id:               "_brcompany",
			Key:              "company",
			MaxCount:         1,
			Name:             "Company",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyComposer: {

			DataSource:       model.Relation_details,
			Description:      "",
			Format:           model.RelationFormat_longtext,
			Id:               "_brcomposer",
			Key:              "composer",
			MaxCount:         1,
			Name:             "Composer",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyCoverId: {

			DataSource:       model.Relation_details,
			Description:      "Can contains image hash, color or prebuild bg id, depends on coverType relation",
			Format:           model.RelationFormat_longtext,
			Hidden:           true,
			Id:               "_brcoverId",
			Key:              "coverId",
			MaxCount:         1,
			Name:             "Cover image or color",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyCoverScale: {

			DataSource:       model.Relation_details,
			Description:      "Option that contains scale of Cover the image",
			Format:           model.RelationFormat_number,
			Hidden:           true,
			Id:               "_brcoverScale",
			Key:              "coverScale",
			MaxCount:         1,
			Name:             "Cover scale",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyCoverType: {

			DataSource:       model.Relation_details,
			Description:      "1-image, 2-color, 3-gradient, 4-prebuilt bg image. Value stored in coverId",
			Format:           model.RelationFormat_number,
			Hidden:           true,
			Id:               "_brcoverType",
			Key:              "coverType",
			MaxCount:         1,
			Name:             "Cover type",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyCoverX: {

			DataSource:       model.Relation_details,
			Description:      "Image x offset of the provided image",
			Format:           model.RelationFormat_number,
			Hidden:           true,
			Id:               "_brcoverX",
			Key:              "coverX",
			MaxCount:         1,
			Name:             "Cover x offset",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyCoverY: {

			DataSource:       model.Relation_details,
			Description:      "Image y offset of the provided image",
			Format:           model.RelationFormat_number,
			Hidden:           true,
			Id:               "_brcoverY",
			Key:              "coverY",
			MaxCount:         1,
			Name:             "Cover y offset",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyCreatedDate: {

			DataSource:       model.Relation_derived,
			Description:      "Date when the object was initially created",
			Format:           model.RelationFormat_date,
			Id:               "_brcreatedDate",
			Key:              "createdDate",
			MaxCount:         1,
			Name:             "Creation date",
			ReadOnly:         true,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyCreator: {

			DataSource:       model.Relation_derived,
			Description:      "Human which created this object",
			Format:           model.RelationFormat_object,
			Id:               "_brcreator",
			Key:              "creator",
			MaxCount:         1,
			Name:             "Created by",
			ReadOnly:         true,
			ReadOnlyRelation: true,
			Revision:         1,
			Scope:            model.Relation_type,
		},
		RelationKeyDateOfBirth: {

			DataSource:       model.Relation_details,
			Description:      "",
			Format:           model.RelationFormat_date,
			Id:               "_brdateOfBirth",
			Key:              "dateOfBirth",
			MaxCount:         1,
			Name:             "Birthday",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyDefaultTemplateId: {

			DataSource:       model.Relation_details,
			Description:      "ID of template chosen as default for particular object type",
			Format:           model.RelationFormat_object,
			Hidden:           true,
			Id:               "_brdefaultTemplateId",
			Key:              "defaultTemplateId",
			MaxCount:         1,
			Name:             "Default Template ID",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyDescription: {

			DataSource:       model.Relation_details,
			Description:      "",
			Format:           model.RelationFormat_longtext,
			Id:               "_brdescription",
			Key:              "description",
			MaxCount:         1,
			Name:             "Description",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyDifficulty: {

			DataSource:       model.Relation_details,
			Description:      "",
			Format:           model.RelationFormat_number,
			Id:               "_brdifficulty",
			Key:              "difficulty",
			MaxCount:         1,
			Name:             "Difficulty",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyDirector: {

			DataSource:       model.Relation_details,
			Description:      "",
			Format:           model.RelationFormat_object,
			Id:               "_brdirector",
			Key:              "director",
			Name:             "Director",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyDone: {

			DataSource:       model.Relation_details,
			Description:      "Done checkbox used to render action layout. ",
			Format:           model.RelationFormat_checkbox,
			Hidden:           true,
			Id:               "_brdone",
			Key:              "done",
			MaxCount:         1,
			Name:             "Done",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyDueDate: {

			DataSource:       model.Relation_details,
			Description:      "",
			Format:           model.RelationFormat_date,
			Id:               "_brdueDate",
			Key:              "dueDate",
			MaxCount:         1,
			Name:             "Due date",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyEmail: {

			DataSource:       model.Relation_details,
			Description:      "",
			Format:           model.RelationFormat_email,
			Id:               "_bremail",
			Key:              "email",
			MaxCount:         1,
			Name:             "Email",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyEvents: {

			DataSource:       model.Relation_details,
			Description:      "",
			Format:           model.RelationFormat_object,
			Id:               "_brevents",
			Key:              "events",
			Name:             "Events",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyExposure: {

			DataSource:       model.Relation_details,
			Description:      "",
			Format:           model.RelationFormat_longtext,
			Id:               "_brexposure",
			Key:              "exposure",
			MaxCount:         1,
			Name:             "Camera exposure",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyFacebook: {

			DataSource:       model.Relation_details,
			Description:      "",
			Format:           model.RelationFormat_url,
			Id:               "_brfacebook",
			Key:              "facebook",
			MaxCount:         1,
			Name:             "Facebook",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyFeaturedRelations: {

			DataSource:       model.Relation_details,
			Description:      "Important relations that always appear at the top of the object",
			Format:           model.RelationFormat_object,
			Hidden:           true,
			Id:               "_brfeaturedRelations",
			Key:              "featuredRelations",
			Name:             "Featured Relations",
			ObjectTypes:      []string{TypePrefix + "relation"},
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyFileBackupStatus: {

			DataSource:       model.Relation_details,
			Description:      "File backup status",
			Format:           model.RelationFormat_number,
			Hidden:           true,
			Id:               "_brfileBackupStatus",
			Key:              "fileBackupStatus",
			MaxCount:         1,
			Name:             "File backup status",
			ReadOnly:         true,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyFileExt: {

			DataSource:       model.Relation_details,
			Description:      "",
			Format:           model.RelationFormat_longtext,
			Id:               "_brfileExt",
			Key:              "fileExt",
			MaxCount:         1,
			Name:             "File extension",
			ReadOnly:         true,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyFileId: {

			DataSource:       model.Relation_details,
			Description:      "",
			Format:           model.RelationFormat_shorttext,
			Hidden:           true,
			Id:               "_brfileId",
			Key:              "fileId",
			Name:             "Underlying file id",
			ReadOnly:         true,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyFileIndexingStatus: {

			DataSource:       model.Relation_details,
			Description:      "File indexing status",
			Format:           model.RelationFormat_number,
			Hidden:           true,
			Id:               "_brfileIndexingStatus",
			Key:              "fileIndexingStatus",
			MaxCount:         1,
			Name:             "File indexing status",
			ReadOnly:         true,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyFileMimeType: {

			DataSource:       model.Relation_details,
			Description:      "Mime type of object",
			Format:           model.RelationFormat_longtext,
			Hidden:           true,
			Id:               "_brfileMimeType",
			Key:              "fileMimeType",
			MaxCount:         1,
			Name:             "Mime type",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyFileSyncStatus: {

			DataSource:       model.Relation_derived,
			Description:      "File sync status",
			Format:           model.RelationFormat_number,
			Hidden:           true,
			Id:               "_brfileSyncStatus",
			Key:              "fileSyncStatus",
			MaxCount:         1,
			Name:             "File sync status",
			ReadOnly:         true,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyFocalRatio: {

			DataSource:       model.Relation_details,
			Description:      "",
			Format:           model.RelationFormat_number,
			Id:               "_brfocalRatio",
			Key:              "focalRatio",
			MaxCount:         1,
			Name:             "Focal ratio",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyGender: {

			DataSource:       model.Relation_details,
			Description:      "",
			Format:           model.RelationFormat_status,
			Id:               "_brgender",
			Key:              "gender",
			MaxCount:         1,
			Name:             "Gender",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyGenre: {

			DataSource:       model.Relation_details,
			Description:      "",
			Format:           model.RelationFormat_tag,
			Id:               "_brgenre",
			Key:              "genre",
			Name:             "Genre",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyGlobalName: {

			DataSource:       model.Relation_derived,
			Description:      "Name of profile that the user could be mentioned by",
			Format:           model.RelationFormat_shorttext,
			Id:               "_brglobalName",
			Key:              "globalName",
			MaxCount:         1,
			Name:             "Global name",
			ReadOnly:         true,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyHeightInPixels: {

			DataSource:       model.Relation_details,
			Description:      "Height of image/video in pixels",
			Format:           model.RelationFormat_number,
			Id:               "_brheightInPixels",
			Key:              "heightInPixels",
			MaxCount:         1,
			Name:             "Height",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyHowToReproduce: {

			DataSource:       model.Relation_details,
			Description:      "",
			Format:           model.RelationFormat_longtext,
			Id:               "_brhowToReproduce",
			Key:              "howToReproduce",
			MaxCount:         1,
			Name:             "How-to reproduce",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyHypothesisAssumptions: {

			DataSource:       model.Relation_details,
			Description:      "",
			Format:           model.RelationFormat_longtext,
			Id:               "_brhypothesisAssumptions",
			Key:              "hypothesisAssumptions",
			MaxCount:         1,
			Name:             "Hypothesis & assumptions",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyIconEmoji: {

			DataSource:       model.Relation_details,
			Description:      "1 emoji(can contains multiple UTF symbols) used as an icon",
			Format:           model.RelationFormat_emoji,
			Hidden:           true,
			Id:               "_briconEmoji",
			Key:              "iconEmoji",
			MaxCount:         1,
			Name:             "Emoji",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyIconImage: {

			DataSource:       model.Relation_details,
			Description:      "Image icon",
			Format:           model.RelationFormat_file,
			Hidden:           true,
			Id:               "_briconImage",
			Key:              "iconImage",
			MaxCount:         1,
			Name:             "Image",
			ObjectTypes:      []string{TypePrefix + "image"},
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyIconOption: {

			DataSource:       model.Relation_details,
			Description:      "Choose one of our pre-installed icons during On-boarding",
			Format:           model.RelationFormat_number,
			Hidden:           true,
			Id:               "_briconOption",
			Key:              "iconOption",
			MaxCount:         1,
			Name:             "Icon option",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyId: {

			DataSource:       model.Relation_derived,
			Description:      "Link to itself. Used in databases",
			Format:           model.RelationFormat_object,
			Hidden:           true,
			Id:               "_brid",
			Key:              "id",
			MaxCount:         1,
			Name:             "Anytype ID",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyIdentity: {

			DataSource:       model.Relation_details,
			Description:      "Identity",
			Format:           model.RelationFormat_longtext,
			Hidden:           true,
			Id:               "_bridentity",
			Key:              "identity",
			MaxCount:         1,
			Name:             "Identity",
			ReadOnly:         true,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyIdentityProfileLink: {

			DataSource:       model.Relation_derived,
			Description:      "Link to the profile attached to Anytype Identity",
			Format:           model.RelationFormat_object,
			Hidden:           true,
			Id:               "_bridentityProfileLink",
			Key:              "identityProfileLink",
			MaxCount:         1,
			Name:             "Profile link",
			ReadOnly:         true,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyImageKind: {

			DataSource:       model.Relation_details,
			Description:      "Describes how this image is used",
			Format:           model.RelationFormat_number,
			Hidden:           true,
			Id:               "_brimageKind",
			Key:              "imageKind",
			MaxCount:         1,
			Name:             "Image kind",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyImdbRating: {

			DataSource:       model.Relation_details,
			Description:      "",
			Format:           model.RelationFormat_number,
			Id:               "_brimdbRating",
			Key:              "imdbRating",
			MaxCount:         1,
			Name:             "IMDb rating",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyImportType: {

			DataSource:       model.Relation_details,
			Description:      "Import type, used to create object (notion, md and etc)",
			Format:           model.RelationFormat_number,
			Id:               "_brimportType",
			Key:              "importType",
			MaxCount:         1,
			Name:             "Import Type",
			ReadOnly:         true,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyIngredients: {

			DataSource:       model.Relation_details,
			Description:      "",
			Format:           model.RelationFormat_longtext,
			Id:               "_bringredients",
			Key:              "ingredients",
			MaxCount:         1,
			Name:             "Ingredients",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyInstagram: {

			DataSource:       model.Relation_details,
			Description:      "",
			Format:           model.RelationFormat_url,
			Id:               "_brinstagram",
			Key:              "instagram",
			MaxCount:         1,
			Name:             "Instagram",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyInstructions: {

			DataSource:       model.Relation_details,
			Description:      "",
			Format:           model.RelationFormat_longtext,
			Id:               "_brinstructions",
			Key:              "instructions",
			MaxCount:         1,
			Name:             "Instructions",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyInternalFlags: {

			DataSource:       model.Relation_details,
			Description:      "Set of internal flags",
			Format:           model.RelationFormat_number,
			Hidden:           true,
			Id:               "_brinternalFlags",
			Key:              "internalFlags",
			Name:             "Internal flags",
			ReadOnly:         true,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyIsAclShared: {

			DataSource:       model.Relation_derived,
			Description:      "Specify if access control list is shared",
			Format:           model.RelationFormat_checkbox,
			Hidden:           true,
			Id:               "_brisAclShared",
			Key:              "isAclShared",
			MaxCount:         1,
			Name:             "Is Acl Shared",
			ReadOnly:         true,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyIsArchived: {

			DataSource:       model.Relation_account,
			Description:      "Hides the object",
			Format:           model.RelationFormat_checkbox,
			Hidden:           true,
			Id:               "_brisArchived",
			Key:              "isArchived",
			MaxCount:         1,
			Name:             "Archived",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyIsDeleted: {

			DataSource:       model.Relation_local,
			Description:      "Relation that indicates document has been deleted",
			Format:           model.RelationFormat_checkbox,
			Hidden:           true,
			Id:               "_brisDeleted",
			Key:              "isDeleted",
			MaxCount:         1,
			Name:             "Is deleted",
			ReadOnly:         true,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyIsFavorite: {

			DataSource:       model.Relation_account,
			Description:      "Adds the object to the home dashboard",
			Format:           model.RelationFormat_checkbox,
			Hidden:           true,
			Id:               "_brisFavorite",
			Key:              "isFavorite",
			MaxCount:         1,
			Name:             "Favorited",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyIsHidden: {

			DataSource:       model.Relation_details,
			Description:      "Specify if object is hidden",
			Format:           model.RelationFormat_checkbox,
			Hidden:           true,
			Id:               "_brisHidden",
			Key:              "isHidden",
			MaxCount:         1,
			Name:             "Hidden",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyIsHiddenDiscovery: {

			DataSource:       model.Relation_details,
			Description:      "Specify if object discovery is hidden",
			Format:           model.RelationFormat_checkbox,
			Hidden:           true,
			Id:               "_brisHiddenDiscovery",
			Key:              "isHiddenDiscovery",
			MaxCount:         1,
			Name:             "Discovery hidden",
			ReadOnly:         true,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyIsHighlighted: {

			DataSource:       model.Relation_account,
			Description:      "Adds the object to the highlighted dataview in space",
			Format:           model.RelationFormat_checkbox,
			Hidden:           true,
			Id:               "_brisHighlighted",
			Key:              "isHighlighted",
			MaxCount:         1,
			Name:             "Highlighted",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyIsReadonly: {

			DataSource:       model.Relation_derived,
			Description:      "Indicates whether the object is read-only. Means it can't be edited and archived",
			Format:           model.RelationFormat_checkbox,
			Hidden:           true,
			Id:               "_brisReadonly",
			Key:              "isReadonly",
			MaxCount:         1,
			Name:             "Readonly",
			ReadOnly:         true,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyIsUninstalled: {

			DataSource:       model.Relation_details,
			Description:      "Relation that indicates document has been uninstalled",
			Format:           model.RelationFormat_checkbox,
			Hidden:           true,
			Id:               "_brisUninstalled",
			Key:              "isUninstalled",
			MaxCount:         1,
			Name:             "Is uninstalled",
			ReadOnly:         true,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyJob: {

			DataSource:       model.Relation_details,
			Description:      "",
			Format:           model.RelationFormat_longtext,
			Id:               "_brjob",
			Key:              "job",
			MaxCount:         1,
			Name:             "Job",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyLastChangeId: {

			DataSource:       model.Relation_derived,
			Description:      "Last change ID",
			Format:           model.RelationFormat_longtext,
			Hidden:           true,
			Id:               "_brlastChangeId",
			Key:              "lastChangeId",
			MaxCount:         1,
			Name:             "Last change ID of the object",
			ReadOnly:         true,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyLastModifiedBy: {

			DataSource:       model.Relation_derived,
			Description:      "Human who updated the object last time",
			Format:           model.RelationFormat_object,
			Id:               "_brlastModifiedBy",
			Key:              "lastModifiedBy",
			MaxCount:         1,
			Name:             "Last modified by",
			ObjectTypes:      []string{TypePrefix + "participant"},
			ReadOnly:         true,
			ReadOnlyRelation: true,
			Revision:         1,
			Scope:            model.Relation_type,
		},
		RelationKeyLastModifiedDate: {

			DataSource:       model.Relation_derived,
			Description:      "Date when the object was modified last time",
			Format:           model.RelationFormat_date,
			Id:               "_brlastModifiedDate",
			Key:              "lastModifiedDate",
			MaxCount:         1,
			Name:             "Last modified date",
			ReadOnly:         true,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyLastOpenedDate: {

			DataSource:       model.Relation_account,
			Description:      "Date when the object was modified last opened",
			Format:           model.RelationFormat_date,
			Id:               "_brlastOpenedDate",
			Key:              "lastOpenedDate",
			MaxCount:         1,
			Name:             "Last opened date",
			ReadOnly:         true,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyLastUsedDate: {

			DataSource:       model.Relation_local,
			Description:      "Last time object type was used",
			Format:           model.RelationFormat_date,
			Hidden:           true,
			Id:               "_brlastUsedDate",
			Key:              "lastUsedDate",
			MaxCount:         1,
			Name:             "Last Used date",
			ReadOnly:         true,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyLatestAclHeadId: {

			DataSource:       model.Relation_details,
			Description:      "Latest Acl head id",
			Format:           model.RelationFormat_longtext,
			Hidden:           true,
			Id:               "_brlatestAclHeadId",
			Key:              "latestAclHeadId",
			MaxCount:         1,
			Name:             "Latest acl head id",
			ReadOnly:         true,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyLayout: {

			DataSource:       model.Relation_details,
			Description:      "Anytype layout ID(from pb enum)",
			Format:           model.RelationFormat_number,
			Hidden:           true,
			Id:               "_brlayout",
			Key:              "layout",
			MaxCount:         1,
			Name:             "Layout",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyLayoutAlign: {

			DataSource:       model.Relation_details,
			Description:      "Specify visual align of the layout",
			Format:           model.RelationFormat_number,
			Hidden:           true,
			Id:               "_brlayoutAlign",
			Key:              "layoutAlign",
			MaxCount:         1,
			Name:             "Layout align",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyLinkedContacts: {

			DataSource:       model.Relation_details,
			Description:      "",
			Format:           model.RelationFormat_object,
			Id:               "_brlinkedContacts",
			Key:              "linkedContacts",
			Name:             "Linked Contacts",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyLinkedProjects: {

			DataSource:       model.Relation_details,
			Description:      "",
			Format:           model.RelationFormat_object,
			Id:               "_brlinkedProjects",
			Key:              "linkedProjects",
			Name:             "Linked Projects",
			ObjectTypes:      []string{TypePrefix + "project"},
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyLinks: {

			DataSource:       model.Relation_derived,
			Description:      "Outgoing links",
			Format:           model.RelationFormat_object,
			Id:               "_brlinks",
			Key:              "links",
			Name:             "Links",
			ReadOnly:         true,
			ReadOnlyRelation: true,
			Revision:         3,
			Scope:            model.Relation_type,
		},
		RelationKeyLogic: {

			DataSource:       model.Relation_details,
			Description:      "",
			Format:           model.RelationFormat_longtext,
			Id:               "_brlogic",
			Key:              "logic",
			MaxCount:         1,
			Name:             "Logic",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyMaterials: {

			DataSource:       model.Relation_details,
			Description:      "",
			Format:           model.RelationFormat_longtext,
			Id:               "_brmaterials",
			Key:              "materials",
			MaxCount:         1,
			Name:             "Materials",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyMeasureOfSuccess: {

			DataSource:       model.Relation_details,
			Description:      "",
			Format:           model.RelationFormat_longtext,
			Id:               "_brmeasureOfSuccess",
			Key:              "measureOfSuccess",
			MaxCount:         1,
			Name:             "Measure of success",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyMediaArtistName: {

			DataSource:       model.Relation_details,
			Description:      "Artist name",
			Format:           model.RelationFormat_longtext,
			Hidden:           true,
			Id:               "_brmediaArtistName",
			Key:              "mediaArtistName",
			MaxCount:         1,
			Name:             "Media Artist Name",
			ReadOnly:         true,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyMediaArtistURL: {

			DataSource:       model.Relation_details,
			Description:      "Artist URL",
			Format:           model.RelationFormat_url,
			Hidden:           true,
			Id:               "_brmediaArtistURL",
			Key:              "mediaArtistURL",
			MaxCount:         1,
			Name:             "Media Artist URL",
			ReadOnly:         true,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyMood: {

			DataSource:       model.Relation_details,
			Description:      "",
			Format:           model.RelationFormat_tag,
			Id:               "_brmood",
			Key:              "mood",
			Name:             "Mood",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyName: {

			DataSource:       model.Relation_details,
			Description:      "Name of the object",
			Format:           model.RelationFormat_shorttext,
			Hidden:           true,
			Id:               "_brname",
			Key:              "name",
			MaxCount:         1,
			Name:             "Name",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyObjectives: {

			DataSource:       model.Relation_details,
			Description:      "",
			Format:           model.RelationFormat_longtext,
			Id:               "_brobjectives",
			Key:              "objectives",
			MaxCount:         1,
			Name:             "Objectives",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyOccupation: {

			DataSource:       model.Relation_details,
			Description:      "",
			Format:           model.RelationFormat_longtext,
			Id:               "_broccupation",
			Key:              "occupation",
			MaxCount:         1,
			Name:             "Occupation",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyOldAnytypeID: {

			DataSource:       model.Relation_details,
			Description:      "",
			Format:           model.RelationFormat_longtext,
			Hidden:           true,
			Id:               "_broldAnytypeID",
			Key:              "oldAnytypeID",
			MaxCount:         1,
			Name:             "Old Anytype ID",
			ReadOnly:         true,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyOrigin: {

			DataSource:       model.Relation_details,
			Description:      "Source of objects in Anytype (clipboard, import)",
			Format:           model.RelationFormat_number,
			Id:               "_brorigin",
			Key:              "origin",
			MaxCount:         1,
			Name:             "Origin",
			ReadOnly:         true,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyParticipantPermissions: {

			DataSource:       model.Relation_details,
			Description:      "Participant permissions. Possible values: models.ParticipantPermissions",
			Format:           model.RelationFormat_number,
			Hidden:           true,
			Id:               "_brparticipantPermissions",
			Key:              "participantPermissions",
			MaxCount:         1,
			Name:             "Participant permissions",
			ReadOnly:         true,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyParticipantStatus: {

			DataSource:       model.Relation_details,
			Description:      "Participant status. Possible values: models.ParticipantStatus",
			Format:           model.RelationFormat_number,
			Hidden:           true,
			Id:               "_brparticipantStatus",
			Key:              "participantStatus",
			MaxCount:         1,
			Name:             "Participant status",
			ReadOnly:         true,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyPhone: {

			DataSource:       model.Relation_details,
			Description:      "",
			Format:           model.RelationFormat_phone,
			Id:               "_brphone",
			Key:              "phone",
			MaxCount:         1,
			Name:             "Phone",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyPicture: {

			DataSource:       model.Relation_details,
			Description:      "An image is an artifact that depicts visual perception, such as a photograph or other two-dimensional picture",
			Format:           model.RelationFormat_file,
			Hidden:           true,
			Id:               "_brpicture",
			Key:              "picture",
			MaxCount:         1,
			Name:             "Picture",
			ObjectTypes:      []string{TypePrefix + "image"},
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyPlaceOfBirth: {

			DataSource:       model.Relation_details,
			Description:      "",
			Format:           model.RelationFormat_longtext,
			Id:               "_brplaceOfBirth",
			Key:              "placeOfBirth",
			MaxCount:         1,
			Name:             "Place of birth",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyPriority: {

			DataSource:       model.Relation_details,
			Description:      "Used to order tasks in list/canban",
			Format:           model.RelationFormat_number,
			Id:               "_brpriority",
			Key:              "priority",
			MaxCount:         1,
			Name:             "Priority",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyProblem: {

			DataSource:       model.Relation_details,
			Description:      "",
			Format:           model.RelationFormat_longtext,
			Id:               "_brproblem",
			Key:              "problem",
			MaxCount:         1,
			Name:             "Problem",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyProfileOwnerIdentity: {

			DataSource:       model.Relation_derived,
			Description:      "Link the profile object to specific Identity",
			Format:           model.RelationFormat_shorttext,
			Id:               "_brprofileOwnerIdentity",
			Key:              "profileOwnerIdentity",
			MaxCount:         1,
			Name:             "Anytype Identity",
			ReadOnly:         true,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyProgress: {

			DataSource:       model.Relation_details,
			Description:      "",
			Format:           model.RelationFormat_number,
			Id:               "_brprogress",
			Key:              "progress",
			MaxCount:         1,
			Name:             "Progress",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyQuestions: {

			DataSource:       model.Relation_details,
			Description:      "",
			Format:           model.RelationFormat_longtext,
			Id:               "_brquestions",
			Key:              "questions",
			MaxCount:         1,
			Name:             "Questions",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyRating: {

			DataSource:       model.Relation_details,
			Description:      "",
			Format:           model.RelationFormat_longtext,
			Id:               "_brrating",
			Key:              "rating",
			MaxCount:         1,
			Name:             "Rating",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyReadersLimit: {

			DataSource:       model.Relation_derived,
			Description:      "Readers limit",
			Format:           model.RelationFormat_number,
			Hidden:           true,
			Id:               "_brreadersLimit",
			Key:              "readersLimit",
			MaxCount:         1,
			Name:             "Readers limit",
			ReadOnly:         true,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyRecommendedLayout: {

			DataSource:       model.Relation_details,
			Description:      "Recommended layout for new templates and objects of specific objec",
			Format:           model.RelationFormat_number,
			Hidden:           true,
			Id:               "_brrecommendedLayout",
			Key:              "recommendedLayout",
			MaxCount:         1,
			Name:             "Recommended layout",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyRecommendedRelations: {

			DataSource:       model.Relation_details,
			Description:      "List of recommended relations",
			Format:           model.RelationFormat_object,
			Hidden:           true,
			Id:               "_brrecommendedRelations",
			Key:              "recommendedRelations",
			Name:             "Recommended relations",
			ObjectTypes:      []string{TypePrefix + "relation"},
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyRecords: {

			DataSource:       model.Relation_details,
			Description:      "",
			Format:           model.RelationFormat_longtext,
			Id:               "_brrecords",
			Key:              "records",
			MaxCount:         1,
			Name:             "Records",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyReflection: {

			DataSource:       model.Relation_details,
			Description:      "",
			Format:           model.RelationFormat_checkbox,
			Id:               "_brreflection",
			Key:              "reflection",
			MaxCount:         1,
			Name:             "Reflection",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyRelationDefaultValue: {

			DataSource:       model.Relation_details,
			Description:      "",
			Format:           model.RelationFormat_longtext,
			Id:               "_brrelationDefaultValue",
			Key:              "relationDefaultValue",
			MaxCount:         1,
			Name:             "Default value",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyRelationFormat: {

			DataSource:       model.Relation_details,
			Description:      "Type of the underlying value",
			Format:           model.RelationFormat_number,
			Hidden:           true,
			Id:               "_brrelationFormat",
			Key:              "relationFormat",
			MaxCount:         1,
			Name:             "Format",
			ReadOnly:         true,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyRelationFormatObjectTypes: {

			DataSource:       model.Relation_details,
			Description:      "Prioritized target types for the relation's value",
			Format:           model.RelationFormat_object,
			Hidden:           true,
			Id:               "_brrelationFormatObjectTypes",
			Key:              "relationFormatObjectTypes",
			Name:             "Relation's target object types",
			ReadOnly:         true,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyRelationKey: {

			DataSource:       model.Relation_details,
			Description:      "Relation key",
			Format:           model.RelationFormat_longtext,
			Hidden:           true,
			Id:               "_brrelationKey",
			Key:              "relationKey",
			MaxCount:         1,
			Name:             "Relation key",
			ReadOnly:         true,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyRelationMaxCount: {

			DataSource:       model.Relation_details,
			Description:      "Relation allows multi values",
			Format:           model.RelationFormat_number,
			Id:               "_brrelationMaxCount",
			Key:              "relationMaxCount",
			MaxCount:         1,
			Name:             "Max values",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyRelationOptionColor: {

			DataSource:       model.Relation_details,
			Description:      "Relation option color",
			Format:           model.RelationFormat_longtext,
			Hidden:           true,
			Id:               "_brrelationOptionColor",
			Key:              "relationOptionColor",
			MaxCount:         1,
			Name:             "Relation option color",
			ReadOnly:         true,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyRelationReadonlyValue: {

			DataSource:       model.Relation_details,
			Description:      "Indicates whether the relation value is readonly",
			Format:           model.RelationFormat_checkbox,
			Hidden:           true,
			Id:               "_brrelationReadonlyValue",
			Key:              "relationReadonlyValue",
			MaxCount:         1,
			Name:             "Relation value is readonly",
			ReadOnly:         true,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyReleasedYear: {

			DataSource:       model.Relation_details,
			Description:      "Year when this object were released",
			Format:           model.RelationFormat_number,
			Id:               "_brreleasedYear",
			Key:              "releasedYear",
			MaxCount:         1,
			Name:             "Released year",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyRestrictions: {

			DataSource:       model.Relation_derived,
			Description:      "Object restrictions list",
			Format:           model.RelationFormat_number,
			Hidden:           true,
			Id:               "_brrestrictions",
			Key:              "restrictions",
			Name:             "Object restrictions",
			ReadOnly:         true,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyResult: {

			DataSource:       model.Relation_details,
			Description:      "",
			Format:           model.RelationFormat_longtext,
			Id:               "_brresult",
			Key:              "result",
			MaxCount:         1,
			Name:             "Result",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyRevision: {

			DataSource:       model.Relation_details,
			Description:      "Revision of system object",
			Format:           model.RelationFormat_number,
			Hidden:           true,
			Id:               "_brrevision",
			Key:              "revision",
			MaxCount:         1,
			Name:             "Revision",
			ReadOnly:         true,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyRottenTomatoesRating: {

			DataSource:       model.Relation_details,
			Description:      "",
			Format:           model.RelationFormat_number,
			Id:               "_brrottenTomatoesRating",
			Key:              "rottenTomatoesRating",
			MaxCount:         1,
			Name:             "Rotten Tomatoes rating",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyScope: {

			DataSource:       model.Relation_details,
			Description:      "",
			Format:           model.RelationFormat_longtext,
			Id:               "_brscope",
			Key:              "scope",
			MaxCount:         1,
			Name:             "Scope",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyServings: {

			DataSource:       model.Relation_details,
			Description:      "",
			Format:           model.RelationFormat_number,
			Id:               "_brservings",
			Key:              "servings",
			MaxCount:         1,
			Name:             "Servings",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeySetOf: {

			DataSource:       model.Relation_details,
			Description:      "Point to the object types or realtions used to aggregate the set. Empty means object of all types will be aggregated ",
			Format:           model.RelationFormat_object,
			Id:               "_brsetOf",
			Key:              "setOf",
			Name:             "Set of",
			ObjectTypes:      []string{TypePrefix + "objectType"},
			ReadOnly:         true,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeySharedSpacesLimit: {

			DataSource:       model.Relation_derived,
			Description:      "Shared spaces limit",
			Format:           model.RelationFormat_number,
			Hidden:           true,
			Id:               "_brsharedSpacesLimit",
			Key:              "sharedSpacesLimit",
			MaxCount:         1,
			Name:             "Shared spaces limit",
			ReadOnly:         true,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeySizeInBytes: {

			DataSource:       model.Relation_details,
			Description:      "Size of file/image in bytes",
			Format:           model.RelationFormat_number,
			Id:               "_brsizeInBytes",
			Key:              "sizeInBytes",
			MaxCount:         1,
			Name:             "Size",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeySmartblockTypes: {

			DataSource:       model.Relation_details,
			Description:      "Stored for object type. Contains tge list of smartblock types used to create the object",
			Format:           model.RelationFormat_number,
			Hidden:           true,
			Id:               "_brsmartblockTypes",
			Key:              "smartblockTypes",
			Name:             "Smartblock types",
			ReadOnly:         true,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeySnippet: {

			DataSource:       model.Relation_derived,
			Description:      "Plaintext extracted from the object's blocks ",
			Format:           model.RelationFormat_longtext,
			Hidden:           true,
			Id:               "_brsnippet",
			Key:              "snippet",
			MaxCount:         1,
			Name:             "Snippet",
			ReadOnly:         true,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeySocialProfile: {

			DataSource:       model.Relation_details,
			Description:      "",
			Format:           model.RelationFormat_url,
			Id:               "_brsocialProfile",
			Key:              "socialProfile",
			MaxCount:         1,
			Name:             "Profile in social media",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeySolution: {

			DataSource:       model.Relation_details,
			Description:      "",
			Format:           model.RelationFormat_longtext,
			Id:               "_brsolution",
			Key:              "solution",
			MaxCount:         1,
			Name:             "Solution",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeySource: {

			DataSource:       model.Relation_details,
			Description:      "",
			Format:           model.RelationFormat_url,
			Id:               "_brsource",
			Key:              "source",
			MaxCount:         1,
			Name:             "Source",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeySourceFilePath: {

			DataSource:       model.Relation_details,
			Description:      "File path or url with original object",
			Format:           model.RelationFormat_longtext,
			Hidden:           true,
			Id:               "_brsourceFilePath",
			Key:              "sourceFilePath",
			MaxCount:         1,
			Name:             "Source file path",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeySourceObject: {

			DataSource:       model.Relation_details,
			Description:      "",
			Format:           model.RelationFormat_object,
			Id:               "_brsourceObject",
			Key:              "sourceObject",
			MaxCount:         1,
			Name:             "Source object",
			ReadOnly:         true,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeySpaceAccessType: {

			DataSource:       model.Relation_derived,
			Description:      "Space access type, see enum model.SpaceAccessType",
			Format:           model.RelationFormat_number,
			Hidden:           true,
			Id:               "_brspaceAccessType",
			Key:              "spaceAccessType",
			MaxCount:         1,
			Name:             "Space access type",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeySpaceAccessibility: {

			DataSource:       model.Relation_details,
			Description:      "There are two options of accessibility of workspace - private (0) or public (1)",
			Format:           model.RelationFormat_number,
			Hidden:           true,
			Id:               "_brspaceAccessibility",
			Key:              "spaceAccessibility",
			MaxCount:         1,
			Name:             "Space accessibility",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeySpaceAccountStatus: {

			DataSource:       model.Relation_details,
			Description:      "Relation that indicates the status of space that the user is set. Possible values: models.SpaceStatus",
			Format:           model.RelationFormat_number,
			Hidden:           true,
			Id:               "_brspaceAccountStatus",
			Key:              "spaceAccountStatus",
			MaxCount:         1,
			Name:             "Space account status",
			ReadOnly:         true,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeySpaceDashboardId: {

			DataSource:       model.Relation_details,
			Description:      "Space Dashboard object ID",
			Format:           model.RelationFormat_object,
			Hidden:           true,
			Id:               "_brspaceDashboardId",
			Key:              "spaceDashboardId",
			MaxCount:         1,
			Name:             "Space Dashboard ID",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeySpaceId: {

			DataSource:       model.Relation_local,
			Description:      "Space belongs to",
			Format:           model.RelationFormat_object,
			Hidden:           true,
			Id:               "_brspaceId",
			Key:              "spaceId",
			MaxCount:         1,
			Name:             "Space ID",
			ObjectTypes:      []string{TypePrefix + "space"},
			ReadOnly:         true,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeySpaceInviteFileCid: {

			DataSource:       model.Relation_details,
			Description:      "CID of invite file for current space. It stored in SpaceView",
			Format:           model.RelationFormat_shorttext,
			Hidden:           true,
			Id:               "_brspaceInviteFileCid",
			Key:              "spaceInviteFileCid",
			MaxCount:         1,
			Name:             "CID of invite file for current space",
			ReadOnly:         true,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeySpaceInviteFileKey: {

			DataSource:       model.Relation_details,
			Description:      "Encoded encryption key of invite file for current space. It stored in SpaceView",
			Format:           model.RelationFormat_shorttext,
			Hidden:           true,
			Id:               "_brspaceInviteFileKey",
			Key:              "spaceInviteFileKey",
			MaxCount:         1,
			Name:             "Encoded encryption key of invite file for current space",
			ReadOnly:         true,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeySpaceLocalStatus: {

			DataSource:       model.Relation_derived,
			Description:      "Relation that indicates the local status of space. Possible values: models.SpaceStatus",
			Format:           model.RelationFormat_number,
			Hidden:           true,
			Id:               "_brspaceLocalStatus",
			Key:              "spaceLocalStatus",
			MaxCount:         1,
			Name:             "Space local status",
			ReadOnly:         true,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeySpaceRemoteStatus: {

			DataSource:       model.Relation_derived,
			Description:      "Relation that indicates the remote status of space. Possible values: models.SpaceStatus",
			Format:           model.RelationFormat_number,
			Hidden:           true,
			Id:               "_brspaceRemoteStatus",
			Key:              "spaceRemoteStatus",
			MaxCount:         1,
			Name:             "Space remote status",
			ReadOnly:         true,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeySpaceShareableStatus: {

			DataSource:       model.Relation_derived,
			Description:      "Specify if the space is shareable",
			Format:           model.RelationFormat_number,
			Hidden:           true,
			Id:               "_brspaceShareableStatus",
			Key:              "spaceShareableStatus",
			MaxCount:         1,
			Name:             "Space shareable status",
			ReadOnly:         true,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyStakeholders: {

			DataSource:       model.Relation_details,
			Description:      "",
			Format:           model.RelationFormat_object,
			Id:               "_brstakeholders",
			Key:              "stakeholders",
			Name:             "Stakeholders",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyStarred: {

			DataSource:       model.Relation_details,
			Description:      "",
			Format:           model.RelationFormat_checkbox,
			Id:               "_brstarred",
			Key:              "starred",
			MaxCount:         1,
			Name:             "Starred",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyStars: {

			DataSource:       model.Relation_details,
			Description:      "",
			Format:           model.RelationFormat_object,
			Id:               "_brstars",
			Key:              "stars",
			Name:             "Stars",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyStatus: {

			DataSource:       model.Relation_details,
			Description:      "Task status",
			Format:           model.RelationFormat_status,
			Id:               "_brstatus",
			Key:              "status",
			MaxCount:         1,
			Name:             "Status",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeySyncDate: {

			DataSource:       model.Relation_local,
			Description:      "Object sync date",
			Format:           model.RelationFormat_date,
			Hidden:           true,
			Id:               "_brsyncDate",
			Key:              "syncDate",
			MaxCount:         1,
			Name:             "Sync date",
			ReadOnly:         true,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeySyncError: {

			DataSource:       model.Relation_local,
			Description:      "Object sync error",
			Format:           model.RelationFormat_number,
			Hidden:           true,
			Id:               "_brsyncError",
			Key:              "syncError",
			MaxCount:         1,
			Name:             "Sync error",
			ReadOnly:         true,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeySyncStatus: {

			DataSource:       model.Relation_local,
			Description:      "Object sync status",
			Format:           model.RelationFormat_number,
			Hidden:           true,
			Id:               "_brsyncStatus",
			Key:              "syncStatus",
			MaxCount:         1,
			Name:             "Sync status",
			ReadOnly:         true,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyTag: {

			DataSource:       model.Relation_details,
			Description:      "",
			Format:           model.RelationFormat_tag,
			Id:               "_brtag",
			Key:              "tag",
			Name:             "Tag",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyTargetObjectType: {

			DataSource:       model.Relation_details,
			Description:      "Type that is used for templating",
			Format:           model.RelationFormat_object,
			Hidden:           true,
			Id:               "_brtargetObjectType",
			Key:              "targetObjectType",
			MaxCount:         1,
			Name:             "Template's Type",
			ObjectTypes:      []string{TypePrefix + "objectType"},
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyTargetSpaceId: {

			DataSource:       model.Relation_derived,
			Description:      "Relation that indicates the real space id on the spaceView",
			Format:           model.RelationFormat_longtext,
			Hidden:           true,
			Id:               "_brtargetSpaceId",
			Key:              "targetSpaceId",
			MaxCount:         1,
			Name:             "Target space id",
			ReadOnly:         true,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyTasks: {

			DataSource:       model.Relation_details,
			Description:      "List of related tasks\n",
			Format:           model.RelationFormat_object,
			Id:               "_brtasks",
			Key:              "tasks",
			Name:             "Tasks",
			ObjectTypes:      []string{TypePrefix + "task"},
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyTelegram: {

			DataSource:       model.Relation_details,
			Description:      "",
			Format:           model.RelationFormat_url,
			Id:               "_brtelegram",
			Key:              "telegram",
			MaxCount:         1,
			Name:             "Telegram",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyTemplateIsBundled: {

			DataSource:       model.Relation_derived,
			Description:      "Specifies whether template is provided by anytype",
			Format:           model.RelationFormat_checkbox,
			Hidden:           true,
			Id:               "_brtemplateIsBundled",
			Key:              "templateIsBundled",
			MaxCount:         1,
			Name:             "Bundled Template",
			ReadOnly:         true,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyThumbnailImage: {

			DataSource:       model.Relation_details,
			Description:      "",
			Format:           model.RelationFormat_file,
			Id:               "_brthumbnailImage",
			Key:              "thumbnailImage",
			Name:             "Thumbnail image",
			ObjectTypes:      []string{TypePrefix + "image"},
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyTime: {

			DataSource:       model.Relation_details,
			Description:      "",
			Format:           model.RelationFormat_number,
			Id:               "_brtime",
			Key:              "time",
			MaxCount:         1,
			Name:             "Time",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyTimeframe: {

			DataSource:       model.Relation_details,
			Description:      "",
			Format:           model.RelationFormat_longtext,
			Id:               "_brtimeframe",
			Key:              "timeframe",
			MaxCount:         1,
			Name:             "Timeframe",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyToBeDeletedDate: {

			DataSource:       model.Relation_account,
			Description:      "Date when the object will be deleted from your device",
			Format:           model.RelationFormat_date,
			Hidden:           true,
			Id:               "_brtoBeDeletedDate",
			Key:              "toBeDeletedDate",
			MaxCount:         1,
			Name:             "Date to delete",
			ReadOnly:         true,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyTrailer: {

			DataSource:       model.Relation_details,
			Description:      "",
			Format:           model.RelationFormat_file,
			Id:               "_brtrailer",
			Key:              "trailer",
			Name:             "Trailer",
			ObjectTypes:      []string{TypePrefix + "file", TypePrefix + "image", TypePrefix + "video", TypePrefix + "audio"},
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyTwitter: {

			DataSource:       model.Relation_details,
			Description:      "",
			Format:           model.RelationFormat_url,
			Id:               "_brtwitter",
			Key:              "twitter",
			MaxCount:         1,
			Name:             "Twitter",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyType: {

			DataSource:       model.Relation_derived,
			Description:      "Relation that stores the object's type",
			Format:           model.RelationFormat_object,
			Id:               "_brtype",
			Key:              "type",
			MaxCount:         1,
			Name:             "Object type",
			ObjectTypes:      []string{TypePrefix + "objectType"},
			ReadOnly:         true,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyUniqueKey: {

			DataSource:       model.Relation_derived,
			Description:      "Unique key used to ensure object uniqueness within the space",
			Format:           model.RelationFormat_longtext,
			Hidden:           true,
			Id:               "_bruniqueKey",
			Key:              "uniqueKey",
			MaxCount:         1,
			Name:             "Unique object key",
			ReadOnly:         true,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyUrl: {

			DataSource:       model.Relation_details,
			Description:      "Web address, a reference to a web resource that specifies its location on a computer network and a mechanism for retrieving it",
			Format:           model.RelationFormat_url,
			Id:               "_brurl",
			Key:              "url",
			MaxCount:         1,
			Name:             "URL",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyUserStories: {

			DataSource:       model.Relation_details,
			Description:      "",
			Format:           model.RelationFormat_longtext,
			Id:               "_bruserStories",
			Key:              "userStories",
			MaxCount:         1,
			Name:             "User stories",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyWidthInPixels: {

			DataSource:       model.Relation_details,
			Description:      "Width of image/video in pixels",
			Format:           model.RelationFormat_number,
			Id:               "_brwidthInPixels",
			Key:              "widthInPixels",
			MaxCount:         1,
			Name:             "Width",
			ReadOnly:         false,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyWorkspaceId: {

			DataSource:       model.Relation_local,
			Description:      "Space object belongs to",
			Format:           model.RelationFormat_object,
			Hidden:           true,
			Id:               "_brworkspaceId",
			Key:              "workspaceId",
			MaxCount:         1,
			Name:             "Space",
			ObjectTypes:      []string{TypePrefix + "space"},
			ReadOnly:         true,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
		RelationKeyWritersLimit: {

			DataSource:       model.Relation_derived,
			Description:      "Writers limit",
			Format:           model.RelationFormat_number,
			Hidden:           true,
			Id:               "_brwritersLimit",
			Key:              "writersLimit",
			MaxCount:         1,
			Name:             "Writers limit",
			ReadOnly:         true,
			ReadOnlyRelation: true,
			Scope:            model.Relation_type,
		},
	}
)
