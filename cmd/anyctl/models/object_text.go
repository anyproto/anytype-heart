// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ObjectText object text
//
// swagger:model object.Text
type ObjectText struct {

	// checked
	// Example: true
	Checked bool `json:"checked,omitempty"`

	// color
	// Example: red
	Color string `json:"color,omitempty"`

	// icon
	// Example: ðŸ“„
	Icon string `json:"icon,omitempty"`

	// style
	// Example: Paragraph
	// Enum: ["Paragraph","Header1","Header2","Header3","Header4","Quote","Code","Title","Checkbox","Marked","Numbered","Toggle","Description","Callout"]
	Style string `json:"style,omitempty"`

	// text
	// Example: Some text
	Text string `json:"text,omitempty"`
}

// Validate validates this object text
func (m *ObjectText) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateStyle(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var objectTextTypeStylePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Paragraph","Header1","Header2","Header3","Header4","Quote","Code","Title","Checkbox","Marked","Numbered","Toggle","Description","Callout"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		objectTextTypeStylePropEnum = append(objectTextTypeStylePropEnum, v)
	}
}

const (

	// ObjectTextStyleParagraph captures enum value "Paragraph"
	ObjectTextStyleParagraph string = "Paragraph"

	// ObjectTextStyleHeader1 captures enum value "Header1"
	ObjectTextStyleHeader1 string = "Header1"

	// ObjectTextStyleHeader2 captures enum value "Header2"
	ObjectTextStyleHeader2 string = "Header2"

	// ObjectTextStyleHeader3 captures enum value "Header3"
	ObjectTextStyleHeader3 string = "Header3"

	// ObjectTextStyleHeader4 captures enum value "Header4"
	ObjectTextStyleHeader4 string = "Header4"

	// ObjectTextStyleQuote captures enum value "Quote"
	ObjectTextStyleQuote string = "Quote"

	// ObjectTextStyleCode captures enum value "Code"
	ObjectTextStyleCode string = "Code"

	// ObjectTextStyleTitle captures enum value "Title"
	ObjectTextStyleTitle string = "Title"

	// ObjectTextStyleCheckbox captures enum value "Checkbox"
	ObjectTextStyleCheckbox string = "Checkbox"

	// ObjectTextStyleMarked captures enum value "Marked"
	ObjectTextStyleMarked string = "Marked"

	// ObjectTextStyleNumbered captures enum value "Numbered"
	ObjectTextStyleNumbered string = "Numbered"

	// ObjectTextStyleToggle captures enum value "Toggle"
	ObjectTextStyleToggle string = "Toggle"

	// ObjectTextStyleDescription captures enum value "Description"
	ObjectTextStyleDescription string = "Description"

	// ObjectTextStyleCallout captures enum value "Callout"
	ObjectTextStyleCallout string = "Callout"
)

// prop value enum
func (m *ObjectText) validateStyleEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, objectTextTypeStylePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *ObjectText) validateStyle(formats strfmt.Registry) error {
	if swag.IsZero(m.Style) { // not required
		return nil
	}

	// value enum
	if err := m.validateStyleEnum("style", "body", m.Style); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this object text based on context it is used
func (m *ObjectText) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ObjectText) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ObjectText) UnmarshalBinary(b []byte) error {
	var res ObjectText
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
