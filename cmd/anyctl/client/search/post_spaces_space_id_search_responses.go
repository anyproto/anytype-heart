// Code generated by go-swagger; DO NOT EDIT.

package search

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/anyproto/anytype-heart/cmd/anyctl/models"
)

// PostSpacesSpaceIDSearchReader is a Reader for the PostSpacesSpaceIDSearch structure.
type PostSpacesSpaceIDSearchReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostSpacesSpaceIDSearchReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostSpacesSpaceIDSearchOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewPostSpacesSpaceIDSearchUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostSpacesSpaceIDSearchInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /spaces/{space_id}/search] PostSpacesSpaceIDSearch", response, response.Code())
	}
}

// NewPostSpacesSpaceIDSearchOK creates a PostSpacesSpaceIDSearchOK with default headers values
func NewPostSpacesSpaceIDSearchOK() *PostSpacesSpaceIDSearchOK {
	return &PostSpacesSpaceIDSearchOK{}
}

/*
PostSpacesSpaceIDSearchOK describes a response with status code 200, with default header values.

List of objects
*/
type PostSpacesSpaceIDSearchOK struct {
	Payload *models.PaginationPaginatedResponseObjectObject
}

// IsSuccess returns true when this post spaces space Id search o k response has a 2xx status code
func (o *PostSpacesSpaceIDSearchOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post spaces space Id search o k response has a 3xx status code
func (o *PostSpacesSpaceIDSearchOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post spaces space Id search o k response has a 4xx status code
func (o *PostSpacesSpaceIDSearchOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post spaces space Id search o k response has a 5xx status code
func (o *PostSpacesSpaceIDSearchOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post spaces space Id search o k response a status code equal to that given
func (o *PostSpacesSpaceIDSearchOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post spaces space Id search o k response
func (o *PostSpacesSpaceIDSearchOK) Code() int {
	return 200
}

func (o *PostSpacesSpaceIDSearchOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /spaces/{space_id}/search][%d] postSpacesSpaceIdSearchOK %s", 200, payload)
}

func (o *PostSpacesSpaceIDSearchOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /spaces/{space_id}/search][%d] postSpacesSpaceIdSearchOK %s", 200, payload)
}

func (o *PostSpacesSpaceIDSearchOK) GetPayload() *models.PaginationPaginatedResponseObjectObject {
	return o.Payload
}

func (o *PostSpacesSpaceIDSearchOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PaginationPaginatedResponseObjectObject)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSpacesSpaceIDSearchUnauthorized creates a PostSpacesSpaceIDSearchUnauthorized with default headers values
func NewPostSpacesSpaceIDSearchUnauthorized() *PostSpacesSpaceIDSearchUnauthorized {
	return &PostSpacesSpaceIDSearchUnauthorized{}
}

/*
PostSpacesSpaceIDSearchUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PostSpacesSpaceIDSearchUnauthorized struct {
	Payload *models.UtilUnauthorizedError
}

// IsSuccess returns true when this post spaces space Id search unauthorized response has a 2xx status code
func (o *PostSpacesSpaceIDSearchUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post spaces space Id search unauthorized response has a 3xx status code
func (o *PostSpacesSpaceIDSearchUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post spaces space Id search unauthorized response has a 4xx status code
func (o *PostSpacesSpaceIDSearchUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post spaces space Id search unauthorized response has a 5xx status code
func (o *PostSpacesSpaceIDSearchUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post spaces space Id search unauthorized response a status code equal to that given
func (o *PostSpacesSpaceIDSearchUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the post spaces space Id search unauthorized response
func (o *PostSpacesSpaceIDSearchUnauthorized) Code() int {
	return 401
}

func (o *PostSpacesSpaceIDSearchUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /spaces/{space_id}/search][%d] postSpacesSpaceIdSearchUnauthorized %s", 401, payload)
}

func (o *PostSpacesSpaceIDSearchUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /spaces/{space_id}/search][%d] postSpacesSpaceIdSearchUnauthorized %s", 401, payload)
}

func (o *PostSpacesSpaceIDSearchUnauthorized) GetPayload() *models.UtilUnauthorizedError {
	return o.Payload
}

func (o *PostSpacesSpaceIDSearchUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UtilUnauthorizedError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSpacesSpaceIDSearchInternalServerError creates a PostSpacesSpaceIDSearchInternalServerError with default headers values
func NewPostSpacesSpaceIDSearchInternalServerError() *PostSpacesSpaceIDSearchInternalServerError {
	return &PostSpacesSpaceIDSearchInternalServerError{}
}

/*
PostSpacesSpaceIDSearchInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type PostSpacesSpaceIDSearchInternalServerError struct {
	Payload *models.UtilServerError
}

// IsSuccess returns true when this post spaces space Id search internal server error response has a 2xx status code
func (o *PostSpacesSpaceIDSearchInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post spaces space Id search internal server error response has a 3xx status code
func (o *PostSpacesSpaceIDSearchInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post spaces space Id search internal server error response has a 4xx status code
func (o *PostSpacesSpaceIDSearchInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post spaces space Id search internal server error response has a 5xx status code
func (o *PostSpacesSpaceIDSearchInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post spaces space Id search internal server error response a status code equal to that given
func (o *PostSpacesSpaceIDSearchInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post spaces space Id search internal server error response
func (o *PostSpacesSpaceIDSearchInternalServerError) Code() int {
	return 500
}

func (o *PostSpacesSpaceIDSearchInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /spaces/{space_id}/search][%d] postSpacesSpaceIdSearchInternalServerError %s", 500, payload)
}

func (o *PostSpacesSpaceIDSearchInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /spaces/{space_id}/search][%d] postSpacesSpaceIdSearchInternalServerError %s", 500, payload)
}

func (o *PostSpacesSpaceIDSearchInternalServerError) GetPayload() *models.UtilServerError {
	return o.Payload
}

func (o *PostSpacesSpaceIDSearchInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UtilServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
