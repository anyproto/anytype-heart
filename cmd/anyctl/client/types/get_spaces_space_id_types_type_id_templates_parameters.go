// Code generated by go-swagger; DO NOT EDIT.

package types

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetSpacesSpaceIDTypesTypeIDTemplatesParams creates a new GetSpacesSpaceIDTypesTypeIDTemplatesParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetSpacesSpaceIDTypesTypeIDTemplatesParams() *GetSpacesSpaceIDTypesTypeIDTemplatesParams {
	return &GetSpacesSpaceIDTypesTypeIDTemplatesParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetSpacesSpaceIDTypesTypeIDTemplatesParamsWithTimeout creates a new GetSpacesSpaceIDTypesTypeIDTemplatesParams object
// with the ability to set a timeout on a request.
func NewGetSpacesSpaceIDTypesTypeIDTemplatesParamsWithTimeout(timeout time.Duration) *GetSpacesSpaceIDTypesTypeIDTemplatesParams {
	return &GetSpacesSpaceIDTypesTypeIDTemplatesParams{
		timeout: timeout,
	}
}

// NewGetSpacesSpaceIDTypesTypeIDTemplatesParamsWithContext creates a new GetSpacesSpaceIDTypesTypeIDTemplatesParams object
// with the ability to set a context for a request.
func NewGetSpacesSpaceIDTypesTypeIDTemplatesParamsWithContext(ctx context.Context) *GetSpacesSpaceIDTypesTypeIDTemplatesParams {
	return &GetSpacesSpaceIDTypesTypeIDTemplatesParams{
		Context: ctx,
	}
}

// NewGetSpacesSpaceIDTypesTypeIDTemplatesParamsWithHTTPClient creates a new GetSpacesSpaceIDTypesTypeIDTemplatesParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetSpacesSpaceIDTypesTypeIDTemplatesParamsWithHTTPClient(client *http.Client) *GetSpacesSpaceIDTypesTypeIDTemplatesParams {
	return &GetSpacesSpaceIDTypesTypeIDTemplatesParams{
		HTTPClient: client,
	}
}

/*
GetSpacesSpaceIDTypesTypeIDTemplatesParams contains all the parameters to send to the API endpoint

	for the get spaces space ID types type ID templates operation.

	Typically these are written to a http.Request.
*/
type GetSpacesSpaceIDTypesTypeIDTemplatesParams struct {

	/* Limit.

	   The number of items to return

	   Default: 100
	*/
	Limit *int64

	/* Offset.

	   The number of items to skip before starting to collect the result set
	*/
	Offset *int64

	/* SpaceID.

	   Space ID
	*/
	SpaceID string

	/* TypeID.

	   Type ID
	*/
	TypeID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get spaces space ID types type ID templates params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetSpacesSpaceIDTypesTypeIDTemplatesParams) WithDefaults() *GetSpacesSpaceIDTypesTypeIDTemplatesParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get spaces space ID types type ID templates params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetSpacesSpaceIDTypesTypeIDTemplatesParams) SetDefaults() {
	var (
		limitDefault = int64(100)

		offsetDefault = int64(0)
	)

	val := GetSpacesSpaceIDTypesTypeIDTemplatesParams{
		Limit:  &limitDefault,
		Offset: &offsetDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the get spaces space ID types type ID templates params
func (o *GetSpacesSpaceIDTypesTypeIDTemplatesParams) WithTimeout(timeout time.Duration) *GetSpacesSpaceIDTypesTypeIDTemplatesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get spaces space ID types type ID templates params
func (o *GetSpacesSpaceIDTypesTypeIDTemplatesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get spaces space ID types type ID templates params
func (o *GetSpacesSpaceIDTypesTypeIDTemplatesParams) WithContext(ctx context.Context) *GetSpacesSpaceIDTypesTypeIDTemplatesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get spaces space ID types type ID templates params
func (o *GetSpacesSpaceIDTypesTypeIDTemplatesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get spaces space ID types type ID templates params
func (o *GetSpacesSpaceIDTypesTypeIDTemplatesParams) WithHTTPClient(client *http.Client) *GetSpacesSpaceIDTypesTypeIDTemplatesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get spaces space ID types type ID templates params
func (o *GetSpacesSpaceIDTypesTypeIDTemplatesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithLimit adds the limit to the get spaces space ID types type ID templates params
func (o *GetSpacesSpaceIDTypesTypeIDTemplatesParams) WithLimit(limit *int64) *GetSpacesSpaceIDTypesTypeIDTemplatesParams {
	o.SetLimit(limit)
	return o
}

// SetLimit adds the limit to the get spaces space ID types type ID templates params
func (o *GetSpacesSpaceIDTypesTypeIDTemplatesParams) SetLimit(limit *int64) {
	o.Limit = limit
}

// WithOffset adds the offset to the get spaces space ID types type ID templates params
func (o *GetSpacesSpaceIDTypesTypeIDTemplatesParams) WithOffset(offset *int64) *GetSpacesSpaceIDTypesTypeIDTemplatesParams {
	o.SetOffset(offset)
	return o
}

// SetOffset adds the offset to the get spaces space ID types type ID templates params
func (o *GetSpacesSpaceIDTypesTypeIDTemplatesParams) SetOffset(offset *int64) {
	o.Offset = offset
}

// WithSpaceID adds the spaceID to the get spaces space ID types type ID templates params
func (o *GetSpacesSpaceIDTypesTypeIDTemplatesParams) WithSpaceID(spaceID string) *GetSpacesSpaceIDTypesTypeIDTemplatesParams {
	o.SetSpaceID(spaceID)
	return o
}

// SetSpaceID adds the spaceId to the get spaces space ID types type ID templates params
func (o *GetSpacesSpaceIDTypesTypeIDTemplatesParams) SetSpaceID(spaceID string) {
	o.SpaceID = spaceID
}

// WithTypeID adds the typeID to the get spaces space ID types type ID templates params
func (o *GetSpacesSpaceIDTypesTypeIDTemplatesParams) WithTypeID(typeID string) *GetSpacesSpaceIDTypesTypeIDTemplatesParams {
	o.SetTypeID(typeID)
	return o
}

// SetTypeID adds the typeId to the get spaces space ID types type ID templates params
func (o *GetSpacesSpaceIDTypesTypeIDTemplatesParams) SetTypeID(typeID string) {
	o.TypeID = typeID
}

// WriteToRequest writes these params to a swagger request
func (o *GetSpacesSpaceIDTypesTypeIDTemplatesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Limit != nil {

		// query param limit
		var qrLimit int64

		if o.Limit != nil {
			qrLimit = *o.Limit
		}
		qLimit := swag.FormatInt64(qrLimit)
		if qLimit != "" {

			if err := r.SetQueryParam("limit", qLimit); err != nil {
				return err
			}
		}
	}

	if o.Offset != nil {

		// query param offset
		var qrOffset int64

		if o.Offset != nil {
			qrOffset = *o.Offset
		}
		qOffset := swag.FormatInt64(qrOffset)
		if qOffset != "" {

			if err := r.SetQueryParam("offset", qOffset); err != nil {
				return err
			}
		}
	}

	// path param space_id
	if err := r.SetPathParam("space_id", o.SpaceID); err != nil {
		return err
	}

	// path param type_id
	if err := r.SetPathParam("type_id", o.TypeID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
