// Code generated by go-swagger; DO NOT EDIT.

package types

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/anyproto/anytype-heart/cmd/anyctl/models"
)

// GetSpacesSpaceIDTypesReader is a Reader for the GetSpacesSpaceIDTypes structure.
type GetSpacesSpaceIDTypesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSpacesSpaceIDTypesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSpacesSpaceIDTypesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetSpacesSpaceIDTypesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetSpacesSpaceIDTypesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /spaces/{space_id}/types] GetSpacesSpaceIDTypes", response, response.Code())
	}
}

// NewGetSpacesSpaceIDTypesOK creates a GetSpacesSpaceIDTypesOK with default headers values
func NewGetSpacesSpaceIDTypesOK() *GetSpacesSpaceIDTypesOK {
	return &GetSpacesSpaceIDTypesOK{}
}

/*
GetSpacesSpaceIDTypesOK describes a response with status code 200, with default header values.

List of types
*/
type GetSpacesSpaceIDTypesOK struct {
	Payload *models.PaginationPaginatedResponseObjectType
}

// IsSuccess returns true when this get spaces space Id types o k response has a 2xx status code
func (o *GetSpacesSpaceIDTypesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get spaces space Id types o k response has a 3xx status code
func (o *GetSpacesSpaceIDTypesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get spaces space Id types o k response has a 4xx status code
func (o *GetSpacesSpaceIDTypesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get spaces space Id types o k response has a 5xx status code
func (o *GetSpacesSpaceIDTypesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get spaces space Id types o k response a status code equal to that given
func (o *GetSpacesSpaceIDTypesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get spaces space Id types o k response
func (o *GetSpacesSpaceIDTypesOK) Code() int {
	return 200
}

func (o *GetSpacesSpaceIDTypesOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /spaces/{space_id}/types][%d] getSpacesSpaceIdTypesOK %s", 200, payload)
}

func (o *GetSpacesSpaceIDTypesOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /spaces/{space_id}/types][%d] getSpacesSpaceIdTypesOK %s", 200, payload)
}

func (o *GetSpacesSpaceIDTypesOK) GetPayload() *models.PaginationPaginatedResponseObjectType {
	return o.Payload
}

func (o *GetSpacesSpaceIDTypesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PaginationPaginatedResponseObjectType)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSpacesSpaceIDTypesUnauthorized creates a GetSpacesSpaceIDTypesUnauthorized with default headers values
func NewGetSpacesSpaceIDTypesUnauthorized() *GetSpacesSpaceIDTypesUnauthorized {
	return &GetSpacesSpaceIDTypesUnauthorized{}
}

/*
GetSpacesSpaceIDTypesUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetSpacesSpaceIDTypesUnauthorized struct {
	Payload *models.UtilUnauthorizedError
}

// IsSuccess returns true when this get spaces space Id types unauthorized response has a 2xx status code
func (o *GetSpacesSpaceIDTypesUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get spaces space Id types unauthorized response has a 3xx status code
func (o *GetSpacesSpaceIDTypesUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get spaces space Id types unauthorized response has a 4xx status code
func (o *GetSpacesSpaceIDTypesUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get spaces space Id types unauthorized response has a 5xx status code
func (o *GetSpacesSpaceIDTypesUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get spaces space Id types unauthorized response a status code equal to that given
func (o *GetSpacesSpaceIDTypesUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get spaces space Id types unauthorized response
func (o *GetSpacesSpaceIDTypesUnauthorized) Code() int {
	return 401
}

func (o *GetSpacesSpaceIDTypesUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /spaces/{space_id}/types][%d] getSpacesSpaceIdTypesUnauthorized %s", 401, payload)
}

func (o *GetSpacesSpaceIDTypesUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /spaces/{space_id}/types][%d] getSpacesSpaceIdTypesUnauthorized %s", 401, payload)
}

func (o *GetSpacesSpaceIDTypesUnauthorized) GetPayload() *models.UtilUnauthorizedError {
	return o.Payload
}

func (o *GetSpacesSpaceIDTypesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UtilUnauthorizedError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSpacesSpaceIDTypesInternalServerError creates a GetSpacesSpaceIDTypesInternalServerError with default headers values
func NewGetSpacesSpaceIDTypesInternalServerError() *GetSpacesSpaceIDTypesInternalServerError {
	return &GetSpacesSpaceIDTypesInternalServerError{}
}

/*
GetSpacesSpaceIDTypesInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetSpacesSpaceIDTypesInternalServerError struct {
	Payload *models.UtilServerError
}

// IsSuccess returns true when this get spaces space Id types internal server error response has a 2xx status code
func (o *GetSpacesSpaceIDTypesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get spaces space Id types internal server error response has a 3xx status code
func (o *GetSpacesSpaceIDTypesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get spaces space Id types internal server error response has a 4xx status code
func (o *GetSpacesSpaceIDTypesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get spaces space Id types internal server error response has a 5xx status code
func (o *GetSpacesSpaceIDTypesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get spaces space Id types internal server error response a status code equal to that given
func (o *GetSpacesSpaceIDTypesInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get spaces space Id types internal server error response
func (o *GetSpacesSpaceIDTypesInternalServerError) Code() int {
	return 500
}

func (o *GetSpacesSpaceIDTypesInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /spaces/{space_id}/types][%d] getSpacesSpaceIdTypesInternalServerError %s", 500, payload)
}

func (o *GetSpacesSpaceIDTypesInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /spaces/{space_id}/types][%d] getSpacesSpaceIdTypesInternalServerError %s", 500, payload)
}

func (o *GetSpacesSpaceIDTypesInternalServerError) GetPayload() *models.UtilServerError {
	return o.Payload
}

func (o *GetSpacesSpaceIDTypesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UtilServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
