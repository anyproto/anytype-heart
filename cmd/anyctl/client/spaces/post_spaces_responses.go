// Code generated by go-swagger; DO NOT EDIT.

package spaces

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/anyproto/anytype-heart/cmd/anyctl/models"
)

// PostSpacesReader is a Reader for the PostSpaces structure.
type PostSpacesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostSpacesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostSpacesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostSpacesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostSpacesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostSpacesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /spaces] PostSpaces", response, response.Code())
	}
}

// NewPostSpacesOK creates a PostSpacesOK with default headers values
func NewPostSpacesOK() *PostSpacesOK {
	return &PostSpacesOK{}
}

/*
PostSpacesOK describes a response with status code 200, with default header values.

Space created successfully
*/
type PostSpacesOK struct {
	Payload *models.SpaceCreateSpaceResponse
}

// IsSuccess returns true when this post spaces o k response has a 2xx status code
func (o *PostSpacesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post spaces o k response has a 3xx status code
func (o *PostSpacesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post spaces o k response has a 4xx status code
func (o *PostSpacesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post spaces o k response has a 5xx status code
func (o *PostSpacesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post spaces o k response a status code equal to that given
func (o *PostSpacesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post spaces o k response
func (o *PostSpacesOK) Code() int {
	return 200
}

func (o *PostSpacesOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /spaces][%d] postSpacesOK %s", 200, payload)
}

func (o *PostSpacesOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /spaces][%d] postSpacesOK %s", 200, payload)
}

func (o *PostSpacesOK) GetPayload() *models.SpaceCreateSpaceResponse {
	return o.Payload
}

func (o *PostSpacesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SpaceCreateSpaceResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSpacesBadRequest creates a PostSpacesBadRequest with default headers values
func NewPostSpacesBadRequest() *PostSpacesBadRequest {
	return &PostSpacesBadRequest{}
}

/*
PostSpacesBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type PostSpacesBadRequest struct {
	Payload *models.UtilValidationError
}

// IsSuccess returns true when this post spaces bad request response has a 2xx status code
func (o *PostSpacesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post spaces bad request response has a 3xx status code
func (o *PostSpacesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post spaces bad request response has a 4xx status code
func (o *PostSpacesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post spaces bad request response has a 5xx status code
func (o *PostSpacesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post spaces bad request response a status code equal to that given
func (o *PostSpacesBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post spaces bad request response
func (o *PostSpacesBadRequest) Code() int {
	return 400
}

func (o *PostSpacesBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /spaces][%d] postSpacesBadRequest %s", 400, payload)
}

func (o *PostSpacesBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /spaces][%d] postSpacesBadRequest %s", 400, payload)
}

func (o *PostSpacesBadRequest) GetPayload() *models.UtilValidationError {
	return o.Payload
}

func (o *PostSpacesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UtilValidationError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSpacesUnauthorized creates a PostSpacesUnauthorized with default headers values
func NewPostSpacesUnauthorized() *PostSpacesUnauthorized {
	return &PostSpacesUnauthorized{}
}

/*
PostSpacesUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PostSpacesUnauthorized struct {
	Payload *models.UtilUnauthorizedError
}

// IsSuccess returns true when this post spaces unauthorized response has a 2xx status code
func (o *PostSpacesUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post spaces unauthorized response has a 3xx status code
func (o *PostSpacesUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post spaces unauthorized response has a 4xx status code
func (o *PostSpacesUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post spaces unauthorized response has a 5xx status code
func (o *PostSpacesUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post spaces unauthorized response a status code equal to that given
func (o *PostSpacesUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the post spaces unauthorized response
func (o *PostSpacesUnauthorized) Code() int {
	return 401
}

func (o *PostSpacesUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /spaces][%d] postSpacesUnauthorized %s", 401, payload)
}

func (o *PostSpacesUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /spaces][%d] postSpacesUnauthorized %s", 401, payload)
}

func (o *PostSpacesUnauthorized) GetPayload() *models.UtilUnauthorizedError {
	return o.Payload
}

func (o *PostSpacesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UtilUnauthorizedError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSpacesInternalServerError creates a PostSpacesInternalServerError with default headers values
func NewPostSpacesInternalServerError() *PostSpacesInternalServerError {
	return &PostSpacesInternalServerError{}
}

/*
PostSpacesInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type PostSpacesInternalServerError struct {
	Payload *models.UtilServerError
}

// IsSuccess returns true when this post spaces internal server error response has a 2xx status code
func (o *PostSpacesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post spaces internal server error response has a 3xx status code
func (o *PostSpacesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post spaces internal server error response has a 4xx status code
func (o *PostSpacesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post spaces internal server error response has a 5xx status code
func (o *PostSpacesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post spaces internal server error response a status code equal to that given
func (o *PostSpacesInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post spaces internal server error response
func (o *PostSpacesInternalServerError) Code() int {
	return 500
}

func (o *PostSpacesInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /spaces][%d] postSpacesInternalServerError %s", 500, payload)
}

func (o *PostSpacesInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /spaces][%d] postSpacesInternalServerError %s", 500, payload)
}

func (o *PostSpacesInternalServerError) GetPayload() *models.UtilServerError {
	return o.Payload
}

func (o *PostSpacesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UtilServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
