// Code generated by go-swagger; DO NOT EDIT.

package objects

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/anyproto/anytype-heart/cmd/anyctl/models"
)

// GetSpacesSpaceIDObjectsObjectIDReader is a Reader for the GetSpacesSpaceIDObjectsObjectID structure.
type GetSpacesSpaceIDObjectsObjectIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSpacesSpaceIDObjectsObjectIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSpacesSpaceIDObjectsObjectIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetSpacesSpaceIDObjectsObjectIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetSpacesSpaceIDObjectsObjectIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetSpacesSpaceIDObjectsObjectIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /spaces/{space_id}/objects/{object_id}] GetSpacesSpaceIDObjectsObjectID", response, response.Code())
	}
}

// NewGetSpacesSpaceIDObjectsObjectIDOK creates a GetSpacesSpaceIDObjectsObjectIDOK with default headers values
func NewGetSpacesSpaceIDObjectsObjectIDOK() *GetSpacesSpaceIDObjectsObjectIDOK {
	return &GetSpacesSpaceIDObjectsObjectIDOK{}
}

/*
GetSpacesSpaceIDObjectsObjectIDOK describes a response with status code 200, with default header values.

The requested object
*/
type GetSpacesSpaceIDObjectsObjectIDOK struct {
	Payload *models.ObjectObjectResponse
}

// IsSuccess returns true when this get spaces space Id objects object Id o k response has a 2xx status code
func (o *GetSpacesSpaceIDObjectsObjectIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get spaces space Id objects object Id o k response has a 3xx status code
func (o *GetSpacesSpaceIDObjectsObjectIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get spaces space Id objects object Id o k response has a 4xx status code
func (o *GetSpacesSpaceIDObjectsObjectIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get spaces space Id objects object Id o k response has a 5xx status code
func (o *GetSpacesSpaceIDObjectsObjectIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get spaces space Id objects object Id o k response a status code equal to that given
func (o *GetSpacesSpaceIDObjectsObjectIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get spaces space Id objects object Id o k response
func (o *GetSpacesSpaceIDObjectsObjectIDOK) Code() int {
	return 200
}

func (o *GetSpacesSpaceIDObjectsObjectIDOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /spaces/{space_id}/objects/{object_id}][%d] getSpacesSpaceIdObjectsObjectIdOK %s", 200, payload)
}

func (o *GetSpacesSpaceIDObjectsObjectIDOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /spaces/{space_id}/objects/{object_id}][%d] getSpacesSpaceIdObjectsObjectIdOK %s", 200, payload)
}

func (o *GetSpacesSpaceIDObjectsObjectIDOK) GetPayload() *models.ObjectObjectResponse {
	return o.Payload
}

func (o *GetSpacesSpaceIDObjectsObjectIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ObjectObjectResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSpacesSpaceIDObjectsObjectIDUnauthorized creates a GetSpacesSpaceIDObjectsObjectIDUnauthorized with default headers values
func NewGetSpacesSpaceIDObjectsObjectIDUnauthorized() *GetSpacesSpaceIDObjectsObjectIDUnauthorized {
	return &GetSpacesSpaceIDObjectsObjectIDUnauthorized{}
}

/*
GetSpacesSpaceIDObjectsObjectIDUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetSpacesSpaceIDObjectsObjectIDUnauthorized struct {
	Payload *models.UtilUnauthorizedError
}

// IsSuccess returns true when this get spaces space Id objects object Id unauthorized response has a 2xx status code
func (o *GetSpacesSpaceIDObjectsObjectIDUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get spaces space Id objects object Id unauthorized response has a 3xx status code
func (o *GetSpacesSpaceIDObjectsObjectIDUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get spaces space Id objects object Id unauthorized response has a 4xx status code
func (o *GetSpacesSpaceIDObjectsObjectIDUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get spaces space Id objects object Id unauthorized response has a 5xx status code
func (o *GetSpacesSpaceIDObjectsObjectIDUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get spaces space Id objects object Id unauthorized response a status code equal to that given
func (o *GetSpacesSpaceIDObjectsObjectIDUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get spaces space Id objects object Id unauthorized response
func (o *GetSpacesSpaceIDObjectsObjectIDUnauthorized) Code() int {
	return 401
}

func (o *GetSpacesSpaceIDObjectsObjectIDUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /spaces/{space_id}/objects/{object_id}][%d] getSpacesSpaceIdObjectsObjectIdUnauthorized %s", 401, payload)
}

func (o *GetSpacesSpaceIDObjectsObjectIDUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /spaces/{space_id}/objects/{object_id}][%d] getSpacesSpaceIdObjectsObjectIdUnauthorized %s", 401, payload)
}

func (o *GetSpacesSpaceIDObjectsObjectIDUnauthorized) GetPayload() *models.UtilUnauthorizedError {
	return o.Payload
}

func (o *GetSpacesSpaceIDObjectsObjectIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UtilUnauthorizedError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSpacesSpaceIDObjectsObjectIDNotFound creates a GetSpacesSpaceIDObjectsObjectIDNotFound with default headers values
func NewGetSpacesSpaceIDObjectsObjectIDNotFound() *GetSpacesSpaceIDObjectsObjectIDNotFound {
	return &GetSpacesSpaceIDObjectsObjectIDNotFound{}
}

/*
GetSpacesSpaceIDObjectsObjectIDNotFound describes a response with status code 404, with default header values.

Resource not found
*/
type GetSpacesSpaceIDObjectsObjectIDNotFound struct {
	Payload *models.UtilNotFoundError
}

// IsSuccess returns true when this get spaces space Id objects object Id not found response has a 2xx status code
func (o *GetSpacesSpaceIDObjectsObjectIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get spaces space Id objects object Id not found response has a 3xx status code
func (o *GetSpacesSpaceIDObjectsObjectIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get spaces space Id objects object Id not found response has a 4xx status code
func (o *GetSpacesSpaceIDObjectsObjectIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get spaces space Id objects object Id not found response has a 5xx status code
func (o *GetSpacesSpaceIDObjectsObjectIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get spaces space Id objects object Id not found response a status code equal to that given
func (o *GetSpacesSpaceIDObjectsObjectIDNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get spaces space Id objects object Id not found response
func (o *GetSpacesSpaceIDObjectsObjectIDNotFound) Code() int {
	return 404
}

func (o *GetSpacesSpaceIDObjectsObjectIDNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /spaces/{space_id}/objects/{object_id}][%d] getSpacesSpaceIdObjectsObjectIdNotFound %s", 404, payload)
}

func (o *GetSpacesSpaceIDObjectsObjectIDNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /spaces/{space_id}/objects/{object_id}][%d] getSpacesSpaceIdObjectsObjectIdNotFound %s", 404, payload)
}

func (o *GetSpacesSpaceIDObjectsObjectIDNotFound) GetPayload() *models.UtilNotFoundError {
	return o.Payload
}

func (o *GetSpacesSpaceIDObjectsObjectIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UtilNotFoundError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSpacesSpaceIDObjectsObjectIDInternalServerError creates a GetSpacesSpaceIDObjectsObjectIDInternalServerError with default headers values
func NewGetSpacesSpaceIDObjectsObjectIDInternalServerError() *GetSpacesSpaceIDObjectsObjectIDInternalServerError {
	return &GetSpacesSpaceIDObjectsObjectIDInternalServerError{}
}

/*
GetSpacesSpaceIDObjectsObjectIDInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetSpacesSpaceIDObjectsObjectIDInternalServerError struct {
	Payload *models.UtilServerError
}

// IsSuccess returns true when this get spaces space Id objects object Id internal server error response has a 2xx status code
func (o *GetSpacesSpaceIDObjectsObjectIDInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get spaces space Id objects object Id internal server error response has a 3xx status code
func (o *GetSpacesSpaceIDObjectsObjectIDInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get spaces space Id objects object Id internal server error response has a 4xx status code
func (o *GetSpacesSpaceIDObjectsObjectIDInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get spaces space Id objects object Id internal server error response has a 5xx status code
func (o *GetSpacesSpaceIDObjectsObjectIDInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get spaces space Id objects object Id internal server error response a status code equal to that given
func (o *GetSpacesSpaceIDObjectsObjectIDInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get spaces space Id objects object Id internal server error response
func (o *GetSpacesSpaceIDObjectsObjectIDInternalServerError) Code() int {
	return 500
}

func (o *GetSpacesSpaceIDObjectsObjectIDInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /spaces/{space_id}/objects/{object_id}][%d] getSpacesSpaceIdObjectsObjectIdInternalServerError %s", 500, payload)
}

func (o *GetSpacesSpaceIDObjectsObjectIDInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /spaces/{space_id}/objects/{object_id}][%d] getSpacesSpaceIdObjectsObjectIdInternalServerError %s", 500, payload)
}

func (o *GetSpacesSpaceIDObjectsObjectIDInternalServerError) GetPayload() *models.UtilServerError {
	return o.Payload
}

func (o *GetSpacesSpaceIDObjectsObjectIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UtilServerError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
