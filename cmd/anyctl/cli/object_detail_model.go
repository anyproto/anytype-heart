// Code generated by go-swagger; DO NOT EDIT.

package cli

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"

	"github.com/anyproto/anytype-heart/cmd/anyctl/models"
	"github.com/spf13/cobra"
)

// Schema cli for ObjectDetail

// register flags to command
func registerModelObjectDetailFlags(depth int, cmdPrefix string, cmd *cobra.Command) error {

	if err := registerObjectDetailPropDetails(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerObjectDetailPropID(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	return nil
}

func registerObjectDetailPropDetails(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	// warning: details interface{} map type is not supported by go-swagger cli yet

	return nil
}

func registerObjectDetailPropID(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	flagIDDescription := `Enum: ["last_modified_date","last_modified_by","created_date","created_by","last_opened_date","tags"]. `

	var flagIDName string
	if cmdPrefix == "" {
		flagIDName = "id"
	} else {
		flagIDName = fmt.Sprintf("%v.id", cmdPrefix)
	}

	var flagIDDefault string

	_ = cmd.PersistentFlags().String(flagIDName, flagIDDefault, flagIDDescription)

	if err := cmd.RegisterFlagCompletionFunc(flagIDName,
		func(cmd *cobra.Command, args []string, toComplete string) ([]string, cobra.ShellCompDirective) {
			var res []string
			if err := json.Unmarshal([]byte(`["last_modified_date","last_modified_by","created_date","created_by","last_opened_date","tags"]`), &res); err != nil {
				panic(err)
			}
			return res, cobra.ShellCompDirectiveDefault
		}); err != nil {
		return err
	}

	return nil
}

// retrieve flags from commands, and set value in model. Return true if any flag is passed by user to fill model field.
func retrieveModelObjectDetailFlags(depth int, m *models.ObjectDetail, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	retAdded := false

	err, DetailsAdded := retrieveObjectDetailPropDetailsFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || DetailsAdded

	err, IDAdded := retrieveObjectDetailPropIDFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || IDAdded

	return nil, retAdded
}

func retrieveObjectDetailPropDetailsFlags(depth int, m *models.ObjectDetail, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	flagDetailsName := fmt.Sprintf("%v.details", cmdPrefix)
	if cmd.Flags().Changed(flagDetailsName) {
		// warning: details map type interface{} is not supported by go-swagger cli yet
	}

	return nil, retAdded
}

func retrieveObjectDetailPropIDFlags(depth int, m *models.ObjectDetail, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	flagIDName := fmt.Sprintf("%v.id", cmdPrefix)
	if cmd.Flags().Changed(flagIDName) {

		var flagIDName string
		if cmdPrefix == "" {
			flagIDName = "id"
		} else {
			flagIDName = fmt.Sprintf("%v.id", cmdPrefix)
		}

		flagIDValue, err := cmd.Flags().GetString(flagIDName)
		if err != nil {
			return err, false
		}
		m.ID = flagIDValue

		retAdded = true
	}

	return nil, retAdded
}
