// Code generated by go-swagger; DO NOT EDIT.

package cli

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/anyproto/anytype-heart/cmd/anyctl/models"
	"github.com/go-openapi/swag"
	"github.com/spf13/cobra"
)

// Schema cli for PaginationPaginatedResponseSpaceMember

// register flags to command
func registerModelPaginationPaginatedResponseSpaceMemberFlags(depth int, cmdPrefix string, cmd *cobra.Command) error {

	if err := registerPaginationPaginatedResponseSpaceMemberPropData(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerPaginationPaginatedResponseSpaceMemberPropPagination(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	return nil
}

func registerPaginationPaginatedResponseSpaceMemberPropData(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	// warning: data []*SpaceMember array type is not supported by go-swagger cli yet

	return nil
}

func registerPaginationPaginatedResponseSpaceMemberPropPagination(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	var flagPaginationName string
	if cmdPrefix == "" {
		flagPaginationName = "pagination"
	} else {
		flagPaginationName = fmt.Sprintf("%v.pagination", cmdPrefix)
	}

	if err := registerModelPaginationPaginationMetaFlags(depth+1, flagPaginationName, cmd); err != nil {
		return err
	}

	return nil
}

// retrieve flags from commands, and set value in model. Return true if any flag is passed by user to fill model field.
func retrieveModelPaginationPaginatedResponseSpaceMemberFlags(depth int, m *models.PaginationPaginatedResponseSpaceMember, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	retAdded := false

	err, DataAdded := retrievePaginationPaginatedResponseSpaceMemberPropDataFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || DataAdded

	err, PaginationAdded := retrievePaginationPaginatedResponseSpaceMemberPropPaginationFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || PaginationAdded

	return nil, retAdded
}

func retrievePaginationPaginatedResponseSpaceMemberPropDataFlags(depth int, m *models.PaginationPaginatedResponseSpaceMember, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	flagDataName := fmt.Sprintf("%v.data", cmdPrefix)
	if cmd.Flags().Changed(flagDataName) {
		// warning: data array type []*SpaceMember is not supported by go-swagger cli yet
	}

	return nil, retAdded
}

func retrievePaginationPaginatedResponseSpaceMemberPropPaginationFlags(depth int, m *models.PaginationPaginatedResponseSpaceMember, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	flagPaginationName := fmt.Sprintf("%v.pagination", cmdPrefix)
	if cmd.Flags().Changed(flagPaginationName) {
		// info: complex object pagination PaginationPaginationMeta is retrieved outside this Changed() block
	}
	flagPaginationValue := m.Pagination
	if swag.IsZero(flagPaginationValue) {
		flagPaginationValue = &models.PaginationPaginationMeta{}
	}

	err, PaginationAdded := retrieveModelPaginationPaginationMetaFlags(depth+1, flagPaginationValue, flagPaginationName, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || PaginationAdded
	if PaginationAdded {
		m.Pagination = flagPaginationValue
	}

	return nil, retAdded
}
