// Code generated by go-swagger; DO NOT EDIT.

package cli

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/anyproto/anytype-heart/cmd/anyctl/models"
	"github.com/spf13/cobra"
)

// Schema cli for SpaceSpace

// register flags to command
func registerModelSpaceSpaceFlags(depth int, cmdPrefix string, cmd *cobra.Command) error {

	if err := registerSpaceSpacePropAccountSpaceID(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerSpaceSpacePropAnalyticsID(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerSpaceSpacePropArchiveObjectID(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerSpaceSpacePropDeviceID(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerSpaceSpacePropGatewayURL(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerSpaceSpacePropHomeObjectID(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerSpaceSpacePropIcon(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerSpaceSpacePropID(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerSpaceSpacePropLocalStoragePath(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerSpaceSpacePropMarketplaceWorkspaceID(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerSpaceSpacePropName(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerSpaceSpacePropNetworkID(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerSpaceSpacePropProfileObjectID(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerSpaceSpacePropSpaceViewID(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerSpaceSpacePropTechSpaceID(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerSpaceSpacePropTimezone(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerSpaceSpacePropType(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerSpaceSpacePropWidgetsID(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerSpaceSpacePropWorkspaceObjectID(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	return nil
}

func registerSpaceSpacePropAccountSpaceID(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	flagAccountSpaceIDDescription := ``

	var flagAccountSpaceIDName string
	if cmdPrefix == "" {
		flagAccountSpaceIDName = "account_space_id"
	} else {
		flagAccountSpaceIDName = fmt.Sprintf("%v.account_space_id", cmdPrefix)
	}

	var flagAccountSpaceIDDefault string

	_ = cmd.PersistentFlags().String(flagAccountSpaceIDName, flagAccountSpaceIDDefault, flagAccountSpaceIDDescription)

	return nil
}

func registerSpaceSpacePropAnalyticsID(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	flagAnalyticsIDDescription := ``

	var flagAnalyticsIDName string
	if cmdPrefix == "" {
		flagAnalyticsIDName = "analytics_id"
	} else {
		flagAnalyticsIDName = fmt.Sprintf("%v.analytics_id", cmdPrefix)
	}

	var flagAnalyticsIDDefault string

	_ = cmd.PersistentFlags().String(flagAnalyticsIDName, flagAnalyticsIDDefault, flagAnalyticsIDDescription)

	return nil
}

func registerSpaceSpacePropArchiveObjectID(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	flagArchiveObjectIDDescription := ``

	var flagArchiveObjectIDName string
	if cmdPrefix == "" {
		flagArchiveObjectIDName = "archive_object_id"
	} else {
		flagArchiveObjectIDName = fmt.Sprintf("%v.archive_object_id", cmdPrefix)
	}

	var flagArchiveObjectIDDefault string

	_ = cmd.PersistentFlags().String(flagArchiveObjectIDName, flagArchiveObjectIDDefault, flagArchiveObjectIDDescription)

	return nil
}

func registerSpaceSpacePropDeviceID(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	flagDeviceIDDescription := ``

	var flagDeviceIDName string
	if cmdPrefix == "" {
		flagDeviceIDName = "device_id"
	} else {
		flagDeviceIDName = fmt.Sprintf("%v.device_id", cmdPrefix)
	}

	var flagDeviceIDDefault string

	_ = cmd.PersistentFlags().String(flagDeviceIDName, flagDeviceIDDefault, flagDeviceIDDescription)

	return nil
}

func registerSpaceSpacePropGatewayURL(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	flagGatewayURLDescription := ``

	var flagGatewayURLName string
	if cmdPrefix == "" {
		flagGatewayURLName = "gateway_url"
	} else {
		flagGatewayURLName = fmt.Sprintf("%v.gateway_url", cmdPrefix)
	}

	var flagGatewayURLDefault string

	_ = cmd.PersistentFlags().String(flagGatewayURLName, flagGatewayURLDefault, flagGatewayURLDescription)

	return nil
}

func registerSpaceSpacePropHomeObjectID(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	flagHomeObjectIDDescription := ``

	var flagHomeObjectIDName string
	if cmdPrefix == "" {
		flagHomeObjectIDName = "home_object_id"
	} else {
		flagHomeObjectIDName = fmt.Sprintf("%v.home_object_id", cmdPrefix)
	}

	var flagHomeObjectIDDefault string

	_ = cmd.PersistentFlags().String(flagHomeObjectIDName, flagHomeObjectIDDefault, flagHomeObjectIDDescription)

	return nil
}

func registerSpaceSpacePropIcon(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	flagIconDescription := ``

	var flagIconName string
	if cmdPrefix == "" {
		flagIconName = "icon"
	} else {
		flagIconName = fmt.Sprintf("%v.icon", cmdPrefix)
	}

	var flagIconDefault string

	_ = cmd.PersistentFlags().String(flagIconName, flagIconDefault, flagIconDescription)

	return nil
}

func registerSpaceSpacePropID(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	flagIDDescription := ``

	var flagIDName string
	if cmdPrefix == "" {
		flagIDName = "id"
	} else {
		flagIDName = fmt.Sprintf("%v.id", cmdPrefix)
	}

	var flagIDDefault string

	_ = cmd.PersistentFlags().String(flagIDName, flagIDDefault, flagIDDescription)

	return nil
}

func registerSpaceSpacePropLocalStoragePath(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	flagLocalStoragePathDescription := ``

	var flagLocalStoragePathName string
	if cmdPrefix == "" {
		flagLocalStoragePathName = "local_storage_path"
	} else {
		flagLocalStoragePathName = fmt.Sprintf("%v.local_storage_path", cmdPrefix)
	}

	var flagLocalStoragePathDefault string

	_ = cmd.PersistentFlags().String(flagLocalStoragePathName, flagLocalStoragePathDefault, flagLocalStoragePathDescription)

	return nil
}

func registerSpaceSpacePropMarketplaceWorkspaceID(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	flagMarketplaceWorkspaceIDDescription := ``

	var flagMarketplaceWorkspaceIDName string
	if cmdPrefix == "" {
		flagMarketplaceWorkspaceIDName = "marketplace_workspace_id"
	} else {
		flagMarketplaceWorkspaceIDName = fmt.Sprintf("%v.marketplace_workspace_id", cmdPrefix)
	}

	var flagMarketplaceWorkspaceIDDefault string

	_ = cmd.PersistentFlags().String(flagMarketplaceWorkspaceIDName, flagMarketplaceWorkspaceIDDefault, flagMarketplaceWorkspaceIDDescription)

	return nil
}

func registerSpaceSpacePropName(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	flagNameDescription := ``

	var flagNameName string
	if cmdPrefix == "" {
		flagNameName = "name"
	} else {
		flagNameName = fmt.Sprintf("%v.name", cmdPrefix)
	}

	var flagNameDefault string

	_ = cmd.PersistentFlags().String(flagNameName, flagNameDefault, flagNameDescription)

	return nil
}

func registerSpaceSpacePropNetworkID(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	flagNetworkIDDescription := ``

	var flagNetworkIDName string
	if cmdPrefix == "" {
		flagNetworkIDName = "network_id"
	} else {
		flagNetworkIDName = fmt.Sprintf("%v.network_id", cmdPrefix)
	}

	var flagNetworkIDDefault string

	_ = cmd.PersistentFlags().String(flagNetworkIDName, flagNetworkIDDefault, flagNetworkIDDescription)

	return nil
}

func registerSpaceSpacePropProfileObjectID(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	flagProfileObjectIDDescription := ``

	var flagProfileObjectIDName string
	if cmdPrefix == "" {
		flagProfileObjectIDName = "profile_object_id"
	} else {
		flagProfileObjectIDName = fmt.Sprintf("%v.profile_object_id", cmdPrefix)
	}

	var flagProfileObjectIDDefault string

	_ = cmd.PersistentFlags().String(flagProfileObjectIDName, flagProfileObjectIDDefault, flagProfileObjectIDDescription)

	return nil
}

func registerSpaceSpacePropSpaceViewID(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	flagSpaceViewIDDescription := ``

	var flagSpaceViewIDName string
	if cmdPrefix == "" {
		flagSpaceViewIDName = "space_view_id"
	} else {
		flagSpaceViewIDName = fmt.Sprintf("%v.space_view_id", cmdPrefix)
	}

	var flagSpaceViewIDDefault string

	_ = cmd.PersistentFlags().String(flagSpaceViewIDName, flagSpaceViewIDDefault, flagSpaceViewIDDescription)

	return nil
}

func registerSpaceSpacePropTechSpaceID(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	flagTechSpaceIDDescription := ``

	var flagTechSpaceIDName string
	if cmdPrefix == "" {
		flagTechSpaceIDName = "tech_space_id"
	} else {
		flagTechSpaceIDName = fmt.Sprintf("%v.tech_space_id", cmdPrefix)
	}

	var flagTechSpaceIDDefault string

	_ = cmd.PersistentFlags().String(flagTechSpaceIDName, flagTechSpaceIDDefault, flagTechSpaceIDDescription)

	return nil
}

func registerSpaceSpacePropTimezone(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	flagTimezoneDescription := ``

	var flagTimezoneName string
	if cmdPrefix == "" {
		flagTimezoneName = "timezone"
	} else {
		flagTimezoneName = fmt.Sprintf("%v.timezone", cmdPrefix)
	}

	var flagTimezoneDefault string

	_ = cmd.PersistentFlags().String(flagTimezoneName, flagTimezoneDefault, flagTimezoneDescription)

	return nil
}

func registerSpaceSpacePropType(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	flagTypeDescription := ``

	var flagTypeName string
	if cmdPrefix == "" {
		flagTypeName = "type"
	} else {
		flagTypeName = fmt.Sprintf("%v.type", cmdPrefix)
	}

	var flagTypeDefault string

	_ = cmd.PersistentFlags().String(flagTypeName, flagTypeDefault, flagTypeDescription)

	return nil
}

func registerSpaceSpacePropWidgetsID(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	flagWidgetsIDDescription := ``

	var flagWidgetsIDName string
	if cmdPrefix == "" {
		flagWidgetsIDName = "widgets_id"
	} else {
		flagWidgetsIDName = fmt.Sprintf("%v.widgets_id", cmdPrefix)
	}

	var flagWidgetsIDDefault string

	_ = cmd.PersistentFlags().String(flagWidgetsIDName, flagWidgetsIDDefault, flagWidgetsIDDescription)

	return nil
}

func registerSpaceSpacePropWorkspaceObjectID(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	flagWorkspaceObjectIDDescription := ``

	var flagWorkspaceObjectIDName string
	if cmdPrefix == "" {
		flagWorkspaceObjectIDName = "workspace_object_id"
	} else {
		flagWorkspaceObjectIDName = fmt.Sprintf("%v.workspace_object_id", cmdPrefix)
	}

	var flagWorkspaceObjectIDDefault string

	_ = cmd.PersistentFlags().String(flagWorkspaceObjectIDName, flagWorkspaceObjectIDDefault, flagWorkspaceObjectIDDescription)

	return nil
}

// retrieve flags from commands, and set value in model. Return true if any flag is passed by user to fill model field.
func retrieveModelSpaceSpaceFlags(depth int, m *models.SpaceSpace, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	retAdded := false

	err, AccountSpaceIDAdded := retrieveSpaceSpacePropAccountSpaceIDFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || AccountSpaceIDAdded

	err, AnalyticsIDAdded := retrieveSpaceSpacePropAnalyticsIDFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || AnalyticsIDAdded

	err, ArchiveObjectIDAdded := retrieveSpaceSpacePropArchiveObjectIDFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || ArchiveObjectIDAdded

	err, DeviceIDAdded := retrieveSpaceSpacePropDeviceIDFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || DeviceIDAdded

	err, GatewayURLAdded := retrieveSpaceSpacePropGatewayURLFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || GatewayURLAdded

	err, HomeObjectIDAdded := retrieveSpaceSpacePropHomeObjectIDFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || HomeObjectIDAdded

	err, IconAdded := retrieveSpaceSpacePropIconFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || IconAdded

	err, IDAdded := retrieveSpaceSpacePropIDFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || IDAdded

	err, LocalStoragePathAdded := retrieveSpaceSpacePropLocalStoragePathFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || LocalStoragePathAdded

	err, MarketplaceWorkspaceIDAdded := retrieveSpaceSpacePropMarketplaceWorkspaceIDFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || MarketplaceWorkspaceIDAdded

	err, NameAdded := retrieveSpaceSpacePropNameFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || NameAdded

	err, NetworkIDAdded := retrieveSpaceSpacePropNetworkIDFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || NetworkIDAdded

	err, ProfileObjectIDAdded := retrieveSpaceSpacePropProfileObjectIDFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || ProfileObjectIDAdded

	err, SpaceViewIDAdded := retrieveSpaceSpacePropSpaceViewIDFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || SpaceViewIDAdded

	err, TechSpaceIDAdded := retrieveSpaceSpacePropTechSpaceIDFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || TechSpaceIDAdded

	err, TimezoneAdded := retrieveSpaceSpacePropTimezoneFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || TimezoneAdded

	err, TypeAdded := retrieveSpaceSpacePropTypeFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || TypeAdded

	err, WidgetsIDAdded := retrieveSpaceSpacePropWidgetsIDFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || WidgetsIDAdded

	err, WorkspaceObjectIDAdded := retrieveSpaceSpacePropWorkspaceObjectIDFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || WorkspaceObjectIDAdded

	return nil, retAdded
}

func retrieveSpaceSpacePropAccountSpaceIDFlags(depth int, m *models.SpaceSpace, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	flagAccountSpaceIDName := fmt.Sprintf("%v.account_space_id", cmdPrefix)
	if cmd.Flags().Changed(flagAccountSpaceIDName) {

		var flagAccountSpaceIDName string
		if cmdPrefix == "" {
			flagAccountSpaceIDName = "account_space_id"
		} else {
			flagAccountSpaceIDName = fmt.Sprintf("%v.account_space_id", cmdPrefix)
		}

		flagAccountSpaceIDValue, err := cmd.Flags().GetString(flagAccountSpaceIDName)
		if err != nil {
			return err, false
		}
		m.AccountSpaceID = flagAccountSpaceIDValue

		retAdded = true
	}

	return nil, retAdded
}

func retrieveSpaceSpacePropAnalyticsIDFlags(depth int, m *models.SpaceSpace, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	flagAnalyticsIDName := fmt.Sprintf("%v.analytics_id", cmdPrefix)
	if cmd.Flags().Changed(flagAnalyticsIDName) {

		var flagAnalyticsIDName string
		if cmdPrefix == "" {
			flagAnalyticsIDName = "analytics_id"
		} else {
			flagAnalyticsIDName = fmt.Sprintf("%v.analytics_id", cmdPrefix)
		}

		flagAnalyticsIDValue, err := cmd.Flags().GetString(flagAnalyticsIDName)
		if err != nil {
			return err, false
		}
		m.AnalyticsID = flagAnalyticsIDValue

		retAdded = true
	}

	return nil, retAdded
}

func retrieveSpaceSpacePropArchiveObjectIDFlags(depth int, m *models.SpaceSpace, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	flagArchiveObjectIDName := fmt.Sprintf("%v.archive_object_id", cmdPrefix)
	if cmd.Flags().Changed(flagArchiveObjectIDName) {

		var flagArchiveObjectIDName string
		if cmdPrefix == "" {
			flagArchiveObjectIDName = "archive_object_id"
		} else {
			flagArchiveObjectIDName = fmt.Sprintf("%v.archive_object_id", cmdPrefix)
		}

		flagArchiveObjectIDValue, err := cmd.Flags().GetString(flagArchiveObjectIDName)
		if err != nil {
			return err, false
		}
		m.ArchiveObjectID = flagArchiveObjectIDValue

		retAdded = true
	}

	return nil, retAdded
}

func retrieveSpaceSpacePropDeviceIDFlags(depth int, m *models.SpaceSpace, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	flagDeviceIDName := fmt.Sprintf("%v.device_id", cmdPrefix)
	if cmd.Flags().Changed(flagDeviceIDName) {

		var flagDeviceIDName string
		if cmdPrefix == "" {
			flagDeviceIDName = "device_id"
		} else {
			flagDeviceIDName = fmt.Sprintf("%v.device_id", cmdPrefix)
		}

		flagDeviceIDValue, err := cmd.Flags().GetString(flagDeviceIDName)
		if err != nil {
			return err, false
		}
		m.DeviceID = flagDeviceIDValue

		retAdded = true
	}

	return nil, retAdded
}

func retrieveSpaceSpacePropGatewayURLFlags(depth int, m *models.SpaceSpace, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	flagGatewayURLName := fmt.Sprintf("%v.gateway_url", cmdPrefix)
	if cmd.Flags().Changed(flagGatewayURLName) {

		var flagGatewayURLName string
		if cmdPrefix == "" {
			flagGatewayURLName = "gateway_url"
		} else {
			flagGatewayURLName = fmt.Sprintf("%v.gateway_url", cmdPrefix)
		}

		flagGatewayURLValue, err := cmd.Flags().GetString(flagGatewayURLName)
		if err != nil {
			return err, false
		}
		m.GatewayURL = flagGatewayURLValue

		retAdded = true
	}

	return nil, retAdded
}

func retrieveSpaceSpacePropHomeObjectIDFlags(depth int, m *models.SpaceSpace, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	flagHomeObjectIDName := fmt.Sprintf("%v.home_object_id", cmdPrefix)
	if cmd.Flags().Changed(flagHomeObjectIDName) {

		var flagHomeObjectIDName string
		if cmdPrefix == "" {
			flagHomeObjectIDName = "home_object_id"
		} else {
			flagHomeObjectIDName = fmt.Sprintf("%v.home_object_id", cmdPrefix)
		}

		flagHomeObjectIDValue, err := cmd.Flags().GetString(flagHomeObjectIDName)
		if err != nil {
			return err, false
		}
		m.HomeObjectID = flagHomeObjectIDValue

		retAdded = true
	}

	return nil, retAdded
}

func retrieveSpaceSpacePropIconFlags(depth int, m *models.SpaceSpace, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	flagIconName := fmt.Sprintf("%v.icon", cmdPrefix)
	if cmd.Flags().Changed(flagIconName) {

		var flagIconName string
		if cmdPrefix == "" {
			flagIconName = "icon"
		} else {
			flagIconName = fmt.Sprintf("%v.icon", cmdPrefix)
		}

		flagIconValue, err := cmd.Flags().GetString(flagIconName)
		if err != nil {
			return err, false
		}
		m.Icon = flagIconValue

		retAdded = true
	}

	return nil, retAdded
}

func retrieveSpaceSpacePropIDFlags(depth int, m *models.SpaceSpace, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	flagIDName := fmt.Sprintf("%v.id", cmdPrefix)
	if cmd.Flags().Changed(flagIDName) {

		var flagIDName string
		if cmdPrefix == "" {
			flagIDName = "id"
		} else {
			flagIDName = fmt.Sprintf("%v.id", cmdPrefix)
		}

		flagIDValue, err := cmd.Flags().GetString(flagIDName)
		if err != nil {
			return err, false
		}
		m.ID = flagIDValue

		retAdded = true
	}

	return nil, retAdded
}

func retrieveSpaceSpacePropLocalStoragePathFlags(depth int, m *models.SpaceSpace, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	flagLocalStoragePathName := fmt.Sprintf("%v.local_storage_path", cmdPrefix)
	if cmd.Flags().Changed(flagLocalStoragePathName) {

		var flagLocalStoragePathName string
		if cmdPrefix == "" {
			flagLocalStoragePathName = "local_storage_path"
		} else {
			flagLocalStoragePathName = fmt.Sprintf("%v.local_storage_path", cmdPrefix)
		}

		flagLocalStoragePathValue, err := cmd.Flags().GetString(flagLocalStoragePathName)
		if err != nil {
			return err, false
		}
		m.LocalStoragePath = flagLocalStoragePathValue

		retAdded = true
	}

	return nil, retAdded
}

func retrieveSpaceSpacePropMarketplaceWorkspaceIDFlags(depth int, m *models.SpaceSpace, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	flagMarketplaceWorkspaceIDName := fmt.Sprintf("%v.marketplace_workspace_id", cmdPrefix)
	if cmd.Flags().Changed(flagMarketplaceWorkspaceIDName) {

		var flagMarketplaceWorkspaceIDName string
		if cmdPrefix == "" {
			flagMarketplaceWorkspaceIDName = "marketplace_workspace_id"
		} else {
			flagMarketplaceWorkspaceIDName = fmt.Sprintf("%v.marketplace_workspace_id", cmdPrefix)
		}

		flagMarketplaceWorkspaceIDValue, err := cmd.Flags().GetString(flagMarketplaceWorkspaceIDName)
		if err != nil {
			return err, false
		}
		m.MarketplaceWorkspaceID = flagMarketplaceWorkspaceIDValue

		retAdded = true
	}

	return nil, retAdded
}

func retrieveSpaceSpacePropNameFlags(depth int, m *models.SpaceSpace, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	flagNameName := fmt.Sprintf("%v.name", cmdPrefix)
	if cmd.Flags().Changed(flagNameName) {

		var flagNameName string
		if cmdPrefix == "" {
			flagNameName = "name"
		} else {
			flagNameName = fmt.Sprintf("%v.name", cmdPrefix)
		}

		flagNameValue, err := cmd.Flags().GetString(flagNameName)
		if err != nil {
			return err, false
		}
		m.Name = flagNameValue

		retAdded = true
	}

	return nil, retAdded
}

func retrieveSpaceSpacePropNetworkIDFlags(depth int, m *models.SpaceSpace, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	flagNetworkIDName := fmt.Sprintf("%v.network_id", cmdPrefix)
	if cmd.Flags().Changed(flagNetworkIDName) {

		var flagNetworkIDName string
		if cmdPrefix == "" {
			flagNetworkIDName = "network_id"
		} else {
			flagNetworkIDName = fmt.Sprintf("%v.network_id", cmdPrefix)
		}

		flagNetworkIDValue, err := cmd.Flags().GetString(flagNetworkIDName)
		if err != nil {
			return err, false
		}
		m.NetworkID = flagNetworkIDValue

		retAdded = true
	}

	return nil, retAdded
}

func retrieveSpaceSpacePropProfileObjectIDFlags(depth int, m *models.SpaceSpace, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	flagProfileObjectIDName := fmt.Sprintf("%v.profile_object_id", cmdPrefix)
	if cmd.Flags().Changed(flagProfileObjectIDName) {

		var flagProfileObjectIDName string
		if cmdPrefix == "" {
			flagProfileObjectIDName = "profile_object_id"
		} else {
			flagProfileObjectIDName = fmt.Sprintf("%v.profile_object_id", cmdPrefix)
		}

		flagProfileObjectIDValue, err := cmd.Flags().GetString(flagProfileObjectIDName)
		if err != nil {
			return err, false
		}
		m.ProfileObjectID = flagProfileObjectIDValue

		retAdded = true
	}

	return nil, retAdded
}

func retrieveSpaceSpacePropSpaceViewIDFlags(depth int, m *models.SpaceSpace, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	flagSpaceViewIDName := fmt.Sprintf("%v.space_view_id", cmdPrefix)
	if cmd.Flags().Changed(flagSpaceViewIDName) {

		var flagSpaceViewIDName string
		if cmdPrefix == "" {
			flagSpaceViewIDName = "space_view_id"
		} else {
			flagSpaceViewIDName = fmt.Sprintf("%v.space_view_id", cmdPrefix)
		}

		flagSpaceViewIDValue, err := cmd.Flags().GetString(flagSpaceViewIDName)
		if err != nil {
			return err, false
		}
		m.SpaceViewID = flagSpaceViewIDValue

		retAdded = true
	}

	return nil, retAdded
}

func retrieveSpaceSpacePropTechSpaceIDFlags(depth int, m *models.SpaceSpace, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	flagTechSpaceIDName := fmt.Sprintf("%v.tech_space_id", cmdPrefix)
	if cmd.Flags().Changed(flagTechSpaceIDName) {

		var flagTechSpaceIDName string
		if cmdPrefix == "" {
			flagTechSpaceIDName = "tech_space_id"
		} else {
			flagTechSpaceIDName = fmt.Sprintf("%v.tech_space_id", cmdPrefix)
		}

		flagTechSpaceIDValue, err := cmd.Flags().GetString(flagTechSpaceIDName)
		if err != nil {
			return err, false
		}
		m.TechSpaceID = flagTechSpaceIDValue

		retAdded = true
	}

	return nil, retAdded
}

func retrieveSpaceSpacePropTimezoneFlags(depth int, m *models.SpaceSpace, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	flagTimezoneName := fmt.Sprintf("%v.timezone", cmdPrefix)
	if cmd.Flags().Changed(flagTimezoneName) {

		var flagTimezoneName string
		if cmdPrefix == "" {
			flagTimezoneName = "timezone"
		} else {
			flagTimezoneName = fmt.Sprintf("%v.timezone", cmdPrefix)
		}

		flagTimezoneValue, err := cmd.Flags().GetString(flagTimezoneName)
		if err != nil {
			return err, false
		}
		m.Timezone = flagTimezoneValue

		retAdded = true
	}

	return nil, retAdded
}

func retrieveSpaceSpacePropTypeFlags(depth int, m *models.SpaceSpace, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	flagTypeName := fmt.Sprintf("%v.type", cmdPrefix)
	if cmd.Flags().Changed(flagTypeName) {

		var flagTypeName string
		if cmdPrefix == "" {
			flagTypeName = "type"
		} else {
			flagTypeName = fmt.Sprintf("%v.type", cmdPrefix)
		}

		flagTypeValue, err := cmd.Flags().GetString(flagTypeName)
		if err != nil {
			return err, false
		}
		m.Type = flagTypeValue

		retAdded = true
	}

	return nil, retAdded
}

func retrieveSpaceSpacePropWidgetsIDFlags(depth int, m *models.SpaceSpace, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	flagWidgetsIDName := fmt.Sprintf("%v.widgets_id", cmdPrefix)
	if cmd.Flags().Changed(flagWidgetsIDName) {

		var flagWidgetsIDName string
		if cmdPrefix == "" {
			flagWidgetsIDName = "widgets_id"
		} else {
			flagWidgetsIDName = fmt.Sprintf("%v.widgets_id", cmdPrefix)
		}

		flagWidgetsIDValue, err := cmd.Flags().GetString(flagWidgetsIDName)
		if err != nil {
			return err, false
		}
		m.WidgetsID = flagWidgetsIDValue

		retAdded = true
	}

	return nil, retAdded
}

func retrieveSpaceSpacePropWorkspaceObjectIDFlags(depth int, m *models.SpaceSpace, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	flagWorkspaceObjectIDName := fmt.Sprintf("%v.workspace_object_id", cmdPrefix)
	if cmd.Flags().Changed(flagWorkspaceObjectIDName) {

		var flagWorkspaceObjectIDName string
		if cmdPrefix == "" {
			flagWorkspaceObjectIDName = "workspace_object_id"
		} else {
			flagWorkspaceObjectIDName = fmt.Sprintf("%v.workspace_object_id", cmdPrefix)
		}

		flagWorkspaceObjectIDValue, err := cmd.Flags().GetString(flagWorkspaceObjectIDName)
		if err != nil {
			return err, false
		}
		m.WorkspaceObjectID = flagWorkspaceObjectIDValue

		retAdded = true
	}

	return nil, retAdded
}
