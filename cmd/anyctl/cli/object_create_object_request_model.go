// Code generated by go-swagger; DO NOT EDIT.

package cli

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/anyproto/anytype-heart/cmd/anyctl/models"
	"github.com/spf13/cobra"
)

// Schema cli for ObjectCreateObjectRequest

// register flags to command
func registerModelObjectCreateObjectRequestFlags(depth int, cmdPrefix string, cmd *cobra.Command) error {

	if err := registerObjectCreateObjectRequestPropBody(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerObjectCreateObjectRequestPropDescription(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerObjectCreateObjectRequestPropIcon(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerObjectCreateObjectRequestPropName(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerObjectCreateObjectRequestPropObjectTypeUniqueKey(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerObjectCreateObjectRequestPropSource(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	if err := registerObjectCreateObjectRequestPropTemplateID(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	return nil
}

func registerObjectCreateObjectRequestPropBody(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	flagBodyDescription := ``

	var flagBodyName string
	if cmdPrefix == "" {
		flagBodyName = "body"
	} else {
		flagBodyName = fmt.Sprintf("%v.body", cmdPrefix)
	}

	var flagBodyDefault string

	_ = cmd.PersistentFlags().String(flagBodyName, flagBodyDefault, flagBodyDescription)

	return nil
}

func registerObjectCreateObjectRequestPropDescription(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	flagDescriptionDescription := ``

	var flagDescriptionName string
	if cmdPrefix == "" {
		flagDescriptionName = "description"
	} else {
		flagDescriptionName = fmt.Sprintf("%v.description", cmdPrefix)
	}

	var flagDescriptionDefault string

	_ = cmd.PersistentFlags().String(flagDescriptionName, flagDescriptionDefault, flagDescriptionDescription)

	return nil
}

func registerObjectCreateObjectRequestPropIcon(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	flagIconDescription := ``

	var flagIconName string
	if cmdPrefix == "" {
		flagIconName = "icon"
	} else {
		flagIconName = fmt.Sprintf("%v.icon", cmdPrefix)
	}

	var flagIconDefault string

	_ = cmd.PersistentFlags().String(flagIconName, flagIconDefault, flagIconDescription)

	return nil
}

func registerObjectCreateObjectRequestPropName(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	flagNameDescription := ``

	var flagNameName string
	if cmdPrefix == "" {
		flagNameName = "name"
	} else {
		flagNameName = fmt.Sprintf("%v.name", cmdPrefix)
	}

	var flagNameDefault string

	_ = cmd.PersistentFlags().String(flagNameName, flagNameDefault, flagNameDescription)

	return nil
}

func registerObjectCreateObjectRequestPropObjectTypeUniqueKey(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	flagObjectTypeUniqueKeyDescription := ``

	var flagObjectTypeUniqueKeyName string
	if cmdPrefix == "" {
		flagObjectTypeUniqueKeyName = "object_type_unique_key"
	} else {
		flagObjectTypeUniqueKeyName = fmt.Sprintf("%v.object_type_unique_key", cmdPrefix)
	}

	var flagObjectTypeUniqueKeyDefault string

	_ = cmd.PersistentFlags().String(flagObjectTypeUniqueKeyName, flagObjectTypeUniqueKeyDefault, flagObjectTypeUniqueKeyDescription)

	return nil
}

func registerObjectCreateObjectRequestPropSource(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	flagSourceDescription := ``

	var flagSourceName string
	if cmdPrefix == "" {
		flagSourceName = "source"
	} else {
		flagSourceName = fmt.Sprintf("%v.source", cmdPrefix)
	}

	var flagSourceDefault string

	_ = cmd.PersistentFlags().String(flagSourceName, flagSourceDefault, flagSourceDescription)

	return nil
}

func registerObjectCreateObjectRequestPropTemplateID(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	flagTemplateIDDescription := ``

	var flagTemplateIDName string
	if cmdPrefix == "" {
		flagTemplateIDName = "template_id"
	} else {
		flagTemplateIDName = fmt.Sprintf("%v.template_id", cmdPrefix)
	}

	var flagTemplateIDDefault string

	_ = cmd.PersistentFlags().String(flagTemplateIDName, flagTemplateIDDefault, flagTemplateIDDescription)

	return nil
}

// retrieve flags from commands, and set value in model. Return true if any flag is passed by user to fill model field.
func retrieveModelObjectCreateObjectRequestFlags(depth int, m *models.ObjectCreateObjectRequest, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	retAdded := false

	err, BodyAdded := retrieveObjectCreateObjectRequestPropBodyFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || BodyAdded

	err, DescriptionAdded := retrieveObjectCreateObjectRequestPropDescriptionFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || DescriptionAdded

	err, IconAdded := retrieveObjectCreateObjectRequestPropIconFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || IconAdded

	err, NameAdded := retrieveObjectCreateObjectRequestPropNameFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || NameAdded

	err, ObjectTypeUniqueKeyAdded := retrieveObjectCreateObjectRequestPropObjectTypeUniqueKeyFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || ObjectTypeUniqueKeyAdded

	err, SourceAdded := retrieveObjectCreateObjectRequestPropSourceFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || SourceAdded

	err, TemplateIDAdded := retrieveObjectCreateObjectRequestPropTemplateIDFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || TemplateIDAdded

	return nil, retAdded
}

func retrieveObjectCreateObjectRequestPropBodyFlags(depth int, m *models.ObjectCreateObjectRequest, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	flagBodyName := fmt.Sprintf("%v.body", cmdPrefix)
	if cmd.Flags().Changed(flagBodyName) {

		var flagBodyName string
		if cmdPrefix == "" {
			flagBodyName = "body"
		} else {
			flagBodyName = fmt.Sprintf("%v.body", cmdPrefix)
		}

		flagBodyValue, err := cmd.Flags().GetString(flagBodyName)
		if err != nil {
			return err, false
		}
		m.Body = flagBodyValue

		retAdded = true
	}

	return nil, retAdded
}

func retrieveObjectCreateObjectRequestPropDescriptionFlags(depth int, m *models.ObjectCreateObjectRequest, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	flagDescriptionName := fmt.Sprintf("%v.description", cmdPrefix)
	if cmd.Flags().Changed(flagDescriptionName) {

		var flagDescriptionName string
		if cmdPrefix == "" {
			flagDescriptionName = "description"
		} else {
			flagDescriptionName = fmt.Sprintf("%v.description", cmdPrefix)
		}

		flagDescriptionValue, err := cmd.Flags().GetString(flagDescriptionName)
		if err != nil {
			return err, false
		}
		m.Description = flagDescriptionValue

		retAdded = true
	}

	return nil, retAdded
}

func retrieveObjectCreateObjectRequestPropIconFlags(depth int, m *models.ObjectCreateObjectRequest, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	flagIconName := fmt.Sprintf("%v.icon", cmdPrefix)
	if cmd.Flags().Changed(flagIconName) {

		var flagIconName string
		if cmdPrefix == "" {
			flagIconName = "icon"
		} else {
			flagIconName = fmt.Sprintf("%v.icon", cmdPrefix)
		}

		flagIconValue, err := cmd.Flags().GetString(flagIconName)
		if err != nil {
			return err, false
		}
		m.Icon = flagIconValue

		retAdded = true
	}

	return nil, retAdded
}

func retrieveObjectCreateObjectRequestPropNameFlags(depth int, m *models.ObjectCreateObjectRequest, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	flagNameName := fmt.Sprintf("%v.name", cmdPrefix)
	if cmd.Flags().Changed(flagNameName) {

		var flagNameName string
		if cmdPrefix == "" {
			flagNameName = "name"
		} else {
			flagNameName = fmt.Sprintf("%v.name", cmdPrefix)
		}

		flagNameValue, err := cmd.Flags().GetString(flagNameName)
		if err != nil {
			return err, false
		}
		m.Name = flagNameValue

		retAdded = true
	}

	return nil, retAdded
}

func retrieveObjectCreateObjectRequestPropObjectTypeUniqueKeyFlags(depth int, m *models.ObjectCreateObjectRequest, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	flagObjectTypeUniqueKeyName := fmt.Sprintf("%v.object_type_unique_key", cmdPrefix)
	if cmd.Flags().Changed(flagObjectTypeUniqueKeyName) {

		var flagObjectTypeUniqueKeyName string
		if cmdPrefix == "" {
			flagObjectTypeUniqueKeyName = "object_type_unique_key"
		} else {
			flagObjectTypeUniqueKeyName = fmt.Sprintf("%v.object_type_unique_key", cmdPrefix)
		}

		flagObjectTypeUniqueKeyValue, err := cmd.Flags().GetString(flagObjectTypeUniqueKeyName)
		if err != nil {
			return err, false
		}
		m.ObjectTypeUniqueKey = flagObjectTypeUniqueKeyValue

		retAdded = true
	}

	return nil, retAdded
}

func retrieveObjectCreateObjectRequestPropSourceFlags(depth int, m *models.ObjectCreateObjectRequest, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	flagSourceName := fmt.Sprintf("%v.source", cmdPrefix)
	if cmd.Flags().Changed(flagSourceName) {

		var flagSourceName string
		if cmdPrefix == "" {
			flagSourceName = "source"
		} else {
			flagSourceName = fmt.Sprintf("%v.source", cmdPrefix)
		}

		flagSourceValue, err := cmd.Flags().GetString(flagSourceName)
		if err != nil {
			return err, false
		}
		m.Source = flagSourceValue

		retAdded = true
	}

	return nil, retAdded
}

func retrieveObjectCreateObjectRequestPropTemplateIDFlags(depth int, m *models.ObjectCreateObjectRequest, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	flagTemplateIDName := fmt.Sprintf("%v.template_id", cmdPrefix)
	if cmd.Flags().Changed(flagTemplateIDName) {

		var flagTemplateIDName string
		if cmdPrefix == "" {
			flagTemplateIDName = "template_id"
		} else {
			flagTemplateIDName = fmt.Sprintf("%v.template_id", cmdPrefix)
		}

		flagTemplateIDValue, err := cmd.Flags().GetString(flagTemplateIDName)
		if err != nil {
			return err, false
		}
		m.TemplateID = flagTemplateIDValue

		retAdded = true
	}

	return nil, retAdded
}
