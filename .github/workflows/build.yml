name: Build

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      alpha_version:
        description: 'Alpha version'
        default: ''
      run-on-runner:
        description: 'Specify the runner to use'
        required: true
        default: 'mac-mini-org-heart'


permissions:
  actions: 'write'
  packages: 'write'
  contents: 'write'


jobs:
  wait_for_perftest:
    uses: ./.github/workflows/reusable_wait_for_perftest.yml

  build:
    needs: wait_for_perftest
    runs-on: ${{ github.event_name == 'push' && 'mac-mini-org-heart' || (github.event.inputs.run-on-runner || 'mac-mini-org-heart') }}
    steps:
      - name: validate agent
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" && "${{ github.event.inputs.run-on-runner }}" != "mac-mini-org-heart" ]]; then
            echo "Invalid runner"
            exit 1
          fi

      - name: Install Go
        if: ${{ !startsWith(runner.name, 'mac-mini-runner-') }}
        uses: actions/setup-go@v4
        with:
          go-version: 1.23.2
          check-latest: true

      - name: Setup GO
        run: |
          go version
          echo GOPATH=$(go env GOPATH) >> $GITHUB_ENV
          echo GOBIN=$(go env GOPATH)/bin >> $GITHUB_ENV
          echo $(go env GOPATH)/bin >> $GITHUB_PATH

      - name: Checkout
        uses: actions/checkout@v3

      - name: Install brew and node deps
        if: ${{ !startsWith(runner.name, 'mac-mini-runner-') }}
        run: make install-brew-and-node-deps

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1.6.0
        with:
          xcode-version: '16.2'

      - name: Set env vars
        env:
          UNSPLASH_KEY: ${{ secrets.UNSPLASH_KEY }}
          INHOUSE_KEY: ${{ secrets.INHOUSE_KEY }}
        run: |
          GIT_SUMMARY=$(git describe --tags --always)
          echo "FLAGS=-X github.com/anyproto/anytype-heart/util/vcs.GitSummary=${GIT_SUMMARY} -X github.com/anyproto/anytype-heart/metrics.DefaultInHouseKey=${INHOUSE_KEY} -X github.com/anyproto/anytype-heart/util/unsplash.DefaultToken=${UNSPLASH_KEY}" >> $GITHUB_ENV
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            VERSION=${{ github.event.inputs.alpha_version }}
            if [ -z "$VERSION" ]; then
              VERSION=$(git rev-parse --short HEAD)
            fi
          fi
          if [ -z "$VERSION" ]; then
            VERSION=${GITHUB_REF##*/}
          fi
          echo VERSION=${VERSION} >> $GITHUB_ENV
          echo BUILD_TAG_NETWORK=envproduction >> $GITHUB_ENV
          echo MAVEN_ARTIFACT_VERSION=${VERSION} >> $GITHUB_ENV
          echo GOPRIVATE=github.com/anyproto >> $GITHUB_ENV
          echo $(pwd)/deps >> $GITHUB_PATH
          echo "${GOBIN}" >> $GITHUB_PATH
          git config --global url."https://${{ secrets.ANYTYPE_PAT }}@github.com/".insteadOf "https://github.com/"

      - name: Go mod download
        run: |
          go mod download

      - name: install protoc
        run: |
          make setup-protoc

      - name: setup go
        run: |
          make setup-go
          make setup-gomobile
          which gomobile

      - name: Cross-compile library mac/win/linux
        run: |
          make cross-compile-library
          ls -lha .

      - name: Make JS protos
        if: github.event_name == 'push'
        run: |
          make protos-js
          make ci-js-protos

      - name: Pack servers
        if: github.event_name == 'push'
        run: make pack-server

      - name: Make swift protos
        run: make swift-protos

      - name: Compile ios lib
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_USER: ${{ github.actor }}
          MAVEN_ARTIFACT_ID: 'anytype-heart-ios'
          MAVEN_ARTIFACT_NAME: 'ios_framework.tar.gz'
          PUBLISH_GRADLE: 1
        run: make compile-ios-lib

      - name: Make java protos
        run: make ci-java-protos

      - name: Compile android lib
        run: make compile-android-lib

      - name: Publish android lib to maven
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_USER: ${{ github.actor }}
          MAVEN_ARTIFACT_ID: 'anytype-heart-android'
          MAVEN_ARTIFACT_NAME: 'lib.aar'
        run: |
          gradle publish

      - name: Release
        if: github.event_name == 'push'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: softprops/action-gh-release@v1
        with:
          prerelease: ${{ contains(github.ref, '-rc') }}
          fail_on_unmatched_files: true
          files: '.release/*'
