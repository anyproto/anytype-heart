// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5-devel
// 	protoc        v5.28.2
// source: pb/protos/commands.proto

package pb

import (
	model "github.com/anyproto/anytype-heart/pkg/lib/pb/model"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RpcAppGetVersionResponseErrorCode int32

const (
	RpcAppGetVersionResponseError_NULL          RpcAppGetVersionResponseErrorCode = 0
	RpcAppGetVersionResponseError_UNKNOWN_ERROR RpcAppGetVersionResponseErrorCode = 1
	RpcAppGetVersionResponseError_BAD_INPUT     RpcAppGetVersionResponseErrorCode = 2
)

// Enum value maps for RpcAppGetVersionResponseErrorCode.
var (
	RpcAppGetVersionResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcAppGetVersionResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcAppGetVersionResponseErrorCode) Enum() *RpcAppGetVersionResponseErrorCode {
	p := new(RpcAppGetVersionResponseErrorCode)
	*p = x
	return p
}

func (x RpcAppGetVersionResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcAppGetVersionResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[0].Descriptor()
}

func (RpcAppGetVersionResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[0]
}

func (x RpcAppGetVersionResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcAppGetVersionResponseErrorCode.Descriptor instead.
func (RpcAppGetVersionResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 0, 0, 1, 0, 0}
}

type RpcAppSetDeviceStateRequestDeviceState int32

const (
	RpcAppSetDeviceStateRequest_BACKGROUND RpcAppSetDeviceStateRequestDeviceState = 0
	RpcAppSetDeviceStateRequest_FOREGROUND RpcAppSetDeviceStateRequestDeviceState = 1
)

// Enum value maps for RpcAppSetDeviceStateRequestDeviceState.
var (
	RpcAppSetDeviceStateRequestDeviceState_name = map[int32]string{
		0: "BACKGROUND",
		1: "FOREGROUND",
	}
	RpcAppSetDeviceStateRequestDeviceState_value = map[string]int32{
		"BACKGROUND": 0,
		"FOREGROUND": 1,
	}
)

func (x RpcAppSetDeviceStateRequestDeviceState) Enum() *RpcAppSetDeviceStateRequestDeviceState {
	p := new(RpcAppSetDeviceStateRequestDeviceState)
	*p = x
	return p
}

func (x RpcAppSetDeviceStateRequestDeviceState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcAppSetDeviceStateRequestDeviceState) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[1].Descriptor()
}

func (RpcAppSetDeviceStateRequestDeviceState) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[1]
}

func (x RpcAppSetDeviceStateRequestDeviceState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcAppSetDeviceStateRequestDeviceState.Descriptor instead.
func (RpcAppSetDeviceStateRequestDeviceState) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 0, 1, 0, 0}
}

type RpcAppSetDeviceStateResponseErrorCode int32

const (
	RpcAppSetDeviceStateResponseError_NULL          RpcAppSetDeviceStateResponseErrorCode = 0
	RpcAppSetDeviceStateResponseError_UNKNOWN_ERROR RpcAppSetDeviceStateResponseErrorCode = 1
	RpcAppSetDeviceStateResponseError_BAD_INPUT     RpcAppSetDeviceStateResponseErrorCode = 2
)

// Enum value maps for RpcAppSetDeviceStateResponseErrorCode.
var (
	RpcAppSetDeviceStateResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcAppSetDeviceStateResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcAppSetDeviceStateResponseErrorCode) Enum() *RpcAppSetDeviceStateResponseErrorCode {
	p := new(RpcAppSetDeviceStateResponseErrorCode)
	*p = x
	return p
}

func (x RpcAppSetDeviceStateResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcAppSetDeviceStateResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[2].Descriptor()
}

func (RpcAppSetDeviceStateResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[2]
}

func (x RpcAppSetDeviceStateResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcAppSetDeviceStateResponseErrorCode.Descriptor instead.
func (RpcAppSetDeviceStateResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 0, 1, 1, 0, 0}
}

type RpcAppShutdownResponseErrorCode int32

const (
	RpcAppShutdownResponseError_NULL          RpcAppShutdownResponseErrorCode = 0
	RpcAppShutdownResponseError_UNKNOWN_ERROR RpcAppShutdownResponseErrorCode = 1
	RpcAppShutdownResponseError_BAD_INPUT     RpcAppShutdownResponseErrorCode = 2
)

// Enum value maps for RpcAppShutdownResponseErrorCode.
var (
	RpcAppShutdownResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcAppShutdownResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcAppShutdownResponseErrorCode) Enum() *RpcAppShutdownResponseErrorCode {
	p := new(RpcAppShutdownResponseErrorCode)
	*p = x
	return p
}

func (x RpcAppShutdownResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcAppShutdownResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[3].Descriptor()
}

func (RpcAppShutdownResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[3]
}

func (x RpcAppShutdownResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcAppShutdownResponseErrorCode.Descriptor instead.
func (RpcAppShutdownResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 0, 2, 1, 0, 0}
}

type RpcSpaceLeaveApproveResponseErrorCode int32

const (
	RpcSpaceLeaveApproveResponseError_NULL                RpcSpaceLeaveApproveResponseErrorCode = 0
	RpcSpaceLeaveApproveResponseError_UNKNOWN_ERROR       RpcSpaceLeaveApproveResponseErrorCode = 1
	RpcSpaceLeaveApproveResponseError_BAD_INPUT           RpcSpaceLeaveApproveResponseErrorCode = 2
	RpcSpaceLeaveApproveResponseError_NO_SUCH_SPACE       RpcSpaceLeaveApproveResponseErrorCode = 101
	RpcSpaceLeaveApproveResponseError_SPACE_IS_DELETED    RpcSpaceLeaveApproveResponseErrorCode = 102
	RpcSpaceLeaveApproveResponseError_REQUEST_FAILED      RpcSpaceLeaveApproveResponseErrorCode = 103
	RpcSpaceLeaveApproveResponseError_LIMIT_REACHED       RpcSpaceLeaveApproveResponseErrorCode = 104
	RpcSpaceLeaveApproveResponseError_NO_APPROVE_REQUESTS RpcSpaceLeaveApproveResponseErrorCode = 105
	RpcSpaceLeaveApproveResponseError_NOT_SHAREABLE       RpcSpaceLeaveApproveResponseErrorCode = 106
)

// Enum value maps for RpcSpaceLeaveApproveResponseErrorCode.
var (
	RpcSpaceLeaveApproveResponseErrorCode_name = map[int32]string{
		0:   "NULL",
		1:   "UNKNOWN_ERROR",
		2:   "BAD_INPUT",
		101: "NO_SUCH_SPACE",
		102: "SPACE_IS_DELETED",
		103: "REQUEST_FAILED",
		104: "LIMIT_REACHED",
		105: "NO_APPROVE_REQUESTS",
		106: "NOT_SHAREABLE",
	}
	RpcSpaceLeaveApproveResponseErrorCode_value = map[string]int32{
		"NULL":                0,
		"UNKNOWN_ERROR":       1,
		"BAD_INPUT":           2,
		"NO_SUCH_SPACE":       101,
		"SPACE_IS_DELETED":    102,
		"REQUEST_FAILED":      103,
		"LIMIT_REACHED":       104,
		"NO_APPROVE_REQUESTS": 105,
		"NOT_SHAREABLE":       106,
	}
)

func (x RpcSpaceLeaveApproveResponseErrorCode) Enum() *RpcSpaceLeaveApproveResponseErrorCode {
	p := new(RpcSpaceLeaveApproveResponseErrorCode)
	*p = x
	return p
}

func (x RpcSpaceLeaveApproveResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcSpaceLeaveApproveResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[4].Descriptor()
}

func (RpcSpaceLeaveApproveResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[4]
}

func (x RpcSpaceLeaveApproveResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcSpaceLeaveApproveResponseErrorCode.Descriptor instead.
func (RpcSpaceLeaveApproveResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 1, 0, 1, 0, 0}
}

type RpcSpaceMakeShareableResponseErrorCode int32

const (
	RpcSpaceMakeShareableResponseError_NULL             RpcSpaceMakeShareableResponseErrorCode = 0
	RpcSpaceMakeShareableResponseError_UNKNOWN_ERROR    RpcSpaceMakeShareableResponseErrorCode = 1
	RpcSpaceMakeShareableResponseError_BAD_INPUT        RpcSpaceMakeShareableResponseErrorCode = 2
	RpcSpaceMakeShareableResponseError_NO_SUCH_SPACE    RpcSpaceMakeShareableResponseErrorCode = 101
	RpcSpaceMakeShareableResponseError_SPACE_IS_DELETED RpcSpaceMakeShareableResponseErrorCode = 102
	RpcSpaceMakeShareableResponseError_REQUEST_FAILED   RpcSpaceMakeShareableResponseErrorCode = 103
	RpcSpaceMakeShareableResponseError_LIMIT_REACHED    RpcSpaceMakeShareableResponseErrorCode = 104
)

// Enum value maps for RpcSpaceMakeShareableResponseErrorCode.
var (
	RpcSpaceMakeShareableResponseErrorCode_name = map[int32]string{
		0:   "NULL",
		1:   "UNKNOWN_ERROR",
		2:   "BAD_INPUT",
		101: "NO_SUCH_SPACE",
		102: "SPACE_IS_DELETED",
		103: "REQUEST_FAILED",
		104: "LIMIT_REACHED",
	}
	RpcSpaceMakeShareableResponseErrorCode_value = map[string]int32{
		"NULL":             0,
		"UNKNOWN_ERROR":    1,
		"BAD_INPUT":        2,
		"NO_SUCH_SPACE":    101,
		"SPACE_IS_DELETED": 102,
		"REQUEST_FAILED":   103,
		"LIMIT_REACHED":    104,
	}
)

func (x RpcSpaceMakeShareableResponseErrorCode) Enum() *RpcSpaceMakeShareableResponseErrorCode {
	p := new(RpcSpaceMakeShareableResponseErrorCode)
	*p = x
	return p
}

func (x RpcSpaceMakeShareableResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcSpaceMakeShareableResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[5].Descriptor()
}

func (RpcSpaceMakeShareableResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[5]
}

func (x RpcSpaceMakeShareableResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcSpaceMakeShareableResponseErrorCode.Descriptor instead.
func (RpcSpaceMakeShareableResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 1, 1, 1, 0, 0}
}

type RpcSpaceInviteGenerateResponseErrorCode int32

const (
	RpcSpaceInviteGenerateResponseError_NULL             RpcSpaceInviteGenerateResponseErrorCode = 0
	RpcSpaceInviteGenerateResponseError_UNKNOWN_ERROR    RpcSpaceInviteGenerateResponseErrorCode = 1
	RpcSpaceInviteGenerateResponseError_BAD_INPUT        RpcSpaceInviteGenerateResponseErrorCode = 2
	RpcSpaceInviteGenerateResponseError_NO_SUCH_SPACE    RpcSpaceInviteGenerateResponseErrorCode = 101
	RpcSpaceInviteGenerateResponseError_SPACE_IS_DELETED RpcSpaceInviteGenerateResponseErrorCode = 102
	RpcSpaceInviteGenerateResponseError_REQUEST_FAILED   RpcSpaceInviteGenerateResponseErrorCode = 103
	RpcSpaceInviteGenerateResponseError_LIMIT_REACHED    RpcSpaceInviteGenerateResponseErrorCode = 104
	RpcSpaceInviteGenerateResponseError_NOT_SHAREABLE    RpcSpaceInviteGenerateResponseErrorCode = 105
)

// Enum value maps for RpcSpaceInviteGenerateResponseErrorCode.
var (
	RpcSpaceInviteGenerateResponseErrorCode_name = map[int32]string{
		0:   "NULL",
		1:   "UNKNOWN_ERROR",
		2:   "BAD_INPUT",
		101: "NO_SUCH_SPACE",
		102: "SPACE_IS_DELETED",
		103: "REQUEST_FAILED",
		104: "LIMIT_REACHED",
		105: "NOT_SHAREABLE",
	}
	RpcSpaceInviteGenerateResponseErrorCode_value = map[string]int32{
		"NULL":             0,
		"UNKNOWN_ERROR":    1,
		"BAD_INPUT":        2,
		"NO_SUCH_SPACE":    101,
		"SPACE_IS_DELETED": 102,
		"REQUEST_FAILED":   103,
		"LIMIT_REACHED":    104,
		"NOT_SHAREABLE":    105,
	}
)

func (x RpcSpaceInviteGenerateResponseErrorCode) Enum() *RpcSpaceInviteGenerateResponseErrorCode {
	p := new(RpcSpaceInviteGenerateResponseErrorCode)
	*p = x
	return p
}

func (x RpcSpaceInviteGenerateResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcSpaceInviteGenerateResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[6].Descriptor()
}

func (RpcSpaceInviteGenerateResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[6]
}

func (x RpcSpaceInviteGenerateResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcSpaceInviteGenerateResponseErrorCode.Descriptor instead.
func (RpcSpaceInviteGenerateResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 1, 2, 1, 0, 0}
}

type RpcSpaceStopSharingResponseErrorCode int32

const (
	RpcSpaceStopSharingResponseError_NULL             RpcSpaceStopSharingResponseErrorCode = 0
	RpcSpaceStopSharingResponseError_UNKNOWN_ERROR    RpcSpaceStopSharingResponseErrorCode = 1
	RpcSpaceStopSharingResponseError_BAD_INPUT        RpcSpaceStopSharingResponseErrorCode = 2
	RpcSpaceStopSharingResponseError_NO_SUCH_SPACE    RpcSpaceStopSharingResponseErrorCode = 101
	RpcSpaceStopSharingResponseError_SPACE_IS_DELETED RpcSpaceStopSharingResponseErrorCode = 102
	RpcSpaceStopSharingResponseError_REQUEST_FAILED   RpcSpaceStopSharingResponseErrorCode = 103
	RpcSpaceStopSharingResponseError_LIMIT_REACHED    RpcSpaceStopSharingResponseErrorCode = 104
)

// Enum value maps for RpcSpaceStopSharingResponseErrorCode.
var (
	RpcSpaceStopSharingResponseErrorCode_name = map[int32]string{
		0:   "NULL",
		1:   "UNKNOWN_ERROR",
		2:   "BAD_INPUT",
		101: "NO_SUCH_SPACE",
		102: "SPACE_IS_DELETED",
		103: "REQUEST_FAILED",
		104: "LIMIT_REACHED",
	}
	RpcSpaceStopSharingResponseErrorCode_value = map[string]int32{
		"NULL":             0,
		"UNKNOWN_ERROR":    1,
		"BAD_INPUT":        2,
		"NO_SUCH_SPACE":    101,
		"SPACE_IS_DELETED": 102,
		"REQUEST_FAILED":   103,
		"LIMIT_REACHED":    104,
	}
)

func (x RpcSpaceStopSharingResponseErrorCode) Enum() *RpcSpaceStopSharingResponseErrorCode {
	p := new(RpcSpaceStopSharingResponseErrorCode)
	*p = x
	return p
}

func (x RpcSpaceStopSharingResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcSpaceStopSharingResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[7].Descriptor()
}

func (RpcSpaceStopSharingResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[7]
}

func (x RpcSpaceStopSharingResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcSpaceStopSharingResponseErrorCode.Descriptor instead.
func (RpcSpaceStopSharingResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 1, 3, 1, 0, 0}
}

type RpcSpaceInviteGetCurrentResponseErrorCode int32

const (
	RpcSpaceInviteGetCurrentResponseError_NULL             RpcSpaceInviteGetCurrentResponseErrorCode = 0
	RpcSpaceInviteGetCurrentResponseError_UNKNOWN_ERROR    RpcSpaceInviteGetCurrentResponseErrorCode = 1
	RpcSpaceInviteGetCurrentResponseError_BAD_INPUT        RpcSpaceInviteGetCurrentResponseErrorCode = 2
	RpcSpaceInviteGetCurrentResponseError_NO_ACTIVE_INVITE RpcSpaceInviteGetCurrentResponseErrorCode = 101
)

// Enum value maps for RpcSpaceInviteGetCurrentResponseErrorCode.
var (
	RpcSpaceInviteGetCurrentResponseErrorCode_name = map[int32]string{
		0:   "NULL",
		1:   "UNKNOWN_ERROR",
		2:   "BAD_INPUT",
		101: "NO_ACTIVE_INVITE",
	}
	RpcSpaceInviteGetCurrentResponseErrorCode_value = map[string]int32{
		"NULL":             0,
		"UNKNOWN_ERROR":    1,
		"BAD_INPUT":        2,
		"NO_ACTIVE_INVITE": 101,
	}
)

func (x RpcSpaceInviteGetCurrentResponseErrorCode) Enum() *RpcSpaceInviteGetCurrentResponseErrorCode {
	p := new(RpcSpaceInviteGetCurrentResponseErrorCode)
	*p = x
	return p
}

func (x RpcSpaceInviteGetCurrentResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcSpaceInviteGetCurrentResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[8].Descriptor()
}

func (RpcSpaceInviteGetCurrentResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[8]
}

func (x RpcSpaceInviteGetCurrentResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcSpaceInviteGetCurrentResponseErrorCode.Descriptor instead.
func (RpcSpaceInviteGetCurrentResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 1, 4, 1, 0, 0}
}

type RpcSpaceInviteRevokeResponseErrorCode int32

const (
	RpcSpaceInviteRevokeResponseError_NULL             RpcSpaceInviteRevokeResponseErrorCode = 0
	RpcSpaceInviteRevokeResponseError_UNKNOWN_ERROR    RpcSpaceInviteRevokeResponseErrorCode = 1
	RpcSpaceInviteRevokeResponseError_BAD_INPUT        RpcSpaceInviteRevokeResponseErrorCode = 2
	RpcSpaceInviteRevokeResponseError_NO_SUCH_SPACE    RpcSpaceInviteRevokeResponseErrorCode = 101
	RpcSpaceInviteRevokeResponseError_SPACE_IS_DELETED RpcSpaceInviteRevokeResponseErrorCode = 102
	RpcSpaceInviteRevokeResponseError_LIMIT_REACHED    RpcSpaceInviteRevokeResponseErrorCode = 103
	RpcSpaceInviteRevokeResponseError_REQUEST_FAILED   RpcSpaceInviteRevokeResponseErrorCode = 104
	RpcSpaceInviteRevokeResponseError_NOT_SHAREABLE    RpcSpaceInviteRevokeResponseErrorCode = 105
)

// Enum value maps for RpcSpaceInviteRevokeResponseErrorCode.
var (
	RpcSpaceInviteRevokeResponseErrorCode_name = map[int32]string{
		0:   "NULL",
		1:   "UNKNOWN_ERROR",
		2:   "BAD_INPUT",
		101: "NO_SUCH_SPACE",
		102: "SPACE_IS_DELETED",
		103: "LIMIT_REACHED",
		104: "REQUEST_FAILED",
		105: "NOT_SHAREABLE",
	}
	RpcSpaceInviteRevokeResponseErrorCode_value = map[string]int32{
		"NULL":             0,
		"UNKNOWN_ERROR":    1,
		"BAD_INPUT":        2,
		"NO_SUCH_SPACE":    101,
		"SPACE_IS_DELETED": 102,
		"LIMIT_REACHED":    103,
		"REQUEST_FAILED":   104,
		"NOT_SHAREABLE":    105,
	}
)

func (x RpcSpaceInviteRevokeResponseErrorCode) Enum() *RpcSpaceInviteRevokeResponseErrorCode {
	p := new(RpcSpaceInviteRevokeResponseErrorCode)
	*p = x
	return p
}

func (x RpcSpaceInviteRevokeResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcSpaceInviteRevokeResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[9].Descriptor()
}

func (RpcSpaceInviteRevokeResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[9]
}

func (x RpcSpaceInviteRevokeResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcSpaceInviteRevokeResponseErrorCode.Descriptor instead.
func (RpcSpaceInviteRevokeResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 1, 5, 1, 0, 0}
}

type RpcSpaceInviteViewResponseErrorCode int32

const (
	RpcSpaceInviteViewResponseError_NULL               RpcSpaceInviteViewResponseErrorCode = 0
	RpcSpaceInviteViewResponseError_UNKNOWN_ERROR      RpcSpaceInviteViewResponseErrorCode = 1
	RpcSpaceInviteViewResponseError_BAD_INPUT          RpcSpaceInviteViewResponseErrorCode = 2
	RpcSpaceInviteViewResponseError_INVITE_NOT_FOUND   RpcSpaceInviteViewResponseErrorCode = 101
	RpcSpaceInviteViewResponseError_INVITE_BAD_CONTENT RpcSpaceInviteViewResponseErrorCode = 102
	RpcSpaceInviteViewResponseError_SPACE_IS_DELETED   RpcSpaceInviteViewResponseErrorCode = 103
)

// Enum value maps for RpcSpaceInviteViewResponseErrorCode.
var (
	RpcSpaceInviteViewResponseErrorCode_name = map[int32]string{
		0:   "NULL",
		1:   "UNKNOWN_ERROR",
		2:   "BAD_INPUT",
		101: "INVITE_NOT_FOUND",
		102: "INVITE_BAD_CONTENT",
		103: "SPACE_IS_DELETED",
	}
	RpcSpaceInviteViewResponseErrorCode_value = map[string]int32{
		"NULL":               0,
		"UNKNOWN_ERROR":      1,
		"BAD_INPUT":          2,
		"INVITE_NOT_FOUND":   101,
		"INVITE_BAD_CONTENT": 102,
		"SPACE_IS_DELETED":   103,
	}
)

func (x RpcSpaceInviteViewResponseErrorCode) Enum() *RpcSpaceInviteViewResponseErrorCode {
	p := new(RpcSpaceInviteViewResponseErrorCode)
	*p = x
	return p
}

func (x RpcSpaceInviteViewResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcSpaceInviteViewResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[10].Descriptor()
}

func (RpcSpaceInviteViewResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[10]
}

func (x RpcSpaceInviteViewResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcSpaceInviteViewResponseErrorCode.Descriptor instead.
func (RpcSpaceInviteViewResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 1, 6, 1, 0, 0}
}

type RpcSpaceJoinResponseErrorCode int32

const (
	RpcSpaceJoinResponseError_NULL               RpcSpaceJoinResponseErrorCode = 0
	RpcSpaceJoinResponseError_UNKNOWN_ERROR      RpcSpaceJoinResponseErrorCode = 1
	RpcSpaceJoinResponseError_BAD_INPUT          RpcSpaceJoinResponseErrorCode = 2
	RpcSpaceJoinResponseError_NO_SUCH_SPACE      RpcSpaceJoinResponseErrorCode = 101
	RpcSpaceJoinResponseError_SPACE_IS_DELETED   RpcSpaceJoinResponseErrorCode = 102
	RpcSpaceJoinResponseError_INVITE_NOT_FOUND   RpcSpaceJoinResponseErrorCode = 103
	RpcSpaceJoinResponseError_INVITE_BAD_CONTENT RpcSpaceJoinResponseErrorCode = 104
	RpcSpaceJoinResponseError_REQUEST_FAILED     RpcSpaceJoinResponseErrorCode = 105
	RpcSpaceJoinResponseError_LIMIT_REACHED      RpcSpaceJoinResponseErrorCode = 106
	RpcSpaceJoinResponseError_NOT_SHAREABLE      RpcSpaceJoinResponseErrorCode = 107
	RpcSpaceJoinResponseError_DIFFERENT_NETWORK  RpcSpaceJoinResponseErrorCode = 108
)

// Enum value maps for RpcSpaceJoinResponseErrorCode.
var (
	RpcSpaceJoinResponseErrorCode_name = map[int32]string{
		0:   "NULL",
		1:   "UNKNOWN_ERROR",
		2:   "BAD_INPUT",
		101: "NO_SUCH_SPACE",
		102: "SPACE_IS_DELETED",
		103: "INVITE_NOT_FOUND",
		104: "INVITE_BAD_CONTENT",
		105: "REQUEST_FAILED",
		106: "LIMIT_REACHED",
		107: "NOT_SHAREABLE",
		108: "DIFFERENT_NETWORK",
	}
	RpcSpaceJoinResponseErrorCode_value = map[string]int32{
		"NULL":               0,
		"UNKNOWN_ERROR":      1,
		"BAD_INPUT":          2,
		"NO_SUCH_SPACE":      101,
		"SPACE_IS_DELETED":   102,
		"INVITE_NOT_FOUND":   103,
		"INVITE_BAD_CONTENT": 104,
		"REQUEST_FAILED":     105,
		"LIMIT_REACHED":      106,
		"NOT_SHAREABLE":      107,
		"DIFFERENT_NETWORK":  108,
	}
)

func (x RpcSpaceJoinResponseErrorCode) Enum() *RpcSpaceJoinResponseErrorCode {
	p := new(RpcSpaceJoinResponseErrorCode)
	*p = x
	return p
}

func (x RpcSpaceJoinResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcSpaceJoinResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[11].Descriptor()
}

func (RpcSpaceJoinResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[11]
}

func (x RpcSpaceJoinResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcSpaceJoinResponseErrorCode.Descriptor instead.
func (RpcSpaceJoinResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 1, 7, 1, 0, 0}
}

type RpcSpaceJoinCancelResponseErrorCode int32

const (
	RpcSpaceJoinCancelResponseError_NULL             RpcSpaceJoinCancelResponseErrorCode = 0
	RpcSpaceJoinCancelResponseError_UNKNOWN_ERROR    RpcSpaceJoinCancelResponseErrorCode = 1
	RpcSpaceJoinCancelResponseError_BAD_INPUT        RpcSpaceJoinCancelResponseErrorCode = 2
	RpcSpaceJoinCancelResponseError_NO_SUCH_SPACE    RpcSpaceJoinCancelResponseErrorCode = 101
	RpcSpaceJoinCancelResponseError_SPACE_IS_DELETED RpcSpaceJoinCancelResponseErrorCode = 102
	RpcSpaceJoinCancelResponseError_REQUEST_FAILED   RpcSpaceJoinCancelResponseErrorCode = 103
	RpcSpaceJoinCancelResponseError_LIMIT_REACHED    RpcSpaceJoinCancelResponseErrorCode = 104
	RpcSpaceJoinCancelResponseError_NO_SUCH_REQUEST  RpcSpaceJoinCancelResponseErrorCode = 105
	RpcSpaceJoinCancelResponseError_NOT_SHAREABLE    RpcSpaceJoinCancelResponseErrorCode = 106
)

// Enum value maps for RpcSpaceJoinCancelResponseErrorCode.
var (
	RpcSpaceJoinCancelResponseErrorCode_name = map[int32]string{
		0:   "NULL",
		1:   "UNKNOWN_ERROR",
		2:   "BAD_INPUT",
		101: "NO_SUCH_SPACE",
		102: "SPACE_IS_DELETED",
		103: "REQUEST_FAILED",
		104: "LIMIT_REACHED",
		105: "NO_SUCH_REQUEST",
		106: "NOT_SHAREABLE",
	}
	RpcSpaceJoinCancelResponseErrorCode_value = map[string]int32{
		"NULL":             0,
		"UNKNOWN_ERROR":    1,
		"BAD_INPUT":        2,
		"NO_SUCH_SPACE":    101,
		"SPACE_IS_DELETED": 102,
		"REQUEST_FAILED":   103,
		"LIMIT_REACHED":    104,
		"NO_SUCH_REQUEST":  105,
		"NOT_SHAREABLE":    106,
	}
)

func (x RpcSpaceJoinCancelResponseErrorCode) Enum() *RpcSpaceJoinCancelResponseErrorCode {
	p := new(RpcSpaceJoinCancelResponseErrorCode)
	*p = x
	return p
}

func (x RpcSpaceJoinCancelResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcSpaceJoinCancelResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[12].Descriptor()
}

func (RpcSpaceJoinCancelResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[12]
}

func (x RpcSpaceJoinCancelResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcSpaceJoinCancelResponseErrorCode.Descriptor instead.
func (RpcSpaceJoinCancelResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 1, 8, 1, 0, 0}
}

type RpcSpaceRequestApproveResponseErrorCode int32

const (
	RpcSpaceRequestApproveResponseError_NULL                  RpcSpaceRequestApproveResponseErrorCode = 0
	RpcSpaceRequestApproveResponseError_UNKNOWN_ERROR         RpcSpaceRequestApproveResponseErrorCode = 1
	RpcSpaceRequestApproveResponseError_BAD_INPUT             RpcSpaceRequestApproveResponseErrorCode = 2
	RpcSpaceRequestApproveResponseError_NO_SUCH_SPACE         RpcSpaceRequestApproveResponseErrorCode = 101
	RpcSpaceRequestApproveResponseError_SPACE_IS_DELETED      RpcSpaceRequestApproveResponseErrorCode = 102
	RpcSpaceRequestApproveResponseError_NO_SUCH_REQUEST       RpcSpaceRequestApproveResponseErrorCode = 103
	RpcSpaceRequestApproveResponseError_INCORRECT_PERMISSIONS RpcSpaceRequestApproveResponseErrorCode = 104
	RpcSpaceRequestApproveResponseError_REQUEST_FAILED        RpcSpaceRequestApproveResponseErrorCode = 105
	RpcSpaceRequestApproveResponseError_LIMIT_REACHED         RpcSpaceRequestApproveResponseErrorCode = 106
	RpcSpaceRequestApproveResponseError_NOT_SHAREABLE         RpcSpaceRequestApproveResponseErrorCode = 107
)

// Enum value maps for RpcSpaceRequestApproveResponseErrorCode.
var (
	RpcSpaceRequestApproveResponseErrorCode_name = map[int32]string{
		0:   "NULL",
		1:   "UNKNOWN_ERROR",
		2:   "BAD_INPUT",
		101: "NO_SUCH_SPACE",
		102: "SPACE_IS_DELETED",
		103: "NO_SUCH_REQUEST",
		104: "INCORRECT_PERMISSIONS",
		105: "REQUEST_FAILED",
		106: "LIMIT_REACHED",
		107: "NOT_SHAREABLE",
	}
	RpcSpaceRequestApproveResponseErrorCode_value = map[string]int32{
		"NULL":                  0,
		"UNKNOWN_ERROR":         1,
		"BAD_INPUT":             2,
		"NO_SUCH_SPACE":         101,
		"SPACE_IS_DELETED":      102,
		"NO_SUCH_REQUEST":       103,
		"INCORRECT_PERMISSIONS": 104,
		"REQUEST_FAILED":        105,
		"LIMIT_REACHED":         106,
		"NOT_SHAREABLE":         107,
	}
)

func (x RpcSpaceRequestApproveResponseErrorCode) Enum() *RpcSpaceRequestApproveResponseErrorCode {
	p := new(RpcSpaceRequestApproveResponseErrorCode)
	*p = x
	return p
}

func (x RpcSpaceRequestApproveResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcSpaceRequestApproveResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[13].Descriptor()
}

func (RpcSpaceRequestApproveResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[13]
}

func (x RpcSpaceRequestApproveResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcSpaceRequestApproveResponseErrorCode.Descriptor instead.
func (RpcSpaceRequestApproveResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 1, 9, 1, 0, 0}
}

type RpcSpaceRequestDeclineResponseErrorCode int32

const (
	RpcSpaceRequestDeclineResponseError_NULL             RpcSpaceRequestDeclineResponseErrorCode = 0
	RpcSpaceRequestDeclineResponseError_UNKNOWN_ERROR    RpcSpaceRequestDeclineResponseErrorCode = 1
	RpcSpaceRequestDeclineResponseError_BAD_INPUT        RpcSpaceRequestDeclineResponseErrorCode = 2
	RpcSpaceRequestDeclineResponseError_NO_SUCH_SPACE    RpcSpaceRequestDeclineResponseErrorCode = 101
	RpcSpaceRequestDeclineResponseError_SPACE_IS_DELETED RpcSpaceRequestDeclineResponseErrorCode = 102
	RpcSpaceRequestDeclineResponseError_REQUEST_FAILED   RpcSpaceRequestDeclineResponseErrorCode = 103
	RpcSpaceRequestDeclineResponseError_LIMIT_REACHED    RpcSpaceRequestDeclineResponseErrorCode = 104
	RpcSpaceRequestDeclineResponseError_NO_SUCH_REQUEST  RpcSpaceRequestDeclineResponseErrorCode = 105
	RpcSpaceRequestDeclineResponseError_NOT_SHAREABLE    RpcSpaceRequestDeclineResponseErrorCode = 106
)

// Enum value maps for RpcSpaceRequestDeclineResponseErrorCode.
var (
	RpcSpaceRequestDeclineResponseErrorCode_name = map[int32]string{
		0:   "NULL",
		1:   "UNKNOWN_ERROR",
		2:   "BAD_INPUT",
		101: "NO_SUCH_SPACE",
		102: "SPACE_IS_DELETED",
		103: "REQUEST_FAILED",
		104: "LIMIT_REACHED",
		105: "NO_SUCH_REQUEST",
		106: "NOT_SHAREABLE",
	}
	RpcSpaceRequestDeclineResponseErrorCode_value = map[string]int32{
		"NULL":             0,
		"UNKNOWN_ERROR":    1,
		"BAD_INPUT":        2,
		"NO_SUCH_SPACE":    101,
		"SPACE_IS_DELETED": 102,
		"REQUEST_FAILED":   103,
		"LIMIT_REACHED":    104,
		"NO_SUCH_REQUEST":  105,
		"NOT_SHAREABLE":    106,
	}
)

func (x RpcSpaceRequestDeclineResponseErrorCode) Enum() *RpcSpaceRequestDeclineResponseErrorCode {
	p := new(RpcSpaceRequestDeclineResponseErrorCode)
	*p = x
	return p
}

func (x RpcSpaceRequestDeclineResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcSpaceRequestDeclineResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[14].Descriptor()
}

func (RpcSpaceRequestDeclineResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[14]
}

func (x RpcSpaceRequestDeclineResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcSpaceRequestDeclineResponseErrorCode.Descriptor instead.
func (RpcSpaceRequestDeclineResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 1, 10, 1, 0, 0}
}

type RpcSpaceParticipantRemoveResponseErrorCode int32

const (
	RpcSpaceParticipantRemoveResponseError_NULL                  RpcSpaceParticipantRemoveResponseErrorCode = 0
	RpcSpaceParticipantRemoveResponseError_UNKNOWN_ERROR         RpcSpaceParticipantRemoveResponseErrorCode = 1
	RpcSpaceParticipantRemoveResponseError_BAD_INPUT             RpcSpaceParticipantRemoveResponseErrorCode = 2
	RpcSpaceParticipantRemoveResponseError_NO_SUCH_SPACE         RpcSpaceParticipantRemoveResponseErrorCode = 101
	RpcSpaceParticipantRemoveResponseError_SPACE_IS_DELETED      RpcSpaceParticipantRemoveResponseErrorCode = 102
	RpcSpaceParticipantRemoveResponseError_PARTICIPANT_NOT_FOUND RpcSpaceParticipantRemoveResponseErrorCode = 103
	RpcSpaceParticipantRemoveResponseError_REQUEST_FAILED        RpcSpaceParticipantRemoveResponseErrorCode = 104
	RpcSpaceParticipantRemoveResponseError_LIMIT_REACHED         RpcSpaceParticipantRemoveResponseErrorCode = 105
	RpcSpaceParticipantRemoveResponseError_NOT_SHAREABLE         RpcSpaceParticipantRemoveResponseErrorCode = 106
)

// Enum value maps for RpcSpaceParticipantRemoveResponseErrorCode.
var (
	RpcSpaceParticipantRemoveResponseErrorCode_name = map[int32]string{
		0:   "NULL",
		1:   "UNKNOWN_ERROR",
		2:   "BAD_INPUT",
		101: "NO_SUCH_SPACE",
		102: "SPACE_IS_DELETED",
		103: "PARTICIPANT_NOT_FOUND",
		104: "REQUEST_FAILED",
		105: "LIMIT_REACHED",
		106: "NOT_SHAREABLE",
	}
	RpcSpaceParticipantRemoveResponseErrorCode_value = map[string]int32{
		"NULL":                  0,
		"UNKNOWN_ERROR":         1,
		"BAD_INPUT":             2,
		"NO_SUCH_SPACE":         101,
		"SPACE_IS_DELETED":      102,
		"PARTICIPANT_NOT_FOUND": 103,
		"REQUEST_FAILED":        104,
		"LIMIT_REACHED":         105,
		"NOT_SHAREABLE":         106,
	}
)

func (x RpcSpaceParticipantRemoveResponseErrorCode) Enum() *RpcSpaceParticipantRemoveResponseErrorCode {
	p := new(RpcSpaceParticipantRemoveResponseErrorCode)
	*p = x
	return p
}

func (x RpcSpaceParticipantRemoveResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcSpaceParticipantRemoveResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[15].Descriptor()
}

func (RpcSpaceParticipantRemoveResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[15]
}

func (x RpcSpaceParticipantRemoveResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcSpaceParticipantRemoveResponseErrorCode.Descriptor instead.
func (RpcSpaceParticipantRemoveResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 1, 11, 1, 0, 0}
}

type RpcSpaceParticipantPermissionsChangeResponseErrorCode int32

const (
	RpcSpaceParticipantPermissionsChangeResponseError_NULL                  RpcSpaceParticipantPermissionsChangeResponseErrorCode = 0
	RpcSpaceParticipantPermissionsChangeResponseError_UNKNOWN_ERROR         RpcSpaceParticipantPermissionsChangeResponseErrorCode = 1
	RpcSpaceParticipantPermissionsChangeResponseError_BAD_INPUT             RpcSpaceParticipantPermissionsChangeResponseErrorCode = 2
	RpcSpaceParticipantPermissionsChangeResponseError_NO_SUCH_SPACE         RpcSpaceParticipantPermissionsChangeResponseErrorCode = 101
	RpcSpaceParticipantPermissionsChangeResponseError_SPACE_IS_DELETED      RpcSpaceParticipantPermissionsChangeResponseErrorCode = 102
	RpcSpaceParticipantPermissionsChangeResponseError_REQUEST_FAILED        RpcSpaceParticipantPermissionsChangeResponseErrorCode = 103
	RpcSpaceParticipantPermissionsChangeResponseError_LIMIT_REACHED         RpcSpaceParticipantPermissionsChangeResponseErrorCode = 104
	RpcSpaceParticipantPermissionsChangeResponseError_PARTICIPANT_NOT_FOUND RpcSpaceParticipantPermissionsChangeResponseErrorCode = 105
	RpcSpaceParticipantPermissionsChangeResponseError_INCORRECT_PERMISSIONS RpcSpaceParticipantPermissionsChangeResponseErrorCode = 106
	RpcSpaceParticipantPermissionsChangeResponseError_NOT_SHAREABLE         RpcSpaceParticipantPermissionsChangeResponseErrorCode = 107
)

// Enum value maps for RpcSpaceParticipantPermissionsChangeResponseErrorCode.
var (
	RpcSpaceParticipantPermissionsChangeResponseErrorCode_name = map[int32]string{
		0:   "NULL",
		1:   "UNKNOWN_ERROR",
		2:   "BAD_INPUT",
		101: "NO_SUCH_SPACE",
		102: "SPACE_IS_DELETED",
		103: "REQUEST_FAILED",
		104: "LIMIT_REACHED",
		105: "PARTICIPANT_NOT_FOUND",
		106: "INCORRECT_PERMISSIONS",
		107: "NOT_SHAREABLE",
	}
	RpcSpaceParticipantPermissionsChangeResponseErrorCode_value = map[string]int32{
		"NULL":                  0,
		"UNKNOWN_ERROR":         1,
		"BAD_INPUT":             2,
		"NO_SUCH_SPACE":         101,
		"SPACE_IS_DELETED":      102,
		"REQUEST_FAILED":        103,
		"LIMIT_REACHED":         104,
		"PARTICIPANT_NOT_FOUND": 105,
		"INCORRECT_PERMISSIONS": 106,
		"NOT_SHAREABLE":         107,
	}
)

func (x RpcSpaceParticipantPermissionsChangeResponseErrorCode) Enum() *RpcSpaceParticipantPermissionsChangeResponseErrorCode {
	p := new(RpcSpaceParticipantPermissionsChangeResponseErrorCode)
	*p = x
	return p
}

func (x RpcSpaceParticipantPermissionsChangeResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcSpaceParticipantPermissionsChangeResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[16].Descriptor()
}

func (RpcSpaceParticipantPermissionsChangeResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[16]
}

func (x RpcSpaceParticipantPermissionsChangeResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcSpaceParticipantPermissionsChangeResponseErrorCode.Descriptor instead.
func (RpcSpaceParticipantPermissionsChangeResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 1, 12, 1, 0, 0}
}

type RpcSpaceDeleteResponseErrorCode int32

const (
	RpcSpaceDeleteResponseError_NULL             RpcSpaceDeleteResponseErrorCode = 0
	RpcSpaceDeleteResponseError_UNKNOWN_ERROR    RpcSpaceDeleteResponseErrorCode = 1
	RpcSpaceDeleteResponseError_BAD_INPUT        RpcSpaceDeleteResponseErrorCode = 2
	RpcSpaceDeleteResponseError_NO_SUCH_SPACE    RpcSpaceDeleteResponseErrorCode = 101
	RpcSpaceDeleteResponseError_SPACE_IS_DELETED RpcSpaceDeleteResponseErrorCode = 102
	RpcSpaceDeleteResponseError_REQUEST_FAILED   RpcSpaceDeleteResponseErrorCode = 103
	RpcSpaceDeleteResponseError_LIMIT_REACHED    RpcSpaceDeleteResponseErrorCode = 104
	RpcSpaceDeleteResponseError_NOT_SHAREABLE    RpcSpaceDeleteResponseErrorCode = 105
)

// Enum value maps for RpcSpaceDeleteResponseErrorCode.
var (
	RpcSpaceDeleteResponseErrorCode_name = map[int32]string{
		0:   "NULL",
		1:   "UNKNOWN_ERROR",
		2:   "BAD_INPUT",
		101: "NO_SUCH_SPACE",
		102: "SPACE_IS_DELETED",
		103: "REQUEST_FAILED",
		104: "LIMIT_REACHED",
		105: "NOT_SHAREABLE",
	}
	RpcSpaceDeleteResponseErrorCode_value = map[string]int32{
		"NULL":             0,
		"UNKNOWN_ERROR":    1,
		"BAD_INPUT":        2,
		"NO_SUCH_SPACE":    101,
		"SPACE_IS_DELETED": 102,
		"REQUEST_FAILED":   103,
		"LIMIT_REACHED":    104,
		"NOT_SHAREABLE":    105,
	}
)

func (x RpcSpaceDeleteResponseErrorCode) Enum() *RpcSpaceDeleteResponseErrorCode {
	p := new(RpcSpaceDeleteResponseErrorCode)
	*p = x
	return p
}

func (x RpcSpaceDeleteResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcSpaceDeleteResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[17].Descriptor()
}

func (RpcSpaceDeleteResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[17]
}

func (x RpcSpaceDeleteResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcSpaceDeleteResponseErrorCode.Descriptor instead.
func (RpcSpaceDeleteResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 1, 13, 1, 0, 0}
}

type RpcSpaceSetOrderResponseErrorCode int32

const (
	RpcSpaceSetOrderResponseError_NULL          RpcSpaceSetOrderResponseErrorCode = 0
	RpcSpaceSetOrderResponseError_UNKNOWN_ERROR RpcSpaceSetOrderResponseErrorCode = 1
	RpcSpaceSetOrderResponseError_BAD_INPUT     RpcSpaceSetOrderResponseErrorCode = 2
)

// Enum value maps for RpcSpaceSetOrderResponseErrorCode.
var (
	RpcSpaceSetOrderResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcSpaceSetOrderResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcSpaceSetOrderResponseErrorCode) Enum() *RpcSpaceSetOrderResponseErrorCode {
	p := new(RpcSpaceSetOrderResponseErrorCode)
	*p = x
	return p
}

func (x RpcSpaceSetOrderResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcSpaceSetOrderResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[18].Descriptor()
}

func (RpcSpaceSetOrderResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[18]
}

func (x RpcSpaceSetOrderResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcSpaceSetOrderResponseErrorCode.Descriptor instead.
func (RpcSpaceSetOrderResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 1, 14, 1, 0, 0}
}

type RpcSpaceUnsetOrderResponseErrorCode int32

const (
	RpcSpaceUnsetOrderResponseError_NULL          RpcSpaceUnsetOrderResponseErrorCode = 0
	RpcSpaceUnsetOrderResponseError_UNKNOWN_ERROR RpcSpaceUnsetOrderResponseErrorCode = 1
	RpcSpaceUnsetOrderResponseError_BAD_INPUT     RpcSpaceUnsetOrderResponseErrorCode = 2
)

// Enum value maps for RpcSpaceUnsetOrderResponseErrorCode.
var (
	RpcSpaceUnsetOrderResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcSpaceUnsetOrderResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcSpaceUnsetOrderResponseErrorCode) Enum() *RpcSpaceUnsetOrderResponseErrorCode {
	p := new(RpcSpaceUnsetOrderResponseErrorCode)
	*p = x
	return p
}

func (x RpcSpaceUnsetOrderResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcSpaceUnsetOrderResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[19].Descriptor()
}

func (RpcSpaceUnsetOrderResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[19]
}

func (x RpcSpaceUnsetOrderResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcSpaceUnsetOrderResponseErrorCode.Descriptor instead.
func (RpcSpaceUnsetOrderResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 1, 15, 1, 0, 0}
}

type RpcWalletCreateResponseErrorCode int32

const (
	RpcWalletCreateResponseError_NULL                        RpcWalletCreateResponseErrorCode = 0   // No error; mnemonic should be non-empty
	RpcWalletCreateResponseError_UNKNOWN_ERROR               RpcWalletCreateResponseErrorCode = 1   // Any other errors
	RpcWalletCreateResponseError_BAD_INPUT                   RpcWalletCreateResponseErrorCode = 2   // Root path is wrong
	RpcWalletCreateResponseError_FAILED_TO_CREATE_LOCAL_REPO RpcWalletCreateResponseErrorCode = 101 // ...
)

// Enum value maps for RpcWalletCreateResponseErrorCode.
var (
	RpcWalletCreateResponseErrorCode_name = map[int32]string{
		0:   "NULL",
		1:   "UNKNOWN_ERROR",
		2:   "BAD_INPUT",
		101: "FAILED_TO_CREATE_LOCAL_REPO",
	}
	RpcWalletCreateResponseErrorCode_value = map[string]int32{
		"NULL":                        0,
		"UNKNOWN_ERROR":               1,
		"BAD_INPUT":                   2,
		"FAILED_TO_CREATE_LOCAL_REPO": 101,
	}
)

func (x RpcWalletCreateResponseErrorCode) Enum() *RpcWalletCreateResponseErrorCode {
	p := new(RpcWalletCreateResponseErrorCode)
	*p = x
	return p
}

func (x RpcWalletCreateResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcWalletCreateResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[20].Descriptor()
}

func (RpcWalletCreateResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[20]
}

func (x RpcWalletCreateResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcWalletCreateResponseErrorCode.Descriptor instead.
func (RpcWalletCreateResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 2, 0, 1, 0, 0}
}

type RpcWalletRecoverResponseErrorCode int32

const (
	RpcWalletRecoverResponseError_NULL                        RpcWalletRecoverResponseErrorCode = 0 // No error; wallet successfully recovered
	RpcWalletRecoverResponseError_UNKNOWN_ERROR               RpcWalletRecoverResponseErrorCode = 1 // Any other errors
	RpcWalletRecoverResponseError_BAD_INPUT                   RpcWalletRecoverResponseErrorCode = 2 // Root path or mnemonic is wrong
	RpcWalletRecoverResponseError_FAILED_TO_CREATE_LOCAL_REPO RpcWalletRecoverResponseErrorCode = 101
)

// Enum value maps for RpcWalletRecoverResponseErrorCode.
var (
	RpcWalletRecoverResponseErrorCode_name = map[int32]string{
		0:   "NULL",
		1:   "UNKNOWN_ERROR",
		2:   "BAD_INPUT",
		101: "FAILED_TO_CREATE_LOCAL_REPO",
	}
	RpcWalletRecoverResponseErrorCode_value = map[string]int32{
		"NULL":                        0,
		"UNKNOWN_ERROR":               1,
		"BAD_INPUT":                   2,
		"FAILED_TO_CREATE_LOCAL_REPO": 101,
	}
)

func (x RpcWalletRecoverResponseErrorCode) Enum() *RpcWalletRecoverResponseErrorCode {
	p := new(RpcWalletRecoverResponseErrorCode)
	*p = x
	return p
}

func (x RpcWalletRecoverResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcWalletRecoverResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[21].Descriptor()
}

func (RpcWalletRecoverResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[21]
}

func (x RpcWalletRecoverResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcWalletRecoverResponseErrorCode.Descriptor instead.
func (RpcWalletRecoverResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 2, 1, 1, 0, 0}
}

type RpcWalletConvertResponseErrorCode int32

const (
	RpcWalletConvertResponseError_NULL          RpcWalletConvertResponseErrorCode = 0 // No error; wallet successfully recovered
	RpcWalletConvertResponseError_UNKNOWN_ERROR RpcWalletConvertResponseErrorCode = 1 // Any other errors
	RpcWalletConvertResponseError_BAD_INPUT     RpcWalletConvertResponseErrorCode = 2 // mnemonic is wrong
)

// Enum value maps for RpcWalletConvertResponseErrorCode.
var (
	RpcWalletConvertResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcWalletConvertResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcWalletConvertResponseErrorCode) Enum() *RpcWalletConvertResponseErrorCode {
	p := new(RpcWalletConvertResponseErrorCode)
	*p = x
	return p
}

func (x RpcWalletConvertResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcWalletConvertResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[22].Descriptor()
}

func (RpcWalletConvertResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[22]
}

func (x RpcWalletConvertResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcWalletConvertResponseErrorCode.Descriptor instead.
func (RpcWalletConvertResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 2, 2, 1, 0, 0}
}

type RpcWalletCreateSessionResponseErrorCode int32

const (
	RpcWalletCreateSessionResponseError_NULL                                       RpcWalletCreateSessionResponseErrorCode = 0
	RpcWalletCreateSessionResponseError_UNKNOWN_ERROR                              RpcWalletCreateSessionResponseErrorCode = 1
	RpcWalletCreateSessionResponseError_BAD_INPUT                                  RpcWalletCreateSessionResponseErrorCode = 2
	RpcWalletCreateSessionResponseError_APP_TOKEN_NOT_FOUND_IN_THE_CURRENT_ACCOUNT RpcWalletCreateSessionResponseErrorCode = 101 // means the client logged into another account or the account directory has been cleaned
)

// Enum value maps for RpcWalletCreateSessionResponseErrorCode.
var (
	RpcWalletCreateSessionResponseErrorCode_name = map[int32]string{
		0:   "NULL",
		1:   "UNKNOWN_ERROR",
		2:   "BAD_INPUT",
		101: "APP_TOKEN_NOT_FOUND_IN_THE_CURRENT_ACCOUNT",
	}
	RpcWalletCreateSessionResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
		"APP_TOKEN_NOT_FOUND_IN_THE_CURRENT_ACCOUNT": 101,
	}
)

func (x RpcWalletCreateSessionResponseErrorCode) Enum() *RpcWalletCreateSessionResponseErrorCode {
	p := new(RpcWalletCreateSessionResponseErrorCode)
	*p = x
	return p
}

func (x RpcWalletCreateSessionResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcWalletCreateSessionResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[23].Descriptor()
}

func (RpcWalletCreateSessionResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[23]
}

func (x RpcWalletCreateSessionResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcWalletCreateSessionResponseErrorCode.Descriptor instead.
func (RpcWalletCreateSessionResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 2, 3, 1, 0, 0}
}

type RpcWalletCloseSessionResponseErrorCode int32

const (
	RpcWalletCloseSessionResponseError_NULL          RpcWalletCloseSessionResponseErrorCode = 0
	RpcWalletCloseSessionResponseError_UNKNOWN_ERROR RpcWalletCloseSessionResponseErrorCode = 1
	RpcWalletCloseSessionResponseError_BAD_INPUT     RpcWalletCloseSessionResponseErrorCode = 2
)

// Enum value maps for RpcWalletCloseSessionResponseErrorCode.
var (
	RpcWalletCloseSessionResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcWalletCloseSessionResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcWalletCloseSessionResponseErrorCode) Enum() *RpcWalletCloseSessionResponseErrorCode {
	p := new(RpcWalletCloseSessionResponseErrorCode)
	*p = x
	return p
}

func (x RpcWalletCloseSessionResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcWalletCloseSessionResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[24].Descriptor()
}

func (RpcWalletCloseSessionResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[24]
}

func (x RpcWalletCloseSessionResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcWalletCloseSessionResponseErrorCode.Descriptor instead.
func (RpcWalletCloseSessionResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 2, 4, 1, 0, 0}
}

type RpcAccountNetworkMode int32

const (
	RpcAccount_DefaultConfig RpcAccountNetworkMode = 0 // use network config that embedded in binary
	RpcAccount_LocalOnly     RpcAccountNetworkMode = 1 // disable any-sync network and use only local p2p nodes
	RpcAccount_CustomConfig  RpcAccountNetworkMode = 2 // use config provided in networkConfigFilePath
)

// Enum value maps for RpcAccountNetworkMode.
var (
	RpcAccountNetworkMode_name = map[int32]string{
		0: "DefaultConfig",
		1: "LocalOnly",
		2: "CustomConfig",
	}
	RpcAccountNetworkMode_value = map[string]int32{
		"DefaultConfig": 0,
		"LocalOnly":     1,
		"CustomConfig":  2,
	}
)

func (x RpcAccountNetworkMode) Enum() *RpcAccountNetworkMode {
	p := new(RpcAccountNetworkMode)
	*p = x
	return p
}

func (x RpcAccountNetworkMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcAccountNetworkMode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[25].Descriptor()
}

func (RpcAccountNetworkMode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[25]
}

func (x RpcAccountNetworkMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcAccountNetworkMode.Descriptor instead.
func (RpcAccountNetworkMode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 3, 0}
}

type RpcAccountCreateResponseErrorCode int32

const (
	RpcAccountCreateResponseError_NULL                                     RpcAccountCreateResponseErrorCode = 0 // No error; Account should be non-empty
	RpcAccountCreateResponseError_UNKNOWN_ERROR                            RpcAccountCreateResponseErrorCode = 1 // Any other errors
	RpcAccountCreateResponseError_BAD_INPUT                                RpcAccountCreateResponseErrorCode = 2 // Avatar or name is not correct
	RpcAccountCreateResponseError_ACCOUNT_CREATED_BUT_FAILED_TO_START_NODE RpcAccountCreateResponseErrorCode = 101
	RpcAccountCreateResponseError_ACCOUNT_CREATED_BUT_FAILED_TO_SET_NAME   RpcAccountCreateResponseErrorCode = 102
	RpcAccountCreateResponseError_FAILED_TO_STOP_RUNNING_NODE              RpcAccountCreateResponseErrorCode = 104
	RpcAccountCreateResponseError_FAILED_TO_WRITE_CONFIG                   RpcAccountCreateResponseErrorCode = 105
	RpcAccountCreateResponseError_FAILED_TO_CREATE_LOCAL_REPO              RpcAccountCreateResponseErrorCode = 106
	RpcAccountCreateResponseError_ACCOUNT_CREATION_IS_CANCELED             RpcAccountCreateResponseErrorCode = 107
	RpcAccountCreateResponseError_CONFIG_FILE_NOT_FOUND                    RpcAccountCreateResponseErrorCode = 200
	RpcAccountCreateResponseError_CONFIG_FILE_INVALID                      RpcAccountCreateResponseErrorCode = 201
	RpcAccountCreateResponseError_CONFIG_FILE_NETWORK_ID_MISMATCH          RpcAccountCreateResponseErrorCode = 202
)

// Enum value maps for RpcAccountCreateResponseErrorCode.
var (
	RpcAccountCreateResponseErrorCode_name = map[int32]string{
		0:   "NULL",
		1:   "UNKNOWN_ERROR",
		2:   "BAD_INPUT",
		101: "ACCOUNT_CREATED_BUT_FAILED_TO_START_NODE",
		102: "ACCOUNT_CREATED_BUT_FAILED_TO_SET_NAME",
		104: "FAILED_TO_STOP_RUNNING_NODE",
		105: "FAILED_TO_WRITE_CONFIG",
		106: "FAILED_TO_CREATE_LOCAL_REPO",
		107: "ACCOUNT_CREATION_IS_CANCELED",
		200: "CONFIG_FILE_NOT_FOUND",
		201: "CONFIG_FILE_INVALID",
		202: "CONFIG_FILE_NETWORK_ID_MISMATCH",
	}
	RpcAccountCreateResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
		"ACCOUNT_CREATED_BUT_FAILED_TO_START_NODE": 101,
		"ACCOUNT_CREATED_BUT_FAILED_TO_SET_NAME":   102,
		"FAILED_TO_STOP_RUNNING_NODE":              104,
		"FAILED_TO_WRITE_CONFIG":                   105,
		"FAILED_TO_CREATE_LOCAL_REPO":              106,
		"ACCOUNT_CREATION_IS_CANCELED":             107,
		"CONFIG_FILE_NOT_FOUND":                    200,
		"CONFIG_FILE_INVALID":                      201,
		"CONFIG_FILE_NETWORK_ID_MISMATCH":          202,
	}
)

func (x RpcAccountCreateResponseErrorCode) Enum() *RpcAccountCreateResponseErrorCode {
	p := new(RpcAccountCreateResponseErrorCode)
	*p = x
	return p
}

func (x RpcAccountCreateResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcAccountCreateResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[26].Descriptor()
}

func (RpcAccountCreateResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[26]
}

func (x RpcAccountCreateResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcAccountCreateResponseErrorCode.Descriptor instead.
func (RpcAccountCreateResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 3, 1, 1, 0, 0}
}

type RpcAccountRecoverResponseErrorCode int32

const (
	RpcAccountRecoverResponseError_NULL                         RpcAccountRecoverResponseErrorCode = 0 // No error;
	RpcAccountRecoverResponseError_UNKNOWN_ERROR                RpcAccountRecoverResponseErrorCode = 1 // Any other errors
	RpcAccountRecoverResponseError_BAD_INPUT                    RpcAccountRecoverResponseErrorCode = 2
	RpcAccountRecoverResponseError_NEED_TO_RECOVER_WALLET_FIRST RpcAccountRecoverResponseErrorCode = 102
)

// Enum value maps for RpcAccountRecoverResponseErrorCode.
var (
	RpcAccountRecoverResponseErrorCode_name = map[int32]string{
		0:   "NULL",
		1:   "UNKNOWN_ERROR",
		2:   "BAD_INPUT",
		102: "NEED_TO_RECOVER_WALLET_FIRST",
	}
	RpcAccountRecoverResponseErrorCode_value = map[string]int32{
		"NULL":                         0,
		"UNKNOWN_ERROR":                1,
		"BAD_INPUT":                    2,
		"NEED_TO_RECOVER_WALLET_FIRST": 102,
	}
)

func (x RpcAccountRecoverResponseErrorCode) Enum() *RpcAccountRecoverResponseErrorCode {
	p := new(RpcAccountRecoverResponseErrorCode)
	*p = x
	return p
}

func (x RpcAccountRecoverResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcAccountRecoverResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[27].Descriptor()
}

func (RpcAccountRecoverResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[27]
}

func (x RpcAccountRecoverResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcAccountRecoverResponseErrorCode.Descriptor instead.
func (RpcAccountRecoverResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 3, 2, 1, 0, 0}
}

type RpcAccountDeleteResponseErrorCode int32

const (
	RpcAccountDeleteResponseError_NULL                       RpcAccountDeleteResponseErrorCode = 0 // No error;
	RpcAccountDeleteResponseError_UNKNOWN_ERROR              RpcAccountDeleteResponseErrorCode = 1 // Any other errors
	RpcAccountDeleteResponseError_BAD_INPUT                  RpcAccountDeleteResponseErrorCode = 2
	RpcAccountDeleteResponseError_ACCOUNT_IS_ALREADY_DELETED RpcAccountDeleteResponseErrorCode = 101
	RpcAccountDeleteResponseError_UNABLE_TO_CONNECT          RpcAccountDeleteResponseErrorCode = 102
)

// Enum value maps for RpcAccountDeleteResponseErrorCode.
var (
	RpcAccountDeleteResponseErrorCode_name = map[int32]string{
		0:   "NULL",
		1:   "UNKNOWN_ERROR",
		2:   "BAD_INPUT",
		101: "ACCOUNT_IS_ALREADY_DELETED",
		102: "UNABLE_TO_CONNECT",
	}
	RpcAccountDeleteResponseErrorCode_value = map[string]int32{
		"NULL":                       0,
		"UNKNOWN_ERROR":              1,
		"BAD_INPUT":                  2,
		"ACCOUNT_IS_ALREADY_DELETED": 101,
		"UNABLE_TO_CONNECT":          102,
	}
)

func (x RpcAccountDeleteResponseErrorCode) Enum() *RpcAccountDeleteResponseErrorCode {
	p := new(RpcAccountDeleteResponseErrorCode)
	*p = x
	return p
}

func (x RpcAccountDeleteResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcAccountDeleteResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[28].Descriptor()
}

func (RpcAccountDeleteResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[28]
}

func (x RpcAccountDeleteResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcAccountDeleteResponseErrorCode.Descriptor instead.
func (RpcAccountDeleteResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 3, 3, 1, 0, 0}
}

type RpcAccountRevertDeletionResponseErrorCode int32

const (
	RpcAccountRevertDeletionResponseError_NULL              RpcAccountRevertDeletionResponseErrorCode = 0 // No error;
	RpcAccountRevertDeletionResponseError_UNKNOWN_ERROR     RpcAccountRevertDeletionResponseErrorCode = 1 // Any other errors
	RpcAccountRevertDeletionResponseError_BAD_INPUT         RpcAccountRevertDeletionResponseErrorCode = 2
	RpcAccountRevertDeletionResponseError_ACCOUNT_IS_ACTIVE RpcAccountRevertDeletionResponseErrorCode = 101
	RpcAccountRevertDeletionResponseError_UNABLE_TO_CONNECT RpcAccountRevertDeletionResponseErrorCode = 102
)

// Enum value maps for RpcAccountRevertDeletionResponseErrorCode.
var (
	RpcAccountRevertDeletionResponseErrorCode_name = map[int32]string{
		0:   "NULL",
		1:   "UNKNOWN_ERROR",
		2:   "BAD_INPUT",
		101: "ACCOUNT_IS_ACTIVE",
		102: "UNABLE_TO_CONNECT",
	}
	RpcAccountRevertDeletionResponseErrorCode_value = map[string]int32{
		"NULL":              0,
		"UNKNOWN_ERROR":     1,
		"BAD_INPUT":         2,
		"ACCOUNT_IS_ACTIVE": 101,
		"UNABLE_TO_CONNECT": 102,
	}
)

func (x RpcAccountRevertDeletionResponseErrorCode) Enum() *RpcAccountRevertDeletionResponseErrorCode {
	p := new(RpcAccountRevertDeletionResponseErrorCode)
	*p = x
	return p
}

func (x RpcAccountRevertDeletionResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcAccountRevertDeletionResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[29].Descriptor()
}

func (RpcAccountRevertDeletionResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[29]
}

func (x RpcAccountRevertDeletionResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcAccountRevertDeletionResponseErrorCode.Descriptor instead.
func (RpcAccountRevertDeletionResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 3, 4, 1, 0, 0}
}

type RpcAccountMigrateResponseErrorCode int32

const (
	RpcAccountMigrateResponseError_NULL                  RpcAccountMigrateResponseErrorCode = 0 // No error
	RpcAccountMigrateResponseError_UNKNOWN_ERROR         RpcAccountMigrateResponseErrorCode = 1 // Any other errors
	RpcAccountMigrateResponseError_BAD_INPUT             RpcAccountMigrateResponseErrorCode = 2 // Id or root path is wrong
	RpcAccountMigrateResponseError_ACCOUNT_NOT_FOUND     RpcAccountMigrateResponseErrorCode = 101
	RpcAccountMigrateResponseError_CANCELED              RpcAccountMigrateResponseErrorCode = 102
	RpcAccountMigrateResponseError_NOT_ENOUGH_FREE_SPACE RpcAccountMigrateResponseErrorCode = 103 // TODO: [storage] Add specific error codes for migration problems
)

// Enum value maps for RpcAccountMigrateResponseErrorCode.
var (
	RpcAccountMigrateResponseErrorCode_name = map[int32]string{
		0:   "NULL",
		1:   "UNKNOWN_ERROR",
		2:   "BAD_INPUT",
		101: "ACCOUNT_NOT_FOUND",
		102: "CANCELED",
		103: "NOT_ENOUGH_FREE_SPACE",
	}
	RpcAccountMigrateResponseErrorCode_value = map[string]int32{
		"NULL":                  0,
		"UNKNOWN_ERROR":         1,
		"BAD_INPUT":             2,
		"ACCOUNT_NOT_FOUND":     101,
		"CANCELED":              102,
		"NOT_ENOUGH_FREE_SPACE": 103,
	}
)

func (x RpcAccountMigrateResponseErrorCode) Enum() *RpcAccountMigrateResponseErrorCode {
	p := new(RpcAccountMigrateResponseErrorCode)
	*p = x
	return p
}

func (x RpcAccountMigrateResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcAccountMigrateResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[30].Descriptor()
}

func (RpcAccountMigrateResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[30]
}

func (x RpcAccountMigrateResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcAccountMigrateResponseErrorCode.Descriptor instead.
func (RpcAccountMigrateResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 3, 5, 1, 0, 0}
}

type RpcAccountMigrateCancelResponseErrorCode int32

const (
	RpcAccountMigrateCancelResponseError_NULL          RpcAccountMigrateCancelResponseErrorCode = 0 // No error
	RpcAccountMigrateCancelResponseError_UNKNOWN_ERROR RpcAccountMigrateCancelResponseErrorCode = 1 // Any other errors
	RpcAccountMigrateCancelResponseError_BAD_INPUT     RpcAccountMigrateCancelResponseErrorCode = 2 // Id or root path is wrong
)

// Enum value maps for RpcAccountMigrateCancelResponseErrorCode.
var (
	RpcAccountMigrateCancelResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcAccountMigrateCancelResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcAccountMigrateCancelResponseErrorCode) Enum() *RpcAccountMigrateCancelResponseErrorCode {
	p := new(RpcAccountMigrateCancelResponseErrorCode)
	*p = x
	return p
}

func (x RpcAccountMigrateCancelResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcAccountMigrateCancelResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[31].Descriptor()
}

func (RpcAccountMigrateCancelResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[31]
}

func (x RpcAccountMigrateCancelResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcAccountMigrateCancelResponseErrorCode.Descriptor instead.
func (RpcAccountMigrateCancelResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 3, 6, 1, 0, 0}
}

type RpcAccountSelectResponseErrorCode int32

const (
	RpcAccountSelectResponseError_NULL                                                       RpcAccountSelectResponseErrorCode = 0 // No error
	RpcAccountSelectResponseError_UNKNOWN_ERROR                                              RpcAccountSelectResponseErrorCode = 1 // Any other errors
	RpcAccountSelectResponseError_BAD_INPUT                                                  RpcAccountSelectResponseErrorCode = 2 // Id or root path is wrong
	RpcAccountSelectResponseError_FAILED_TO_CREATE_LOCAL_REPO                                RpcAccountSelectResponseErrorCode = 101
	RpcAccountSelectResponseError_LOCAL_REPO_EXISTS_BUT_CORRUPTED                            RpcAccountSelectResponseErrorCode = 102
	RpcAccountSelectResponseError_FAILED_TO_RUN_NODE                                         RpcAccountSelectResponseErrorCode = 103
	RpcAccountSelectResponseError_FAILED_TO_FIND_ACCOUNT_INFO                                RpcAccountSelectResponseErrorCode = 104
	RpcAccountSelectResponseError_LOCAL_REPO_NOT_EXISTS_AND_MNEMONIC_NOT_SET                 RpcAccountSelectResponseErrorCode = 105
	RpcAccountSelectResponseError_FAILED_TO_STOP_SEARCHER_NODE                               RpcAccountSelectResponseErrorCode = 106
	RpcAccountSelectResponseError_ANOTHER_ANYTYPE_PROCESS_IS_RUNNING                         RpcAccountSelectResponseErrorCode = 108
	RpcAccountSelectResponseError_FAILED_TO_FETCH_REMOTE_NODE_HAS_INCOMPATIBLE_PROTO_VERSION RpcAccountSelectResponseErrorCode = 110
	RpcAccountSelectResponseError_ACCOUNT_IS_DELETED                                         RpcAccountSelectResponseErrorCode = 111
	RpcAccountSelectResponseError_ACCOUNT_LOAD_IS_CANCELED                                   RpcAccountSelectResponseErrorCode = 112
	RpcAccountSelectResponseError_ACCOUNT_STORE_NOT_MIGRATED                                 RpcAccountSelectResponseErrorCode = 113
	RpcAccountSelectResponseError_CONFIG_FILE_NOT_FOUND                                      RpcAccountSelectResponseErrorCode = 200
	RpcAccountSelectResponseError_CONFIG_FILE_INVALID                                        RpcAccountSelectResponseErrorCode = 201
	RpcAccountSelectResponseError_CONFIG_FILE_NETWORK_ID_MISMATCH                            RpcAccountSelectResponseErrorCode = 202
)

// Enum value maps for RpcAccountSelectResponseErrorCode.
var (
	RpcAccountSelectResponseErrorCode_name = map[int32]string{
		0:   "NULL",
		1:   "UNKNOWN_ERROR",
		2:   "BAD_INPUT",
		101: "FAILED_TO_CREATE_LOCAL_REPO",
		102: "LOCAL_REPO_EXISTS_BUT_CORRUPTED",
		103: "FAILED_TO_RUN_NODE",
		104: "FAILED_TO_FIND_ACCOUNT_INFO",
		105: "LOCAL_REPO_NOT_EXISTS_AND_MNEMONIC_NOT_SET",
		106: "FAILED_TO_STOP_SEARCHER_NODE",
		108: "ANOTHER_ANYTYPE_PROCESS_IS_RUNNING",
		110: "FAILED_TO_FETCH_REMOTE_NODE_HAS_INCOMPATIBLE_PROTO_VERSION",
		111: "ACCOUNT_IS_DELETED",
		112: "ACCOUNT_LOAD_IS_CANCELED",
		113: "ACCOUNT_STORE_NOT_MIGRATED",
		200: "CONFIG_FILE_NOT_FOUND",
		201: "CONFIG_FILE_INVALID",
		202: "CONFIG_FILE_NETWORK_ID_MISMATCH",
	}
	RpcAccountSelectResponseErrorCode_value = map[string]int32{
		"NULL":                                       0,
		"UNKNOWN_ERROR":                              1,
		"BAD_INPUT":                                  2,
		"FAILED_TO_CREATE_LOCAL_REPO":                101,
		"LOCAL_REPO_EXISTS_BUT_CORRUPTED":            102,
		"FAILED_TO_RUN_NODE":                         103,
		"FAILED_TO_FIND_ACCOUNT_INFO":                104,
		"LOCAL_REPO_NOT_EXISTS_AND_MNEMONIC_NOT_SET": 105,
		"FAILED_TO_STOP_SEARCHER_NODE":               106,
		"ANOTHER_ANYTYPE_PROCESS_IS_RUNNING":         108,
		"FAILED_TO_FETCH_REMOTE_NODE_HAS_INCOMPATIBLE_PROTO_VERSION": 110,
		"ACCOUNT_IS_DELETED":              111,
		"ACCOUNT_LOAD_IS_CANCELED":        112,
		"ACCOUNT_STORE_NOT_MIGRATED":      113,
		"CONFIG_FILE_NOT_FOUND":           200,
		"CONFIG_FILE_INVALID":             201,
		"CONFIG_FILE_NETWORK_ID_MISMATCH": 202,
	}
)

func (x RpcAccountSelectResponseErrorCode) Enum() *RpcAccountSelectResponseErrorCode {
	p := new(RpcAccountSelectResponseErrorCode)
	*p = x
	return p
}

func (x RpcAccountSelectResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcAccountSelectResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[32].Descriptor()
}

func (RpcAccountSelectResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[32]
}

func (x RpcAccountSelectResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcAccountSelectResponseErrorCode.Descriptor instead.
func (RpcAccountSelectResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 3, 7, 1, 0, 0}
}

type RpcAccountStopResponseErrorCode int32

const (
	RpcAccountStopResponseError_NULL                          RpcAccountStopResponseErrorCode = 0 // No error
	RpcAccountStopResponseError_UNKNOWN_ERROR                 RpcAccountStopResponseErrorCode = 1 // Any other errors
	RpcAccountStopResponseError_BAD_INPUT                     RpcAccountStopResponseErrorCode = 2 // Id or root path is wrong
	RpcAccountStopResponseError_ACCOUNT_IS_NOT_RUNNING        RpcAccountStopResponseErrorCode = 101
	RpcAccountStopResponseError_FAILED_TO_STOP_NODE           RpcAccountStopResponseErrorCode = 102
	RpcAccountStopResponseError_FAILED_TO_REMOVE_ACCOUNT_DATA RpcAccountStopResponseErrorCode = 103
)

// Enum value maps for RpcAccountStopResponseErrorCode.
var (
	RpcAccountStopResponseErrorCode_name = map[int32]string{
		0:   "NULL",
		1:   "UNKNOWN_ERROR",
		2:   "BAD_INPUT",
		101: "ACCOUNT_IS_NOT_RUNNING",
		102: "FAILED_TO_STOP_NODE",
		103: "FAILED_TO_REMOVE_ACCOUNT_DATA",
	}
	RpcAccountStopResponseErrorCode_value = map[string]int32{
		"NULL":                          0,
		"UNKNOWN_ERROR":                 1,
		"BAD_INPUT":                     2,
		"ACCOUNT_IS_NOT_RUNNING":        101,
		"FAILED_TO_STOP_NODE":           102,
		"FAILED_TO_REMOVE_ACCOUNT_DATA": 103,
	}
)

func (x RpcAccountStopResponseErrorCode) Enum() *RpcAccountStopResponseErrorCode {
	p := new(RpcAccountStopResponseErrorCode)
	*p = x
	return p
}

func (x RpcAccountStopResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcAccountStopResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[33].Descriptor()
}

func (RpcAccountStopResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[33]
}

func (x RpcAccountStopResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcAccountStopResponseErrorCode.Descriptor instead.
func (RpcAccountStopResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 3, 8, 1, 0, 0}
}

type RpcAccountMoveResponseErrorCode int32

const (
	RpcAccountMoveResponseError_NULL                           RpcAccountMoveResponseErrorCode = 0
	RpcAccountMoveResponseError_UNKNOWN_ERROR                  RpcAccountMoveResponseErrorCode = 1
	RpcAccountMoveResponseError_BAD_INPUT                      RpcAccountMoveResponseErrorCode = 2
	RpcAccountMoveResponseError_FAILED_TO_STOP_NODE            RpcAccountMoveResponseErrorCode = 101
	RpcAccountMoveResponseError_FAILED_TO_IDENTIFY_ACCOUNT_DIR RpcAccountMoveResponseErrorCode = 102
	RpcAccountMoveResponseError_FAILED_TO_REMOVE_ACCOUNT_DATA  RpcAccountMoveResponseErrorCode = 103
	RpcAccountMoveResponseError_FAILED_TO_CREATE_LOCAL_REPO    RpcAccountMoveResponseErrorCode = 104
	RpcAccountMoveResponseError_FAILED_TO_WRITE_CONFIG         RpcAccountMoveResponseErrorCode = 105
	RpcAccountMoveResponseError_FAILED_TO_GET_CONFIG           RpcAccountMoveResponseErrorCode = 106
)

// Enum value maps for RpcAccountMoveResponseErrorCode.
var (
	RpcAccountMoveResponseErrorCode_name = map[int32]string{
		0:   "NULL",
		1:   "UNKNOWN_ERROR",
		2:   "BAD_INPUT",
		101: "FAILED_TO_STOP_NODE",
		102: "FAILED_TO_IDENTIFY_ACCOUNT_DIR",
		103: "FAILED_TO_REMOVE_ACCOUNT_DATA",
		104: "FAILED_TO_CREATE_LOCAL_REPO",
		105: "FAILED_TO_WRITE_CONFIG",
		106: "FAILED_TO_GET_CONFIG",
	}
	RpcAccountMoveResponseErrorCode_value = map[string]int32{
		"NULL":                           0,
		"UNKNOWN_ERROR":                  1,
		"BAD_INPUT":                      2,
		"FAILED_TO_STOP_NODE":            101,
		"FAILED_TO_IDENTIFY_ACCOUNT_DIR": 102,
		"FAILED_TO_REMOVE_ACCOUNT_DATA":  103,
		"FAILED_TO_CREATE_LOCAL_REPO":    104,
		"FAILED_TO_WRITE_CONFIG":         105,
		"FAILED_TO_GET_CONFIG":           106,
	}
)

func (x RpcAccountMoveResponseErrorCode) Enum() *RpcAccountMoveResponseErrorCode {
	p := new(RpcAccountMoveResponseErrorCode)
	*p = x
	return p
}

func (x RpcAccountMoveResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcAccountMoveResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[34].Descriptor()
}

func (RpcAccountMoveResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[34]
}

func (x RpcAccountMoveResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcAccountMoveResponseErrorCode.Descriptor instead.
func (RpcAccountMoveResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 3, 9, 1, 0, 0}
}

type RpcAccountConfigUpdateTimezones int32

const (
	RpcAccountConfigUpdate_GMT RpcAccountConfigUpdateTimezones = 0
	RpcAccountConfigUpdate_ECT RpcAccountConfigUpdateTimezones = 1
	RpcAccountConfigUpdate_EET RpcAccountConfigUpdateTimezones = 2
	RpcAccountConfigUpdate_EAT RpcAccountConfigUpdateTimezones = 3
	RpcAccountConfigUpdate_MET RpcAccountConfigUpdateTimezones = 4
	RpcAccountConfigUpdate_NET RpcAccountConfigUpdateTimezones = 5
	RpcAccountConfigUpdate_PLT RpcAccountConfigUpdateTimezones = 6
	RpcAccountConfigUpdate_IST RpcAccountConfigUpdateTimezones = 7
	RpcAccountConfigUpdate_BST RpcAccountConfigUpdateTimezones = 8
	RpcAccountConfigUpdate_VST RpcAccountConfigUpdateTimezones = 9
	RpcAccountConfigUpdate_CTT RpcAccountConfigUpdateTimezones = 10
	RpcAccountConfigUpdate_JST RpcAccountConfigUpdateTimezones = 11
	RpcAccountConfigUpdate_ACT RpcAccountConfigUpdateTimezones = 12
	RpcAccountConfigUpdate_AET RpcAccountConfigUpdateTimezones = 13
	RpcAccountConfigUpdate_SST RpcAccountConfigUpdateTimezones = 14
	RpcAccountConfigUpdate_NST RpcAccountConfigUpdateTimezones = 15
	RpcAccountConfigUpdate_MIT RpcAccountConfigUpdateTimezones = 16
	RpcAccountConfigUpdate_HST RpcAccountConfigUpdateTimezones = 17
	RpcAccountConfigUpdate_AST RpcAccountConfigUpdateTimezones = 18
	RpcAccountConfigUpdate_PST RpcAccountConfigUpdateTimezones = 19
	RpcAccountConfigUpdate_MST RpcAccountConfigUpdateTimezones = 20
	RpcAccountConfigUpdate_CST RpcAccountConfigUpdateTimezones = 21
	RpcAccountConfigUpdate_IET RpcAccountConfigUpdateTimezones = 22
	RpcAccountConfigUpdate_PRT RpcAccountConfigUpdateTimezones = 23
	RpcAccountConfigUpdate_CNT RpcAccountConfigUpdateTimezones = 24
	RpcAccountConfigUpdate_BET RpcAccountConfigUpdateTimezones = 25
	RpcAccountConfigUpdate_BRT RpcAccountConfigUpdateTimezones = 26
	RpcAccountConfigUpdate_CAT RpcAccountConfigUpdateTimezones = 27
)

// Enum value maps for RpcAccountConfigUpdateTimezones.
var (
	RpcAccountConfigUpdateTimezones_name = map[int32]string{
		0:  "GMT",
		1:  "ECT",
		2:  "EET",
		3:  "EAT",
		4:  "MET",
		5:  "NET",
		6:  "PLT",
		7:  "IST",
		8:  "BST",
		9:  "VST",
		10: "CTT",
		11: "JST",
		12: "ACT",
		13: "AET",
		14: "SST",
		15: "NST",
		16: "MIT",
		17: "HST",
		18: "AST",
		19: "PST",
		20: "MST",
		21: "CST",
		22: "IET",
		23: "PRT",
		24: "CNT",
		25: "BET",
		26: "BRT",
		27: "CAT",
	}
	RpcAccountConfigUpdateTimezones_value = map[string]int32{
		"GMT": 0,
		"ECT": 1,
		"EET": 2,
		"EAT": 3,
		"MET": 4,
		"NET": 5,
		"PLT": 6,
		"IST": 7,
		"BST": 8,
		"VST": 9,
		"CTT": 10,
		"JST": 11,
		"ACT": 12,
		"AET": 13,
		"SST": 14,
		"NST": 15,
		"MIT": 16,
		"HST": 17,
		"AST": 18,
		"PST": 19,
		"MST": 20,
		"CST": 21,
		"IET": 22,
		"PRT": 23,
		"CNT": 24,
		"BET": 25,
		"BRT": 26,
		"CAT": 27,
	}
)

func (x RpcAccountConfigUpdateTimezones) Enum() *RpcAccountConfigUpdateTimezones {
	p := new(RpcAccountConfigUpdateTimezones)
	*p = x
	return p
}

func (x RpcAccountConfigUpdateTimezones) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcAccountConfigUpdateTimezones) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[35].Descriptor()
}

func (RpcAccountConfigUpdateTimezones) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[35]
}

func (x RpcAccountConfigUpdateTimezones) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcAccountConfigUpdateTimezones.Descriptor instead.
func (RpcAccountConfigUpdateTimezones) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 3, 10, 0}
}

type RpcAccountConfigUpdateResponseErrorCode int32

const (
	RpcAccountConfigUpdateResponseError_NULL                   RpcAccountConfigUpdateResponseErrorCode = 0
	RpcAccountConfigUpdateResponseError_UNKNOWN_ERROR          RpcAccountConfigUpdateResponseErrorCode = 1
	RpcAccountConfigUpdateResponseError_BAD_INPUT              RpcAccountConfigUpdateResponseErrorCode = 2
	RpcAccountConfigUpdateResponseError_ACCOUNT_IS_NOT_RUNNING RpcAccountConfigUpdateResponseErrorCode = 101
	RpcAccountConfigUpdateResponseError_FAILED_TO_WRITE_CONFIG RpcAccountConfigUpdateResponseErrorCode = 102
)

// Enum value maps for RpcAccountConfigUpdateResponseErrorCode.
var (
	RpcAccountConfigUpdateResponseErrorCode_name = map[int32]string{
		0:   "NULL",
		1:   "UNKNOWN_ERROR",
		2:   "BAD_INPUT",
		101: "ACCOUNT_IS_NOT_RUNNING",
		102: "FAILED_TO_WRITE_CONFIG",
	}
	RpcAccountConfigUpdateResponseErrorCode_value = map[string]int32{
		"NULL":                   0,
		"UNKNOWN_ERROR":          1,
		"BAD_INPUT":              2,
		"ACCOUNT_IS_NOT_RUNNING": 101,
		"FAILED_TO_WRITE_CONFIG": 102,
	}
)

func (x RpcAccountConfigUpdateResponseErrorCode) Enum() *RpcAccountConfigUpdateResponseErrorCode {
	p := new(RpcAccountConfigUpdateResponseErrorCode)
	*p = x
	return p
}

func (x RpcAccountConfigUpdateResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcAccountConfigUpdateResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[36].Descriptor()
}

func (RpcAccountConfigUpdateResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[36]
}

func (x RpcAccountConfigUpdateResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcAccountConfigUpdateResponseErrorCode.Descriptor instead.
func (RpcAccountConfigUpdateResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 3, 10, 1, 0, 0}
}

type RpcAccountRecoverFromLegacyExportResponseErrorCode int32

const (
	RpcAccountRecoverFromLegacyExportResponseError_NULL              RpcAccountRecoverFromLegacyExportResponseErrorCode = 0
	RpcAccountRecoverFromLegacyExportResponseError_UNKNOWN_ERROR     RpcAccountRecoverFromLegacyExportResponseErrorCode = 1
	RpcAccountRecoverFromLegacyExportResponseError_BAD_INPUT         RpcAccountRecoverFromLegacyExportResponseErrorCode = 2
	RpcAccountRecoverFromLegacyExportResponseError_DIFFERENT_ACCOUNT RpcAccountRecoverFromLegacyExportResponseErrorCode = 3
)

// Enum value maps for RpcAccountRecoverFromLegacyExportResponseErrorCode.
var (
	RpcAccountRecoverFromLegacyExportResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
		3: "DIFFERENT_ACCOUNT",
	}
	RpcAccountRecoverFromLegacyExportResponseErrorCode_value = map[string]int32{
		"NULL":              0,
		"UNKNOWN_ERROR":     1,
		"BAD_INPUT":         2,
		"DIFFERENT_ACCOUNT": 3,
	}
)

func (x RpcAccountRecoverFromLegacyExportResponseErrorCode) Enum() *RpcAccountRecoverFromLegacyExportResponseErrorCode {
	p := new(RpcAccountRecoverFromLegacyExportResponseErrorCode)
	*p = x
	return p
}

func (x RpcAccountRecoverFromLegacyExportResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcAccountRecoverFromLegacyExportResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[37].Descriptor()
}

func (RpcAccountRecoverFromLegacyExportResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[37]
}

func (x RpcAccountRecoverFromLegacyExportResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcAccountRecoverFromLegacyExportResponseErrorCode.Descriptor instead.
func (RpcAccountRecoverFromLegacyExportResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 3, 12, 1, 0, 0}
}

type RpcAccountEnableLocalNetworkSyncResponseErrorCode int32

const (
	RpcAccountEnableLocalNetworkSyncResponseError_NULL                   RpcAccountEnableLocalNetworkSyncResponseErrorCode = 0
	RpcAccountEnableLocalNetworkSyncResponseError_UNKNOWN_ERROR          RpcAccountEnableLocalNetworkSyncResponseErrorCode = 1
	RpcAccountEnableLocalNetworkSyncResponseError_BAD_INPUT              RpcAccountEnableLocalNetworkSyncResponseErrorCode = 2
	RpcAccountEnableLocalNetworkSyncResponseError_ACCOUNT_IS_NOT_RUNNING RpcAccountEnableLocalNetworkSyncResponseErrorCode = 4
)

// Enum value maps for RpcAccountEnableLocalNetworkSyncResponseErrorCode.
var (
	RpcAccountEnableLocalNetworkSyncResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
		4: "ACCOUNT_IS_NOT_RUNNING",
	}
	RpcAccountEnableLocalNetworkSyncResponseErrorCode_value = map[string]int32{
		"NULL":                   0,
		"UNKNOWN_ERROR":          1,
		"BAD_INPUT":              2,
		"ACCOUNT_IS_NOT_RUNNING": 4,
	}
)

func (x RpcAccountEnableLocalNetworkSyncResponseErrorCode) Enum() *RpcAccountEnableLocalNetworkSyncResponseErrorCode {
	p := new(RpcAccountEnableLocalNetworkSyncResponseErrorCode)
	*p = x
	return p
}

func (x RpcAccountEnableLocalNetworkSyncResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcAccountEnableLocalNetworkSyncResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[38].Descriptor()
}

func (RpcAccountEnableLocalNetworkSyncResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[38]
}

func (x RpcAccountEnableLocalNetworkSyncResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcAccountEnableLocalNetworkSyncResponseErrorCode.Descriptor instead.
func (RpcAccountEnableLocalNetworkSyncResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 3, 13, 1, 0, 0}
}

type RpcAccountChangeJsonApiAddrResponseErrorCode int32

const (
	RpcAccountChangeJsonApiAddrResponseError_NULL                   RpcAccountChangeJsonApiAddrResponseErrorCode = 0
	RpcAccountChangeJsonApiAddrResponseError_UNKNOWN_ERROR          RpcAccountChangeJsonApiAddrResponseErrorCode = 1
	RpcAccountChangeJsonApiAddrResponseError_BAD_INPUT              RpcAccountChangeJsonApiAddrResponseErrorCode = 2
	RpcAccountChangeJsonApiAddrResponseError_ACCOUNT_IS_NOT_RUNNING RpcAccountChangeJsonApiAddrResponseErrorCode = 4
)

// Enum value maps for RpcAccountChangeJsonApiAddrResponseErrorCode.
var (
	RpcAccountChangeJsonApiAddrResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
		4: "ACCOUNT_IS_NOT_RUNNING",
	}
	RpcAccountChangeJsonApiAddrResponseErrorCode_value = map[string]int32{
		"NULL":                   0,
		"UNKNOWN_ERROR":          1,
		"BAD_INPUT":              2,
		"ACCOUNT_IS_NOT_RUNNING": 4,
	}
)

func (x RpcAccountChangeJsonApiAddrResponseErrorCode) Enum() *RpcAccountChangeJsonApiAddrResponseErrorCode {
	p := new(RpcAccountChangeJsonApiAddrResponseErrorCode)
	*p = x
	return p
}

func (x RpcAccountChangeJsonApiAddrResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcAccountChangeJsonApiAddrResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[39].Descriptor()
}

func (RpcAccountChangeJsonApiAddrResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[39]
}

func (x RpcAccountChangeJsonApiAddrResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcAccountChangeJsonApiAddrResponseErrorCode.Descriptor instead.
func (RpcAccountChangeJsonApiAddrResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 3, 14, 1, 0, 0}
}

type RpcAccountChangeNetworkConfigAndRestartResponseErrorCode int32

const (
	RpcAccountChangeNetworkConfigAndRestartResponseError_NULL                            RpcAccountChangeNetworkConfigAndRestartResponseErrorCode = 0
	RpcAccountChangeNetworkConfigAndRestartResponseError_UNKNOWN_ERROR                   RpcAccountChangeNetworkConfigAndRestartResponseErrorCode = 1
	RpcAccountChangeNetworkConfigAndRestartResponseError_BAD_INPUT                       RpcAccountChangeNetworkConfigAndRestartResponseErrorCode = 2
	RpcAccountChangeNetworkConfigAndRestartResponseError_ACCOUNT_IS_NOT_RUNNING          RpcAccountChangeNetworkConfigAndRestartResponseErrorCode = 4
	RpcAccountChangeNetworkConfigAndRestartResponseError_ACCOUNT_FAILED_TO_STOP          RpcAccountChangeNetworkConfigAndRestartResponseErrorCode = 100
	RpcAccountChangeNetworkConfigAndRestartResponseError_CONFIG_FILE_NOT_FOUND           RpcAccountChangeNetworkConfigAndRestartResponseErrorCode = 200
	RpcAccountChangeNetworkConfigAndRestartResponseError_CONFIG_FILE_INVALID             RpcAccountChangeNetworkConfigAndRestartResponseErrorCode = 201
	RpcAccountChangeNetworkConfigAndRestartResponseError_CONFIG_FILE_NETWORK_ID_MISMATCH RpcAccountChangeNetworkConfigAndRestartResponseErrorCode = 202
)

// Enum value maps for RpcAccountChangeNetworkConfigAndRestartResponseErrorCode.
var (
	RpcAccountChangeNetworkConfigAndRestartResponseErrorCode_name = map[int32]string{
		0:   "NULL",
		1:   "UNKNOWN_ERROR",
		2:   "BAD_INPUT",
		4:   "ACCOUNT_IS_NOT_RUNNING",
		100: "ACCOUNT_FAILED_TO_STOP",
		200: "CONFIG_FILE_NOT_FOUND",
		201: "CONFIG_FILE_INVALID",
		202: "CONFIG_FILE_NETWORK_ID_MISMATCH",
	}
	RpcAccountChangeNetworkConfigAndRestartResponseErrorCode_value = map[string]int32{
		"NULL":                            0,
		"UNKNOWN_ERROR":                   1,
		"BAD_INPUT":                       2,
		"ACCOUNT_IS_NOT_RUNNING":          4,
		"ACCOUNT_FAILED_TO_STOP":          100,
		"CONFIG_FILE_NOT_FOUND":           200,
		"CONFIG_FILE_INVALID":             201,
		"CONFIG_FILE_NETWORK_ID_MISMATCH": 202,
	}
)

func (x RpcAccountChangeNetworkConfigAndRestartResponseErrorCode) Enum() *RpcAccountChangeNetworkConfigAndRestartResponseErrorCode {
	p := new(RpcAccountChangeNetworkConfigAndRestartResponseErrorCode)
	*p = x
	return p
}

func (x RpcAccountChangeNetworkConfigAndRestartResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcAccountChangeNetworkConfigAndRestartResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[40].Descriptor()
}

func (RpcAccountChangeNetworkConfigAndRestartResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[40]
}

func (x RpcAccountChangeNetworkConfigAndRestartResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcAccountChangeNetworkConfigAndRestartResponseErrorCode.Descriptor instead.
func (RpcAccountChangeNetworkConfigAndRestartResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 3, 15, 1, 0, 0}
}

type RpcAccountLocalLinkNewChallengeResponseErrorCode int32

const (
	RpcAccountLocalLinkNewChallengeResponseError_NULL                   RpcAccountLocalLinkNewChallengeResponseErrorCode = 0
	RpcAccountLocalLinkNewChallengeResponseError_UNKNOWN_ERROR          RpcAccountLocalLinkNewChallengeResponseErrorCode = 1
	RpcAccountLocalLinkNewChallengeResponseError_BAD_INPUT              RpcAccountLocalLinkNewChallengeResponseErrorCode = 2
	RpcAccountLocalLinkNewChallengeResponseError_ACCOUNT_IS_NOT_RUNNING RpcAccountLocalLinkNewChallengeResponseErrorCode = 101
	RpcAccountLocalLinkNewChallengeResponseError_TOO_MANY_REQUESTS      RpcAccountLocalLinkNewChallengeResponseErrorCode = 102 // protection from overuse
)

// Enum value maps for RpcAccountLocalLinkNewChallengeResponseErrorCode.
var (
	RpcAccountLocalLinkNewChallengeResponseErrorCode_name = map[int32]string{
		0:   "NULL",
		1:   "UNKNOWN_ERROR",
		2:   "BAD_INPUT",
		101: "ACCOUNT_IS_NOT_RUNNING",
		102: "TOO_MANY_REQUESTS",
	}
	RpcAccountLocalLinkNewChallengeResponseErrorCode_value = map[string]int32{
		"NULL":                   0,
		"UNKNOWN_ERROR":          1,
		"BAD_INPUT":              2,
		"ACCOUNT_IS_NOT_RUNNING": 101,
		"TOO_MANY_REQUESTS":      102,
	}
)

func (x RpcAccountLocalLinkNewChallengeResponseErrorCode) Enum() *RpcAccountLocalLinkNewChallengeResponseErrorCode {
	p := new(RpcAccountLocalLinkNewChallengeResponseErrorCode)
	*p = x
	return p
}

func (x RpcAccountLocalLinkNewChallengeResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcAccountLocalLinkNewChallengeResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[41].Descriptor()
}

func (RpcAccountLocalLinkNewChallengeResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[41]
}

func (x RpcAccountLocalLinkNewChallengeResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcAccountLocalLinkNewChallengeResponseErrorCode.Descriptor instead.
func (RpcAccountLocalLinkNewChallengeResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 3, 16, 0, 1, 0, 0}
}

type RpcAccountLocalLinkSolveChallengeResponseErrorCode int32

const (
	RpcAccountLocalLinkSolveChallengeResponseError_NULL                        RpcAccountLocalLinkSolveChallengeResponseErrorCode = 0
	RpcAccountLocalLinkSolveChallengeResponseError_UNKNOWN_ERROR               RpcAccountLocalLinkSolveChallengeResponseErrorCode = 1
	RpcAccountLocalLinkSolveChallengeResponseError_BAD_INPUT                   RpcAccountLocalLinkSolveChallengeResponseErrorCode = 2
	RpcAccountLocalLinkSolveChallengeResponseError_ACCOUNT_IS_NOT_RUNNING      RpcAccountLocalLinkSolveChallengeResponseErrorCode = 101
	RpcAccountLocalLinkSolveChallengeResponseError_INVALID_CHALLENGE_ID        RpcAccountLocalLinkSolveChallengeResponseErrorCode = 102
	RpcAccountLocalLinkSolveChallengeResponseError_CHALLENGE_ATTEMPTS_EXCEEDED RpcAccountLocalLinkSolveChallengeResponseErrorCode = 103
	RpcAccountLocalLinkSolveChallengeResponseError_INCORRECT_ANSWER            RpcAccountLocalLinkSolveChallengeResponseErrorCode = 104
)

// Enum value maps for RpcAccountLocalLinkSolveChallengeResponseErrorCode.
var (
	RpcAccountLocalLinkSolveChallengeResponseErrorCode_name = map[int32]string{
		0:   "NULL",
		1:   "UNKNOWN_ERROR",
		2:   "BAD_INPUT",
		101: "ACCOUNT_IS_NOT_RUNNING",
		102: "INVALID_CHALLENGE_ID",
		103: "CHALLENGE_ATTEMPTS_EXCEEDED",
		104: "INCORRECT_ANSWER",
	}
	RpcAccountLocalLinkSolveChallengeResponseErrorCode_value = map[string]int32{
		"NULL":                        0,
		"UNKNOWN_ERROR":               1,
		"BAD_INPUT":                   2,
		"ACCOUNT_IS_NOT_RUNNING":      101,
		"INVALID_CHALLENGE_ID":        102,
		"CHALLENGE_ATTEMPTS_EXCEEDED": 103,
		"INCORRECT_ANSWER":            104,
	}
)

func (x RpcAccountLocalLinkSolveChallengeResponseErrorCode) Enum() *RpcAccountLocalLinkSolveChallengeResponseErrorCode {
	p := new(RpcAccountLocalLinkSolveChallengeResponseErrorCode)
	*p = x
	return p
}

func (x RpcAccountLocalLinkSolveChallengeResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcAccountLocalLinkSolveChallengeResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[42].Descriptor()
}

func (RpcAccountLocalLinkSolveChallengeResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[42]
}

func (x RpcAccountLocalLinkSolveChallengeResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcAccountLocalLinkSolveChallengeResponseErrorCode.Descriptor instead.
func (RpcAccountLocalLinkSolveChallengeResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 3, 16, 1, 1, 0, 0}
}

type RpcWorkspaceGetCurrentResponseErrorCode int32

const (
	RpcWorkspaceGetCurrentResponseError_NULL          RpcWorkspaceGetCurrentResponseErrorCode = 0
	RpcWorkspaceGetCurrentResponseError_UNKNOWN_ERROR RpcWorkspaceGetCurrentResponseErrorCode = 1
	RpcWorkspaceGetCurrentResponseError_BAD_INPUT     RpcWorkspaceGetCurrentResponseErrorCode = 2 // ...
)

// Enum value maps for RpcWorkspaceGetCurrentResponseErrorCode.
var (
	RpcWorkspaceGetCurrentResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcWorkspaceGetCurrentResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcWorkspaceGetCurrentResponseErrorCode) Enum() *RpcWorkspaceGetCurrentResponseErrorCode {
	p := new(RpcWorkspaceGetCurrentResponseErrorCode)
	*p = x
	return p
}

func (x RpcWorkspaceGetCurrentResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcWorkspaceGetCurrentResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[43].Descriptor()
}

func (RpcWorkspaceGetCurrentResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[43]
}

func (x RpcWorkspaceGetCurrentResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcWorkspaceGetCurrentResponseErrorCode.Descriptor instead.
func (RpcWorkspaceGetCurrentResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 4, 0, 1, 0, 0}
}

type RpcWorkspaceGetAllResponseErrorCode int32

const (
	RpcWorkspaceGetAllResponseError_NULL          RpcWorkspaceGetAllResponseErrorCode = 0
	RpcWorkspaceGetAllResponseError_UNKNOWN_ERROR RpcWorkspaceGetAllResponseErrorCode = 1
	RpcWorkspaceGetAllResponseError_BAD_INPUT     RpcWorkspaceGetAllResponseErrorCode = 2 // ...
)

// Enum value maps for RpcWorkspaceGetAllResponseErrorCode.
var (
	RpcWorkspaceGetAllResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcWorkspaceGetAllResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcWorkspaceGetAllResponseErrorCode) Enum() *RpcWorkspaceGetAllResponseErrorCode {
	p := new(RpcWorkspaceGetAllResponseErrorCode)
	*p = x
	return p
}

func (x RpcWorkspaceGetAllResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcWorkspaceGetAllResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[44].Descriptor()
}

func (RpcWorkspaceGetAllResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[44]
}

func (x RpcWorkspaceGetAllResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcWorkspaceGetAllResponseErrorCode.Descriptor instead.
func (RpcWorkspaceGetAllResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 4, 1, 1, 0, 0}
}

type RpcWorkspaceCreateResponseErrorCode int32

const (
	RpcWorkspaceCreateResponseError_NULL          RpcWorkspaceCreateResponseErrorCode = 0
	RpcWorkspaceCreateResponseError_UNKNOWN_ERROR RpcWorkspaceCreateResponseErrorCode = 1
	RpcWorkspaceCreateResponseError_BAD_INPUT     RpcWorkspaceCreateResponseErrorCode = 2 // ...
)

// Enum value maps for RpcWorkspaceCreateResponseErrorCode.
var (
	RpcWorkspaceCreateResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcWorkspaceCreateResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcWorkspaceCreateResponseErrorCode) Enum() *RpcWorkspaceCreateResponseErrorCode {
	p := new(RpcWorkspaceCreateResponseErrorCode)
	*p = x
	return p
}

func (x RpcWorkspaceCreateResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcWorkspaceCreateResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[45].Descriptor()
}

func (RpcWorkspaceCreateResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[45]
}

func (x RpcWorkspaceCreateResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcWorkspaceCreateResponseErrorCode.Descriptor instead.
func (RpcWorkspaceCreateResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 4, 2, 1, 0, 0}
}

type RpcWorkspaceOpenResponseErrorCode int32

const (
	RpcWorkspaceOpenResponseError_NULL          RpcWorkspaceOpenResponseErrorCode = 0
	RpcWorkspaceOpenResponseError_UNKNOWN_ERROR RpcWorkspaceOpenResponseErrorCode = 1
	RpcWorkspaceOpenResponseError_BAD_INPUT     RpcWorkspaceOpenResponseErrorCode = 2
)

// Enum value maps for RpcWorkspaceOpenResponseErrorCode.
var (
	RpcWorkspaceOpenResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcWorkspaceOpenResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcWorkspaceOpenResponseErrorCode) Enum() *RpcWorkspaceOpenResponseErrorCode {
	p := new(RpcWorkspaceOpenResponseErrorCode)
	*p = x
	return p
}

func (x RpcWorkspaceOpenResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcWorkspaceOpenResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[46].Descriptor()
}

func (RpcWorkspaceOpenResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[46]
}

func (x RpcWorkspaceOpenResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcWorkspaceOpenResponseErrorCode.Descriptor instead.
func (RpcWorkspaceOpenResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 4, 3, 1, 0, 0}
}

type RpcWorkspaceObjectAddResponseErrorCode int32

const (
	RpcWorkspaceObjectAddResponseError_NULL          RpcWorkspaceObjectAddResponseErrorCode = 0
	RpcWorkspaceObjectAddResponseError_UNKNOWN_ERROR RpcWorkspaceObjectAddResponseErrorCode = 1
	RpcWorkspaceObjectAddResponseError_BAD_INPUT     RpcWorkspaceObjectAddResponseErrorCode = 2 // ...
)

// Enum value maps for RpcWorkspaceObjectAddResponseErrorCode.
var (
	RpcWorkspaceObjectAddResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcWorkspaceObjectAddResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcWorkspaceObjectAddResponseErrorCode) Enum() *RpcWorkspaceObjectAddResponseErrorCode {
	p := new(RpcWorkspaceObjectAddResponseErrorCode)
	*p = x
	return p
}

func (x RpcWorkspaceObjectAddResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcWorkspaceObjectAddResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[47].Descriptor()
}

func (RpcWorkspaceObjectAddResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[47]
}

func (x RpcWorkspaceObjectAddResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcWorkspaceObjectAddResponseErrorCode.Descriptor instead.
func (RpcWorkspaceObjectAddResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 4, 4, 0, 1, 0, 0}
}

type RpcWorkspaceObjectListAddResponseErrorCode int32

const (
	RpcWorkspaceObjectListAddResponseError_NULL          RpcWorkspaceObjectListAddResponseErrorCode = 0
	RpcWorkspaceObjectListAddResponseError_UNKNOWN_ERROR RpcWorkspaceObjectListAddResponseErrorCode = 1
	RpcWorkspaceObjectListAddResponseError_BAD_INPUT     RpcWorkspaceObjectListAddResponseErrorCode = 2 // ...
)

// Enum value maps for RpcWorkspaceObjectListAddResponseErrorCode.
var (
	RpcWorkspaceObjectListAddResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcWorkspaceObjectListAddResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcWorkspaceObjectListAddResponseErrorCode) Enum() *RpcWorkspaceObjectListAddResponseErrorCode {
	p := new(RpcWorkspaceObjectListAddResponseErrorCode)
	*p = x
	return p
}

func (x RpcWorkspaceObjectListAddResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcWorkspaceObjectListAddResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[48].Descriptor()
}

func (RpcWorkspaceObjectListAddResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[48]
}

func (x RpcWorkspaceObjectListAddResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcWorkspaceObjectListAddResponseErrorCode.Descriptor instead.
func (RpcWorkspaceObjectListAddResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 4, 4, 1, 1, 0, 0}
}

type RpcWorkspaceObjectListRemoveResponseErrorCode int32

const (
	RpcWorkspaceObjectListRemoveResponseError_NULL          RpcWorkspaceObjectListRemoveResponseErrorCode = 0
	RpcWorkspaceObjectListRemoveResponseError_UNKNOWN_ERROR RpcWorkspaceObjectListRemoveResponseErrorCode = 1
	RpcWorkspaceObjectListRemoveResponseError_BAD_INPUT     RpcWorkspaceObjectListRemoveResponseErrorCode = 2 // ...
)

// Enum value maps for RpcWorkspaceObjectListRemoveResponseErrorCode.
var (
	RpcWorkspaceObjectListRemoveResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcWorkspaceObjectListRemoveResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcWorkspaceObjectListRemoveResponseErrorCode) Enum() *RpcWorkspaceObjectListRemoveResponseErrorCode {
	p := new(RpcWorkspaceObjectListRemoveResponseErrorCode)
	*p = x
	return p
}

func (x RpcWorkspaceObjectListRemoveResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcWorkspaceObjectListRemoveResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[49].Descriptor()
}

func (RpcWorkspaceObjectListRemoveResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[49]
}

func (x RpcWorkspaceObjectListRemoveResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcWorkspaceObjectListRemoveResponseErrorCode.Descriptor instead.
func (RpcWorkspaceObjectListRemoveResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 4, 4, 2, 1, 0, 0}
}

type RpcWorkspaceSetInfoResponseErrorCode int32

const (
	RpcWorkspaceSetInfoResponseError_NULL          RpcWorkspaceSetInfoResponseErrorCode = 0
	RpcWorkspaceSetInfoResponseError_UNKNOWN_ERROR RpcWorkspaceSetInfoResponseErrorCode = 1
	RpcWorkspaceSetInfoResponseError_BAD_INPUT     RpcWorkspaceSetInfoResponseErrorCode = 2 // ...
)

// Enum value maps for RpcWorkspaceSetInfoResponseErrorCode.
var (
	RpcWorkspaceSetInfoResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcWorkspaceSetInfoResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcWorkspaceSetInfoResponseErrorCode) Enum() *RpcWorkspaceSetInfoResponseErrorCode {
	p := new(RpcWorkspaceSetInfoResponseErrorCode)
	*p = x
	return p
}

func (x RpcWorkspaceSetInfoResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcWorkspaceSetInfoResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[50].Descriptor()
}

func (RpcWorkspaceSetInfoResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[50]
}

func (x RpcWorkspaceSetInfoResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcWorkspaceSetInfoResponseErrorCode.Descriptor instead.
func (RpcWorkspaceSetInfoResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 4, 5, 1, 0, 0}
}

type RpcWorkspaceSelectResponseErrorCode int32

const (
	RpcWorkspaceSelectResponseError_NULL          RpcWorkspaceSelectResponseErrorCode = 0
	RpcWorkspaceSelectResponseError_UNKNOWN_ERROR RpcWorkspaceSelectResponseErrorCode = 1
	RpcWorkspaceSelectResponseError_BAD_INPUT     RpcWorkspaceSelectResponseErrorCode = 2 // ...
)

// Enum value maps for RpcWorkspaceSelectResponseErrorCode.
var (
	RpcWorkspaceSelectResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcWorkspaceSelectResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcWorkspaceSelectResponseErrorCode) Enum() *RpcWorkspaceSelectResponseErrorCode {
	p := new(RpcWorkspaceSelectResponseErrorCode)
	*p = x
	return p
}

func (x RpcWorkspaceSelectResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcWorkspaceSelectResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[51].Descriptor()
}

func (RpcWorkspaceSelectResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[51]
}

func (x RpcWorkspaceSelectResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcWorkspaceSelectResponseErrorCode.Descriptor instead.
func (RpcWorkspaceSelectResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 4, 6, 1, 0, 0}
}

type RpcWorkspaceExportResponseErrorCode int32

const (
	RpcWorkspaceExportResponseError_NULL          RpcWorkspaceExportResponseErrorCode = 0
	RpcWorkspaceExportResponseError_UNKNOWN_ERROR RpcWorkspaceExportResponseErrorCode = 1
	RpcWorkspaceExportResponseError_BAD_INPUT     RpcWorkspaceExportResponseErrorCode = 2 // ...
)

// Enum value maps for RpcWorkspaceExportResponseErrorCode.
var (
	RpcWorkspaceExportResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcWorkspaceExportResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcWorkspaceExportResponseErrorCode) Enum() *RpcWorkspaceExportResponseErrorCode {
	p := new(RpcWorkspaceExportResponseErrorCode)
	*p = x
	return p
}

func (x RpcWorkspaceExportResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcWorkspaceExportResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[52].Descriptor()
}

func (RpcWorkspaceExportResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[52]
}

func (x RpcWorkspaceExportResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcWorkspaceExportResponseErrorCode.Descriptor instead.
func (RpcWorkspaceExportResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 4, 7, 1, 0, 0}
}

type RpcPublishingPublishStatus int32

const (
	// PublishStatusCreated means publish is created but not uploaded yet
	RpcPublishing_PublishStatusCreated RpcPublishingPublishStatus = 0
	// PublishStatusCreated means publish is active
	RpcPublishing_PublishStatusPublished RpcPublishingPublishStatus = 1
)

// Enum value maps for RpcPublishingPublishStatus.
var (
	RpcPublishingPublishStatus_name = map[int32]string{
		0: "PublishStatusCreated",
		1: "PublishStatusPublished",
	}
	RpcPublishingPublishStatus_value = map[string]int32{
		"PublishStatusCreated":   0,
		"PublishStatusPublished": 1,
	}
)

func (x RpcPublishingPublishStatus) Enum() *RpcPublishingPublishStatus {
	p := new(RpcPublishingPublishStatus)
	*p = x
	return p
}

func (x RpcPublishingPublishStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcPublishingPublishStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[53].Descriptor()
}

func (RpcPublishingPublishStatus) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[53]
}

func (x RpcPublishingPublishStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcPublishingPublishStatus.Descriptor instead.
func (RpcPublishingPublishStatus) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 5, 0}
}

type RpcPublishingCreateResponseErrorCode int32

const (
	RpcPublishingCreateResponseError_NULL           RpcPublishingCreateResponseErrorCode = 0
	RpcPublishingCreateResponseError_UNKNOWN_ERROR  RpcPublishingCreateResponseErrorCode = 1
	RpcPublishingCreateResponseError_BAD_INPUT      RpcPublishingCreateResponseErrorCode = 2
	RpcPublishingCreateResponseError_NO_SUCH_OBJECT RpcPublishingCreateResponseErrorCode = 101
	RpcPublishingCreateResponseError_NO_SUCH_SPACE  RpcPublishingCreateResponseErrorCode = 102
	RpcPublishingCreateResponseError_LIMIT_EXCEEDED RpcPublishingCreateResponseErrorCode = 103
)

// Enum value maps for RpcPublishingCreateResponseErrorCode.
var (
	RpcPublishingCreateResponseErrorCode_name = map[int32]string{
		0:   "NULL",
		1:   "UNKNOWN_ERROR",
		2:   "BAD_INPUT",
		101: "NO_SUCH_OBJECT",
		102: "NO_SUCH_SPACE",
		103: "LIMIT_EXCEEDED",
	}
	RpcPublishingCreateResponseErrorCode_value = map[string]int32{
		"NULL":           0,
		"UNKNOWN_ERROR":  1,
		"BAD_INPUT":      2,
		"NO_SUCH_OBJECT": 101,
		"NO_SUCH_SPACE":  102,
		"LIMIT_EXCEEDED": 103,
	}
)

func (x RpcPublishingCreateResponseErrorCode) Enum() *RpcPublishingCreateResponseErrorCode {
	p := new(RpcPublishingCreateResponseErrorCode)
	*p = x
	return p
}

func (x RpcPublishingCreateResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcPublishingCreateResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[54].Descriptor()
}

func (RpcPublishingCreateResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[54]
}

func (x RpcPublishingCreateResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcPublishingCreateResponseErrorCode.Descriptor instead.
func (RpcPublishingCreateResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 5, 1, 1, 0, 0}
}

type RpcPublishingRemoveResponseErrorCode int32

const (
	RpcPublishingRemoveResponseError_NULL           RpcPublishingRemoveResponseErrorCode = 0
	RpcPublishingRemoveResponseError_UNKNOWN_ERROR  RpcPublishingRemoveResponseErrorCode = 1
	RpcPublishingRemoveResponseError_BAD_INPUT      RpcPublishingRemoveResponseErrorCode = 2
	RpcPublishingRemoveResponseError_NO_SUCH_OBJECT RpcPublishingRemoveResponseErrorCode = 101
	RpcPublishingRemoveResponseError_NO_SUCH_SPACE  RpcPublishingRemoveResponseErrorCode = 102
)

// Enum value maps for RpcPublishingRemoveResponseErrorCode.
var (
	RpcPublishingRemoveResponseErrorCode_name = map[int32]string{
		0:   "NULL",
		1:   "UNKNOWN_ERROR",
		2:   "BAD_INPUT",
		101: "NO_SUCH_OBJECT",
		102: "NO_SUCH_SPACE",
	}
	RpcPublishingRemoveResponseErrorCode_value = map[string]int32{
		"NULL":           0,
		"UNKNOWN_ERROR":  1,
		"BAD_INPUT":      2,
		"NO_SUCH_OBJECT": 101,
		"NO_SUCH_SPACE":  102,
	}
)

func (x RpcPublishingRemoveResponseErrorCode) Enum() *RpcPublishingRemoveResponseErrorCode {
	p := new(RpcPublishingRemoveResponseErrorCode)
	*p = x
	return p
}

func (x RpcPublishingRemoveResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcPublishingRemoveResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[55].Descriptor()
}

func (RpcPublishingRemoveResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[55]
}

func (x RpcPublishingRemoveResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcPublishingRemoveResponseErrorCode.Descriptor instead.
func (RpcPublishingRemoveResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 5, 2, 1, 0, 0}
}

type RpcPublishingListResponseErrorCode int32

const (
	RpcPublishingListResponseError_NULL          RpcPublishingListResponseErrorCode = 0
	RpcPublishingListResponseError_UNKNOWN_ERROR RpcPublishingListResponseErrorCode = 1
	RpcPublishingListResponseError_BAD_INPUT     RpcPublishingListResponseErrorCode = 2
	RpcPublishingListResponseError_NO_SUCH_SPACE RpcPublishingListResponseErrorCode = 102
)

// Enum value maps for RpcPublishingListResponseErrorCode.
var (
	RpcPublishingListResponseErrorCode_name = map[int32]string{
		0:   "NULL",
		1:   "UNKNOWN_ERROR",
		2:   "BAD_INPUT",
		102: "NO_SUCH_SPACE",
	}
	RpcPublishingListResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
		"NO_SUCH_SPACE": 102,
	}
)

func (x RpcPublishingListResponseErrorCode) Enum() *RpcPublishingListResponseErrorCode {
	p := new(RpcPublishingListResponseErrorCode)
	*p = x
	return p
}

func (x RpcPublishingListResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcPublishingListResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[56].Descriptor()
}

func (RpcPublishingListResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[56]
}

func (x RpcPublishingListResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcPublishingListResponseErrorCode.Descriptor instead.
func (RpcPublishingListResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 5, 3, 1, 0, 0}
}

type RpcPublishingResolveUriResponseErrorCode int32

const (
	RpcPublishingResolveUriResponseError_NULL          RpcPublishingResolveUriResponseErrorCode = 0
	RpcPublishingResolveUriResponseError_UNKNOWN_ERROR RpcPublishingResolveUriResponseErrorCode = 1
	RpcPublishingResolveUriResponseError_BAD_INPUT     RpcPublishingResolveUriResponseErrorCode = 2
	RpcPublishingResolveUriResponseError_NO_SUCH_URI   RpcPublishingResolveUriResponseErrorCode = 101
)

// Enum value maps for RpcPublishingResolveUriResponseErrorCode.
var (
	RpcPublishingResolveUriResponseErrorCode_name = map[int32]string{
		0:   "NULL",
		1:   "UNKNOWN_ERROR",
		2:   "BAD_INPUT",
		101: "NO_SUCH_URI",
	}
	RpcPublishingResolveUriResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
		"NO_SUCH_URI":   101,
	}
)

func (x RpcPublishingResolveUriResponseErrorCode) Enum() *RpcPublishingResolveUriResponseErrorCode {
	p := new(RpcPublishingResolveUriResponseErrorCode)
	*p = x
	return p
}

func (x RpcPublishingResolveUriResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcPublishingResolveUriResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[57].Descriptor()
}

func (RpcPublishingResolveUriResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[57]
}

func (x RpcPublishingResolveUriResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcPublishingResolveUriResponseErrorCode.Descriptor instead.
func (RpcPublishingResolveUriResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 5, 4, 1, 0, 0}
}

type RpcPublishingGetStatusResponseErrorCode int32

const (
	RpcPublishingGetStatusResponseError_NULL           RpcPublishingGetStatusResponseErrorCode = 0
	RpcPublishingGetStatusResponseError_UNKNOWN_ERROR  RpcPublishingGetStatusResponseErrorCode = 1
	RpcPublishingGetStatusResponseError_BAD_INPUT      RpcPublishingGetStatusResponseErrorCode = 2
	RpcPublishingGetStatusResponseError_NO_SUCH_OBJECT RpcPublishingGetStatusResponseErrorCode = 101
	RpcPublishingGetStatusResponseError_NO_SUCH_SPACE  RpcPublishingGetStatusResponseErrorCode = 102
)

// Enum value maps for RpcPublishingGetStatusResponseErrorCode.
var (
	RpcPublishingGetStatusResponseErrorCode_name = map[int32]string{
		0:   "NULL",
		1:   "UNKNOWN_ERROR",
		2:   "BAD_INPUT",
		101: "NO_SUCH_OBJECT",
		102: "NO_SUCH_SPACE",
	}
	RpcPublishingGetStatusResponseErrorCode_value = map[string]int32{
		"NULL":           0,
		"UNKNOWN_ERROR":  1,
		"BAD_INPUT":      2,
		"NO_SUCH_OBJECT": 101,
		"NO_SUCH_SPACE":  102,
	}
)

func (x RpcPublishingGetStatusResponseErrorCode) Enum() *RpcPublishingGetStatusResponseErrorCode {
	p := new(RpcPublishingGetStatusResponseErrorCode)
	*p = x
	return p
}

func (x RpcPublishingGetStatusResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcPublishingGetStatusResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[58].Descriptor()
}

func (RpcPublishingGetStatusResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[58]
}

func (x RpcPublishingGetStatusResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcPublishingGetStatusResponseErrorCode.Descriptor instead.
func (RpcPublishingGetStatusResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 5, 5, 1, 0, 0}
}

type RpcObjectOpenResponseErrorCode int32

const (
	RpcObjectOpenResponseError_NULL                  RpcObjectOpenResponseErrorCode = 0
	RpcObjectOpenResponseError_UNKNOWN_ERROR         RpcObjectOpenResponseErrorCode = 1
	RpcObjectOpenResponseError_BAD_INPUT             RpcObjectOpenResponseErrorCode = 2
	RpcObjectOpenResponseError_NOT_FOUND             RpcObjectOpenResponseErrorCode = 3
	RpcObjectOpenResponseError_ANYTYPE_NEEDS_UPGRADE RpcObjectOpenResponseErrorCode = 10 // failed to read unknown data format – need to upgrade anytype
	RpcObjectOpenResponseError_OBJECT_DELETED        RpcObjectOpenResponseErrorCode = 4  // ...
)

// Enum value maps for RpcObjectOpenResponseErrorCode.
var (
	RpcObjectOpenResponseErrorCode_name = map[int32]string{
		0:  "NULL",
		1:  "UNKNOWN_ERROR",
		2:  "BAD_INPUT",
		3:  "NOT_FOUND",
		10: "ANYTYPE_NEEDS_UPGRADE",
		4:  "OBJECT_DELETED",
	}
	RpcObjectOpenResponseErrorCode_value = map[string]int32{
		"NULL":                  0,
		"UNKNOWN_ERROR":         1,
		"BAD_INPUT":             2,
		"NOT_FOUND":             3,
		"ANYTYPE_NEEDS_UPGRADE": 10,
		"OBJECT_DELETED":        4,
	}
)

func (x RpcObjectOpenResponseErrorCode) Enum() *RpcObjectOpenResponseErrorCode {
	p := new(RpcObjectOpenResponseErrorCode)
	*p = x
	return p
}

func (x RpcObjectOpenResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcObjectOpenResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[59].Descriptor()
}

func (RpcObjectOpenResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[59]
}

func (x RpcObjectOpenResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcObjectOpenResponseErrorCode.Descriptor instead.
func (RpcObjectOpenResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 0, 1, 0, 0}
}

type RpcObjectCloseResponseErrorCode int32

const (
	RpcObjectCloseResponseError_NULL          RpcObjectCloseResponseErrorCode = 0
	RpcObjectCloseResponseError_UNKNOWN_ERROR RpcObjectCloseResponseErrorCode = 1
	RpcObjectCloseResponseError_BAD_INPUT     RpcObjectCloseResponseErrorCode = 2 // ...
)

// Enum value maps for RpcObjectCloseResponseErrorCode.
var (
	RpcObjectCloseResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcObjectCloseResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcObjectCloseResponseErrorCode) Enum() *RpcObjectCloseResponseErrorCode {
	p := new(RpcObjectCloseResponseErrorCode)
	*p = x
	return p
}

func (x RpcObjectCloseResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcObjectCloseResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[60].Descriptor()
}

func (RpcObjectCloseResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[60]
}

func (x RpcObjectCloseResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcObjectCloseResponseErrorCode.Descriptor instead.
func (RpcObjectCloseResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 1, 1, 0, 0}
}

type RpcObjectShowResponseErrorCode int32

const (
	RpcObjectShowResponseError_NULL                  RpcObjectShowResponseErrorCode = 0
	RpcObjectShowResponseError_UNKNOWN_ERROR         RpcObjectShowResponseErrorCode = 1
	RpcObjectShowResponseError_BAD_INPUT             RpcObjectShowResponseErrorCode = 2
	RpcObjectShowResponseError_NOT_FOUND             RpcObjectShowResponseErrorCode = 3
	RpcObjectShowResponseError_OBJECT_DELETED        RpcObjectShowResponseErrorCode = 4
	RpcObjectShowResponseError_ANYTYPE_NEEDS_UPGRADE RpcObjectShowResponseErrorCode = 10 // failed to read unknown data format – need to upgrade anytype
)

// Enum value maps for RpcObjectShowResponseErrorCode.
var (
	RpcObjectShowResponseErrorCode_name = map[int32]string{
		0:  "NULL",
		1:  "UNKNOWN_ERROR",
		2:  "BAD_INPUT",
		3:  "NOT_FOUND",
		4:  "OBJECT_DELETED",
		10: "ANYTYPE_NEEDS_UPGRADE",
	}
	RpcObjectShowResponseErrorCode_value = map[string]int32{
		"NULL":                  0,
		"UNKNOWN_ERROR":         1,
		"BAD_INPUT":             2,
		"NOT_FOUND":             3,
		"OBJECT_DELETED":        4,
		"ANYTYPE_NEEDS_UPGRADE": 10,
	}
)

func (x RpcObjectShowResponseErrorCode) Enum() *RpcObjectShowResponseErrorCode {
	p := new(RpcObjectShowResponseErrorCode)
	*p = x
	return p
}

func (x RpcObjectShowResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcObjectShowResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[61].Descriptor()
}

func (RpcObjectShowResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[61]
}

func (x RpcObjectShowResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcObjectShowResponseErrorCode.Descriptor instead.
func (RpcObjectShowResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 2, 1, 0, 0}
}

type RpcObjectCreateResponseErrorCode int32

const (
	RpcObjectCreateResponseError_NULL          RpcObjectCreateResponseErrorCode = 0
	RpcObjectCreateResponseError_UNKNOWN_ERROR RpcObjectCreateResponseErrorCode = 1
	RpcObjectCreateResponseError_BAD_INPUT     RpcObjectCreateResponseErrorCode = 2 // ...
)

// Enum value maps for RpcObjectCreateResponseErrorCode.
var (
	RpcObjectCreateResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcObjectCreateResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcObjectCreateResponseErrorCode) Enum() *RpcObjectCreateResponseErrorCode {
	p := new(RpcObjectCreateResponseErrorCode)
	*p = x
	return p
}

func (x RpcObjectCreateResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcObjectCreateResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[62].Descriptor()
}

func (RpcObjectCreateResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[62]
}

func (x RpcObjectCreateResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcObjectCreateResponseErrorCode.Descriptor instead.
func (RpcObjectCreateResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 3, 1, 0, 0}
}

type RpcObjectCreateBookmarkResponseErrorCode int32

const (
	RpcObjectCreateBookmarkResponseError_NULL          RpcObjectCreateBookmarkResponseErrorCode = 0
	RpcObjectCreateBookmarkResponseError_UNKNOWN_ERROR RpcObjectCreateBookmarkResponseErrorCode = 1
	RpcObjectCreateBookmarkResponseError_BAD_INPUT     RpcObjectCreateBookmarkResponseErrorCode = 2 // ...
)

// Enum value maps for RpcObjectCreateBookmarkResponseErrorCode.
var (
	RpcObjectCreateBookmarkResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcObjectCreateBookmarkResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcObjectCreateBookmarkResponseErrorCode) Enum() *RpcObjectCreateBookmarkResponseErrorCode {
	p := new(RpcObjectCreateBookmarkResponseErrorCode)
	*p = x
	return p
}

func (x RpcObjectCreateBookmarkResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcObjectCreateBookmarkResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[63].Descriptor()
}

func (RpcObjectCreateBookmarkResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[63]
}

func (x RpcObjectCreateBookmarkResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcObjectCreateBookmarkResponseErrorCode.Descriptor instead.
func (RpcObjectCreateBookmarkResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 4, 1, 0, 0}
}

type RpcObjectCreateRelationResponseErrorCode int32

const (
	RpcObjectCreateRelationResponseError_NULL          RpcObjectCreateRelationResponseErrorCode = 0
	RpcObjectCreateRelationResponseError_UNKNOWN_ERROR RpcObjectCreateRelationResponseErrorCode = 1
	RpcObjectCreateRelationResponseError_BAD_INPUT     RpcObjectCreateRelationResponseErrorCode = 2
)

// Enum value maps for RpcObjectCreateRelationResponseErrorCode.
var (
	RpcObjectCreateRelationResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcObjectCreateRelationResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcObjectCreateRelationResponseErrorCode) Enum() *RpcObjectCreateRelationResponseErrorCode {
	p := new(RpcObjectCreateRelationResponseErrorCode)
	*p = x
	return p
}

func (x RpcObjectCreateRelationResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcObjectCreateRelationResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[64].Descriptor()
}

func (RpcObjectCreateRelationResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[64]
}

func (x RpcObjectCreateRelationResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcObjectCreateRelationResponseErrorCode.Descriptor instead.
func (RpcObjectCreateRelationResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 5, 1, 0, 0}
}

type RpcObjectCreateRelationOptionResponseErrorCode int32

const (
	RpcObjectCreateRelationOptionResponseError_NULL          RpcObjectCreateRelationOptionResponseErrorCode = 0
	RpcObjectCreateRelationOptionResponseError_UNKNOWN_ERROR RpcObjectCreateRelationOptionResponseErrorCode = 1
	RpcObjectCreateRelationOptionResponseError_BAD_INPUT     RpcObjectCreateRelationOptionResponseErrorCode = 2
)

// Enum value maps for RpcObjectCreateRelationOptionResponseErrorCode.
var (
	RpcObjectCreateRelationOptionResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcObjectCreateRelationOptionResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcObjectCreateRelationOptionResponseErrorCode) Enum() *RpcObjectCreateRelationOptionResponseErrorCode {
	p := new(RpcObjectCreateRelationOptionResponseErrorCode)
	*p = x
	return p
}

func (x RpcObjectCreateRelationOptionResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcObjectCreateRelationOptionResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[65].Descriptor()
}

func (RpcObjectCreateRelationOptionResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[65]
}

func (x RpcObjectCreateRelationOptionResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcObjectCreateRelationOptionResponseErrorCode.Descriptor instead.
func (RpcObjectCreateRelationOptionResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 6, 1, 0, 0}
}

type RpcObjectCreateSetResponseErrorCode int32

const (
	RpcObjectCreateSetResponseError_NULL                    RpcObjectCreateSetResponseErrorCode = 0
	RpcObjectCreateSetResponseError_UNKNOWN_ERROR           RpcObjectCreateSetResponseErrorCode = 1
	RpcObjectCreateSetResponseError_BAD_INPUT               RpcObjectCreateSetResponseErrorCode = 2
	RpcObjectCreateSetResponseError_UNKNOWN_OBJECT_TYPE_URL RpcObjectCreateSetResponseErrorCode = 3
)

// Enum value maps for RpcObjectCreateSetResponseErrorCode.
var (
	RpcObjectCreateSetResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
		3: "UNKNOWN_OBJECT_TYPE_URL",
	}
	RpcObjectCreateSetResponseErrorCode_value = map[string]int32{
		"NULL":                    0,
		"UNKNOWN_ERROR":           1,
		"BAD_INPUT":               2,
		"UNKNOWN_OBJECT_TYPE_URL": 3,
	}
)

func (x RpcObjectCreateSetResponseErrorCode) Enum() *RpcObjectCreateSetResponseErrorCode {
	p := new(RpcObjectCreateSetResponseErrorCode)
	*p = x
	return p
}

func (x RpcObjectCreateSetResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcObjectCreateSetResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[66].Descriptor()
}

func (RpcObjectCreateSetResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[66]
}

func (x RpcObjectCreateSetResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcObjectCreateSetResponseErrorCode.Descriptor instead.
func (RpcObjectCreateSetResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 7, 1, 0, 0}
}

type RpcObjectCreateObjectTypeResponseErrorCode int32

const (
	RpcObjectCreateObjectTypeResponseError_NULL          RpcObjectCreateObjectTypeResponseErrorCode = 0
	RpcObjectCreateObjectTypeResponseError_UNKNOWN_ERROR RpcObjectCreateObjectTypeResponseErrorCode = 1
	RpcObjectCreateObjectTypeResponseError_BAD_INPUT     RpcObjectCreateObjectTypeResponseErrorCode = 2 // ...
)

// Enum value maps for RpcObjectCreateObjectTypeResponseErrorCode.
var (
	RpcObjectCreateObjectTypeResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcObjectCreateObjectTypeResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcObjectCreateObjectTypeResponseErrorCode) Enum() *RpcObjectCreateObjectTypeResponseErrorCode {
	p := new(RpcObjectCreateObjectTypeResponseErrorCode)
	*p = x
	return p
}

func (x RpcObjectCreateObjectTypeResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcObjectCreateObjectTypeResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[67].Descriptor()
}

func (RpcObjectCreateObjectTypeResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[67]
}

func (x RpcObjectCreateObjectTypeResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcObjectCreateObjectTypeResponseErrorCode.Descriptor instead.
func (RpcObjectCreateObjectTypeResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 8, 1, 0, 0}
}

type RpcObjectCreateFromUrlResponseErrorCode int32

const (
	RpcObjectCreateFromUrlResponseError_NULL          RpcObjectCreateFromUrlResponseErrorCode = 0
	RpcObjectCreateFromUrlResponseError_UNKNOWN_ERROR RpcObjectCreateFromUrlResponseErrorCode = 1
	RpcObjectCreateFromUrlResponseError_BAD_INPUT     RpcObjectCreateFromUrlResponseErrorCode = 2 // ...
)

// Enum value maps for RpcObjectCreateFromUrlResponseErrorCode.
var (
	RpcObjectCreateFromUrlResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcObjectCreateFromUrlResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcObjectCreateFromUrlResponseErrorCode) Enum() *RpcObjectCreateFromUrlResponseErrorCode {
	p := new(RpcObjectCreateFromUrlResponseErrorCode)
	*p = x
	return p
}

func (x RpcObjectCreateFromUrlResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcObjectCreateFromUrlResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[68].Descriptor()
}

func (RpcObjectCreateFromUrlResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[68]
}

func (x RpcObjectCreateFromUrlResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcObjectCreateFromUrlResponseErrorCode.Descriptor instead.
func (RpcObjectCreateFromUrlResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 9, 1, 0, 0}
}

type RpcObjectChatAddResponseErrorCode int32

const (
	RpcObjectChatAddResponseError_NULL          RpcObjectChatAddResponseErrorCode = 0
	RpcObjectChatAddResponseError_UNKNOWN_ERROR RpcObjectChatAddResponseErrorCode = 1
	RpcObjectChatAddResponseError_BAD_INPUT     RpcObjectChatAddResponseErrorCode = 2 // ...
)

// Enum value maps for RpcObjectChatAddResponseErrorCode.
var (
	RpcObjectChatAddResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcObjectChatAddResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcObjectChatAddResponseErrorCode) Enum() *RpcObjectChatAddResponseErrorCode {
	p := new(RpcObjectChatAddResponseErrorCode)
	*p = x
	return p
}

func (x RpcObjectChatAddResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcObjectChatAddResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[69].Descriptor()
}

func (RpcObjectChatAddResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[69]
}

func (x RpcObjectChatAddResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcObjectChatAddResponseErrorCode.Descriptor instead.
func (RpcObjectChatAddResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 10, 1, 0, 0}
}

type RpcObjectBookmarkFetchResponseErrorCode int32

const (
	RpcObjectBookmarkFetchResponseError_NULL          RpcObjectBookmarkFetchResponseErrorCode = 0
	RpcObjectBookmarkFetchResponseError_UNKNOWN_ERROR RpcObjectBookmarkFetchResponseErrorCode = 1
	RpcObjectBookmarkFetchResponseError_BAD_INPUT     RpcObjectBookmarkFetchResponseErrorCode = 2 // ...
)

// Enum value maps for RpcObjectBookmarkFetchResponseErrorCode.
var (
	RpcObjectBookmarkFetchResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcObjectBookmarkFetchResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcObjectBookmarkFetchResponseErrorCode) Enum() *RpcObjectBookmarkFetchResponseErrorCode {
	p := new(RpcObjectBookmarkFetchResponseErrorCode)
	*p = x
	return p
}

func (x RpcObjectBookmarkFetchResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcObjectBookmarkFetchResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[70].Descriptor()
}

func (RpcObjectBookmarkFetchResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[70]
}

func (x RpcObjectBookmarkFetchResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcObjectBookmarkFetchResponseErrorCode.Descriptor instead.
func (RpcObjectBookmarkFetchResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 11, 1, 0, 0}
}

type RpcObjectToBookmarkResponseErrorCode int32

const (
	RpcObjectToBookmarkResponseError_NULL          RpcObjectToBookmarkResponseErrorCode = 0
	RpcObjectToBookmarkResponseError_UNKNOWN_ERROR RpcObjectToBookmarkResponseErrorCode = 1
	RpcObjectToBookmarkResponseError_BAD_INPUT     RpcObjectToBookmarkResponseErrorCode = 2 // ...
)

// Enum value maps for RpcObjectToBookmarkResponseErrorCode.
var (
	RpcObjectToBookmarkResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcObjectToBookmarkResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcObjectToBookmarkResponseErrorCode) Enum() *RpcObjectToBookmarkResponseErrorCode {
	p := new(RpcObjectToBookmarkResponseErrorCode)
	*p = x
	return p
}

func (x RpcObjectToBookmarkResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcObjectToBookmarkResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[71].Descriptor()
}

func (RpcObjectToBookmarkResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[71]
}

func (x RpcObjectToBookmarkResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcObjectToBookmarkResponseErrorCode.Descriptor instead.
func (RpcObjectToBookmarkResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 12, 1, 0, 0}
}

type RpcObjectDuplicateResponseErrorCode int32

const (
	RpcObjectDuplicateResponseError_NULL          RpcObjectDuplicateResponseErrorCode = 0
	RpcObjectDuplicateResponseError_UNKNOWN_ERROR RpcObjectDuplicateResponseErrorCode = 1
	RpcObjectDuplicateResponseError_BAD_INPUT     RpcObjectDuplicateResponseErrorCode = 2 // ...
)

// Enum value maps for RpcObjectDuplicateResponseErrorCode.
var (
	RpcObjectDuplicateResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcObjectDuplicateResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcObjectDuplicateResponseErrorCode) Enum() *RpcObjectDuplicateResponseErrorCode {
	p := new(RpcObjectDuplicateResponseErrorCode)
	*p = x
	return p
}

func (x RpcObjectDuplicateResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcObjectDuplicateResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[72].Descriptor()
}

func (RpcObjectDuplicateResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[72]
}

func (x RpcObjectDuplicateResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcObjectDuplicateResponseErrorCode.Descriptor instead.
func (RpcObjectDuplicateResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 13, 1, 0, 0}
}

type RpcObjectOpenBreadcrumbsResponseErrorCode int32

const (
	RpcObjectOpenBreadcrumbsResponseError_NULL          RpcObjectOpenBreadcrumbsResponseErrorCode = 0
	RpcObjectOpenBreadcrumbsResponseError_UNKNOWN_ERROR RpcObjectOpenBreadcrumbsResponseErrorCode = 1
	RpcObjectOpenBreadcrumbsResponseError_BAD_INPUT     RpcObjectOpenBreadcrumbsResponseErrorCode = 2 // ...
)

// Enum value maps for RpcObjectOpenBreadcrumbsResponseErrorCode.
var (
	RpcObjectOpenBreadcrumbsResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcObjectOpenBreadcrumbsResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcObjectOpenBreadcrumbsResponseErrorCode) Enum() *RpcObjectOpenBreadcrumbsResponseErrorCode {
	p := new(RpcObjectOpenBreadcrumbsResponseErrorCode)
	*p = x
	return p
}

func (x RpcObjectOpenBreadcrumbsResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcObjectOpenBreadcrumbsResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[73].Descriptor()
}

func (RpcObjectOpenBreadcrumbsResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[73]
}

func (x RpcObjectOpenBreadcrumbsResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcObjectOpenBreadcrumbsResponseErrorCode.Descriptor instead.
func (RpcObjectOpenBreadcrumbsResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 14, 1, 0, 0}
}

type RpcObjectSetBreadcrumbsResponseErrorCode int32

const (
	RpcObjectSetBreadcrumbsResponseError_NULL          RpcObjectSetBreadcrumbsResponseErrorCode = 0
	RpcObjectSetBreadcrumbsResponseError_UNKNOWN_ERROR RpcObjectSetBreadcrumbsResponseErrorCode = 1
	RpcObjectSetBreadcrumbsResponseError_BAD_INPUT     RpcObjectSetBreadcrumbsResponseErrorCode = 2 // ...
)

// Enum value maps for RpcObjectSetBreadcrumbsResponseErrorCode.
var (
	RpcObjectSetBreadcrumbsResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcObjectSetBreadcrumbsResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcObjectSetBreadcrumbsResponseErrorCode) Enum() *RpcObjectSetBreadcrumbsResponseErrorCode {
	p := new(RpcObjectSetBreadcrumbsResponseErrorCode)
	*p = x
	return p
}

func (x RpcObjectSetBreadcrumbsResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcObjectSetBreadcrumbsResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[74].Descriptor()
}

func (RpcObjectSetBreadcrumbsResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[74]
}

func (x RpcObjectSetBreadcrumbsResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcObjectSetBreadcrumbsResponseErrorCode.Descriptor instead.
func (RpcObjectSetBreadcrumbsResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 15, 1, 0, 0}
}

type RpcObjectShareByLinkResponseErrorCode int32

const (
	RpcObjectShareByLinkResponseError_NULL          RpcObjectShareByLinkResponseErrorCode = 0
	RpcObjectShareByLinkResponseError_UNKNOWN_ERROR RpcObjectShareByLinkResponseErrorCode = 1
	RpcObjectShareByLinkResponseError_BAD_INPUT     RpcObjectShareByLinkResponseErrorCode = 2 // ...
)

// Enum value maps for RpcObjectShareByLinkResponseErrorCode.
var (
	RpcObjectShareByLinkResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcObjectShareByLinkResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcObjectShareByLinkResponseErrorCode) Enum() *RpcObjectShareByLinkResponseErrorCode {
	p := new(RpcObjectShareByLinkResponseErrorCode)
	*p = x
	return p
}

func (x RpcObjectShareByLinkResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcObjectShareByLinkResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[75].Descriptor()
}

func (RpcObjectShareByLinkResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[75]
}

func (x RpcObjectShareByLinkResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcObjectShareByLinkResponseErrorCode.Descriptor instead.
func (RpcObjectShareByLinkResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 16, 1, 0, 0}
}

type RpcObjectSearchResponseErrorCode int32

const (
	RpcObjectSearchResponseError_NULL          RpcObjectSearchResponseErrorCode = 0
	RpcObjectSearchResponseError_UNKNOWN_ERROR RpcObjectSearchResponseErrorCode = 1
	RpcObjectSearchResponseError_BAD_INPUT     RpcObjectSearchResponseErrorCode = 2 // ...
)

// Enum value maps for RpcObjectSearchResponseErrorCode.
var (
	RpcObjectSearchResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcObjectSearchResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcObjectSearchResponseErrorCode) Enum() *RpcObjectSearchResponseErrorCode {
	p := new(RpcObjectSearchResponseErrorCode)
	*p = x
	return p
}

func (x RpcObjectSearchResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcObjectSearchResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[76].Descriptor()
}

func (RpcObjectSearchResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[76]
}

func (x RpcObjectSearchResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcObjectSearchResponseErrorCode.Descriptor instead.
func (RpcObjectSearchResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 17, 1, 0, 0}
}

type RpcObjectSearchWithMetaResponseErrorCode int32

const (
	RpcObjectSearchWithMetaResponseError_NULL          RpcObjectSearchWithMetaResponseErrorCode = 0
	RpcObjectSearchWithMetaResponseError_UNKNOWN_ERROR RpcObjectSearchWithMetaResponseErrorCode = 1
	RpcObjectSearchWithMetaResponseError_BAD_INPUT     RpcObjectSearchWithMetaResponseErrorCode = 2 // ...
)

// Enum value maps for RpcObjectSearchWithMetaResponseErrorCode.
var (
	RpcObjectSearchWithMetaResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcObjectSearchWithMetaResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcObjectSearchWithMetaResponseErrorCode) Enum() *RpcObjectSearchWithMetaResponseErrorCode {
	p := new(RpcObjectSearchWithMetaResponseErrorCode)
	*p = x
	return p
}

func (x RpcObjectSearchWithMetaResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcObjectSearchWithMetaResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[77].Descriptor()
}

func (RpcObjectSearchWithMetaResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[77]
}

func (x RpcObjectSearchWithMetaResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcObjectSearchWithMetaResponseErrorCode.Descriptor instead.
func (RpcObjectSearchWithMetaResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 18, 1, 0, 0}
}

type RpcObjectGraphEdgeType int32

const (
	RpcObjectGraphEdge_Link     RpcObjectGraphEdgeType = 0
	RpcObjectGraphEdge_Relation RpcObjectGraphEdgeType = 1
)

// Enum value maps for RpcObjectGraphEdgeType.
var (
	RpcObjectGraphEdgeType_name = map[int32]string{
		0: "Link",
		1: "Relation",
	}
	RpcObjectGraphEdgeType_value = map[string]int32{
		"Link":     0,
		"Relation": 1,
	}
)

func (x RpcObjectGraphEdgeType) Enum() *RpcObjectGraphEdgeType {
	p := new(RpcObjectGraphEdgeType)
	*p = x
	return p
}

func (x RpcObjectGraphEdgeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcObjectGraphEdgeType) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[78].Descriptor()
}

func (RpcObjectGraphEdgeType) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[78]
}

func (x RpcObjectGraphEdgeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcObjectGraphEdgeType.Descriptor instead.
func (RpcObjectGraphEdgeType) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 19, 1, 0}
}

type RpcObjectGraphResponseErrorCode int32

const (
	RpcObjectGraphResponseError_NULL          RpcObjectGraphResponseErrorCode = 0
	RpcObjectGraphResponseError_UNKNOWN_ERROR RpcObjectGraphResponseErrorCode = 1
	RpcObjectGraphResponseError_BAD_INPUT     RpcObjectGraphResponseErrorCode = 2 // ...
)

// Enum value maps for RpcObjectGraphResponseErrorCode.
var (
	RpcObjectGraphResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcObjectGraphResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcObjectGraphResponseErrorCode) Enum() *RpcObjectGraphResponseErrorCode {
	p := new(RpcObjectGraphResponseErrorCode)
	*p = x
	return p
}

func (x RpcObjectGraphResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcObjectGraphResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[79].Descriptor()
}

func (RpcObjectGraphResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[79]
}

func (x RpcObjectGraphResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcObjectGraphResponseErrorCode.Descriptor instead.
func (RpcObjectGraphResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 19, 2, 0, 0}
}

type RpcObjectSearchSubscribeResponseErrorCode int32

const (
	RpcObjectSearchSubscribeResponseError_NULL          RpcObjectSearchSubscribeResponseErrorCode = 0
	RpcObjectSearchSubscribeResponseError_UNKNOWN_ERROR RpcObjectSearchSubscribeResponseErrorCode = 1
	RpcObjectSearchSubscribeResponseError_BAD_INPUT     RpcObjectSearchSubscribeResponseErrorCode = 2 // ...
)

// Enum value maps for RpcObjectSearchSubscribeResponseErrorCode.
var (
	RpcObjectSearchSubscribeResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcObjectSearchSubscribeResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcObjectSearchSubscribeResponseErrorCode) Enum() *RpcObjectSearchSubscribeResponseErrorCode {
	p := new(RpcObjectSearchSubscribeResponseErrorCode)
	*p = x
	return p
}

func (x RpcObjectSearchSubscribeResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcObjectSearchSubscribeResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[80].Descriptor()
}

func (RpcObjectSearchSubscribeResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[80]
}

func (x RpcObjectSearchSubscribeResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcObjectSearchSubscribeResponseErrorCode.Descriptor instead.
func (RpcObjectSearchSubscribeResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 20, 1, 0, 0}
}

type RpcObjectCrossSpaceSearchSubscribeResponseErrorCode int32

const (
	RpcObjectCrossSpaceSearchSubscribeResponseError_NULL          RpcObjectCrossSpaceSearchSubscribeResponseErrorCode = 0
	RpcObjectCrossSpaceSearchSubscribeResponseError_UNKNOWN_ERROR RpcObjectCrossSpaceSearchSubscribeResponseErrorCode = 1
	RpcObjectCrossSpaceSearchSubscribeResponseError_BAD_INPUT     RpcObjectCrossSpaceSearchSubscribeResponseErrorCode = 2 // ...
)

// Enum value maps for RpcObjectCrossSpaceSearchSubscribeResponseErrorCode.
var (
	RpcObjectCrossSpaceSearchSubscribeResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcObjectCrossSpaceSearchSubscribeResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcObjectCrossSpaceSearchSubscribeResponseErrorCode) Enum() *RpcObjectCrossSpaceSearchSubscribeResponseErrorCode {
	p := new(RpcObjectCrossSpaceSearchSubscribeResponseErrorCode)
	*p = x
	return p
}

func (x RpcObjectCrossSpaceSearchSubscribeResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcObjectCrossSpaceSearchSubscribeResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[81].Descriptor()
}

func (RpcObjectCrossSpaceSearchSubscribeResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[81]
}

func (x RpcObjectCrossSpaceSearchSubscribeResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcObjectCrossSpaceSearchSubscribeResponseErrorCode.Descriptor instead.
func (RpcObjectCrossSpaceSearchSubscribeResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 21, 1, 0, 0}
}

type RpcObjectCrossSpaceSearchUnsubscribeResponseErrorCode int32

const (
	RpcObjectCrossSpaceSearchUnsubscribeResponseError_NULL          RpcObjectCrossSpaceSearchUnsubscribeResponseErrorCode = 0
	RpcObjectCrossSpaceSearchUnsubscribeResponseError_UNKNOWN_ERROR RpcObjectCrossSpaceSearchUnsubscribeResponseErrorCode = 1
	RpcObjectCrossSpaceSearchUnsubscribeResponseError_BAD_INPUT     RpcObjectCrossSpaceSearchUnsubscribeResponseErrorCode = 2 // ...
)

// Enum value maps for RpcObjectCrossSpaceSearchUnsubscribeResponseErrorCode.
var (
	RpcObjectCrossSpaceSearchUnsubscribeResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcObjectCrossSpaceSearchUnsubscribeResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcObjectCrossSpaceSearchUnsubscribeResponseErrorCode) Enum() *RpcObjectCrossSpaceSearchUnsubscribeResponseErrorCode {
	p := new(RpcObjectCrossSpaceSearchUnsubscribeResponseErrorCode)
	*p = x
	return p
}

func (x RpcObjectCrossSpaceSearchUnsubscribeResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcObjectCrossSpaceSearchUnsubscribeResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[82].Descriptor()
}

func (RpcObjectCrossSpaceSearchUnsubscribeResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[82]
}

func (x RpcObjectCrossSpaceSearchUnsubscribeResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcObjectCrossSpaceSearchUnsubscribeResponseErrorCode.Descriptor instead.
func (RpcObjectCrossSpaceSearchUnsubscribeResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 22, 1, 0, 0}
}

type RpcObjectGroupsSubscribeResponseErrorCode int32

const (
	RpcObjectGroupsSubscribeResponseError_NULL          RpcObjectGroupsSubscribeResponseErrorCode = 0
	RpcObjectGroupsSubscribeResponseError_UNKNOWN_ERROR RpcObjectGroupsSubscribeResponseErrorCode = 1
	RpcObjectGroupsSubscribeResponseError_BAD_INPUT     RpcObjectGroupsSubscribeResponseErrorCode = 2
)

// Enum value maps for RpcObjectGroupsSubscribeResponseErrorCode.
var (
	RpcObjectGroupsSubscribeResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcObjectGroupsSubscribeResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcObjectGroupsSubscribeResponseErrorCode) Enum() *RpcObjectGroupsSubscribeResponseErrorCode {
	p := new(RpcObjectGroupsSubscribeResponseErrorCode)
	*p = x
	return p
}

func (x RpcObjectGroupsSubscribeResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcObjectGroupsSubscribeResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[83].Descriptor()
}

func (RpcObjectGroupsSubscribeResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[83]
}

func (x RpcObjectGroupsSubscribeResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcObjectGroupsSubscribeResponseErrorCode.Descriptor instead.
func (RpcObjectGroupsSubscribeResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 23, 1, 0, 0}
}

type RpcObjectSubscribeIdsResponseErrorCode int32

const (
	RpcObjectSubscribeIdsResponseError_NULL          RpcObjectSubscribeIdsResponseErrorCode = 0
	RpcObjectSubscribeIdsResponseError_UNKNOWN_ERROR RpcObjectSubscribeIdsResponseErrorCode = 1
	RpcObjectSubscribeIdsResponseError_BAD_INPUT     RpcObjectSubscribeIdsResponseErrorCode = 2 // ...
)

// Enum value maps for RpcObjectSubscribeIdsResponseErrorCode.
var (
	RpcObjectSubscribeIdsResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcObjectSubscribeIdsResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcObjectSubscribeIdsResponseErrorCode) Enum() *RpcObjectSubscribeIdsResponseErrorCode {
	p := new(RpcObjectSubscribeIdsResponseErrorCode)
	*p = x
	return p
}

func (x RpcObjectSubscribeIdsResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcObjectSubscribeIdsResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[84].Descriptor()
}

func (RpcObjectSubscribeIdsResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[84]
}

func (x RpcObjectSubscribeIdsResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcObjectSubscribeIdsResponseErrorCode.Descriptor instead.
func (RpcObjectSubscribeIdsResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 24, 1, 0, 0}
}

type RpcObjectSearchUnsubscribeResponseErrorCode int32

const (
	RpcObjectSearchUnsubscribeResponseError_NULL          RpcObjectSearchUnsubscribeResponseErrorCode = 0
	RpcObjectSearchUnsubscribeResponseError_UNKNOWN_ERROR RpcObjectSearchUnsubscribeResponseErrorCode = 1
	RpcObjectSearchUnsubscribeResponseError_BAD_INPUT     RpcObjectSearchUnsubscribeResponseErrorCode = 2
)

// Enum value maps for RpcObjectSearchUnsubscribeResponseErrorCode.
var (
	RpcObjectSearchUnsubscribeResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcObjectSearchUnsubscribeResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcObjectSearchUnsubscribeResponseErrorCode) Enum() *RpcObjectSearchUnsubscribeResponseErrorCode {
	p := new(RpcObjectSearchUnsubscribeResponseErrorCode)
	*p = x
	return p
}

func (x RpcObjectSearchUnsubscribeResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcObjectSearchUnsubscribeResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[85].Descriptor()
}

func (RpcObjectSearchUnsubscribeResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[85]
}

func (x RpcObjectSearchUnsubscribeResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcObjectSearchUnsubscribeResponseErrorCode.Descriptor instead.
func (RpcObjectSearchUnsubscribeResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 25, 1, 0, 0}
}

type RpcObjectSetLayoutResponseErrorCode int32

const (
	RpcObjectSetLayoutResponseError_NULL          RpcObjectSetLayoutResponseErrorCode = 0
	RpcObjectSetLayoutResponseError_UNKNOWN_ERROR RpcObjectSetLayoutResponseErrorCode = 1
	RpcObjectSetLayoutResponseError_BAD_INPUT     RpcObjectSetLayoutResponseErrorCode = 2 // ...
)

// Enum value maps for RpcObjectSetLayoutResponseErrorCode.
var (
	RpcObjectSetLayoutResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcObjectSetLayoutResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcObjectSetLayoutResponseErrorCode) Enum() *RpcObjectSetLayoutResponseErrorCode {
	p := new(RpcObjectSetLayoutResponseErrorCode)
	*p = x
	return p
}

func (x RpcObjectSetLayoutResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcObjectSetLayoutResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[86].Descriptor()
}

func (RpcObjectSetLayoutResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[86]
}

func (x RpcObjectSetLayoutResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcObjectSetLayoutResponseErrorCode.Descriptor instead.
func (RpcObjectSetLayoutResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 26, 1, 0, 0}
}

type RpcObjectSetIsFavoriteResponseErrorCode int32

const (
	RpcObjectSetIsFavoriteResponseError_NULL          RpcObjectSetIsFavoriteResponseErrorCode = 0
	RpcObjectSetIsFavoriteResponseError_UNKNOWN_ERROR RpcObjectSetIsFavoriteResponseErrorCode = 1
	RpcObjectSetIsFavoriteResponseError_BAD_INPUT     RpcObjectSetIsFavoriteResponseErrorCode = 2 // ...
)

// Enum value maps for RpcObjectSetIsFavoriteResponseErrorCode.
var (
	RpcObjectSetIsFavoriteResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcObjectSetIsFavoriteResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcObjectSetIsFavoriteResponseErrorCode) Enum() *RpcObjectSetIsFavoriteResponseErrorCode {
	p := new(RpcObjectSetIsFavoriteResponseErrorCode)
	*p = x
	return p
}

func (x RpcObjectSetIsFavoriteResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcObjectSetIsFavoriteResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[87].Descriptor()
}

func (RpcObjectSetIsFavoriteResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[87]
}

func (x RpcObjectSetIsFavoriteResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcObjectSetIsFavoriteResponseErrorCode.Descriptor instead.
func (RpcObjectSetIsFavoriteResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 27, 1, 0, 0}
}

type RpcObjectSetIsArchivedResponseErrorCode int32

const (
	RpcObjectSetIsArchivedResponseError_NULL          RpcObjectSetIsArchivedResponseErrorCode = 0
	RpcObjectSetIsArchivedResponseError_UNKNOWN_ERROR RpcObjectSetIsArchivedResponseErrorCode = 1
	RpcObjectSetIsArchivedResponseError_BAD_INPUT     RpcObjectSetIsArchivedResponseErrorCode = 2 // ...
)

// Enum value maps for RpcObjectSetIsArchivedResponseErrorCode.
var (
	RpcObjectSetIsArchivedResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcObjectSetIsArchivedResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcObjectSetIsArchivedResponseErrorCode) Enum() *RpcObjectSetIsArchivedResponseErrorCode {
	p := new(RpcObjectSetIsArchivedResponseErrorCode)
	*p = x
	return p
}

func (x RpcObjectSetIsArchivedResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcObjectSetIsArchivedResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[88].Descriptor()
}

func (RpcObjectSetIsArchivedResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[88]
}

func (x RpcObjectSetIsArchivedResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcObjectSetIsArchivedResponseErrorCode.Descriptor instead.
func (RpcObjectSetIsArchivedResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 28, 1, 0, 0}
}

type RpcObjectSetSourceResponseErrorCode int32

const (
	RpcObjectSetSourceResponseError_NULL          RpcObjectSetSourceResponseErrorCode = 0
	RpcObjectSetSourceResponseError_UNKNOWN_ERROR RpcObjectSetSourceResponseErrorCode = 1
	RpcObjectSetSourceResponseError_BAD_INPUT     RpcObjectSetSourceResponseErrorCode = 2
)

// Enum value maps for RpcObjectSetSourceResponseErrorCode.
var (
	RpcObjectSetSourceResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcObjectSetSourceResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcObjectSetSourceResponseErrorCode) Enum() *RpcObjectSetSourceResponseErrorCode {
	p := new(RpcObjectSetSourceResponseErrorCode)
	*p = x
	return p
}

func (x RpcObjectSetSourceResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcObjectSetSourceResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[89].Descriptor()
}

func (RpcObjectSetSourceResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[89]
}

func (x RpcObjectSetSourceResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcObjectSetSourceResponseErrorCode.Descriptor instead.
func (RpcObjectSetSourceResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 29, 1, 0, 0}
}

type RpcObjectWorkspaceSetDashboardResponseErrorCode int32

const (
	RpcObjectWorkspaceSetDashboardResponseError_NULL          RpcObjectWorkspaceSetDashboardResponseErrorCode = 0
	RpcObjectWorkspaceSetDashboardResponseError_UNKNOWN_ERROR RpcObjectWorkspaceSetDashboardResponseErrorCode = 1
	RpcObjectWorkspaceSetDashboardResponseError_BAD_INPUT     RpcObjectWorkspaceSetDashboardResponseErrorCode = 2
)

// Enum value maps for RpcObjectWorkspaceSetDashboardResponseErrorCode.
var (
	RpcObjectWorkspaceSetDashboardResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcObjectWorkspaceSetDashboardResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcObjectWorkspaceSetDashboardResponseErrorCode) Enum() *RpcObjectWorkspaceSetDashboardResponseErrorCode {
	p := new(RpcObjectWorkspaceSetDashboardResponseErrorCode)
	*p = x
	return p
}

func (x RpcObjectWorkspaceSetDashboardResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcObjectWorkspaceSetDashboardResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[90].Descriptor()
}

func (RpcObjectWorkspaceSetDashboardResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[90]
}

func (x RpcObjectWorkspaceSetDashboardResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcObjectWorkspaceSetDashboardResponseErrorCode.Descriptor instead.
func (RpcObjectWorkspaceSetDashboardResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 30, 1, 0, 0}
}

type RpcObjectSetObjectTypeResponseErrorCode int32

const (
	RpcObjectSetObjectTypeResponseError_NULL          RpcObjectSetObjectTypeResponseErrorCode = 0
	RpcObjectSetObjectTypeResponseError_UNKNOWN_ERROR RpcObjectSetObjectTypeResponseErrorCode = 1
	RpcObjectSetObjectTypeResponseError_BAD_INPUT     RpcObjectSetObjectTypeResponseErrorCode = 2
)

// Enum value maps for RpcObjectSetObjectTypeResponseErrorCode.
var (
	RpcObjectSetObjectTypeResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcObjectSetObjectTypeResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcObjectSetObjectTypeResponseErrorCode) Enum() *RpcObjectSetObjectTypeResponseErrorCode {
	p := new(RpcObjectSetObjectTypeResponseErrorCode)
	*p = x
	return p
}

func (x RpcObjectSetObjectTypeResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcObjectSetObjectTypeResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[91].Descriptor()
}

func (RpcObjectSetObjectTypeResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[91]
}

func (x RpcObjectSetObjectTypeResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcObjectSetObjectTypeResponseErrorCode.Descriptor instead.
func (RpcObjectSetObjectTypeResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 31, 1, 0, 0}
}

type RpcObjectSetInternalFlagsResponseErrorCode int32

const (
	RpcObjectSetInternalFlagsResponseError_NULL          RpcObjectSetInternalFlagsResponseErrorCode = 0
	RpcObjectSetInternalFlagsResponseError_UNKNOWN_ERROR RpcObjectSetInternalFlagsResponseErrorCode = 1
	RpcObjectSetInternalFlagsResponseError_BAD_INPUT     RpcObjectSetInternalFlagsResponseErrorCode = 2
)

// Enum value maps for RpcObjectSetInternalFlagsResponseErrorCode.
var (
	RpcObjectSetInternalFlagsResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcObjectSetInternalFlagsResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcObjectSetInternalFlagsResponseErrorCode) Enum() *RpcObjectSetInternalFlagsResponseErrorCode {
	p := new(RpcObjectSetInternalFlagsResponseErrorCode)
	*p = x
	return p
}

func (x RpcObjectSetInternalFlagsResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcObjectSetInternalFlagsResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[92].Descriptor()
}

func (RpcObjectSetInternalFlagsResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[92]
}

func (x RpcObjectSetInternalFlagsResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcObjectSetInternalFlagsResponseErrorCode.Descriptor instead.
func (RpcObjectSetInternalFlagsResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 32, 1, 0, 0}
}

type RpcObjectSetDetailsResponseErrorCode int32

const (
	RpcObjectSetDetailsResponseError_NULL          RpcObjectSetDetailsResponseErrorCode = 0
	RpcObjectSetDetailsResponseError_UNKNOWN_ERROR RpcObjectSetDetailsResponseErrorCode = 1
	RpcObjectSetDetailsResponseError_BAD_INPUT     RpcObjectSetDetailsResponseErrorCode = 2 // ...
)

// Enum value maps for RpcObjectSetDetailsResponseErrorCode.
var (
	RpcObjectSetDetailsResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcObjectSetDetailsResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcObjectSetDetailsResponseErrorCode) Enum() *RpcObjectSetDetailsResponseErrorCode {
	p := new(RpcObjectSetDetailsResponseErrorCode)
	*p = x
	return p
}

func (x RpcObjectSetDetailsResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcObjectSetDetailsResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[93].Descriptor()
}

func (RpcObjectSetDetailsResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[93]
}

func (x RpcObjectSetDetailsResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcObjectSetDetailsResponseErrorCode.Descriptor instead.
func (RpcObjectSetDetailsResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 33, 1, 0, 0}
}

type RpcObjectToSetResponseErrorCode int32

const (
	RpcObjectToSetResponseError_NULL          RpcObjectToSetResponseErrorCode = 0
	RpcObjectToSetResponseError_UNKNOWN_ERROR RpcObjectToSetResponseErrorCode = 1
	RpcObjectToSetResponseError_BAD_INPUT     RpcObjectToSetResponseErrorCode = 2 // ...
)

// Enum value maps for RpcObjectToSetResponseErrorCode.
var (
	RpcObjectToSetResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcObjectToSetResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcObjectToSetResponseErrorCode) Enum() *RpcObjectToSetResponseErrorCode {
	p := new(RpcObjectToSetResponseErrorCode)
	*p = x
	return p
}

func (x RpcObjectToSetResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcObjectToSetResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[94].Descriptor()
}

func (RpcObjectToSetResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[94]
}

func (x RpcObjectToSetResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcObjectToSetResponseErrorCode.Descriptor instead.
func (RpcObjectToSetResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 34, 1, 0, 0}
}

type RpcObjectToCollectionResponseErrorCode int32

const (
	RpcObjectToCollectionResponseError_NULL          RpcObjectToCollectionResponseErrorCode = 0
	RpcObjectToCollectionResponseError_UNKNOWN_ERROR RpcObjectToCollectionResponseErrorCode = 1
	RpcObjectToCollectionResponseError_BAD_INPUT     RpcObjectToCollectionResponseErrorCode = 2 // ...
)

// Enum value maps for RpcObjectToCollectionResponseErrorCode.
var (
	RpcObjectToCollectionResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcObjectToCollectionResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcObjectToCollectionResponseErrorCode) Enum() *RpcObjectToCollectionResponseErrorCode {
	p := new(RpcObjectToCollectionResponseErrorCode)
	*p = x
	return p
}

func (x RpcObjectToCollectionResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcObjectToCollectionResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[95].Descriptor()
}

func (RpcObjectToCollectionResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[95]
}

func (x RpcObjectToCollectionResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcObjectToCollectionResponseErrorCode.Descriptor instead.
func (RpcObjectToCollectionResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 35, 1, 0, 0}
}

type RpcObjectUndoResponseErrorCode int32

const (
	RpcObjectUndoResponseError_NULL          RpcObjectUndoResponseErrorCode = 0
	RpcObjectUndoResponseError_UNKNOWN_ERROR RpcObjectUndoResponseErrorCode = 1
	RpcObjectUndoResponseError_BAD_INPUT     RpcObjectUndoResponseErrorCode = 2
	RpcObjectUndoResponseError_CAN_NOT_MOVE  RpcObjectUndoResponseErrorCode = 3 // ...
)

// Enum value maps for RpcObjectUndoResponseErrorCode.
var (
	RpcObjectUndoResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
		3: "CAN_NOT_MOVE",
	}
	RpcObjectUndoResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
		"CAN_NOT_MOVE":  3,
	}
)

func (x RpcObjectUndoResponseErrorCode) Enum() *RpcObjectUndoResponseErrorCode {
	p := new(RpcObjectUndoResponseErrorCode)
	*p = x
	return p
}

func (x RpcObjectUndoResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcObjectUndoResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[96].Descriptor()
}

func (RpcObjectUndoResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[96]
}

func (x RpcObjectUndoResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcObjectUndoResponseErrorCode.Descriptor instead.
func (RpcObjectUndoResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 37, 1, 0, 0}
}

type RpcObjectRedoResponseErrorCode int32

const (
	RpcObjectRedoResponseError_NULL          RpcObjectRedoResponseErrorCode = 0
	RpcObjectRedoResponseError_UNKNOWN_ERROR RpcObjectRedoResponseErrorCode = 1
	RpcObjectRedoResponseError_BAD_INPUT     RpcObjectRedoResponseErrorCode = 2
	RpcObjectRedoResponseError_CAN_NOT_MOVE  RpcObjectRedoResponseErrorCode = 3 // ...
)

// Enum value maps for RpcObjectRedoResponseErrorCode.
var (
	RpcObjectRedoResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
		3: "CAN_NOT_MOVE",
	}
	RpcObjectRedoResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
		"CAN_NOT_MOVE":  3,
	}
)

func (x RpcObjectRedoResponseErrorCode) Enum() *RpcObjectRedoResponseErrorCode {
	p := new(RpcObjectRedoResponseErrorCode)
	*p = x
	return p
}

func (x RpcObjectRedoResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcObjectRedoResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[97].Descriptor()
}

func (RpcObjectRedoResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[97]
}

func (x RpcObjectRedoResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcObjectRedoResponseErrorCode.Descriptor instead.
func (RpcObjectRedoResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 38, 1, 0, 0}
}

type RpcObjectListDuplicateResponseErrorCode int32

const (
	RpcObjectListDuplicateResponseError_NULL          RpcObjectListDuplicateResponseErrorCode = 0
	RpcObjectListDuplicateResponseError_UNKNOWN_ERROR RpcObjectListDuplicateResponseErrorCode = 1
	RpcObjectListDuplicateResponseError_BAD_INPUT     RpcObjectListDuplicateResponseErrorCode = 2 // ...
)

// Enum value maps for RpcObjectListDuplicateResponseErrorCode.
var (
	RpcObjectListDuplicateResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcObjectListDuplicateResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcObjectListDuplicateResponseErrorCode) Enum() *RpcObjectListDuplicateResponseErrorCode {
	p := new(RpcObjectListDuplicateResponseErrorCode)
	*p = x
	return p
}

func (x RpcObjectListDuplicateResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcObjectListDuplicateResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[98].Descriptor()
}

func (RpcObjectListDuplicateResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[98]
}

func (x RpcObjectListDuplicateResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcObjectListDuplicateResponseErrorCode.Descriptor instead.
func (RpcObjectListDuplicateResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 39, 1, 0, 0}
}

type RpcObjectListDeleteResponseErrorCode int32

const (
	RpcObjectListDeleteResponseError_NULL          RpcObjectListDeleteResponseErrorCode = 0
	RpcObjectListDeleteResponseError_UNKNOWN_ERROR RpcObjectListDeleteResponseErrorCode = 1
	RpcObjectListDeleteResponseError_BAD_INPUT     RpcObjectListDeleteResponseErrorCode = 2 // ...
)

// Enum value maps for RpcObjectListDeleteResponseErrorCode.
var (
	RpcObjectListDeleteResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcObjectListDeleteResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcObjectListDeleteResponseErrorCode) Enum() *RpcObjectListDeleteResponseErrorCode {
	p := new(RpcObjectListDeleteResponseErrorCode)
	*p = x
	return p
}

func (x RpcObjectListDeleteResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcObjectListDeleteResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[99].Descriptor()
}

func (RpcObjectListDeleteResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[99]
}

func (x RpcObjectListDeleteResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcObjectListDeleteResponseErrorCode.Descriptor instead.
func (RpcObjectListDeleteResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 40, 1, 0, 0}
}

type RpcObjectListSetIsArchivedResponseErrorCode int32

const (
	RpcObjectListSetIsArchivedResponseError_NULL          RpcObjectListSetIsArchivedResponseErrorCode = 0
	RpcObjectListSetIsArchivedResponseError_UNKNOWN_ERROR RpcObjectListSetIsArchivedResponseErrorCode = 1
	RpcObjectListSetIsArchivedResponseError_BAD_INPUT     RpcObjectListSetIsArchivedResponseErrorCode = 2 // ...
)

// Enum value maps for RpcObjectListSetIsArchivedResponseErrorCode.
var (
	RpcObjectListSetIsArchivedResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcObjectListSetIsArchivedResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcObjectListSetIsArchivedResponseErrorCode) Enum() *RpcObjectListSetIsArchivedResponseErrorCode {
	p := new(RpcObjectListSetIsArchivedResponseErrorCode)
	*p = x
	return p
}

func (x RpcObjectListSetIsArchivedResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcObjectListSetIsArchivedResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[100].Descriptor()
}

func (RpcObjectListSetIsArchivedResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[100]
}

func (x RpcObjectListSetIsArchivedResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcObjectListSetIsArchivedResponseErrorCode.Descriptor instead.
func (RpcObjectListSetIsArchivedResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 41, 1, 0, 0}
}

type RpcObjectListSetIsFavoriteResponseErrorCode int32

const (
	RpcObjectListSetIsFavoriteResponseError_NULL          RpcObjectListSetIsFavoriteResponseErrorCode = 0
	RpcObjectListSetIsFavoriteResponseError_UNKNOWN_ERROR RpcObjectListSetIsFavoriteResponseErrorCode = 1
	RpcObjectListSetIsFavoriteResponseError_BAD_INPUT     RpcObjectListSetIsFavoriteResponseErrorCode = 2 // ...
)

// Enum value maps for RpcObjectListSetIsFavoriteResponseErrorCode.
var (
	RpcObjectListSetIsFavoriteResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcObjectListSetIsFavoriteResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcObjectListSetIsFavoriteResponseErrorCode) Enum() *RpcObjectListSetIsFavoriteResponseErrorCode {
	p := new(RpcObjectListSetIsFavoriteResponseErrorCode)
	*p = x
	return p
}

func (x RpcObjectListSetIsFavoriteResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcObjectListSetIsFavoriteResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[101].Descriptor()
}

func (RpcObjectListSetIsFavoriteResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[101]
}

func (x RpcObjectListSetIsFavoriteResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcObjectListSetIsFavoriteResponseErrorCode.Descriptor instead.
func (RpcObjectListSetIsFavoriteResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 42, 1, 0, 0}
}

type RpcObjectListSetObjectTypeResponseErrorCode int32

const (
	RpcObjectListSetObjectTypeResponseError_NULL          RpcObjectListSetObjectTypeResponseErrorCode = 0
	RpcObjectListSetObjectTypeResponseError_UNKNOWN_ERROR RpcObjectListSetObjectTypeResponseErrorCode = 1
	RpcObjectListSetObjectTypeResponseError_BAD_INPUT     RpcObjectListSetObjectTypeResponseErrorCode = 2
)

// Enum value maps for RpcObjectListSetObjectTypeResponseErrorCode.
var (
	RpcObjectListSetObjectTypeResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcObjectListSetObjectTypeResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcObjectListSetObjectTypeResponseErrorCode) Enum() *RpcObjectListSetObjectTypeResponseErrorCode {
	p := new(RpcObjectListSetObjectTypeResponseErrorCode)
	*p = x
	return p
}

func (x RpcObjectListSetObjectTypeResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcObjectListSetObjectTypeResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[102].Descriptor()
}

func (RpcObjectListSetObjectTypeResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[102]
}

func (x RpcObjectListSetObjectTypeResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcObjectListSetObjectTypeResponseErrorCode.Descriptor instead.
func (RpcObjectListSetObjectTypeResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 43, 1, 0, 0}
}

type RpcObjectListSetDetailsResponseErrorCode int32

const (
	RpcObjectListSetDetailsResponseError_NULL          RpcObjectListSetDetailsResponseErrorCode = 0
	RpcObjectListSetDetailsResponseError_UNKNOWN_ERROR RpcObjectListSetDetailsResponseErrorCode = 1
	RpcObjectListSetDetailsResponseError_BAD_INPUT     RpcObjectListSetDetailsResponseErrorCode = 2 // ...
)

// Enum value maps for RpcObjectListSetDetailsResponseErrorCode.
var (
	RpcObjectListSetDetailsResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcObjectListSetDetailsResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcObjectListSetDetailsResponseErrorCode) Enum() *RpcObjectListSetDetailsResponseErrorCode {
	p := new(RpcObjectListSetDetailsResponseErrorCode)
	*p = x
	return p
}

func (x RpcObjectListSetDetailsResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcObjectListSetDetailsResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[103].Descriptor()
}

func (RpcObjectListSetDetailsResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[103]
}

func (x RpcObjectListSetDetailsResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcObjectListSetDetailsResponseErrorCode.Descriptor instead.
func (RpcObjectListSetDetailsResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 44, 1, 0, 0}
}

type RpcObjectListModifyDetailValuesResponseErrorCode int32

const (
	RpcObjectListModifyDetailValuesResponseError_NULL          RpcObjectListModifyDetailValuesResponseErrorCode = 0
	RpcObjectListModifyDetailValuesResponseError_UNKNOWN_ERROR RpcObjectListModifyDetailValuesResponseErrorCode = 1
	RpcObjectListModifyDetailValuesResponseError_BAD_INPUT     RpcObjectListModifyDetailValuesResponseErrorCode = 2
)

// Enum value maps for RpcObjectListModifyDetailValuesResponseErrorCode.
var (
	RpcObjectListModifyDetailValuesResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcObjectListModifyDetailValuesResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcObjectListModifyDetailValuesResponseErrorCode) Enum() *RpcObjectListModifyDetailValuesResponseErrorCode {
	p := new(RpcObjectListModifyDetailValuesResponseErrorCode)
	*p = x
	return p
}

func (x RpcObjectListModifyDetailValuesResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcObjectListModifyDetailValuesResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[104].Descriptor()
}

func (RpcObjectListModifyDetailValuesResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[104]
}

func (x RpcObjectListModifyDetailValuesResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcObjectListModifyDetailValuesResponseErrorCode.Descriptor instead.
func (RpcObjectListModifyDetailValuesResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 45, 1, 0, 0}
}

type RpcObjectApplyTemplateResponseErrorCode int32

const (
	RpcObjectApplyTemplateResponseError_NULL          RpcObjectApplyTemplateResponseErrorCode = 0
	RpcObjectApplyTemplateResponseError_UNKNOWN_ERROR RpcObjectApplyTemplateResponseErrorCode = 1
	RpcObjectApplyTemplateResponseError_BAD_INPUT     RpcObjectApplyTemplateResponseErrorCode = 2 // ...
)

// Enum value maps for RpcObjectApplyTemplateResponseErrorCode.
var (
	RpcObjectApplyTemplateResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcObjectApplyTemplateResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcObjectApplyTemplateResponseErrorCode) Enum() *RpcObjectApplyTemplateResponseErrorCode {
	p := new(RpcObjectApplyTemplateResponseErrorCode)
	*p = x
	return p
}

func (x RpcObjectApplyTemplateResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcObjectApplyTemplateResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[105].Descriptor()
}

func (RpcObjectApplyTemplateResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[105]
}

func (x RpcObjectApplyTemplateResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcObjectApplyTemplateResponseErrorCode.Descriptor instead.
func (RpcObjectApplyTemplateResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 46, 1, 0, 0}
}

type RpcObjectListExportResponseErrorCode int32

const (
	RpcObjectListExportResponseError_NULL          RpcObjectListExportResponseErrorCode = 0
	RpcObjectListExportResponseError_UNKNOWN_ERROR RpcObjectListExportResponseErrorCode = 1
	RpcObjectListExportResponseError_BAD_INPUT     RpcObjectListExportResponseErrorCode = 2 // ...
)

// Enum value maps for RpcObjectListExportResponseErrorCode.
var (
	RpcObjectListExportResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcObjectListExportResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcObjectListExportResponseErrorCode) Enum() *RpcObjectListExportResponseErrorCode {
	p := new(RpcObjectListExportResponseErrorCode)
	*p = x
	return p
}

func (x RpcObjectListExportResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcObjectListExportResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[106].Descriptor()
}

func (RpcObjectListExportResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[106]
}

func (x RpcObjectListExportResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcObjectListExportResponseErrorCode.Descriptor instead.
func (RpcObjectListExportResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 47, 3, 0, 0}
}

type RpcObjectImportRequestMode int32

const (
	RpcObjectImportRequest_ALL_OR_NOTHING RpcObjectImportRequestMode = 0
	RpcObjectImportRequest_IGNORE_ERRORS  RpcObjectImportRequestMode = 1
)

// Enum value maps for RpcObjectImportRequestMode.
var (
	RpcObjectImportRequestMode_name = map[int32]string{
		0: "ALL_OR_NOTHING",
		1: "IGNORE_ERRORS",
	}
	RpcObjectImportRequestMode_value = map[string]int32{
		"ALL_OR_NOTHING": 0,
		"IGNORE_ERRORS":  1,
	}
)

func (x RpcObjectImportRequestMode) Enum() *RpcObjectImportRequestMode {
	p := new(RpcObjectImportRequestMode)
	*p = x
	return p
}

func (x RpcObjectImportRequestMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcObjectImportRequestMode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[107].Descriptor()
}

func (RpcObjectImportRequestMode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[107]
}

func (x RpcObjectImportRequestMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcObjectImportRequestMode.Descriptor instead.
func (RpcObjectImportRequestMode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 48, 0, 0}
}

type RpcObjectImportRequestPbParamsType int32

const (
	RpcObjectImportRequestPbParams_SPACE      RpcObjectImportRequestPbParamsType = 0
	RpcObjectImportRequestPbParams_EXPERIENCE RpcObjectImportRequestPbParamsType = 1
)

// Enum value maps for RpcObjectImportRequestPbParamsType.
var (
	RpcObjectImportRequestPbParamsType_name = map[int32]string{
		0: "SPACE",
		1: "EXPERIENCE",
	}
	RpcObjectImportRequestPbParamsType_value = map[string]int32{
		"SPACE":      0,
		"EXPERIENCE": 1,
	}
)

func (x RpcObjectImportRequestPbParamsType) Enum() *RpcObjectImportRequestPbParamsType {
	p := new(RpcObjectImportRequestPbParamsType)
	*p = x
	return p
}

func (x RpcObjectImportRequestPbParamsType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcObjectImportRequestPbParamsType) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[108].Descriptor()
}

func (RpcObjectImportRequestPbParamsType) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[108]
}

func (x RpcObjectImportRequestPbParamsType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcObjectImportRequestPbParamsType.Descriptor instead.
func (RpcObjectImportRequestPbParamsType) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 48, 0, 5, 0}
}

type RpcObjectImportRequestCsvParamsMode int32

const (
	RpcObjectImportRequestCsvParams_COLLECTION RpcObjectImportRequestCsvParamsMode = 0
	RpcObjectImportRequestCsvParams_TABLE      RpcObjectImportRequestCsvParamsMode = 1
)

// Enum value maps for RpcObjectImportRequestCsvParamsMode.
var (
	RpcObjectImportRequestCsvParamsMode_name = map[int32]string{
		0: "COLLECTION",
		1: "TABLE",
	}
	RpcObjectImportRequestCsvParamsMode_value = map[string]int32{
		"COLLECTION": 0,
		"TABLE":      1,
	}
)

func (x RpcObjectImportRequestCsvParamsMode) Enum() *RpcObjectImportRequestCsvParamsMode {
	p := new(RpcObjectImportRequestCsvParamsMode)
	*p = x
	return p
}

func (x RpcObjectImportRequestCsvParamsMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcObjectImportRequestCsvParamsMode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[109].Descriptor()
}

func (RpcObjectImportRequestCsvParamsMode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[109]
}

func (x RpcObjectImportRequestCsvParamsMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcObjectImportRequestCsvParamsMode.Descriptor instead.
func (RpcObjectImportRequestCsvParamsMode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 48, 0, 6, 0}
}

type RpcObjectImportResponseErrorCode int32

const (
	RpcObjectImportResponseError_NULL                                RpcObjectImportResponseErrorCode = 0
	RpcObjectImportResponseError_UNKNOWN_ERROR                       RpcObjectImportResponseErrorCode = 1
	RpcObjectImportResponseError_BAD_INPUT                           RpcObjectImportResponseErrorCode = 2
	RpcObjectImportResponseError_INTERNAL_ERROR                      RpcObjectImportResponseErrorCode = 3
	RpcObjectImportResponseError_NO_OBJECTS_TO_IMPORT                RpcObjectImportResponseErrorCode = 5
	RpcObjectImportResponseError_IMPORT_IS_CANCELED                  RpcObjectImportResponseErrorCode = 6
	RpcObjectImportResponseError_LIMIT_OF_ROWS_OR_RELATIONS_EXCEEDED RpcObjectImportResponseErrorCode = 7
	RpcObjectImportResponseError_FILE_LOAD_ERROR                     RpcObjectImportResponseErrorCode = 8
	RpcObjectImportResponseError_INSUFFICIENT_PERMISSIONS            RpcObjectImportResponseErrorCode = 9
)

// Enum value maps for RpcObjectImportResponseErrorCode.
var (
	RpcObjectImportResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
		3: "INTERNAL_ERROR",
		5: "NO_OBJECTS_TO_IMPORT",
		6: "IMPORT_IS_CANCELED",
		7: "LIMIT_OF_ROWS_OR_RELATIONS_EXCEEDED",
		8: "FILE_LOAD_ERROR",
		9: "INSUFFICIENT_PERMISSIONS",
	}
	RpcObjectImportResponseErrorCode_value = map[string]int32{
		"NULL":                                0,
		"UNKNOWN_ERROR":                       1,
		"BAD_INPUT":                           2,
		"INTERNAL_ERROR":                      3,
		"NO_OBJECTS_TO_IMPORT":                5,
		"IMPORT_IS_CANCELED":                  6,
		"LIMIT_OF_ROWS_OR_RELATIONS_EXCEEDED": 7,
		"FILE_LOAD_ERROR":                     8,
		"INSUFFICIENT_PERMISSIONS":            9,
	}
)

func (x RpcObjectImportResponseErrorCode) Enum() *RpcObjectImportResponseErrorCode {
	p := new(RpcObjectImportResponseErrorCode)
	*p = x
	return p
}

func (x RpcObjectImportResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcObjectImportResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[110].Descriptor()
}

func (RpcObjectImportResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[110]
}

func (x RpcObjectImportResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcObjectImportResponseErrorCode.Descriptor instead.
func (RpcObjectImportResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 48, 1, 0, 0}
}

type RpcObjectImportNotionValidateTokenResponseErrorCode int32

const (
	RpcObjectImportNotionValidateTokenResponseError_NULL                   RpcObjectImportNotionValidateTokenResponseErrorCode = 0
	RpcObjectImportNotionValidateTokenResponseError_UNKNOWN_ERROR          RpcObjectImportNotionValidateTokenResponseErrorCode = 1
	RpcObjectImportNotionValidateTokenResponseError_BAD_INPUT              RpcObjectImportNotionValidateTokenResponseErrorCode = 2
	RpcObjectImportNotionValidateTokenResponseError_INTERNAL_ERROR         RpcObjectImportNotionValidateTokenResponseErrorCode = 3
	RpcObjectImportNotionValidateTokenResponseError_UNAUTHORIZED           RpcObjectImportNotionValidateTokenResponseErrorCode = 4
	RpcObjectImportNotionValidateTokenResponseError_FORBIDDEN              RpcObjectImportNotionValidateTokenResponseErrorCode = 5
	RpcObjectImportNotionValidateTokenResponseError_SERVICE_UNAVAILABLE    RpcObjectImportNotionValidateTokenResponseErrorCode = 6
	RpcObjectImportNotionValidateTokenResponseError_ACCOUNT_IS_NOT_RUNNING RpcObjectImportNotionValidateTokenResponseErrorCode = 7
)

// Enum value maps for RpcObjectImportNotionValidateTokenResponseErrorCode.
var (
	RpcObjectImportNotionValidateTokenResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
		3: "INTERNAL_ERROR",
		4: "UNAUTHORIZED",
		5: "FORBIDDEN",
		6: "SERVICE_UNAVAILABLE",
		7: "ACCOUNT_IS_NOT_RUNNING",
	}
	RpcObjectImportNotionValidateTokenResponseErrorCode_value = map[string]int32{
		"NULL":                   0,
		"UNKNOWN_ERROR":          1,
		"BAD_INPUT":              2,
		"INTERNAL_ERROR":         3,
		"UNAUTHORIZED":           4,
		"FORBIDDEN":              5,
		"SERVICE_UNAVAILABLE":    6,
		"ACCOUNT_IS_NOT_RUNNING": 7,
	}
)

func (x RpcObjectImportNotionValidateTokenResponseErrorCode) Enum() *RpcObjectImportNotionValidateTokenResponseErrorCode {
	p := new(RpcObjectImportNotionValidateTokenResponseErrorCode)
	*p = x
	return p
}

func (x RpcObjectImportNotionValidateTokenResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcObjectImportNotionValidateTokenResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[111].Descriptor()
}

func (RpcObjectImportNotionValidateTokenResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[111]
}

func (x RpcObjectImportNotionValidateTokenResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcObjectImportNotionValidateTokenResponseErrorCode.Descriptor instead.
func (RpcObjectImportNotionValidateTokenResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 48, 2, 0, 1, 0, 0}
}

type RpcObjectImportListResponseErrorCode int32

const (
	RpcObjectImportListResponseError_NULL           RpcObjectImportListResponseErrorCode = 0
	RpcObjectImportListResponseError_UNKNOWN_ERROR  RpcObjectImportListResponseErrorCode = 1
	RpcObjectImportListResponseError_BAD_INPUT      RpcObjectImportListResponseErrorCode = 2
	RpcObjectImportListResponseError_INTERNAL_ERROR RpcObjectImportListResponseErrorCode = 3
)

// Enum value maps for RpcObjectImportListResponseErrorCode.
var (
	RpcObjectImportListResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
		3: "INTERNAL_ERROR",
	}
	RpcObjectImportListResponseErrorCode_value = map[string]int32{
		"NULL":           0,
		"UNKNOWN_ERROR":  1,
		"BAD_INPUT":      2,
		"INTERNAL_ERROR": 3,
	}
)

func (x RpcObjectImportListResponseErrorCode) Enum() *RpcObjectImportListResponseErrorCode {
	p := new(RpcObjectImportListResponseErrorCode)
	*p = x
	return p
}

func (x RpcObjectImportListResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcObjectImportListResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[112].Descriptor()
}

func (RpcObjectImportListResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[112]
}

func (x RpcObjectImportListResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcObjectImportListResponseErrorCode.Descriptor instead.
func (RpcObjectImportListResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 49, 1, 0, 0}
}

type RpcObjectImportListImportResponseType int32

const (
	RpcObjectImportListImportResponse_Notion   RpcObjectImportListImportResponseType = 0
	RpcObjectImportListImportResponse_Markdown RpcObjectImportListImportResponseType = 1
	RpcObjectImportListImportResponse_Html     RpcObjectImportListImportResponseType = 2
	RpcObjectImportListImportResponse_Txt      RpcObjectImportListImportResponseType = 3
)

// Enum value maps for RpcObjectImportListImportResponseType.
var (
	RpcObjectImportListImportResponseType_name = map[int32]string{
		0: "Notion",
		1: "Markdown",
		2: "Html",
		3: "Txt",
	}
	RpcObjectImportListImportResponseType_value = map[string]int32{
		"Notion":   0,
		"Markdown": 1,
		"Html":     2,
		"Txt":      3,
	}
)

func (x RpcObjectImportListImportResponseType) Enum() *RpcObjectImportListImportResponseType {
	p := new(RpcObjectImportListImportResponseType)
	*p = x
	return p
}

func (x RpcObjectImportListImportResponseType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcObjectImportListImportResponseType) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[113].Descriptor()
}

func (RpcObjectImportListImportResponseType) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[113]
}

func (x RpcObjectImportListImportResponseType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcObjectImportListImportResponseType.Descriptor instead.
func (RpcObjectImportListImportResponseType) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 49, 2, 0}
}

type RpcObjectImportUseCaseRequestUseCase int32

const (
	RpcObjectImportUseCaseRequest_NONE        RpcObjectImportUseCaseRequestUseCase = 0
	RpcObjectImportUseCaseRequest_GET_STARTED RpcObjectImportUseCaseRequestUseCase = 1
	RpcObjectImportUseCaseRequest_EMPTY       RpcObjectImportUseCaseRequestUseCase = 2
)

// Enum value maps for RpcObjectImportUseCaseRequestUseCase.
var (
	RpcObjectImportUseCaseRequestUseCase_name = map[int32]string{
		0: "NONE",
		1: "GET_STARTED",
		2: "EMPTY",
	}
	RpcObjectImportUseCaseRequestUseCase_value = map[string]int32{
		"NONE":        0,
		"GET_STARTED": 1,
		"EMPTY":       2,
	}
)

func (x RpcObjectImportUseCaseRequestUseCase) Enum() *RpcObjectImportUseCaseRequestUseCase {
	p := new(RpcObjectImportUseCaseRequestUseCase)
	*p = x
	return p
}

func (x RpcObjectImportUseCaseRequestUseCase) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcObjectImportUseCaseRequestUseCase) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[114].Descriptor()
}

func (RpcObjectImportUseCaseRequestUseCase) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[114]
}

func (x RpcObjectImportUseCaseRequestUseCase) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcObjectImportUseCaseRequestUseCase.Descriptor instead.
func (RpcObjectImportUseCaseRequestUseCase) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 50, 0, 0}
}

type RpcObjectImportUseCaseResponseErrorCode int32

const (
	RpcObjectImportUseCaseResponseError_NULL          RpcObjectImportUseCaseResponseErrorCode = 0
	RpcObjectImportUseCaseResponseError_UNKNOWN_ERROR RpcObjectImportUseCaseResponseErrorCode = 1
	RpcObjectImportUseCaseResponseError_BAD_INPUT     RpcObjectImportUseCaseResponseErrorCode = 2
)

// Enum value maps for RpcObjectImportUseCaseResponseErrorCode.
var (
	RpcObjectImportUseCaseResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcObjectImportUseCaseResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcObjectImportUseCaseResponseErrorCode) Enum() *RpcObjectImportUseCaseResponseErrorCode {
	p := new(RpcObjectImportUseCaseResponseErrorCode)
	*p = x
	return p
}

func (x RpcObjectImportUseCaseResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcObjectImportUseCaseResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[115].Descriptor()
}

func (RpcObjectImportUseCaseResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[115]
}

func (x RpcObjectImportUseCaseResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcObjectImportUseCaseResponseErrorCode.Descriptor instead.
func (RpcObjectImportUseCaseResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 50, 1, 0, 0}
}

type RpcObjectImportExperienceResponseErrorCode int32

const (
	RpcObjectImportExperienceResponseError_NULL                    RpcObjectImportExperienceResponseErrorCode = 0
	RpcObjectImportExperienceResponseError_UNKNOWN_ERROR           RpcObjectImportExperienceResponseErrorCode = 1
	RpcObjectImportExperienceResponseError_BAD_INPUT               RpcObjectImportExperienceResponseErrorCode = 2
	RpcObjectImportExperienceResponseError_INSUFFICIENT_PERMISSION RpcObjectImportExperienceResponseErrorCode = 3
)

// Enum value maps for RpcObjectImportExperienceResponseErrorCode.
var (
	RpcObjectImportExperienceResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
		3: "INSUFFICIENT_PERMISSION",
	}
	RpcObjectImportExperienceResponseErrorCode_value = map[string]int32{
		"NULL":                    0,
		"UNKNOWN_ERROR":           1,
		"BAD_INPUT":               2,
		"INSUFFICIENT_PERMISSION": 3,
	}
)

func (x RpcObjectImportExperienceResponseErrorCode) Enum() *RpcObjectImportExperienceResponseErrorCode {
	p := new(RpcObjectImportExperienceResponseErrorCode)
	*p = x
	return p
}

func (x RpcObjectImportExperienceResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcObjectImportExperienceResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[116].Descriptor()
}

func (RpcObjectImportExperienceResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[116]
}

func (x RpcObjectImportExperienceResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcObjectImportExperienceResponseErrorCode.Descriptor instead.
func (RpcObjectImportExperienceResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 51, 1, 0, 0}
}

type RpcObjectDateByTimestampResponseErrorCode int32

const (
	RpcObjectDateByTimestampResponseError_NULL          RpcObjectDateByTimestampResponseErrorCode = 0
	RpcObjectDateByTimestampResponseError_UNKNOWN_ERROR RpcObjectDateByTimestampResponseErrorCode = 1
	RpcObjectDateByTimestampResponseError_BAD_INPUT     RpcObjectDateByTimestampResponseErrorCode = 2
)

// Enum value maps for RpcObjectDateByTimestampResponseErrorCode.
var (
	RpcObjectDateByTimestampResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcObjectDateByTimestampResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcObjectDateByTimestampResponseErrorCode) Enum() *RpcObjectDateByTimestampResponseErrorCode {
	p := new(RpcObjectDateByTimestampResponseErrorCode)
	*p = x
	return p
}

func (x RpcObjectDateByTimestampResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcObjectDateByTimestampResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[117].Descriptor()
}

func (RpcObjectDateByTimestampResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[117]
}

func (x RpcObjectDateByTimestampResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcObjectDateByTimestampResponseErrorCode.Descriptor instead.
func (RpcObjectDateByTimestampResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 52, 1, 0, 0}
}

type RpcObjectCollectionAddResponseErrorCode int32

const (
	RpcObjectCollectionAddResponseError_NULL          RpcObjectCollectionAddResponseErrorCode = 0
	RpcObjectCollectionAddResponseError_UNKNOWN_ERROR RpcObjectCollectionAddResponseErrorCode = 1
	RpcObjectCollectionAddResponseError_BAD_INPUT     RpcObjectCollectionAddResponseErrorCode = 2
)

// Enum value maps for RpcObjectCollectionAddResponseErrorCode.
var (
	RpcObjectCollectionAddResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcObjectCollectionAddResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcObjectCollectionAddResponseErrorCode) Enum() *RpcObjectCollectionAddResponseErrorCode {
	p := new(RpcObjectCollectionAddResponseErrorCode)
	*p = x
	return p
}

func (x RpcObjectCollectionAddResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcObjectCollectionAddResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[118].Descriptor()
}

func (RpcObjectCollectionAddResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[118]
}

func (x RpcObjectCollectionAddResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcObjectCollectionAddResponseErrorCode.Descriptor instead.
func (RpcObjectCollectionAddResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 7, 0, 1, 0, 0}
}

type RpcObjectCollectionRemoveResponseErrorCode int32

const (
	RpcObjectCollectionRemoveResponseError_NULL          RpcObjectCollectionRemoveResponseErrorCode = 0
	RpcObjectCollectionRemoveResponseError_UNKNOWN_ERROR RpcObjectCollectionRemoveResponseErrorCode = 1
	RpcObjectCollectionRemoveResponseError_BAD_INPUT     RpcObjectCollectionRemoveResponseErrorCode = 2
)

// Enum value maps for RpcObjectCollectionRemoveResponseErrorCode.
var (
	RpcObjectCollectionRemoveResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcObjectCollectionRemoveResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcObjectCollectionRemoveResponseErrorCode) Enum() *RpcObjectCollectionRemoveResponseErrorCode {
	p := new(RpcObjectCollectionRemoveResponseErrorCode)
	*p = x
	return p
}

func (x RpcObjectCollectionRemoveResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcObjectCollectionRemoveResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[119].Descriptor()
}

func (RpcObjectCollectionRemoveResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[119]
}

func (x RpcObjectCollectionRemoveResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcObjectCollectionRemoveResponseErrorCode.Descriptor instead.
func (RpcObjectCollectionRemoveResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 7, 1, 1, 0, 0}
}

type RpcObjectCollectionSortResponseErrorCode int32

const (
	RpcObjectCollectionSortResponseError_NULL          RpcObjectCollectionSortResponseErrorCode = 0
	RpcObjectCollectionSortResponseError_UNKNOWN_ERROR RpcObjectCollectionSortResponseErrorCode = 1
	RpcObjectCollectionSortResponseError_BAD_INPUT     RpcObjectCollectionSortResponseErrorCode = 2
)

// Enum value maps for RpcObjectCollectionSortResponseErrorCode.
var (
	RpcObjectCollectionSortResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcObjectCollectionSortResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcObjectCollectionSortResponseErrorCode) Enum() *RpcObjectCollectionSortResponseErrorCode {
	p := new(RpcObjectCollectionSortResponseErrorCode)
	*p = x
	return p
}

func (x RpcObjectCollectionSortResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcObjectCollectionSortResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[120].Descriptor()
}

func (RpcObjectCollectionSortResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[120]
}

func (x RpcObjectCollectionSortResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcObjectCollectionSortResponseErrorCode.Descriptor instead.
func (RpcObjectCollectionSortResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 7, 2, 1, 0, 0}
}

type RpcObjectRelationAddResponseErrorCode int32

const (
	RpcObjectRelationAddResponseError_NULL          RpcObjectRelationAddResponseErrorCode = 0
	RpcObjectRelationAddResponseError_UNKNOWN_ERROR RpcObjectRelationAddResponseErrorCode = 1
	RpcObjectRelationAddResponseError_BAD_INPUT     RpcObjectRelationAddResponseErrorCode = 2
)

// Enum value maps for RpcObjectRelationAddResponseErrorCode.
var (
	RpcObjectRelationAddResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcObjectRelationAddResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcObjectRelationAddResponseErrorCode) Enum() *RpcObjectRelationAddResponseErrorCode {
	p := new(RpcObjectRelationAddResponseErrorCode)
	*p = x
	return p
}

func (x RpcObjectRelationAddResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcObjectRelationAddResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[121].Descriptor()
}

func (RpcObjectRelationAddResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[121]
}

func (x RpcObjectRelationAddResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcObjectRelationAddResponseErrorCode.Descriptor instead.
func (RpcObjectRelationAddResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 8, 0, 1, 0, 0}
}

type RpcObjectRelationDeleteResponseErrorCode int32

const (
	RpcObjectRelationDeleteResponseError_NULL          RpcObjectRelationDeleteResponseErrorCode = 0
	RpcObjectRelationDeleteResponseError_UNKNOWN_ERROR RpcObjectRelationDeleteResponseErrorCode = 1
	RpcObjectRelationDeleteResponseError_BAD_INPUT     RpcObjectRelationDeleteResponseErrorCode = 2
)

// Enum value maps for RpcObjectRelationDeleteResponseErrorCode.
var (
	RpcObjectRelationDeleteResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcObjectRelationDeleteResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcObjectRelationDeleteResponseErrorCode) Enum() *RpcObjectRelationDeleteResponseErrorCode {
	p := new(RpcObjectRelationDeleteResponseErrorCode)
	*p = x
	return p
}

func (x RpcObjectRelationDeleteResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcObjectRelationDeleteResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[122].Descriptor()
}

func (RpcObjectRelationDeleteResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[122]
}

func (x RpcObjectRelationDeleteResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcObjectRelationDeleteResponseErrorCode.Descriptor instead.
func (RpcObjectRelationDeleteResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 8, 1, 1, 0, 0}
}

type RpcObjectRelationListAvailableResponseErrorCode int32

const (
	RpcObjectRelationListAvailableResponseError_NULL          RpcObjectRelationListAvailableResponseErrorCode = 0
	RpcObjectRelationListAvailableResponseError_UNKNOWN_ERROR RpcObjectRelationListAvailableResponseErrorCode = 1
	RpcObjectRelationListAvailableResponseError_BAD_INPUT     RpcObjectRelationListAvailableResponseErrorCode = 2 // ...
)

// Enum value maps for RpcObjectRelationListAvailableResponseErrorCode.
var (
	RpcObjectRelationListAvailableResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcObjectRelationListAvailableResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcObjectRelationListAvailableResponseErrorCode) Enum() *RpcObjectRelationListAvailableResponseErrorCode {
	p := new(RpcObjectRelationListAvailableResponseErrorCode)
	*p = x
	return p
}

func (x RpcObjectRelationListAvailableResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcObjectRelationListAvailableResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[123].Descriptor()
}

func (RpcObjectRelationListAvailableResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[123]
}

func (x RpcObjectRelationListAvailableResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcObjectRelationListAvailableResponseErrorCode.Descriptor instead.
func (RpcObjectRelationListAvailableResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 8, 2, 1, 0, 0}
}

type RpcObjectRelationAddFeaturedResponseErrorCode int32

const (
	RpcObjectRelationAddFeaturedResponseError_NULL          RpcObjectRelationAddFeaturedResponseErrorCode = 0
	RpcObjectRelationAddFeaturedResponseError_UNKNOWN_ERROR RpcObjectRelationAddFeaturedResponseErrorCode = 1
	RpcObjectRelationAddFeaturedResponseError_BAD_INPUT     RpcObjectRelationAddFeaturedResponseErrorCode = 2 // ...
)

// Enum value maps for RpcObjectRelationAddFeaturedResponseErrorCode.
var (
	RpcObjectRelationAddFeaturedResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcObjectRelationAddFeaturedResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcObjectRelationAddFeaturedResponseErrorCode) Enum() *RpcObjectRelationAddFeaturedResponseErrorCode {
	p := new(RpcObjectRelationAddFeaturedResponseErrorCode)
	*p = x
	return p
}

func (x RpcObjectRelationAddFeaturedResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcObjectRelationAddFeaturedResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[124].Descriptor()
}

func (RpcObjectRelationAddFeaturedResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[124]
}

func (x RpcObjectRelationAddFeaturedResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcObjectRelationAddFeaturedResponseErrorCode.Descriptor instead.
func (RpcObjectRelationAddFeaturedResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 8, 3, 1, 0, 0}
}

type RpcObjectRelationRemoveFeaturedResponseErrorCode int32

const (
	RpcObjectRelationRemoveFeaturedResponseError_NULL          RpcObjectRelationRemoveFeaturedResponseErrorCode = 0
	RpcObjectRelationRemoveFeaturedResponseError_UNKNOWN_ERROR RpcObjectRelationRemoveFeaturedResponseErrorCode = 1
	RpcObjectRelationRemoveFeaturedResponseError_BAD_INPUT     RpcObjectRelationRemoveFeaturedResponseErrorCode = 2 // ...
)

// Enum value maps for RpcObjectRelationRemoveFeaturedResponseErrorCode.
var (
	RpcObjectRelationRemoveFeaturedResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcObjectRelationRemoveFeaturedResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcObjectRelationRemoveFeaturedResponseErrorCode) Enum() *RpcObjectRelationRemoveFeaturedResponseErrorCode {
	p := new(RpcObjectRelationRemoveFeaturedResponseErrorCode)
	*p = x
	return p
}

func (x RpcObjectRelationRemoveFeaturedResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcObjectRelationRemoveFeaturedResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[125].Descriptor()
}

func (RpcObjectRelationRemoveFeaturedResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[125]
}

func (x RpcObjectRelationRemoveFeaturedResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcObjectRelationRemoveFeaturedResponseErrorCode.Descriptor instead.
func (RpcObjectRelationRemoveFeaturedResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 8, 4, 1, 0, 0}
}

type RpcObjectTypeRelationAddResponseErrorCode int32

const (
	RpcObjectTypeRelationAddResponseError_NULL                 RpcObjectTypeRelationAddResponseErrorCode = 0
	RpcObjectTypeRelationAddResponseError_UNKNOWN_ERROR        RpcObjectTypeRelationAddResponseErrorCode = 1
	RpcObjectTypeRelationAddResponseError_BAD_INPUT            RpcObjectTypeRelationAddResponseErrorCode = 2
	RpcObjectTypeRelationAddResponseError_READONLY_OBJECT_TYPE RpcObjectTypeRelationAddResponseErrorCode = 3 // ...
)

// Enum value maps for RpcObjectTypeRelationAddResponseErrorCode.
var (
	RpcObjectTypeRelationAddResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
		3: "READONLY_OBJECT_TYPE",
	}
	RpcObjectTypeRelationAddResponseErrorCode_value = map[string]int32{
		"NULL":                 0,
		"UNKNOWN_ERROR":        1,
		"BAD_INPUT":            2,
		"READONLY_OBJECT_TYPE": 3,
	}
)

func (x RpcObjectTypeRelationAddResponseErrorCode) Enum() *RpcObjectTypeRelationAddResponseErrorCode {
	p := new(RpcObjectTypeRelationAddResponseErrorCode)
	*p = x
	return p
}

func (x RpcObjectTypeRelationAddResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcObjectTypeRelationAddResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[126].Descriptor()
}

func (RpcObjectTypeRelationAddResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[126]
}

func (x RpcObjectTypeRelationAddResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcObjectTypeRelationAddResponseErrorCode.Descriptor instead.
func (RpcObjectTypeRelationAddResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 9, 0, 0, 1, 0, 0}
}

type RpcObjectTypeRelationRemoveResponseErrorCode int32

const (
	RpcObjectTypeRelationRemoveResponseError_NULL                 RpcObjectTypeRelationRemoveResponseErrorCode = 0
	RpcObjectTypeRelationRemoveResponseError_UNKNOWN_ERROR        RpcObjectTypeRelationRemoveResponseErrorCode = 1
	RpcObjectTypeRelationRemoveResponseError_BAD_INPUT            RpcObjectTypeRelationRemoveResponseErrorCode = 2
	RpcObjectTypeRelationRemoveResponseError_READONLY_OBJECT_TYPE RpcObjectTypeRelationRemoveResponseErrorCode = 3 // ...
)

// Enum value maps for RpcObjectTypeRelationRemoveResponseErrorCode.
var (
	RpcObjectTypeRelationRemoveResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
		3: "READONLY_OBJECT_TYPE",
	}
	RpcObjectTypeRelationRemoveResponseErrorCode_value = map[string]int32{
		"NULL":                 0,
		"UNKNOWN_ERROR":        1,
		"BAD_INPUT":            2,
		"READONLY_OBJECT_TYPE": 3,
	}
)

func (x RpcObjectTypeRelationRemoveResponseErrorCode) Enum() *RpcObjectTypeRelationRemoveResponseErrorCode {
	p := new(RpcObjectTypeRelationRemoveResponseErrorCode)
	*p = x
	return p
}

func (x RpcObjectTypeRelationRemoveResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcObjectTypeRelationRemoveResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[127].Descriptor()
}

func (RpcObjectTypeRelationRemoveResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[127]
}

func (x RpcObjectTypeRelationRemoveResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcObjectTypeRelationRemoveResponseErrorCode.Descriptor instead.
func (RpcObjectTypeRelationRemoveResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 9, 0, 1, 1, 0, 0}
}

type RpcObjectTypeRecommendedRelationsSetResponseErrorCode int32

const (
	RpcObjectTypeRecommendedRelationsSetResponseError_NULL                 RpcObjectTypeRecommendedRelationsSetResponseErrorCode = 0
	RpcObjectTypeRecommendedRelationsSetResponseError_UNKNOWN_ERROR        RpcObjectTypeRecommendedRelationsSetResponseErrorCode = 1
	RpcObjectTypeRecommendedRelationsSetResponseError_BAD_INPUT            RpcObjectTypeRecommendedRelationsSetResponseErrorCode = 2
	RpcObjectTypeRecommendedRelationsSetResponseError_READONLY_OBJECT_TYPE RpcObjectTypeRecommendedRelationsSetResponseErrorCode = 3 // ...
)

// Enum value maps for RpcObjectTypeRecommendedRelationsSetResponseErrorCode.
var (
	RpcObjectTypeRecommendedRelationsSetResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
		3: "READONLY_OBJECT_TYPE",
	}
	RpcObjectTypeRecommendedRelationsSetResponseErrorCode_value = map[string]int32{
		"NULL":                 0,
		"UNKNOWN_ERROR":        1,
		"BAD_INPUT":            2,
		"READONLY_OBJECT_TYPE": 3,
	}
)

func (x RpcObjectTypeRecommendedRelationsSetResponseErrorCode) Enum() *RpcObjectTypeRecommendedRelationsSetResponseErrorCode {
	p := new(RpcObjectTypeRecommendedRelationsSetResponseErrorCode)
	*p = x
	return p
}

func (x RpcObjectTypeRecommendedRelationsSetResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcObjectTypeRecommendedRelationsSetResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[128].Descriptor()
}

func (RpcObjectTypeRecommendedRelationsSetResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[128]
}

func (x RpcObjectTypeRecommendedRelationsSetResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcObjectTypeRecommendedRelationsSetResponseErrorCode.Descriptor instead.
func (RpcObjectTypeRecommendedRelationsSetResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 9, 1, 0, 1, 0, 0}
}

type RpcObjectTypeRecommendedFeaturedRelationsSetResponseErrorCode int32

const (
	RpcObjectTypeRecommendedFeaturedRelationsSetResponseError_NULL                 RpcObjectTypeRecommendedFeaturedRelationsSetResponseErrorCode = 0
	RpcObjectTypeRecommendedFeaturedRelationsSetResponseError_UNKNOWN_ERROR        RpcObjectTypeRecommendedFeaturedRelationsSetResponseErrorCode = 1
	RpcObjectTypeRecommendedFeaturedRelationsSetResponseError_BAD_INPUT            RpcObjectTypeRecommendedFeaturedRelationsSetResponseErrorCode = 2
	RpcObjectTypeRecommendedFeaturedRelationsSetResponseError_READONLY_OBJECT_TYPE RpcObjectTypeRecommendedFeaturedRelationsSetResponseErrorCode = 3 // ...
)

// Enum value maps for RpcObjectTypeRecommendedFeaturedRelationsSetResponseErrorCode.
var (
	RpcObjectTypeRecommendedFeaturedRelationsSetResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
		3: "READONLY_OBJECT_TYPE",
	}
	RpcObjectTypeRecommendedFeaturedRelationsSetResponseErrorCode_value = map[string]int32{
		"NULL":                 0,
		"UNKNOWN_ERROR":        1,
		"BAD_INPUT":            2,
		"READONLY_OBJECT_TYPE": 3,
	}
)

func (x RpcObjectTypeRecommendedFeaturedRelationsSetResponseErrorCode) Enum() *RpcObjectTypeRecommendedFeaturedRelationsSetResponseErrorCode {
	p := new(RpcObjectTypeRecommendedFeaturedRelationsSetResponseErrorCode)
	*p = x
	return p
}

func (x RpcObjectTypeRecommendedFeaturedRelationsSetResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcObjectTypeRecommendedFeaturedRelationsSetResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[129].Descriptor()
}

func (RpcObjectTypeRecommendedFeaturedRelationsSetResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[129]
}

func (x RpcObjectTypeRecommendedFeaturedRelationsSetResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcObjectTypeRecommendedFeaturedRelationsSetResponseErrorCode.Descriptor instead.
func (RpcObjectTypeRecommendedFeaturedRelationsSetResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 9, 1, 1, 1, 0, 0}
}

type RpcObjectTypeListConflictingRelationsResponseErrorCode int32

const (
	RpcObjectTypeListConflictingRelationsResponseError_NULL                 RpcObjectTypeListConflictingRelationsResponseErrorCode = 0
	RpcObjectTypeListConflictingRelationsResponseError_UNKNOWN_ERROR        RpcObjectTypeListConflictingRelationsResponseErrorCode = 1
	RpcObjectTypeListConflictingRelationsResponseError_BAD_INPUT            RpcObjectTypeListConflictingRelationsResponseErrorCode = 2
	RpcObjectTypeListConflictingRelationsResponseError_READONLY_OBJECT_TYPE RpcObjectTypeListConflictingRelationsResponseErrorCode = 3
)

// Enum value maps for RpcObjectTypeListConflictingRelationsResponseErrorCode.
var (
	RpcObjectTypeListConflictingRelationsResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
		3: "READONLY_OBJECT_TYPE",
	}
	RpcObjectTypeListConflictingRelationsResponseErrorCode_value = map[string]int32{
		"NULL":                 0,
		"UNKNOWN_ERROR":        1,
		"BAD_INPUT":            2,
		"READONLY_OBJECT_TYPE": 3,
	}
)

func (x RpcObjectTypeListConflictingRelationsResponseErrorCode) Enum() *RpcObjectTypeListConflictingRelationsResponseErrorCode {
	p := new(RpcObjectTypeListConflictingRelationsResponseErrorCode)
	*p = x
	return p
}

func (x RpcObjectTypeListConflictingRelationsResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcObjectTypeListConflictingRelationsResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[130].Descriptor()
}

func (RpcObjectTypeListConflictingRelationsResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[130]
}

func (x RpcObjectTypeListConflictingRelationsResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcObjectTypeListConflictingRelationsResponseErrorCode.Descriptor instead.
func (RpcObjectTypeListConflictingRelationsResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 9, 2, 1, 0, 0}
}

type RpcRelationListRemoveOptionResponseErrorCode int32

const (
	RpcRelationListRemoveOptionResponseError_NULL                   RpcRelationListRemoveOptionResponseErrorCode = 0
	RpcRelationListRemoveOptionResponseError_UNKNOWN_ERROR          RpcRelationListRemoveOptionResponseErrorCode = 1
	RpcRelationListRemoveOptionResponseError_BAD_INPUT              RpcRelationListRemoveOptionResponseErrorCode = 2
	RpcRelationListRemoveOptionResponseError_OPTION_USED_BY_OBJECTS RpcRelationListRemoveOptionResponseErrorCode = 3
)

// Enum value maps for RpcRelationListRemoveOptionResponseErrorCode.
var (
	RpcRelationListRemoveOptionResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
		3: "OPTION_USED_BY_OBJECTS",
	}
	RpcRelationListRemoveOptionResponseErrorCode_value = map[string]int32{
		"NULL":                   0,
		"UNKNOWN_ERROR":          1,
		"BAD_INPUT":              2,
		"OPTION_USED_BY_OBJECTS": 3,
	}
)

func (x RpcRelationListRemoveOptionResponseErrorCode) Enum() *RpcRelationListRemoveOptionResponseErrorCode {
	p := new(RpcRelationListRemoveOptionResponseErrorCode)
	*p = x
	return p
}

func (x RpcRelationListRemoveOptionResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcRelationListRemoveOptionResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[131].Descriptor()
}

func (RpcRelationListRemoveOptionResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[131]
}

func (x RpcRelationListRemoveOptionResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcRelationListRemoveOptionResponseErrorCode.Descriptor instead.
func (RpcRelationListRemoveOptionResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 10, 0, 1, 0, 0}
}

type RpcRelationOptionsResponseErrorCode int32

const (
	RpcRelationOptionsResponseError_NULL          RpcRelationOptionsResponseErrorCode = 0
	RpcRelationOptionsResponseError_UNKNOWN_ERROR RpcRelationOptionsResponseErrorCode = 1
	RpcRelationOptionsResponseError_BAD_INPUT     RpcRelationOptionsResponseErrorCode = 2
)

// Enum value maps for RpcRelationOptionsResponseErrorCode.
var (
	RpcRelationOptionsResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcRelationOptionsResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcRelationOptionsResponseErrorCode) Enum() *RpcRelationOptionsResponseErrorCode {
	p := new(RpcRelationOptionsResponseErrorCode)
	*p = x
	return p
}

func (x RpcRelationOptionsResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcRelationOptionsResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[132].Descriptor()
}

func (RpcRelationOptionsResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[132]
}

func (x RpcRelationOptionsResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcRelationOptionsResponseErrorCode.Descriptor instead.
func (RpcRelationOptionsResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 10, 1, 1, 0, 0}
}

type RpcRelationListWithValueResponseErrorCode int32

const (
	RpcRelationListWithValueResponseError_NULL          RpcRelationListWithValueResponseErrorCode = 0
	RpcRelationListWithValueResponseError_UNKNOWN_ERROR RpcRelationListWithValueResponseErrorCode = 1
	RpcRelationListWithValueResponseError_BAD_INPUT     RpcRelationListWithValueResponseErrorCode = 2
)

// Enum value maps for RpcRelationListWithValueResponseErrorCode.
var (
	RpcRelationListWithValueResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcRelationListWithValueResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcRelationListWithValueResponseErrorCode) Enum() *RpcRelationListWithValueResponseErrorCode {
	p := new(RpcRelationListWithValueResponseErrorCode)
	*p = x
	return p
}

func (x RpcRelationListWithValueResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcRelationListWithValueResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[133].Descriptor()
}

func (RpcRelationListWithValueResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[133]
}

func (x RpcRelationListWithValueResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcRelationListWithValueResponseErrorCode.Descriptor instead.
func (RpcRelationListWithValueResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 10, 2, 1, 1, 0}
}

type RpcHistoryGetVersionsResponseErrorCode int32

const (
	RpcHistoryGetVersionsResponseError_NULL          RpcHistoryGetVersionsResponseErrorCode = 0
	RpcHistoryGetVersionsResponseError_UNKNOWN_ERROR RpcHistoryGetVersionsResponseErrorCode = 1
	RpcHistoryGetVersionsResponseError_BAD_INPUT     RpcHistoryGetVersionsResponseErrorCode = 2 // ...
)

// Enum value maps for RpcHistoryGetVersionsResponseErrorCode.
var (
	RpcHistoryGetVersionsResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcHistoryGetVersionsResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcHistoryGetVersionsResponseErrorCode) Enum() *RpcHistoryGetVersionsResponseErrorCode {
	p := new(RpcHistoryGetVersionsResponseErrorCode)
	*p = x
	return p
}

func (x RpcHistoryGetVersionsResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcHistoryGetVersionsResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[134].Descriptor()
}

func (RpcHistoryGetVersionsResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[134]
}

func (x RpcHistoryGetVersionsResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcHistoryGetVersionsResponseErrorCode.Descriptor instead.
func (RpcHistoryGetVersionsResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 11, 1, 1, 0, 0}
}

type RpcHistoryShowVersionResponseErrorCode int32

const (
	RpcHistoryShowVersionResponseError_NULL          RpcHistoryShowVersionResponseErrorCode = 0
	RpcHistoryShowVersionResponseError_UNKNOWN_ERROR RpcHistoryShowVersionResponseErrorCode = 1
	RpcHistoryShowVersionResponseError_BAD_INPUT     RpcHistoryShowVersionResponseErrorCode = 2 // ...
)

// Enum value maps for RpcHistoryShowVersionResponseErrorCode.
var (
	RpcHistoryShowVersionResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcHistoryShowVersionResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcHistoryShowVersionResponseErrorCode) Enum() *RpcHistoryShowVersionResponseErrorCode {
	p := new(RpcHistoryShowVersionResponseErrorCode)
	*p = x
	return p
}

func (x RpcHistoryShowVersionResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcHistoryShowVersionResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[135].Descriptor()
}

func (RpcHistoryShowVersionResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[135]
}

func (x RpcHistoryShowVersionResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcHistoryShowVersionResponseErrorCode.Descriptor instead.
func (RpcHistoryShowVersionResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 11, 2, 1, 0, 0}
}

type RpcHistorySetVersionResponseErrorCode int32

const (
	RpcHistorySetVersionResponseError_NULL          RpcHistorySetVersionResponseErrorCode = 0
	RpcHistorySetVersionResponseError_UNKNOWN_ERROR RpcHistorySetVersionResponseErrorCode = 1
	RpcHistorySetVersionResponseError_BAD_INPUT     RpcHistorySetVersionResponseErrorCode = 2 // ...
)

// Enum value maps for RpcHistorySetVersionResponseErrorCode.
var (
	RpcHistorySetVersionResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcHistorySetVersionResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcHistorySetVersionResponseErrorCode) Enum() *RpcHistorySetVersionResponseErrorCode {
	p := new(RpcHistorySetVersionResponseErrorCode)
	*p = x
	return p
}

func (x RpcHistorySetVersionResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcHistorySetVersionResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[136].Descriptor()
}

func (RpcHistorySetVersionResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[136]
}

func (x RpcHistorySetVersionResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcHistorySetVersionResponseErrorCode.Descriptor instead.
func (RpcHistorySetVersionResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 11, 3, 1, 0, 0}
}

type RpcHistoryDiffVersionsResponseErrorCode int32

const (
	RpcHistoryDiffVersionsResponseError_NULL          RpcHistoryDiffVersionsResponseErrorCode = 0
	RpcHistoryDiffVersionsResponseError_UNKNOWN_ERROR RpcHistoryDiffVersionsResponseErrorCode = 1
	RpcHistoryDiffVersionsResponseError_BAD_INPUT     RpcHistoryDiffVersionsResponseErrorCode = 2 // ...
)

// Enum value maps for RpcHistoryDiffVersionsResponseErrorCode.
var (
	RpcHistoryDiffVersionsResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcHistoryDiffVersionsResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcHistoryDiffVersionsResponseErrorCode) Enum() *RpcHistoryDiffVersionsResponseErrorCode {
	p := new(RpcHistoryDiffVersionsResponseErrorCode)
	*p = x
	return p
}

func (x RpcHistoryDiffVersionsResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcHistoryDiffVersionsResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[137].Descriptor()
}

func (RpcHistoryDiffVersionsResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[137]
}

func (x RpcHistoryDiffVersionsResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcHistoryDiffVersionsResponseErrorCode.Descriptor instead.
func (RpcHistoryDiffVersionsResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 11, 4, 1, 0, 0}
}

type RpcFileReconcileResponseErrorCode int32

const (
	RpcFileReconcileResponseError_NULL          RpcFileReconcileResponseErrorCode = 0
	RpcFileReconcileResponseError_UNKNOWN_ERROR RpcFileReconcileResponseErrorCode = 1
	RpcFileReconcileResponseError_BAD_INPUT     RpcFileReconcileResponseErrorCode = 2
)

// Enum value maps for RpcFileReconcileResponseErrorCode.
var (
	RpcFileReconcileResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcFileReconcileResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcFileReconcileResponseErrorCode) Enum() *RpcFileReconcileResponseErrorCode {
	p := new(RpcFileReconcileResponseErrorCode)
	*p = x
	return p
}

func (x RpcFileReconcileResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcFileReconcileResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[138].Descriptor()
}

func (RpcFileReconcileResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[138]
}

func (x RpcFileReconcileResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcFileReconcileResponseErrorCode.Descriptor instead.
func (RpcFileReconcileResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 12, 0, 1, 0, 0}
}

type RpcFileOffloadResponseErrorCode int32

const (
	RpcFileOffloadResponseError_NULL          RpcFileOffloadResponseErrorCode = 0
	RpcFileOffloadResponseError_UNKNOWN_ERROR RpcFileOffloadResponseErrorCode = 1
	RpcFileOffloadResponseError_BAD_INPUT     RpcFileOffloadResponseErrorCode = 2
	// ...
	RpcFileOffloadResponseError_NODE_NOT_STARTED RpcFileOffloadResponseErrorCode = 103
)

// Enum value maps for RpcFileOffloadResponseErrorCode.
var (
	RpcFileOffloadResponseErrorCode_name = map[int32]string{
		0:   "NULL",
		1:   "UNKNOWN_ERROR",
		2:   "BAD_INPUT",
		103: "NODE_NOT_STARTED",
	}
	RpcFileOffloadResponseErrorCode_value = map[string]int32{
		"NULL":             0,
		"UNKNOWN_ERROR":    1,
		"BAD_INPUT":        2,
		"NODE_NOT_STARTED": 103,
	}
)

func (x RpcFileOffloadResponseErrorCode) Enum() *RpcFileOffloadResponseErrorCode {
	p := new(RpcFileOffloadResponseErrorCode)
	*p = x
	return p
}

func (x RpcFileOffloadResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcFileOffloadResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[139].Descriptor()
}

func (RpcFileOffloadResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[139]
}

func (x RpcFileOffloadResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcFileOffloadResponseErrorCode.Descriptor instead.
func (RpcFileOffloadResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 12, 1, 1, 0, 0}
}

type RpcFileSpaceOffloadResponseErrorCode int32

const (
	RpcFileSpaceOffloadResponseError_NULL          RpcFileSpaceOffloadResponseErrorCode = 0
	RpcFileSpaceOffloadResponseError_UNKNOWN_ERROR RpcFileSpaceOffloadResponseErrorCode = 1
	RpcFileSpaceOffloadResponseError_BAD_INPUT     RpcFileSpaceOffloadResponseErrorCode = 2
	// ...
	RpcFileSpaceOffloadResponseError_NODE_NOT_STARTED RpcFileSpaceOffloadResponseErrorCode = 103
)

// Enum value maps for RpcFileSpaceOffloadResponseErrorCode.
var (
	RpcFileSpaceOffloadResponseErrorCode_name = map[int32]string{
		0:   "NULL",
		1:   "UNKNOWN_ERROR",
		2:   "BAD_INPUT",
		103: "NODE_NOT_STARTED",
	}
	RpcFileSpaceOffloadResponseErrorCode_value = map[string]int32{
		"NULL":             0,
		"UNKNOWN_ERROR":    1,
		"BAD_INPUT":        2,
		"NODE_NOT_STARTED": 103,
	}
)

func (x RpcFileSpaceOffloadResponseErrorCode) Enum() *RpcFileSpaceOffloadResponseErrorCode {
	p := new(RpcFileSpaceOffloadResponseErrorCode)
	*p = x
	return p
}

func (x RpcFileSpaceOffloadResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcFileSpaceOffloadResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[140].Descriptor()
}

func (RpcFileSpaceOffloadResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[140]
}

func (x RpcFileSpaceOffloadResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcFileSpaceOffloadResponseErrorCode.Descriptor instead.
func (RpcFileSpaceOffloadResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 12, 2, 1, 0, 0}
}

type RpcFileListOffloadResponseErrorCode int32

const (
	RpcFileListOffloadResponseError_NULL          RpcFileListOffloadResponseErrorCode = 0
	RpcFileListOffloadResponseError_UNKNOWN_ERROR RpcFileListOffloadResponseErrorCode = 1
	RpcFileListOffloadResponseError_BAD_INPUT     RpcFileListOffloadResponseErrorCode = 2
	// ...
	RpcFileListOffloadResponseError_NODE_NOT_STARTED RpcFileListOffloadResponseErrorCode = 103
)

// Enum value maps for RpcFileListOffloadResponseErrorCode.
var (
	RpcFileListOffloadResponseErrorCode_name = map[int32]string{
		0:   "NULL",
		1:   "UNKNOWN_ERROR",
		2:   "BAD_INPUT",
		103: "NODE_NOT_STARTED",
	}
	RpcFileListOffloadResponseErrorCode_value = map[string]int32{
		"NULL":             0,
		"UNKNOWN_ERROR":    1,
		"BAD_INPUT":        2,
		"NODE_NOT_STARTED": 103,
	}
)

func (x RpcFileListOffloadResponseErrorCode) Enum() *RpcFileListOffloadResponseErrorCode {
	p := new(RpcFileListOffloadResponseErrorCode)
	*p = x
	return p
}

func (x RpcFileListOffloadResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcFileListOffloadResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[141].Descriptor()
}

func (RpcFileListOffloadResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[141]
}

func (x RpcFileListOffloadResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcFileListOffloadResponseErrorCode.Descriptor instead.
func (RpcFileListOffloadResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 12, 3, 1, 0, 0}
}

type RpcFileUploadResponseErrorCode int32

const (
	RpcFileUploadResponseError_NULL          RpcFileUploadResponseErrorCode = 0
	RpcFileUploadResponseError_UNKNOWN_ERROR RpcFileUploadResponseErrorCode = 1
	RpcFileUploadResponseError_BAD_INPUT     RpcFileUploadResponseErrorCode = 2
)

// Enum value maps for RpcFileUploadResponseErrorCode.
var (
	RpcFileUploadResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcFileUploadResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcFileUploadResponseErrorCode) Enum() *RpcFileUploadResponseErrorCode {
	p := new(RpcFileUploadResponseErrorCode)
	*p = x
	return p
}

func (x RpcFileUploadResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcFileUploadResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[142].Descriptor()
}

func (RpcFileUploadResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[142]
}

func (x RpcFileUploadResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcFileUploadResponseErrorCode.Descriptor instead.
func (RpcFileUploadResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 12, 4, 1, 0, 0}
}

type RpcFileDownloadResponseErrorCode int32

const (
	RpcFileDownloadResponseError_NULL          RpcFileDownloadResponseErrorCode = 0
	RpcFileDownloadResponseError_UNKNOWN_ERROR RpcFileDownloadResponseErrorCode = 1
	RpcFileDownloadResponseError_BAD_INPUT     RpcFileDownloadResponseErrorCode = 2
)

// Enum value maps for RpcFileDownloadResponseErrorCode.
var (
	RpcFileDownloadResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcFileDownloadResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcFileDownloadResponseErrorCode) Enum() *RpcFileDownloadResponseErrorCode {
	p := new(RpcFileDownloadResponseErrorCode)
	*p = x
	return p
}

func (x RpcFileDownloadResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcFileDownloadResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[143].Descriptor()
}

func (RpcFileDownloadResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[143]
}

func (x RpcFileDownloadResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcFileDownloadResponseErrorCode.Descriptor instead.
func (RpcFileDownloadResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 12, 5, 1, 0, 0}
}

type RpcFileDropResponseErrorCode int32

const (
	RpcFileDropResponseError_NULL          RpcFileDropResponseErrorCode = 0
	RpcFileDropResponseError_UNKNOWN_ERROR RpcFileDropResponseErrorCode = 1
	RpcFileDropResponseError_BAD_INPUT     RpcFileDropResponseErrorCode = 2 // ...
)

// Enum value maps for RpcFileDropResponseErrorCode.
var (
	RpcFileDropResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcFileDropResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcFileDropResponseErrorCode) Enum() *RpcFileDropResponseErrorCode {
	p := new(RpcFileDropResponseErrorCode)
	*p = x
	return p
}

func (x RpcFileDropResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcFileDropResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[144].Descriptor()
}

func (RpcFileDropResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[144]
}

func (x RpcFileDropResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcFileDropResponseErrorCode.Descriptor instead.
func (RpcFileDropResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 12, 6, 1, 0, 0}
}

type RpcFileSpaceUsageResponseErrorCode int32

const (
	RpcFileSpaceUsageResponseError_NULL          RpcFileSpaceUsageResponseErrorCode = 0
	RpcFileSpaceUsageResponseError_UNKNOWN_ERROR RpcFileSpaceUsageResponseErrorCode = 1
	RpcFileSpaceUsageResponseError_BAD_INPUT     RpcFileSpaceUsageResponseErrorCode = 2 // ...
)

// Enum value maps for RpcFileSpaceUsageResponseErrorCode.
var (
	RpcFileSpaceUsageResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcFileSpaceUsageResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcFileSpaceUsageResponseErrorCode) Enum() *RpcFileSpaceUsageResponseErrorCode {
	p := new(RpcFileSpaceUsageResponseErrorCode)
	*p = x
	return p
}

func (x RpcFileSpaceUsageResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcFileSpaceUsageResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[145].Descriptor()
}

func (RpcFileSpaceUsageResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[145]
}

func (x RpcFileSpaceUsageResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcFileSpaceUsageResponseErrorCode.Descriptor instead.
func (RpcFileSpaceUsageResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 12, 7, 1, 1, 0}
}

type RpcFileNodeUsageResponseErrorCode int32

const (
	RpcFileNodeUsageResponseError_NULL          RpcFileNodeUsageResponseErrorCode = 0
	RpcFileNodeUsageResponseError_UNKNOWN_ERROR RpcFileNodeUsageResponseErrorCode = 1
	RpcFileNodeUsageResponseError_BAD_INPUT     RpcFileNodeUsageResponseErrorCode = 2 // ...
)

// Enum value maps for RpcFileNodeUsageResponseErrorCode.
var (
	RpcFileNodeUsageResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcFileNodeUsageResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcFileNodeUsageResponseErrorCode) Enum() *RpcFileNodeUsageResponseErrorCode {
	p := new(RpcFileNodeUsageResponseErrorCode)
	*p = x
	return p
}

func (x RpcFileNodeUsageResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcFileNodeUsageResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[146].Descriptor()
}

func (RpcFileNodeUsageResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[146]
}

func (x RpcFileNodeUsageResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcFileNodeUsageResponseErrorCode.Descriptor instead.
func (RpcFileNodeUsageResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 12, 8, 1, 2, 0}
}

type RpcNavigationContext int32

const (
	RpcNavigation_Navigation RpcNavigationContext = 0
	RpcNavigation_MoveTo     RpcNavigationContext = 1 // do not show sets/archive
	RpcNavigation_LinkTo     RpcNavigationContext = 2 // same for mention, do not show sets/archive
)

// Enum value maps for RpcNavigationContext.
var (
	RpcNavigationContext_name = map[int32]string{
		0: "Navigation",
		1: "MoveTo",
		2: "LinkTo",
	}
	RpcNavigationContext_value = map[string]int32{
		"Navigation": 0,
		"MoveTo":     1,
		"LinkTo":     2,
	}
)

func (x RpcNavigationContext) Enum() *RpcNavigationContext {
	p := new(RpcNavigationContext)
	*p = x
	return p
}

func (x RpcNavigationContext) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcNavigationContext) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[147].Descriptor()
}

func (RpcNavigationContext) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[147]
}

func (x RpcNavigationContext) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcNavigationContext.Descriptor instead.
func (RpcNavigationContext) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 13, 0}
}

type RpcNavigationListObjectsResponseErrorCode int32

const (
	RpcNavigationListObjectsResponseError_NULL          RpcNavigationListObjectsResponseErrorCode = 0
	RpcNavigationListObjectsResponseError_UNKNOWN_ERROR RpcNavigationListObjectsResponseErrorCode = 1
	RpcNavigationListObjectsResponseError_BAD_INPUT     RpcNavigationListObjectsResponseErrorCode = 2 // ...
)

// Enum value maps for RpcNavigationListObjectsResponseErrorCode.
var (
	RpcNavigationListObjectsResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcNavigationListObjectsResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcNavigationListObjectsResponseErrorCode) Enum() *RpcNavigationListObjectsResponseErrorCode {
	p := new(RpcNavigationListObjectsResponseErrorCode)
	*p = x
	return p
}

func (x RpcNavigationListObjectsResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcNavigationListObjectsResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[148].Descriptor()
}

func (RpcNavigationListObjectsResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[148]
}

func (x RpcNavigationListObjectsResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcNavigationListObjectsResponseErrorCode.Descriptor instead.
func (RpcNavigationListObjectsResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 13, 0, 1, 0, 0}
}

type RpcNavigationGetObjectInfoWithLinksResponseErrorCode int32

const (
	RpcNavigationGetObjectInfoWithLinksResponseError_NULL          RpcNavigationGetObjectInfoWithLinksResponseErrorCode = 0
	RpcNavigationGetObjectInfoWithLinksResponseError_UNKNOWN_ERROR RpcNavigationGetObjectInfoWithLinksResponseErrorCode = 1
	RpcNavigationGetObjectInfoWithLinksResponseError_BAD_INPUT     RpcNavigationGetObjectInfoWithLinksResponseErrorCode = 2 // ...
)

// Enum value maps for RpcNavigationGetObjectInfoWithLinksResponseErrorCode.
var (
	RpcNavigationGetObjectInfoWithLinksResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcNavigationGetObjectInfoWithLinksResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcNavigationGetObjectInfoWithLinksResponseErrorCode) Enum() *RpcNavigationGetObjectInfoWithLinksResponseErrorCode {
	p := new(RpcNavigationGetObjectInfoWithLinksResponseErrorCode)
	*p = x
	return p
}

func (x RpcNavigationGetObjectInfoWithLinksResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcNavigationGetObjectInfoWithLinksResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[149].Descriptor()
}

func (RpcNavigationGetObjectInfoWithLinksResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[149]
}

func (x RpcNavigationGetObjectInfoWithLinksResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcNavigationGetObjectInfoWithLinksResponseErrorCode.Descriptor instead.
func (RpcNavigationGetObjectInfoWithLinksResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 13, 1, 1, 0, 0}
}

type RpcTemplateCreateFromObjectResponseErrorCode int32

const (
	RpcTemplateCreateFromObjectResponseError_NULL          RpcTemplateCreateFromObjectResponseErrorCode = 0
	RpcTemplateCreateFromObjectResponseError_UNKNOWN_ERROR RpcTemplateCreateFromObjectResponseErrorCode = 1
	RpcTemplateCreateFromObjectResponseError_BAD_INPUT     RpcTemplateCreateFromObjectResponseErrorCode = 2 // ...
)

// Enum value maps for RpcTemplateCreateFromObjectResponseErrorCode.
var (
	RpcTemplateCreateFromObjectResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcTemplateCreateFromObjectResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcTemplateCreateFromObjectResponseErrorCode) Enum() *RpcTemplateCreateFromObjectResponseErrorCode {
	p := new(RpcTemplateCreateFromObjectResponseErrorCode)
	*p = x
	return p
}

func (x RpcTemplateCreateFromObjectResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcTemplateCreateFromObjectResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[150].Descriptor()
}

func (RpcTemplateCreateFromObjectResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[150]
}

func (x RpcTemplateCreateFromObjectResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcTemplateCreateFromObjectResponseErrorCode.Descriptor instead.
func (RpcTemplateCreateFromObjectResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 14, 0, 1, 0, 0}
}

type RpcTemplateCloneResponseErrorCode int32

const (
	RpcTemplateCloneResponseError_NULL          RpcTemplateCloneResponseErrorCode = 0
	RpcTemplateCloneResponseError_UNKNOWN_ERROR RpcTemplateCloneResponseErrorCode = 1
	RpcTemplateCloneResponseError_BAD_INPUT     RpcTemplateCloneResponseErrorCode = 2 // ...
)

// Enum value maps for RpcTemplateCloneResponseErrorCode.
var (
	RpcTemplateCloneResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcTemplateCloneResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcTemplateCloneResponseErrorCode) Enum() *RpcTemplateCloneResponseErrorCode {
	p := new(RpcTemplateCloneResponseErrorCode)
	*p = x
	return p
}

func (x RpcTemplateCloneResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcTemplateCloneResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[151].Descriptor()
}

func (RpcTemplateCloneResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[151]
}

func (x RpcTemplateCloneResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcTemplateCloneResponseErrorCode.Descriptor instead.
func (RpcTemplateCloneResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 14, 1, 1, 0, 0}
}

type RpcTemplateExportAllResponseErrorCode int32

const (
	RpcTemplateExportAllResponseError_NULL          RpcTemplateExportAllResponseErrorCode = 0
	RpcTemplateExportAllResponseError_UNKNOWN_ERROR RpcTemplateExportAllResponseErrorCode = 1
	RpcTemplateExportAllResponseError_BAD_INPUT     RpcTemplateExportAllResponseErrorCode = 2 // ...
)

// Enum value maps for RpcTemplateExportAllResponseErrorCode.
var (
	RpcTemplateExportAllResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcTemplateExportAllResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcTemplateExportAllResponseErrorCode) Enum() *RpcTemplateExportAllResponseErrorCode {
	p := new(RpcTemplateExportAllResponseErrorCode)
	*p = x
	return p
}

func (x RpcTemplateExportAllResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcTemplateExportAllResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[152].Descriptor()
}

func (RpcTemplateExportAllResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[152]
}

func (x RpcTemplateExportAllResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcTemplateExportAllResponseErrorCode.Descriptor instead.
func (RpcTemplateExportAllResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 14, 2, 1, 0, 0}
}

type RpcLinkPreviewResponseErrorCode int32

const (
	RpcLinkPreviewResponseError_NULL          RpcLinkPreviewResponseErrorCode = 0
	RpcLinkPreviewResponseError_UNKNOWN_ERROR RpcLinkPreviewResponseErrorCode = 1
	RpcLinkPreviewResponseError_BAD_INPUT     RpcLinkPreviewResponseErrorCode = 2
)

// Enum value maps for RpcLinkPreviewResponseErrorCode.
var (
	RpcLinkPreviewResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcLinkPreviewResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcLinkPreviewResponseErrorCode) Enum() *RpcLinkPreviewResponseErrorCode {
	p := new(RpcLinkPreviewResponseErrorCode)
	*p = x
	return p
}

func (x RpcLinkPreviewResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcLinkPreviewResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[153].Descriptor()
}

func (RpcLinkPreviewResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[153]
}

func (x RpcLinkPreviewResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcLinkPreviewResponseErrorCode.Descriptor instead.
func (RpcLinkPreviewResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 15, 1, 0, 0}
}

type RpcUnsplashSearchResponseErrorCode int32

const (
	RpcUnsplashSearchResponseError_NULL                RpcUnsplashSearchResponseErrorCode = 0
	RpcUnsplashSearchResponseError_UNKNOWN_ERROR       RpcUnsplashSearchResponseErrorCode = 1
	RpcUnsplashSearchResponseError_BAD_INPUT           RpcUnsplashSearchResponseErrorCode = 2
	RpcUnsplashSearchResponseError_RATE_LIMIT_EXCEEDED RpcUnsplashSearchResponseErrorCode = 100 // ...
)

// Enum value maps for RpcUnsplashSearchResponseErrorCode.
var (
	RpcUnsplashSearchResponseErrorCode_name = map[int32]string{
		0:   "NULL",
		1:   "UNKNOWN_ERROR",
		2:   "BAD_INPUT",
		100: "RATE_LIMIT_EXCEEDED",
	}
	RpcUnsplashSearchResponseErrorCode_value = map[string]int32{
		"NULL":                0,
		"UNKNOWN_ERROR":       1,
		"BAD_INPUT":           2,
		"RATE_LIMIT_EXCEEDED": 100,
	}
)

func (x RpcUnsplashSearchResponseErrorCode) Enum() *RpcUnsplashSearchResponseErrorCode {
	p := new(RpcUnsplashSearchResponseErrorCode)
	*p = x
	return p
}

func (x RpcUnsplashSearchResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcUnsplashSearchResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[154].Descriptor()
}

func (RpcUnsplashSearchResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[154]
}

func (x RpcUnsplashSearchResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcUnsplashSearchResponseErrorCode.Descriptor instead.
func (RpcUnsplashSearchResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 16, 0, 1, 1, 0}
}

type RpcUnsplashDownloadResponseErrorCode int32

const (
	RpcUnsplashDownloadResponseError_NULL                RpcUnsplashDownloadResponseErrorCode = 0
	RpcUnsplashDownloadResponseError_UNKNOWN_ERROR       RpcUnsplashDownloadResponseErrorCode = 1
	RpcUnsplashDownloadResponseError_BAD_INPUT           RpcUnsplashDownloadResponseErrorCode = 2
	RpcUnsplashDownloadResponseError_RATE_LIMIT_EXCEEDED RpcUnsplashDownloadResponseErrorCode = 100 // ...
)

// Enum value maps for RpcUnsplashDownloadResponseErrorCode.
var (
	RpcUnsplashDownloadResponseErrorCode_name = map[int32]string{
		0:   "NULL",
		1:   "UNKNOWN_ERROR",
		2:   "BAD_INPUT",
		100: "RATE_LIMIT_EXCEEDED",
	}
	RpcUnsplashDownloadResponseErrorCode_value = map[string]int32{
		"NULL":                0,
		"UNKNOWN_ERROR":       1,
		"BAD_INPUT":           2,
		"RATE_LIMIT_EXCEEDED": 100,
	}
)

func (x RpcUnsplashDownloadResponseErrorCode) Enum() *RpcUnsplashDownloadResponseErrorCode {
	p := new(RpcUnsplashDownloadResponseErrorCode)
	*p = x
	return p
}

func (x RpcUnsplashDownloadResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcUnsplashDownloadResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[155].Descriptor()
}

func (RpcUnsplashDownloadResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[155]
}

func (x RpcUnsplashDownloadResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcUnsplashDownloadResponseErrorCode.Descriptor instead.
func (RpcUnsplashDownloadResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 16, 1, 1, 0, 0}
}

type RpcGalleryDownloadManifestResponseErrorCode int32

const (
	RpcGalleryDownloadManifestResponseError_NULL          RpcGalleryDownloadManifestResponseErrorCode = 0
	RpcGalleryDownloadManifestResponseError_UNKNOWN_ERROR RpcGalleryDownloadManifestResponseErrorCode = 1
	RpcGalleryDownloadManifestResponseError_BAD_INPUT     RpcGalleryDownloadManifestResponseErrorCode = 2
)

// Enum value maps for RpcGalleryDownloadManifestResponseErrorCode.
var (
	RpcGalleryDownloadManifestResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcGalleryDownloadManifestResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcGalleryDownloadManifestResponseErrorCode) Enum() *RpcGalleryDownloadManifestResponseErrorCode {
	p := new(RpcGalleryDownloadManifestResponseErrorCode)
	*p = x
	return p
}

func (x RpcGalleryDownloadManifestResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcGalleryDownloadManifestResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[156].Descriptor()
}

func (RpcGalleryDownloadManifestResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[156]
}

func (x RpcGalleryDownloadManifestResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcGalleryDownloadManifestResponseErrorCode.Descriptor instead.
func (RpcGalleryDownloadManifestResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 17, 0, 1, 0, 0}
}

type RpcGalleryDownloadIndexResponseErrorCode int32

const (
	RpcGalleryDownloadIndexResponseError_NULL                RpcGalleryDownloadIndexResponseErrorCode = 0
	RpcGalleryDownloadIndexResponseError_UNKNOWN_ERROR       RpcGalleryDownloadIndexResponseErrorCode = 1
	RpcGalleryDownloadIndexResponseError_BAD_INPUT           RpcGalleryDownloadIndexResponseErrorCode = 2
	RpcGalleryDownloadIndexResponseError_UNMARSHALLING_ERROR RpcGalleryDownloadIndexResponseErrorCode = 3
	RpcGalleryDownloadIndexResponseError_DOWNLOAD_ERROR      RpcGalleryDownloadIndexResponseErrorCode = 4
)

// Enum value maps for RpcGalleryDownloadIndexResponseErrorCode.
var (
	RpcGalleryDownloadIndexResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
		3: "UNMARSHALLING_ERROR",
		4: "DOWNLOAD_ERROR",
	}
	RpcGalleryDownloadIndexResponseErrorCode_value = map[string]int32{
		"NULL":                0,
		"UNKNOWN_ERROR":       1,
		"BAD_INPUT":           2,
		"UNMARSHALLING_ERROR": 3,
		"DOWNLOAD_ERROR":      4,
	}
)

func (x RpcGalleryDownloadIndexResponseErrorCode) Enum() *RpcGalleryDownloadIndexResponseErrorCode {
	p := new(RpcGalleryDownloadIndexResponseErrorCode)
	*p = x
	return p
}

func (x RpcGalleryDownloadIndexResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcGalleryDownloadIndexResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[157].Descriptor()
}

func (RpcGalleryDownloadIndexResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[157]
}

func (x RpcGalleryDownloadIndexResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcGalleryDownloadIndexResponseErrorCode.Descriptor instead.
func (RpcGalleryDownloadIndexResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 17, 1, 1, 0, 0}
}

type RpcBlockReplaceResponseErrorCode int32

const (
	RpcBlockReplaceResponseError_NULL          RpcBlockReplaceResponseErrorCode = 0
	RpcBlockReplaceResponseError_UNKNOWN_ERROR RpcBlockReplaceResponseErrorCode = 1
	RpcBlockReplaceResponseError_BAD_INPUT     RpcBlockReplaceResponseErrorCode = 2 // ...
)

// Enum value maps for RpcBlockReplaceResponseErrorCode.
var (
	RpcBlockReplaceResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockReplaceResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockReplaceResponseErrorCode) Enum() *RpcBlockReplaceResponseErrorCode {
	p := new(RpcBlockReplaceResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockReplaceResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockReplaceResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[158].Descriptor()
}

func (RpcBlockReplaceResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[158]
}

func (x RpcBlockReplaceResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockReplaceResponseErrorCode.Descriptor instead.
func (RpcBlockReplaceResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 0, 1, 0, 0}
}

type RpcBlockSplitRequestMode int32

const (
	// new block will be created under existing
	RpcBlockSplitRequest_BOTTOM RpcBlockSplitRequestMode = 0
	// new block will be created above existing
	RpcBlockSplitRequest_TOP RpcBlockSplitRequestMode = 1
	// new block will be created as the first children of existing
	RpcBlockSplitRequest_INNER RpcBlockSplitRequestMode = 2
	// new block will be created after header (not required for set at client side, will auto set for title block)
	RpcBlockSplitRequest_TITLE RpcBlockSplitRequestMode = 3
)

// Enum value maps for RpcBlockSplitRequestMode.
var (
	RpcBlockSplitRequestMode_name = map[int32]string{
		0: "BOTTOM",
		1: "TOP",
		2: "INNER",
		3: "TITLE",
	}
	RpcBlockSplitRequestMode_value = map[string]int32{
		"BOTTOM": 0,
		"TOP":    1,
		"INNER":  2,
		"TITLE":  3,
	}
)

func (x RpcBlockSplitRequestMode) Enum() *RpcBlockSplitRequestMode {
	p := new(RpcBlockSplitRequestMode)
	*p = x
	return p
}

func (x RpcBlockSplitRequestMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockSplitRequestMode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[159].Descriptor()
}

func (RpcBlockSplitRequestMode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[159]
}

func (x RpcBlockSplitRequestMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockSplitRequestMode.Descriptor instead.
func (RpcBlockSplitRequestMode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 1, 0, 0}
}

type RpcBlockSplitResponseErrorCode int32

const (
	RpcBlockSplitResponseError_NULL          RpcBlockSplitResponseErrorCode = 0
	RpcBlockSplitResponseError_UNKNOWN_ERROR RpcBlockSplitResponseErrorCode = 1
	RpcBlockSplitResponseError_BAD_INPUT     RpcBlockSplitResponseErrorCode = 2 // ...
)

// Enum value maps for RpcBlockSplitResponseErrorCode.
var (
	RpcBlockSplitResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockSplitResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockSplitResponseErrorCode) Enum() *RpcBlockSplitResponseErrorCode {
	p := new(RpcBlockSplitResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockSplitResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockSplitResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[160].Descriptor()
}

func (RpcBlockSplitResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[160]
}

func (x RpcBlockSplitResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockSplitResponseErrorCode.Descriptor instead.
func (RpcBlockSplitResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 1, 1, 0, 0}
}

type RpcBlockMergeResponseErrorCode int32

const (
	RpcBlockMergeResponseError_NULL          RpcBlockMergeResponseErrorCode = 0
	RpcBlockMergeResponseError_UNKNOWN_ERROR RpcBlockMergeResponseErrorCode = 1
	RpcBlockMergeResponseError_BAD_INPUT     RpcBlockMergeResponseErrorCode = 2 // ...
)

// Enum value maps for RpcBlockMergeResponseErrorCode.
var (
	RpcBlockMergeResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockMergeResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockMergeResponseErrorCode) Enum() *RpcBlockMergeResponseErrorCode {
	p := new(RpcBlockMergeResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockMergeResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockMergeResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[161].Descriptor()
}

func (RpcBlockMergeResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[161]
}

func (x RpcBlockMergeResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockMergeResponseErrorCode.Descriptor instead.
func (RpcBlockMergeResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 2, 1, 0, 0}
}

type RpcBlockCopyResponseErrorCode int32

const (
	RpcBlockCopyResponseError_NULL          RpcBlockCopyResponseErrorCode = 0
	RpcBlockCopyResponseError_UNKNOWN_ERROR RpcBlockCopyResponseErrorCode = 1
	RpcBlockCopyResponseError_BAD_INPUT     RpcBlockCopyResponseErrorCode = 2 // ...
)

// Enum value maps for RpcBlockCopyResponseErrorCode.
var (
	RpcBlockCopyResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockCopyResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockCopyResponseErrorCode) Enum() *RpcBlockCopyResponseErrorCode {
	p := new(RpcBlockCopyResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockCopyResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockCopyResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[162].Descriptor()
}

func (RpcBlockCopyResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[162]
}

func (x RpcBlockCopyResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockCopyResponseErrorCode.Descriptor instead.
func (RpcBlockCopyResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 3, 1, 0, 0}
}

type RpcBlockPasteResponseErrorCode int32

const (
	RpcBlockPasteResponseError_NULL          RpcBlockPasteResponseErrorCode = 0
	RpcBlockPasteResponseError_UNKNOWN_ERROR RpcBlockPasteResponseErrorCode = 1
	RpcBlockPasteResponseError_BAD_INPUT     RpcBlockPasteResponseErrorCode = 2 // ...
)

// Enum value maps for RpcBlockPasteResponseErrorCode.
var (
	RpcBlockPasteResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockPasteResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockPasteResponseErrorCode) Enum() *RpcBlockPasteResponseErrorCode {
	p := new(RpcBlockPasteResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockPasteResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockPasteResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[163].Descriptor()
}

func (RpcBlockPasteResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[163]
}

func (x RpcBlockPasteResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockPasteResponseErrorCode.Descriptor instead.
func (RpcBlockPasteResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 4, 1, 0, 0}
}

type RpcBlockCutResponseErrorCode int32

const (
	RpcBlockCutResponseError_NULL          RpcBlockCutResponseErrorCode = 0
	RpcBlockCutResponseError_UNKNOWN_ERROR RpcBlockCutResponseErrorCode = 1
	RpcBlockCutResponseError_BAD_INPUT     RpcBlockCutResponseErrorCode = 2 // ...
)

// Enum value maps for RpcBlockCutResponseErrorCode.
var (
	RpcBlockCutResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockCutResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockCutResponseErrorCode) Enum() *RpcBlockCutResponseErrorCode {
	p := new(RpcBlockCutResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockCutResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockCutResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[164].Descriptor()
}

func (RpcBlockCutResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[164]
}

func (x RpcBlockCutResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockCutResponseErrorCode.Descriptor instead.
func (RpcBlockCutResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 5, 1, 0, 0}
}

type RpcBlockUploadResponseErrorCode int32

const (
	RpcBlockUploadResponseError_NULL          RpcBlockUploadResponseErrorCode = 0
	RpcBlockUploadResponseError_UNKNOWN_ERROR RpcBlockUploadResponseErrorCode = 1
	RpcBlockUploadResponseError_BAD_INPUT     RpcBlockUploadResponseErrorCode = 2 // ...
)

// Enum value maps for RpcBlockUploadResponseErrorCode.
var (
	RpcBlockUploadResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockUploadResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockUploadResponseErrorCode) Enum() *RpcBlockUploadResponseErrorCode {
	p := new(RpcBlockUploadResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockUploadResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockUploadResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[165].Descriptor()
}

func (RpcBlockUploadResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[165]
}

func (x RpcBlockUploadResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockUploadResponseErrorCode.Descriptor instead.
func (RpcBlockUploadResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 6, 1, 0, 0}
}

type RpcBlockDownloadResponseErrorCode int32

const (
	RpcBlockDownloadResponseError_NULL          RpcBlockDownloadResponseErrorCode = 0
	RpcBlockDownloadResponseError_UNKNOWN_ERROR RpcBlockDownloadResponseErrorCode = 1
	RpcBlockDownloadResponseError_BAD_INPUT     RpcBlockDownloadResponseErrorCode = 2 // ...
)

// Enum value maps for RpcBlockDownloadResponseErrorCode.
var (
	RpcBlockDownloadResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockDownloadResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockDownloadResponseErrorCode) Enum() *RpcBlockDownloadResponseErrorCode {
	p := new(RpcBlockDownloadResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockDownloadResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockDownloadResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[166].Descriptor()
}

func (RpcBlockDownloadResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[166]
}

func (x RpcBlockDownloadResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockDownloadResponseErrorCode.Descriptor instead.
func (RpcBlockDownloadResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 7, 1, 0, 0}
}

type RpcBlockCreateResponseErrorCode int32

const (
	RpcBlockCreateResponseError_NULL          RpcBlockCreateResponseErrorCode = 0
	RpcBlockCreateResponseError_UNKNOWN_ERROR RpcBlockCreateResponseErrorCode = 1
	RpcBlockCreateResponseError_BAD_INPUT     RpcBlockCreateResponseErrorCode = 2 // ...
)

// Enum value maps for RpcBlockCreateResponseErrorCode.
var (
	RpcBlockCreateResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockCreateResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockCreateResponseErrorCode) Enum() *RpcBlockCreateResponseErrorCode {
	p := new(RpcBlockCreateResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockCreateResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockCreateResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[167].Descriptor()
}

func (RpcBlockCreateResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[167]
}

func (x RpcBlockCreateResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockCreateResponseErrorCode.Descriptor instead.
func (RpcBlockCreateResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 8, 1, 0, 0}
}

type RpcBlockCreateWidgetResponseErrorCode int32

const (
	RpcBlockCreateWidgetResponseError_NULL          RpcBlockCreateWidgetResponseErrorCode = 0
	RpcBlockCreateWidgetResponseError_UNKNOWN_ERROR RpcBlockCreateWidgetResponseErrorCode = 1
	RpcBlockCreateWidgetResponseError_BAD_INPUT     RpcBlockCreateWidgetResponseErrorCode = 2 // ...
)

// Enum value maps for RpcBlockCreateWidgetResponseErrorCode.
var (
	RpcBlockCreateWidgetResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockCreateWidgetResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockCreateWidgetResponseErrorCode) Enum() *RpcBlockCreateWidgetResponseErrorCode {
	p := new(RpcBlockCreateWidgetResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockCreateWidgetResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockCreateWidgetResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[168].Descriptor()
}

func (RpcBlockCreateWidgetResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[168]
}

func (x RpcBlockCreateWidgetResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockCreateWidgetResponseErrorCode.Descriptor instead.
func (RpcBlockCreateWidgetResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 9, 1, 0, 0}
}

type RpcBlockListDeleteResponseErrorCode int32

const (
	RpcBlockListDeleteResponseError_NULL          RpcBlockListDeleteResponseErrorCode = 0
	RpcBlockListDeleteResponseError_UNKNOWN_ERROR RpcBlockListDeleteResponseErrorCode = 1
	RpcBlockListDeleteResponseError_BAD_INPUT     RpcBlockListDeleteResponseErrorCode = 2 // ...
)

// Enum value maps for RpcBlockListDeleteResponseErrorCode.
var (
	RpcBlockListDeleteResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockListDeleteResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockListDeleteResponseErrorCode) Enum() *RpcBlockListDeleteResponseErrorCode {
	p := new(RpcBlockListDeleteResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockListDeleteResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockListDeleteResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[169].Descriptor()
}

func (RpcBlockListDeleteResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[169]
}

func (x RpcBlockListDeleteResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockListDeleteResponseErrorCode.Descriptor instead.
func (RpcBlockListDeleteResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 10, 1, 0, 0}
}

type RpcBlockSetFieldsResponseErrorCode int32

const (
	RpcBlockSetFieldsResponseError_NULL          RpcBlockSetFieldsResponseErrorCode = 0
	RpcBlockSetFieldsResponseError_UNKNOWN_ERROR RpcBlockSetFieldsResponseErrorCode = 1
	RpcBlockSetFieldsResponseError_BAD_INPUT     RpcBlockSetFieldsResponseErrorCode = 2 // ...
)

// Enum value maps for RpcBlockSetFieldsResponseErrorCode.
var (
	RpcBlockSetFieldsResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockSetFieldsResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockSetFieldsResponseErrorCode) Enum() *RpcBlockSetFieldsResponseErrorCode {
	p := new(RpcBlockSetFieldsResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockSetFieldsResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockSetFieldsResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[170].Descriptor()
}

func (RpcBlockSetFieldsResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[170]
}

func (x RpcBlockSetFieldsResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockSetFieldsResponseErrorCode.Descriptor instead.
func (RpcBlockSetFieldsResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 11, 1, 0, 0}
}

type RpcBlockListSetAlignResponseErrorCode int32

const (
	RpcBlockListSetAlignResponseError_NULL          RpcBlockListSetAlignResponseErrorCode = 0
	RpcBlockListSetAlignResponseError_UNKNOWN_ERROR RpcBlockListSetAlignResponseErrorCode = 1
	RpcBlockListSetAlignResponseError_BAD_INPUT     RpcBlockListSetAlignResponseErrorCode = 2 // ...
)

// Enum value maps for RpcBlockListSetAlignResponseErrorCode.
var (
	RpcBlockListSetAlignResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockListSetAlignResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockListSetAlignResponseErrorCode) Enum() *RpcBlockListSetAlignResponseErrorCode {
	p := new(RpcBlockListSetAlignResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockListSetAlignResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockListSetAlignResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[171].Descriptor()
}

func (RpcBlockListSetAlignResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[171]
}

func (x RpcBlockListSetAlignResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockListSetAlignResponseErrorCode.Descriptor instead.
func (RpcBlockListSetAlignResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 12, 1, 0, 0}
}

type RpcBlockListSetVerticalAlignResponseErrorCode int32

const (
	RpcBlockListSetVerticalAlignResponseError_NULL          RpcBlockListSetVerticalAlignResponseErrorCode = 0
	RpcBlockListSetVerticalAlignResponseError_UNKNOWN_ERROR RpcBlockListSetVerticalAlignResponseErrorCode = 1
	RpcBlockListSetVerticalAlignResponseError_BAD_INPUT     RpcBlockListSetVerticalAlignResponseErrorCode = 2 // ...
)

// Enum value maps for RpcBlockListSetVerticalAlignResponseErrorCode.
var (
	RpcBlockListSetVerticalAlignResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockListSetVerticalAlignResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockListSetVerticalAlignResponseErrorCode) Enum() *RpcBlockListSetVerticalAlignResponseErrorCode {
	p := new(RpcBlockListSetVerticalAlignResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockListSetVerticalAlignResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockListSetVerticalAlignResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[172].Descriptor()
}

func (RpcBlockListSetVerticalAlignResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[172]
}

func (x RpcBlockListSetVerticalAlignResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockListSetVerticalAlignResponseErrorCode.Descriptor instead.
func (RpcBlockListSetVerticalAlignResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 13, 1, 0, 0}
}

type RpcBlockListSetFieldsResponseErrorCode int32

const (
	RpcBlockListSetFieldsResponseError_NULL          RpcBlockListSetFieldsResponseErrorCode = 0
	RpcBlockListSetFieldsResponseError_UNKNOWN_ERROR RpcBlockListSetFieldsResponseErrorCode = 1
	RpcBlockListSetFieldsResponseError_BAD_INPUT     RpcBlockListSetFieldsResponseErrorCode = 2 // ...
)

// Enum value maps for RpcBlockListSetFieldsResponseErrorCode.
var (
	RpcBlockListSetFieldsResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockListSetFieldsResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockListSetFieldsResponseErrorCode) Enum() *RpcBlockListSetFieldsResponseErrorCode {
	p := new(RpcBlockListSetFieldsResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockListSetFieldsResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockListSetFieldsResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[173].Descriptor()
}

func (RpcBlockListSetFieldsResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[173]
}

func (x RpcBlockListSetFieldsResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockListSetFieldsResponseErrorCode.Descriptor instead.
func (RpcBlockListSetFieldsResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 14, 1, 0, 0}
}

type RpcBlockListDuplicateResponseErrorCode int32

const (
	RpcBlockListDuplicateResponseError_NULL          RpcBlockListDuplicateResponseErrorCode = 0
	RpcBlockListDuplicateResponseError_UNKNOWN_ERROR RpcBlockListDuplicateResponseErrorCode = 1
	RpcBlockListDuplicateResponseError_BAD_INPUT     RpcBlockListDuplicateResponseErrorCode = 2 // ...
)

// Enum value maps for RpcBlockListDuplicateResponseErrorCode.
var (
	RpcBlockListDuplicateResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockListDuplicateResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockListDuplicateResponseErrorCode) Enum() *RpcBlockListDuplicateResponseErrorCode {
	p := new(RpcBlockListDuplicateResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockListDuplicateResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockListDuplicateResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[174].Descriptor()
}

func (RpcBlockListDuplicateResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[174]
}

func (x RpcBlockListDuplicateResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockListDuplicateResponseErrorCode.Descriptor instead.
func (RpcBlockListDuplicateResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 15, 1, 0, 0}
}

type RpcBlockListConvertToObjectsResponseErrorCode int32

const (
	RpcBlockListConvertToObjectsResponseError_NULL          RpcBlockListConvertToObjectsResponseErrorCode = 0
	RpcBlockListConvertToObjectsResponseError_UNKNOWN_ERROR RpcBlockListConvertToObjectsResponseErrorCode = 1
	RpcBlockListConvertToObjectsResponseError_BAD_INPUT     RpcBlockListConvertToObjectsResponseErrorCode = 2 // ...
)

// Enum value maps for RpcBlockListConvertToObjectsResponseErrorCode.
var (
	RpcBlockListConvertToObjectsResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockListConvertToObjectsResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockListConvertToObjectsResponseErrorCode) Enum() *RpcBlockListConvertToObjectsResponseErrorCode {
	p := new(RpcBlockListConvertToObjectsResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockListConvertToObjectsResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockListConvertToObjectsResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[175].Descriptor()
}

func (RpcBlockListConvertToObjectsResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[175]
}

func (x RpcBlockListConvertToObjectsResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockListConvertToObjectsResponseErrorCode.Descriptor instead.
func (RpcBlockListConvertToObjectsResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 17, 1, 0, 0}
}

type RpcBlockListMoveToExistingObjectResponseErrorCode int32

const (
	RpcBlockListMoveToExistingObjectResponseError_NULL          RpcBlockListMoveToExistingObjectResponseErrorCode = 0
	RpcBlockListMoveToExistingObjectResponseError_UNKNOWN_ERROR RpcBlockListMoveToExistingObjectResponseErrorCode = 1
	RpcBlockListMoveToExistingObjectResponseError_BAD_INPUT     RpcBlockListMoveToExistingObjectResponseErrorCode = 2 // ...
)

// Enum value maps for RpcBlockListMoveToExistingObjectResponseErrorCode.
var (
	RpcBlockListMoveToExistingObjectResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockListMoveToExistingObjectResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockListMoveToExistingObjectResponseErrorCode) Enum() *RpcBlockListMoveToExistingObjectResponseErrorCode {
	p := new(RpcBlockListMoveToExistingObjectResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockListMoveToExistingObjectResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockListMoveToExistingObjectResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[176].Descriptor()
}

func (RpcBlockListMoveToExistingObjectResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[176]
}

func (x RpcBlockListMoveToExistingObjectResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockListMoveToExistingObjectResponseErrorCode.Descriptor instead.
func (RpcBlockListMoveToExistingObjectResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 18, 1, 0, 0}
}

type RpcBlockListMoveToNewObjectResponseErrorCode int32

const (
	RpcBlockListMoveToNewObjectResponseError_NULL          RpcBlockListMoveToNewObjectResponseErrorCode = 0
	RpcBlockListMoveToNewObjectResponseError_UNKNOWN_ERROR RpcBlockListMoveToNewObjectResponseErrorCode = 1
	RpcBlockListMoveToNewObjectResponseError_BAD_INPUT     RpcBlockListMoveToNewObjectResponseErrorCode = 2 // ...
)

// Enum value maps for RpcBlockListMoveToNewObjectResponseErrorCode.
var (
	RpcBlockListMoveToNewObjectResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockListMoveToNewObjectResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockListMoveToNewObjectResponseErrorCode) Enum() *RpcBlockListMoveToNewObjectResponseErrorCode {
	p := new(RpcBlockListMoveToNewObjectResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockListMoveToNewObjectResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockListMoveToNewObjectResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[177].Descriptor()
}

func (RpcBlockListMoveToNewObjectResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[177]
}

func (x RpcBlockListMoveToNewObjectResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockListMoveToNewObjectResponseErrorCode.Descriptor instead.
func (RpcBlockListMoveToNewObjectResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 19, 1, 0, 0}
}

type RpcBlockListTurnIntoResponseErrorCode int32

const (
	RpcBlockListTurnIntoResponseError_NULL          RpcBlockListTurnIntoResponseErrorCode = 0
	RpcBlockListTurnIntoResponseError_UNKNOWN_ERROR RpcBlockListTurnIntoResponseErrorCode = 1
	RpcBlockListTurnIntoResponseError_BAD_INPUT     RpcBlockListTurnIntoResponseErrorCode = 2 // ...
)

// Enum value maps for RpcBlockListTurnIntoResponseErrorCode.
var (
	RpcBlockListTurnIntoResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockListTurnIntoResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockListTurnIntoResponseErrorCode) Enum() *RpcBlockListTurnIntoResponseErrorCode {
	p := new(RpcBlockListTurnIntoResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockListTurnIntoResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockListTurnIntoResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[178].Descriptor()
}

func (RpcBlockListTurnIntoResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[178]
}

func (x RpcBlockListTurnIntoResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockListTurnIntoResponseErrorCode.Descriptor instead.
func (RpcBlockListTurnIntoResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 20, 1, 0, 0}
}

type RpcBlockListSetBackgroundColorResponseErrorCode int32

const (
	RpcBlockListSetBackgroundColorResponseError_NULL          RpcBlockListSetBackgroundColorResponseErrorCode = 0
	RpcBlockListSetBackgroundColorResponseError_UNKNOWN_ERROR RpcBlockListSetBackgroundColorResponseErrorCode = 1
	RpcBlockListSetBackgroundColorResponseError_BAD_INPUT     RpcBlockListSetBackgroundColorResponseErrorCode = 2 // ...
)

// Enum value maps for RpcBlockListSetBackgroundColorResponseErrorCode.
var (
	RpcBlockListSetBackgroundColorResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockListSetBackgroundColorResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockListSetBackgroundColorResponseErrorCode) Enum() *RpcBlockListSetBackgroundColorResponseErrorCode {
	p := new(RpcBlockListSetBackgroundColorResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockListSetBackgroundColorResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockListSetBackgroundColorResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[179].Descriptor()
}

func (RpcBlockListSetBackgroundColorResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[179]
}

func (x RpcBlockListSetBackgroundColorResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockListSetBackgroundColorResponseErrorCode.Descriptor instead.
func (RpcBlockListSetBackgroundColorResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 21, 1, 0, 0}
}

type RpcBlockExportResponseErrorCode int32

const (
	RpcBlockExportResponseError_NULL          RpcBlockExportResponseErrorCode = 0
	RpcBlockExportResponseError_UNKNOWN_ERROR RpcBlockExportResponseErrorCode = 1
	RpcBlockExportResponseError_BAD_INPUT     RpcBlockExportResponseErrorCode = 2 // ...
)

// Enum value maps for RpcBlockExportResponseErrorCode.
var (
	RpcBlockExportResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockExportResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockExportResponseErrorCode) Enum() *RpcBlockExportResponseErrorCode {
	p := new(RpcBlockExportResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockExportResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockExportResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[180].Descriptor()
}

func (RpcBlockExportResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[180]
}

func (x RpcBlockExportResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockExportResponseErrorCode.Descriptor instead.
func (RpcBlockExportResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 22, 1, 0, 0}
}

type RpcBlockSetCarriageResponseErrorCode int32

const (
	RpcBlockSetCarriageResponseError_NULL          RpcBlockSetCarriageResponseErrorCode = 0
	RpcBlockSetCarriageResponseError_UNKNOWN_ERROR RpcBlockSetCarriageResponseErrorCode = 1
	RpcBlockSetCarriageResponseError_BAD_INPUT     RpcBlockSetCarriageResponseErrorCode = 2
)

// Enum value maps for RpcBlockSetCarriageResponseErrorCode.
var (
	RpcBlockSetCarriageResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockSetCarriageResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockSetCarriageResponseErrorCode) Enum() *RpcBlockSetCarriageResponseErrorCode {
	p := new(RpcBlockSetCarriageResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockSetCarriageResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockSetCarriageResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[181].Descriptor()
}

func (RpcBlockSetCarriageResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[181]
}

func (x RpcBlockSetCarriageResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockSetCarriageResponseErrorCode.Descriptor instead.
func (RpcBlockSetCarriageResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 23, 1, 0, 0}
}

type RpcBlockPreviewResponseErrorCode int32

const (
	RpcBlockPreviewResponseError_NULL          RpcBlockPreviewResponseErrorCode = 0
	RpcBlockPreviewResponseError_UNKNOWN_ERROR RpcBlockPreviewResponseErrorCode = 1
	RpcBlockPreviewResponseError_BAD_INPUT     RpcBlockPreviewResponseErrorCode = 2
)

// Enum value maps for RpcBlockPreviewResponseErrorCode.
var (
	RpcBlockPreviewResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockPreviewResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockPreviewResponseErrorCode) Enum() *RpcBlockPreviewResponseErrorCode {
	p := new(RpcBlockPreviewResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockPreviewResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockPreviewResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[182].Descriptor()
}

func (RpcBlockPreviewResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[182]
}

func (x RpcBlockPreviewResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockPreviewResponseErrorCode.Descriptor instead.
func (RpcBlockPreviewResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 24, 1, 0, 0}
}

type RpcBlockLatexSetTextResponseErrorCode int32

const (
	RpcBlockLatexSetTextResponseError_NULL          RpcBlockLatexSetTextResponseErrorCode = 0
	RpcBlockLatexSetTextResponseError_UNKNOWN_ERROR RpcBlockLatexSetTextResponseErrorCode = 1
	RpcBlockLatexSetTextResponseError_BAD_INPUT     RpcBlockLatexSetTextResponseErrorCode = 2 // ...
)

// Enum value maps for RpcBlockLatexSetTextResponseErrorCode.
var (
	RpcBlockLatexSetTextResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockLatexSetTextResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockLatexSetTextResponseErrorCode) Enum() *RpcBlockLatexSetTextResponseErrorCode {
	p := new(RpcBlockLatexSetTextResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockLatexSetTextResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockLatexSetTextResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[183].Descriptor()
}

func (RpcBlockLatexSetTextResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[183]
}

func (x RpcBlockLatexSetTextResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockLatexSetTextResponseErrorCode.Descriptor instead.
func (RpcBlockLatexSetTextResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 19, 0, 1, 0, 0}
}

type RpcBlockLatexSetProcessorResponseErrorCode int32

const (
	RpcBlockLatexSetProcessorResponseError_NULL          RpcBlockLatexSetProcessorResponseErrorCode = 0
	RpcBlockLatexSetProcessorResponseError_UNKNOWN_ERROR RpcBlockLatexSetProcessorResponseErrorCode = 1
	RpcBlockLatexSetProcessorResponseError_BAD_INPUT     RpcBlockLatexSetProcessorResponseErrorCode = 2 // ...
)

// Enum value maps for RpcBlockLatexSetProcessorResponseErrorCode.
var (
	RpcBlockLatexSetProcessorResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockLatexSetProcessorResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockLatexSetProcessorResponseErrorCode) Enum() *RpcBlockLatexSetProcessorResponseErrorCode {
	p := new(RpcBlockLatexSetProcessorResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockLatexSetProcessorResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockLatexSetProcessorResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[184].Descriptor()
}

func (RpcBlockLatexSetProcessorResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[184]
}

func (x RpcBlockLatexSetProcessorResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockLatexSetProcessorResponseErrorCode.Descriptor instead.
func (RpcBlockLatexSetProcessorResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 19, 1, 1, 0, 0}
}

type RpcBlockTextSetTextResponseErrorCode int32

const (
	RpcBlockTextSetTextResponseError_NULL          RpcBlockTextSetTextResponseErrorCode = 0
	RpcBlockTextSetTextResponseError_UNKNOWN_ERROR RpcBlockTextSetTextResponseErrorCode = 1
	RpcBlockTextSetTextResponseError_BAD_INPUT     RpcBlockTextSetTextResponseErrorCode = 2 // ...
)

// Enum value maps for RpcBlockTextSetTextResponseErrorCode.
var (
	RpcBlockTextSetTextResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockTextSetTextResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockTextSetTextResponseErrorCode) Enum() *RpcBlockTextSetTextResponseErrorCode {
	p := new(RpcBlockTextSetTextResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockTextSetTextResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockTextSetTextResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[185].Descriptor()
}

func (RpcBlockTextSetTextResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[185]
}

func (x RpcBlockTextSetTextResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockTextSetTextResponseErrorCode.Descriptor instead.
func (RpcBlockTextSetTextResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 20, 0, 1, 0, 0}
}

type RpcBlockTextSetColorResponseErrorCode int32

const (
	RpcBlockTextSetColorResponseError_NULL          RpcBlockTextSetColorResponseErrorCode = 0
	RpcBlockTextSetColorResponseError_UNKNOWN_ERROR RpcBlockTextSetColorResponseErrorCode = 1
	RpcBlockTextSetColorResponseError_BAD_INPUT     RpcBlockTextSetColorResponseErrorCode = 2 // ...
)

// Enum value maps for RpcBlockTextSetColorResponseErrorCode.
var (
	RpcBlockTextSetColorResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockTextSetColorResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockTextSetColorResponseErrorCode) Enum() *RpcBlockTextSetColorResponseErrorCode {
	p := new(RpcBlockTextSetColorResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockTextSetColorResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockTextSetColorResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[186].Descriptor()
}

func (RpcBlockTextSetColorResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[186]
}

func (x RpcBlockTextSetColorResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockTextSetColorResponseErrorCode.Descriptor instead.
func (RpcBlockTextSetColorResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 20, 1, 1, 0, 0}
}

type RpcBlockTextSetMarksGetResponseErrorCode int32

const (
	RpcBlockTextSetMarksGetResponseError_NULL          RpcBlockTextSetMarksGetResponseErrorCode = 0
	RpcBlockTextSetMarksGetResponseError_UNKNOWN_ERROR RpcBlockTextSetMarksGetResponseErrorCode = 1
	RpcBlockTextSetMarksGetResponseError_BAD_INPUT     RpcBlockTextSetMarksGetResponseErrorCode = 2 // ...
)

// Enum value maps for RpcBlockTextSetMarksGetResponseErrorCode.
var (
	RpcBlockTextSetMarksGetResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockTextSetMarksGetResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockTextSetMarksGetResponseErrorCode) Enum() *RpcBlockTextSetMarksGetResponseErrorCode {
	p := new(RpcBlockTextSetMarksGetResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockTextSetMarksGetResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockTextSetMarksGetResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[187].Descriptor()
}

func (RpcBlockTextSetMarksGetResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[187]
}

func (x RpcBlockTextSetMarksGetResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockTextSetMarksGetResponseErrorCode.Descriptor instead.
func (RpcBlockTextSetMarksGetResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 20, 2, 0, 1, 0, 0}
}

type RpcBlockTextSetStyleResponseErrorCode int32

const (
	RpcBlockTextSetStyleResponseError_NULL          RpcBlockTextSetStyleResponseErrorCode = 0
	RpcBlockTextSetStyleResponseError_UNKNOWN_ERROR RpcBlockTextSetStyleResponseErrorCode = 1
	RpcBlockTextSetStyleResponseError_BAD_INPUT     RpcBlockTextSetStyleResponseErrorCode = 2 // ...
)

// Enum value maps for RpcBlockTextSetStyleResponseErrorCode.
var (
	RpcBlockTextSetStyleResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockTextSetStyleResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockTextSetStyleResponseErrorCode) Enum() *RpcBlockTextSetStyleResponseErrorCode {
	p := new(RpcBlockTextSetStyleResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockTextSetStyleResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockTextSetStyleResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[188].Descriptor()
}

func (RpcBlockTextSetStyleResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[188]
}

func (x RpcBlockTextSetStyleResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockTextSetStyleResponseErrorCode.Descriptor instead.
func (RpcBlockTextSetStyleResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 20, 3, 1, 0, 0}
}

type RpcBlockTextSetCheckedResponseErrorCode int32

const (
	RpcBlockTextSetCheckedResponseError_NULL          RpcBlockTextSetCheckedResponseErrorCode = 0
	RpcBlockTextSetCheckedResponseError_UNKNOWN_ERROR RpcBlockTextSetCheckedResponseErrorCode = 1
	RpcBlockTextSetCheckedResponseError_BAD_INPUT     RpcBlockTextSetCheckedResponseErrorCode = 2 // ...
)

// Enum value maps for RpcBlockTextSetCheckedResponseErrorCode.
var (
	RpcBlockTextSetCheckedResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockTextSetCheckedResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockTextSetCheckedResponseErrorCode) Enum() *RpcBlockTextSetCheckedResponseErrorCode {
	p := new(RpcBlockTextSetCheckedResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockTextSetCheckedResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockTextSetCheckedResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[189].Descriptor()
}

func (RpcBlockTextSetCheckedResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[189]
}

func (x RpcBlockTextSetCheckedResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockTextSetCheckedResponseErrorCode.Descriptor instead.
func (RpcBlockTextSetCheckedResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 20, 4, 1, 0, 0}
}

type RpcBlockTextSetIconResponseErrorCode int32

const (
	RpcBlockTextSetIconResponseError_NULL          RpcBlockTextSetIconResponseErrorCode = 0
	RpcBlockTextSetIconResponseError_UNKNOWN_ERROR RpcBlockTextSetIconResponseErrorCode = 1
	RpcBlockTextSetIconResponseError_BAD_INPUT     RpcBlockTextSetIconResponseErrorCode = 2 // ...
)

// Enum value maps for RpcBlockTextSetIconResponseErrorCode.
var (
	RpcBlockTextSetIconResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockTextSetIconResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockTextSetIconResponseErrorCode) Enum() *RpcBlockTextSetIconResponseErrorCode {
	p := new(RpcBlockTextSetIconResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockTextSetIconResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockTextSetIconResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[190].Descriptor()
}

func (RpcBlockTextSetIconResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[190]
}

func (x RpcBlockTextSetIconResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockTextSetIconResponseErrorCode.Descriptor instead.
func (RpcBlockTextSetIconResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 20, 5, 1, 0, 0}
}

type RpcBlockTextListSetStyleResponseErrorCode int32

const (
	RpcBlockTextListSetStyleResponseError_NULL          RpcBlockTextListSetStyleResponseErrorCode = 0
	RpcBlockTextListSetStyleResponseError_UNKNOWN_ERROR RpcBlockTextListSetStyleResponseErrorCode = 1
	RpcBlockTextListSetStyleResponseError_BAD_INPUT     RpcBlockTextListSetStyleResponseErrorCode = 2 // ...
)

// Enum value maps for RpcBlockTextListSetStyleResponseErrorCode.
var (
	RpcBlockTextListSetStyleResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockTextListSetStyleResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockTextListSetStyleResponseErrorCode) Enum() *RpcBlockTextListSetStyleResponseErrorCode {
	p := new(RpcBlockTextListSetStyleResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockTextListSetStyleResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockTextListSetStyleResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[191].Descriptor()
}

func (RpcBlockTextListSetStyleResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[191]
}

func (x RpcBlockTextListSetStyleResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockTextListSetStyleResponseErrorCode.Descriptor instead.
func (RpcBlockTextListSetStyleResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 20, 6, 1, 0, 0}
}

type RpcBlockTextListSetColorResponseErrorCode int32

const (
	RpcBlockTextListSetColorResponseError_NULL          RpcBlockTextListSetColorResponseErrorCode = 0
	RpcBlockTextListSetColorResponseError_UNKNOWN_ERROR RpcBlockTextListSetColorResponseErrorCode = 1
	RpcBlockTextListSetColorResponseError_BAD_INPUT     RpcBlockTextListSetColorResponseErrorCode = 2 // ...
)

// Enum value maps for RpcBlockTextListSetColorResponseErrorCode.
var (
	RpcBlockTextListSetColorResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockTextListSetColorResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockTextListSetColorResponseErrorCode) Enum() *RpcBlockTextListSetColorResponseErrorCode {
	p := new(RpcBlockTextListSetColorResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockTextListSetColorResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockTextListSetColorResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[192].Descriptor()
}

func (RpcBlockTextListSetColorResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[192]
}

func (x RpcBlockTextListSetColorResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockTextListSetColorResponseErrorCode.Descriptor instead.
func (RpcBlockTextListSetColorResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 20, 7, 1, 0, 0}
}

type RpcBlockTextListSetMarkResponseErrorCode int32

const (
	RpcBlockTextListSetMarkResponseError_NULL          RpcBlockTextListSetMarkResponseErrorCode = 0
	RpcBlockTextListSetMarkResponseError_UNKNOWN_ERROR RpcBlockTextListSetMarkResponseErrorCode = 1
	RpcBlockTextListSetMarkResponseError_BAD_INPUT     RpcBlockTextListSetMarkResponseErrorCode = 2 // ...
)

// Enum value maps for RpcBlockTextListSetMarkResponseErrorCode.
var (
	RpcBlockTextListSetMarkResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockTextListSetMarkResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockTextListSetMarkResponseErrorCode) Enum() *RpcBlockTextListSetMarkResponseErrorCode {
	p := new(RpcBlockTextListSetMarkResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockTextListSetMarkResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockTextListSetMarkResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[193].Descriptor()
}

func (RpcBlockTextListSetMarkResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[193]
}

func (x RpcBlockTextListSetMarkResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockTextListSetMarkResponseErrorCode.Descriptor instead.
func (RpcBlockTextListSetMarkResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 20, 8, 1, 0, 0}
}

type RpcBlockTextListClearStyleResponseErrorCode int32

const (
	RpcBlockTextListClearStyleResponseError_NULL          RpcBlockTextListClearStyleResponseErrorCode = 0
	RpcBlockTextListClearStyleResponseError_UNKNOWN_ERROR RpcBlockTextListClearStyleResponseErrorCode = 1
	RpcBlockTextListClearStyleResponseError_BAD_INPUT     RpcBlockTextListClearStyleResponseErrorCode = 2 // ...
)

// Enum value maps for RpcBlockTextListClearStyleResponseErrorCode.
var (
	RpcBlockTextListClearStyleResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockTextListClearStyleResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockTextListClearStyleResponseErrorCode) Enum() *RpcBlockTextListClearStyleResponseErrorCode {
	p := new(RpcBlockTextListClearStyleResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockTextListClearStyleResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockTextListClearStyleResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[194].Descriptor()
}

func (RpcBlockTextListClearStyleResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[194]
}

func (x RpcBlockTextListClearStyleResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockTextListClearStyleResponseErrorCode.Descriptor instead.
func (RpcBlockTextListClearStyleResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 20, 9, 1, 0, 0}
}

type RpcBlockTextListClearContentResponseErrorCode int32

const (
	RpcBlockTextListClearContentResponseError_NULL          RpcBlockTextListClearContentResponseErrorCode = 0
	RpcBlockTextListClearContentResponseError_UNKNOWN_ERROR RpcBlockTextListClearContentResponseErrorCode = 1
	RpcBlockTextListClearContentResponseError_BAD_INPUT     RpcBlockTextListClearContentResponseErrorCode = 2 // ...
)

// Enum value maps for RpcBlockTextListClearContentResponseErrorCode.
var (
	RpcBlockTextListClearContentResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockTextListClearContentResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockTextListClearContentResponseErrorCode) Enum() *RpcBlockTextListClearContentResponseErrorCode {
	p := new(RpcBlockTextListClearContentResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockTextListClearContentResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockTextListClearContentResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[195].Descriptor()
}

func (RpcBlockTextListClearContentResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[195]
}

func (x RpcBlockTextListClearContentResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockTextListClearContentResponseErrorCode.Descriptor instead.
func (RpcBlockTextListClearContentResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 20, 10, 1, 0, 0}
}

type RpcBlockTableCreateResponseErrorCode int32

const (
	RpcBlockTableCreateResponseError_NULL          RpcBlockTableCreateResponseErrorCode = 0
	RpcBlockTableCreateResponseError_UNKNOWN_ERROR RpcBlockTableCreateResponseErrorCode = 1
	RpcBlockTableCreateResponseError_BAD_INPUT     RpcBlockTableCreateResponseErrorCode = 2 // ...
)

// Enum value maps for RpcBlockTableCreateResponseErrorCode.
var (
	RpcBlockTableCreateResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockTableCreateResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockTableCreateResponseErrorCode) Enum() *RpcBlockTableCreateResponseErrorCode {
	p := new(RpcBlockTableCreateResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockTableCreateResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockTableCreateResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[196].Descriptor()
}

func (RpcBlockTableCreateResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[196]
}

func (x RpcBlockTableCreateResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockTableCreateResponseErrorCode.Descriptor instead.
func (RpcBlockTableCreateResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 21, 0, 1, 0, 0}
}

type RpcBlockTableRowCreateResponseErrorCode int32

const (
	RpcBlockTableRowCreateResponseError_NULL          RpcBlockTableRowCreateResponseErrorCode = 0
	RpcBlockTableRowCreateResponseError_UNKNOWN_ERROR RpcBlockTableRowCreateResponseErrorCode = 1
	RpcBlockTableRowCreateResponseError_BAD_INPUT     RpcBlockTableRowCreateResponseErrorCode = 2 // ...
)

// Enum value maps for RpcBlockTableRowCreateResponseErrorCode.
var (
	RpcBlockTableRowCreateResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockTableRowCreateResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockTableRowCreateResponseErrorCode) Enum() *RpcBlockTableRowCreateResponseErrorCode {
	p := new(RpcBlockTableRowCreateResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockTableRowCreateResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockTableRowCreateResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[197].Descriptor()
}

func (RpcBlockTableRowCreateResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[197]
}

func (x RpcBlockTableRowCreateResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockTableRowCreateResponseErrorCode.Descriptor instead.
func (RpcBlockTableRowCreateResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 21, 1, 1, 0, 0}
}

type RpcBlockTableRowSetHeaderResponseErrorCode int32

const (
	RpcBlockTableRowSetHeaderResponseError_NULL          RpcBlockTableRowSetHeaderResponseErrorCode = 0
	RpcBlockTableRowSetHeaderResponseError_UNKNOWN_ERROR RpcBlockTableRowSetHeaderResponseErrorCode = 1
	RpcBlockTableRowSetHeaderResponseError_BAD_INPUT     RpcBlockTableRowSetHeaderResponseErrorCode = 2 // ...
)

// Enum value maps for RpcBlockTableRowSetHeaderResponseErrorCode.
var (
	RpcBlockTableRowSetHeaderResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockTableRowSetHeaderResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockTableRowSetHeaderResponseErrorCode) Enum() *RpcBlockTableRowSetHeaderResponseErrorCode {
	p := new(RpcBlockTableRowSetHeaderResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockTableRowSetHeaderResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockTableRowSetHeaderResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[198].Descriptor()
}

func (RpcBlockTableRowSetHeaderResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[198]
}

func (x RpcBlockTableRowSetHeaderResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockTableRowSetHeaderResponseErrorCode.Descriptor instead.
func (RpcBlockTableRowSetHeaderResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 21, 2, 1, 0, 0}
}

type RpcBlockTableRowListFillResponseErrorCode int32

const (
	RpcBlockTableRowListFillResponseError_NULL          RpcBlockTableRowListFillResponseErrorCode = 0
	RpcBlockTableRowListFillResponseError_UNKNOWN_ERROR RpcBlockTableRowListFillResponseErrorCode = 1
	RpcBlockTableRowListFillResponseError_BAD_INPUT     RpcBlockTableRowListFillResponseErrorCode = 2 // ...
)

// Enum value maps for RpcBlockTableRowListFillResponseErrorCode.
var (
	RpcBlockTableRowListFillResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockTableRowListFillResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockTableRowListFillResponseErrorCode) Enum() *RpcBlockTableRowListFillResponseErrorCode {
	p := new(RpcBlockTableRowListFillResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockTableRowListFillResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockTableRowListFillResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[199].Descriptor()
}

func (RpcBlockTableRowListFillResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[199]
}

func (x RpcBlockTableRowListFillResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockTableRowListFillResponseErrorCode.Descriptor instead.
func (RpcBlockTableRowListFillResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 21, 3, 1, 0, 0}
}

type RpcBlockTableRowListCleanResponseErrorCode int32

const (
	RpcBlockTableRowListCleanResponseError_NULL          RpcBlockTableRowListCleanResponseErrorCode = 0
	RpcBlockTableRowListCleanResponseError_UNKNOWN_ERROR RpcBlockTableRowListCleanResponseErrorCode = 1
	RpcBlockTableRowListCleanResponseError_BAD_INPUT     RpcBlockTableRowListCleanResponseErrorCode = 2 // ...
)

// Enum value maps for RpcBlockTableRowListCleanResponseErrorCode.
var (
	RpcBlockTableRowListCleanResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockTableRowListCleanResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockTableRowListCleanResponseErrorCode) Enum() *RpcBlockTableRowListCleanResponseErrorCode {
	p := new(RpcBlockTableRowListCleanResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockTableRowListCleanResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockTableRowListCleanResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[200].Descriptor()
}

func (RpcBlockTableRowListCleanResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[200]
}

func (x RpcBlockTableRowListCleanResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockTableRowListCleanResponseErrorCode.Descriptor instead.
func (RpcBlockTableRowListCleanResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 21, 4, 1, 0, 0}
}

type RpcBlockTableColumnListFillResponseErrorCode int32

const (
	RpcBlockTableColumnListFillResponseError_NULL          RpcBlockTableColumnListFillResponseErrorCode = 0
	RpcBlockTableColumnListFillResponseError_UNKNOWN_ERROR RpcBlockTableColumnListFillResponseErrorCode = 1
	RpcBlockTableColumnListFillResponseError_BAD_INPUT     RpcBlockTableColumnListFillResponseErrorCode = 2 // ...
)

// Enum value maps for RpcBlockTableColumnListFillResponseErrorCode.
var (
	RpcBlockTableColumnListFillResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockTableColumnListFillResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockTableColumnListFillResponseErrorCode) Enum() *RpcBlockTableColumnListFillResponseErrorCode {
	p := new(RpcBlockTableColumnListFillResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockTableColumnListFillResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockTableColumnListFillResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[201].Descriptor()
}

func (RpcBlockTableColumnListFillResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[201]
}

func (x RpcBlockTableColumnListFillResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockTableColumnListFillResponseErrorCode.Descriptor instead.
func (RpcBlockTableColumnListFillResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 21, 5, 1, 0, 0}
}

type RpcBlockTableColumnCreateResponseErrorCode int32

const (
	RpcBlockTableColumnCreateResponseError_NULL          RpcBlockTableColumnCreateResponseErrorCode = 0
	RpcBlockTableColumnCreateResponseError_UNKNOWN_ERROR RpcBlockTableColumnCreateResponseErrorCode = 1
	RpcBlockTableColumnCreateResponseError_BAD_INPUT     RpcBlockTableColumnCreateResponseErrorCode = 2 // ...
)

// Enum value maps for RpcBlockTableColumnCreateResponseErrorCode.
var (
	RpcBlockTableColumnCreateResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockTableColumnCreateResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockTableColumnCreateResponseErrorCode) Enum() *RpcBlockTableColumnCreateResponseErrorCode {
	p := new(RpcBlockTableColumnCreateResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockTableColumnCreateResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockTableColumnCreateResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[202].Descriptor()
}

func (RpcBlockTableColumnCreateResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[202]
}

func (x RpcBlockTableColumnCreateResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockTableColumnCreateResponseErrorCode.Descriptor instead.
func (RpcBlockTableColumnCreateResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 21, 6, 1, 0, 0}
}

type RpcBlockTableRowDeleteResponseErrorCode int32

const (
	RpcBlockTableRowDeleteResponseError_NULL          RpcBlockTableRowDeleteResponseErrorCode = 0
	RpcBlockTableRowDeleteResponseError_UNKNOWN_ERROR RpcBlockTableRowDeleteResponseErrorCode = 1
	RpcBlockTableRowDeleteResponseError_BAD_INPUT     RpcBlockTableRowDeleteResponseErrorCode = 2 // ...
)

// Enum value maps for RpcBlockTableRowDeleteResponseErrorCode.
var (
	RpcBlockTableRowDeleteResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockTableRowDeleteResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockTableRowDeleteResponseErrorCode) Enum() *RpcBlockTableRowDeleteResponseErrorCode {
	p := new(RpcBlockTableRowDeleteResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockTableRowDeleteResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockTableRowDeleteResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[203].Descriptor()
}

func (RpcBlockTableRowDeleteResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[203]
}

func (x RpcBlockTableRowDeleteResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockTableRowDeleteResponseErrorCode.Descriptor instead.
func (RpcBlockTableRowDeleteResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 21, 7, 1, 0, 0}
}

type RpcBlockTableColumnDeleteResponseErrorCode int32

const (
	RpcBlockTableColumnDeleteResponseError_NULL          RpcBlockTableColumnDeleteResponseErrorCode = 0
	RpcBlockTableColumnDeleteResponseError_UNKNOWN_ERROR RpcBlockTableColumnDeleteResponseErrorCode = 1
	RpcBlockTableColumnDeleteResponseError_BAD_INPUT     RpcBlockTableColumnDeleteResponseErrorCode = 2 // ...
)

// Enum value maps for RpcBlockTableColumnDeleteResponseErrorCode.
var (
	RpcBlockTableColumnDeleteResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockTableColumnDeleteResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockTableColumnDeleteResponseErrorCode) Enum() *RpcBlockTableColumnDeleteResponseErrorCode {
	p := new(RpcBlockTableColumnDeleteResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockTableColumnDeleteResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockTableColumnDeleteResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[204].Descriptor()
}

func (RpcBlockTableColumnDeleteResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[204]
}

func (x RpcBlockTableColumnDeleteResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockTableColumnDeleteResponseErrorCode.Descriptor instead.
func (RpcBlockTableColumnDeleteResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 21, 8, 1, 0, 0}
}

type RpcBlockTableColumnMoveResponseErrorCode int32

const (
	RpcBlockTableColumnMoveResponseError_NULL          RpcBlockTableColumnMoveResponseErrorCode = 0
	RpcBlockTableColumnMoveResponseError_UNKNOWN_ERROR RpcBlockTableColumnMoveResponseErrorCode = 1
	RpcBlockTableColumnMoveResponseError_BAD_INPUT     RpcBlockTableColumnMoveResponseErrorCode = 2 // ...
)

// Enum value maps for RpcBlockTableColumnMoveResponseErrorCode.
var (
	RpcBlockTableColumnMoveResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockTableColumnMoveResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockTableColumnMoveResponseErrorCode) Enum() *RpcBlockTableColumnMoveResponseErrorCode {
	p := new(RpcBlockTableColumnMoveResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockTableColumnMoveResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockTableColumnMoveResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[205].Descriptor()
}

func (RpcBlockTableColumnMoveResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[205]
}

func (x RpcBlockTableColumnMoveResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockTableColumnMoveResponseErrorCode.Descriptor instead.
func (RpcBlockTableColumnMoveResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 21, 9, 1, 0, 0}
}

type RpcBlockTableRowDuplicateResponseErrorCode int32

const (
	RpcBlockTableRowDuplicateResponseError_NULL          RpcBlockTableRowDuplicateResponseErrorCode = 0
	RpcBlockTableRowDuplicateResponseError_UNKNOWN_ERROR RpcBlockTableRowDuplicateResponseErrorCode = 1
	RpcBlockTableRowDuplicateResponseError_BAD_INPUT     RpcBlockTableRowDuplicateResponseErrorCode = 2 // ...
)

// Enum value maps for RpcBlockTableRowDuplicateResponseErrorCode.
var (
	RpcBlockTableRowDuplicateResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockTableRowDuplicateResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockTableRowDuplicateResponseErrorCode) Enum() *RpcBlockTableRowDuplicateResponseErrorCode {
	p := new(RpcBlockTableRowDuplicateResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockTableRowDuplicateResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockTableRowDuplicateResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[206].Descriptor()
}

func (RpcBlockTableRowDuplicateResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[206]
}

func (x RpcBlockTableRowDuplicateResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockTableRowDuplicateResponseErrorCode.Descriptor instead.
func (RpcBlockTableRowDuplicateResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 21, 10, 1, 0, 0}
}

type RpcBlockTableColumnDuplicateResponseErrorCode int32

const (
	RpcBlockTableColumnDuplicateResponseError_NULL          RpcBlockTableColumnDuplicateResponseErrorCode = 0
	RpcBlockTableColumnDuplicateResponseError_UNKNOWN_ERROR RpcBlockTableColumnDuplicateResponseErrorCode = 1
	RpcBlockTableColumnDuplicateResponseError_BAD_INPUT     RpcBlockTableColumnDuplicateResponseErrorCode = 2 // ...
)

// Enum value maps for RpcBlockTableColumnDuplicateResponseErrorCode.
var (
	RpcBlockTableColumnDuplicateResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockTableColumnDuplicateResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockTableColumnDuplicateResponseErrorCode) Enum() *RpcBlockTableColumnDuplicateResponseErrorCode {
	p := new(RpcBlockTableColumnDuplicateResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockTableColumnDuplicateResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockTableColumnDuplicateResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[207].Descriptor()
}

func (RpcBlockTableColumnDuplicateResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[207]
}

func (x RpcBlockTableColumnDuplicateResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockTableColumnDuplicateResponseErrorCode.Descriptor instead.
func (RpcBlockTableColumnDuplicateResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 21, 11, 1, 0, 0}
}

type RpcBlockTableExpandResponseErrorCode int32

const (
	RpcBlockTableExpandResponseError_NULL          RpcBlockTableExpandResponseErrorCode = 0
	RpcBlockTableExpandResponseError_UNKNOWN_ERROR RpcBlockTableExpandResponseErrorCode = 1
	RpcBlockTableExpandResponseError_BAD_INPUT     RpcBlockTableExpandResponseErrorCode = 2 // ...
)

// Enum value maps for RpcBlockTableExpandResponseErrorCode.
var (
	RpcBlockTableExpandResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockTableExpandResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockTableExpandResponseErrorCode) Enum() *RpcBlockTableExpandResponseErrorCode {
	p := new(RpcBlockTableExpandResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockTableExpandResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockTableExpandResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[208].Descriptor()
}

func (RpcBlockTableExpandResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[208]
}

func (x RpcBlockTableExpandResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockTableExpandResponseErrorCode.Descriptor instead.
func (RpcBlockTableExpandResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 21, 12, 1, 0, 0}
}

type RpcBlockTableSortResponseErrorCode int32

const (
	RpcBlockTableSortResponseError_NULL          RpcBlockTableSortResponseErrorCode = 0
	RpcBlockTableSortResponseError_UNKNOWN_ERROR RpcBlockTableSortResponseErrorCode = 1
	RpcBlockTableSortResponseError_BAD_INPUT     RpcBlockTableSortResponseErrorCode = 2 // ...
)

// Enum value maps for RpcBlockTableSortResponseErrorCode.
var (
	RpcBlockTableSortResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockTableSortResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockTableSortResponseErrorCode) Enum() *RpcBlockTableSortResponseErrorCode {
	p := new(RpcBlockTableSortResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockTableSortResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockTableSortResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[209].Descriptor()
}

func (RpcBlockTableSortResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[209]
}

func (x RpcBlockTableSortResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockTableSortResponseErrorCode.Descriptor instead.
func (RpcBlockTableSortResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 21, 13, 1, 0, 0}
}

type RpcBlockFileSetNameResponseErrorCode int32

const (
	RpcBlockFileSetNameResponseError_NULL          RpcBlockFileSetNameResponseErrorCode = 0
	RpcBlockFileSetNameResponseError_UNKNOWN_ERROR RpcBlockFileSetNameResponseErrorCode = 1
	RpcBlockFileSetNameResponseError_BAD_INPUT     RpcBlockFileSetNameResponseErrorCode = 2 // ...
)

// Enum value maps for RpcBlockFileSetNameResponseErrorCode.
var (
	RpcBlockFileSetNameResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockFileSetNameResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockFileSetNameResponseErrorCode) Enum() *RpcBlockFileSetNameResponseErrorCode {
	p := new(RpcBlockFileSetNameResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockFileSetNameResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockFileSetNameResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[210].Descriptor()
}

func (RpcBlockFileSetNameResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[210]
}

func (x RpcBlockFileSetNameResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockFileSetNameResponseErrorCode.Descriptor instead.
func (RpcBlockFileSetNameResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 22, 0, 1, 0, 0}
}

type RpcBlockFileSetTargetObjectIdResponseErrorCode int32

const (
	RpcBlockFileSetTargetObjectIdResponseError_NULL          RpcBlockFileSetTargetObjectIdResponseErrorCode = 0
	RpcBlockFileSetTargetObjectIdResponseError_UNKNOWN_ERROR RpcBlockFileSetTargetObjectIdResponseErrorCode = 1
	RpcBlockFileSetTargetObjectIdResponseError_BAD_INPUT     RpcBlockFileSetTargetObjectIdResponseErrorCode = 2 // ...
)

// Enum value maps for RpcBlockFileSetTargetObjectIdResponseErrorCode.
var (
	RpcBlockFileSetTargetObjectIdResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockFileSetTargetObjectIdResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockFileSetTargetObjectIdResponseErrorCode) Enum() *RpcBlockFileSetTargetObjectIdResponseErrorCode {
	p := new(RpcBlockFileSetTargetObjectIdResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockFileSetTargetObjectIdResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockFileSetTargetObjectIdResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[211].Descriptor()
}

func (RpcBlockFileSetTargetObjectIdResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[211]
}

func (x RpcBlockFileSetTargetObjectIdResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockFileSetTargetObjectIdResponseErrorCode.Descriptor instead.
func (RpcBlockFileSetTargetObjectIdResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 22, 1, 1, 0, 0}
}

type RpcBlockFileCreateAndUploadResponseErrorCode int32

const (
	RpcBlockFileCreateAndUploadResponseError_NULL          RpcBlockFileCreateAndUploadResponseErrorCode = 0
	RpcBlockFileCreateAndUploadResponseError_UNKNOWN_ERROR RpcBlockFileCreateAndUploadResponseErrorCode = 1
	RpcBlockFileCreateAndUploadResponseError_BAD_INPUT     RpcBlockFileCreateAndUploadResponseErrorCode = 2
)

// Enum value maps for RpcBlockFileCreateAndUploadResponseErrorCode.
var (
	RpcBlockFileCreateAndUploadResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockFileCreateAndUploadResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockFileCreateAndUploadResponseErrorCode) Enum() *RpcBlockFileCreateAndUploadResponseErrorCode {
	p := new(RpcBlockFileCreateAndUploadResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockFileCreateAndUploadResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockFileCreateAndUploadResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[212].Descriptor()
}

func (RpcBlockFileCreateAndUploadResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[212]
}

func (x RpcBlockFileCreateAndUploadResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockFileCreateAndUploadResponseErrorCode.Descriptor instead.
func (RpcBlockFileCreateAndUploadResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 22, 2, 1, 0, 0}
}

type RpcBlockFileListSetStyleResponseErrorCode int32

const (
	RpcBlockFileListSetStyleResponseError_NULL          RpcBlockFileListSetStyleResponseErrorCode = 0
	RpcBlockFileListSetStyleResponseError_UNKNOWN_ERROR RpcBlockFileListSetStyleResponseErrorCode = 1
	RpcBlockFileListSetStyleResponseError_BAD_INPUT     RpcBlockFileListSetStyleResponseErrorCode = 2 // ...
)

// Enum value maps for RpcBlockFileListSetStyleResponseErrorCode.
var (
	RpcBlockFileListSetStyleResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockFileListSetStyleResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockFileListSetStyleResponseErrorCode) Enum() *RpcBlockFileListSetStyleResponseErrorCode {
	p := new(RpcBlockFileListSetStyleResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockFileListSetStyleResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockFileListSetStyleResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[213].Descriptor()
}

func (RpcBlockFileListSetStyleResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[213]
}

func (x RpcBlockFileListSetStyleResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockFileListSetStyleResponseErrorCode.Descriptor instead.
func (RpcBlockFileListSetStyleResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 22, 3, 1, 0, 0}
}

type RpcBlockImageSetNameResponseErrorCode int32

const (
	RpcBlockImageSetNameResponseError_NULL          RpcBlockImageSetNameResponseErrorCode = 0
	RpcBlockImageSetNameResponseError_UNKNOWN_ERROR RpcBlockImageSetNameResponseErrorCode = 1
	RpcBlockImageSetNameResponseError_BAD_INPUT     RpcBlockImageSetNameResponseErrorCode = 2 // ...
)

// Enum value maps for RpcBlockImageSetNameResponseErrorCode.
var (
	RpcBlockImageSetNameResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockImageSetNameResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockImageSetNameResponseErrorCode) Enum() *RpcBlockImageSetNameResponseErrorCode {
	p := new(RpcBlockImageSetNameResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockImageSetNameResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockImageSetNameResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[214].Descriptor()
}

func (RpcBlockImageSetNameResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[214]
}

func (x RpcBlockImageSetNameResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockImageSetNameResponseErrorCode.Descriptor instead.
func (RpcBlockImageSetNameResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 23, 0, 1, 0, 0}
}

type RpcBlockImageSetWidthResponseErrorCode int32

const (
	RpcBlockImageSetWidthResponseError_NULL          RpcBlockImageSetWidthResponseErrorCode = 0
	RpcBlockImageSetWidthResponseError_UNKNOWN_ERROR RpcBlockImageSetWidthResponseErrorCode = 1
	RpcBlockImageSetWidthResponseError_BAD_INPUT     RpcBlockImageSetWidthResponseErrorCode = 2 // ...
)

// Enum value maps for RpcBlockImageSetWidthResponseErrorCode.
var (
	RpcBlockImageSetWidthResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockImageSetWidthResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockImageSetWidthResponseErrorCode) Enum() *RpcBlockImageSetWidthResponseErrorCode {
	p := new(RpcBlockImageSetWidthResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockImageSetWidthResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockImageSetWidthResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[215].Descriptor()
}

func (RpcBlockImageSetWidthResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[215]
}

func (x RpcBlockImageSetWidthResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockImageSetWidthResponseErrorCode.Descriptor instead.
func (RpcBlockImageSetWidthResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 23, 1, 1, 0, 0}
}

type RpcBlockVideoSetNameResponseErrorCode int32

const (
	RpcBlockVideoSetNameResponseError_NULL          RpcBlockVideoSetNameResponseErrorCode = 0
	RpcBlockVideoSetNameResponseError_UNKNOWN_ERROR RpcBlockVideoSetNameResponseErrorCode = 1
	RpcBlockVideoSetNameResponseError_BAD_INPUT     RpcBlockVideoSetNameResponseErrorCode = 2 // ...
)

// Enum value maps for RpcBlockVideoSetNameResponseErrorCode.
var (
	RpcBlockVideoSetNameResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockVideoSetNameResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockVideoSetNameResponseErrorCode) Enum() *RpcBlockVideoSetNameResponseErrorCode {
	p := new(RpcBlockVideoSetNameResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockVideoSetNameResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockVideoSetNameResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[216].Descriptor()
}

func (RpcBlockVideoSetNameResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[216]
}

func (x RpcBlockVideoSetNameResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockVideoSetNameResponseErrorCode.Descriptor instead.
func (RpcBlockVideoSetNameResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 24, 0, 1, 0, 0}
}

type RpcBlockVideoSetWidthResponseErrorCode int32

const (
	RpcBlockVideoSetWidthResponseError_NULL          RpcBlockVideoSetWidthResponseErrorCode = 0
	RpcBlockVideoSetWidthResponseError_UNKNOWN_ERROR RpcBlockVideoSetWidthResponseErrorCode = 1
	RpcBlockVideoSetWidthResponseError_BAD_INPUT     RpcBlockVideoSetWidthResponseErrorCode = 2 // ...
)

// Enum value maps for RpcBlockVideoSetWidthResponseErrorCode.
var (
	RpcBlockVideoSetWidthResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockVideoSetWidthResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockVideoSetWidthResponseErrorCode) Enum() *RpcBlockVideoSetWidthResponseErrorCode {
	p := new(RpcBlockVideoSetWidthResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockVideoSetWidthResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockVideoSetWidthResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[217].Descriptor()
}

func (RpcBlockVideoSetWidthResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[217]
}

func (x RpcBlockVideoSetWidthResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockVideoSetWidthResponseErrorCode.Descriptor instead.
func (RpcBlockVideoSetWidthResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 24, 1, 1, 0, 0}
}

type RpcBlockLinkCreateWithObjectResponseErrorCode int32

const (
	RpcBlockLinkCreateWithObjectResponseError_NULL          RpcBlockLinkCreateWithObjectResponseErrorCode = 0
	RpcBlockLinkCreateWithObjectResponseError_UNKNOWN_ERROR RpcBlockLinkCreateWithObjectResponseErrorCode = 1
	RpcBlockLinkCreateWithObjectResponseError_BAD_INPUT     RpcBlockLinkCreateWithObjectResponseErrorCode = 2 // ...
)

// Enum value maps for RpcBlockLinkCreateWithObjectResponseErrorCode.
var (
	RpcBlockLinkCreateWithObjectResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockLinkCreateWithObjectResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockLinkCreateWithObjectResponseErrorCode) Enum() *RpcBlockLinkCreateWithObjectResponseErrorCode {
	p := new(RpcBlockLinkCreateWithObjectResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockLinkCreateWithObjectResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockLinkCreateWithObjectResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[218].Descriptor()
}

func (RpcBlockLinkCreateWithObjectResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[218]
}

func (x RpcBlockLinkCreateWithObjectResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockLinkCreateWithObjectResponseErrorCode.Descriptor instead.
func (RpcBlockLinkCreateWithObjectResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 25, 0, 1, 0, 0}
}

type RpcBlockLinkListSetAppearanceResponseErrorCode int32

const (
	RpcBlockLinkListSetAppearanceResponseError_NULL          RpcBlockLinkListSetAppearanceResponseErrorCode = 0
	RpcBlockLinkListSetAppearanceResponseError_UNKNOWN_ERROR RpcBlockLinkListSetAppearanceResponseErrorCode = 1
	RpcBlockLinkListSetAppearanceResponseError_BAD_INPUT     RpcBlockLinkListSetAppearanceResponseErrorCode = 2 // ...
)

// Enum value maps for RpcBlockLinkListSetAppearanceResponseErrorCode.
var (
	RpcBlockLinkListSetAppearanceResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockLinkListSetAppearanceResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockLinkListSetAppearanceResponseErrorCode) Enum() *RpcBlockLinkListSetAppearanceResponseErrorCode {
	p := new(RpcBlockLinkListSetAppearanceResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockLinkListSetAppearanceResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockLinkListSetAppearanceResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[219].Descriptor()
}

func (RpcBlockLinkListSetAppearanceResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[219]
}

func (x RpcBlockLinkListSetAppearanceResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockLinkListSetAppearanceResponseErrorCode.Descriptor instead.
func (RpcBlockLinkListSetAppearanceResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 25, 1, 1, 0, 0}
}

type RpcBlockRelationSetKeyResponseErrorCode int32

const (
	RpcBlockRelationSetKeyResponseError_NULL          RpcBlockRelationSetKeyResponseErrorCode = 0
	RpcBlockRelationSetKeyResponseError_UNKNOWN_ERROR RpcBlockRelationSetKeyResponseErrorCode = 1
	RpcBlockRelationSetKeyResponseError_BAD_INPUT     RpcBlockRelationSetKeyResponseErrorCode = 2
)

// Enum value maps for RpcBlockRelationSetKeyResponseErrorCode.
var (
	RpcBlockRelationSetKeyResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockRelationSetKeyResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockRelationSetKeyResponseErrorCode) Enum() *RpcBlockRelationSetKeyResponseErrorCode {
	p := new(RpcBlockRelationSetKeyResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockRelationSetKeyResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockRelationSetKeyResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[220].Descriptor()
}

func (RpcBlockRelationSetKeyResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[220]
}

func (x RpcBlockRelationSetKeyResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockRelationSetKeyResponseErrorCode.Descriptor instead.
func (RpcBlockRelationSetKeyResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 26, 0, 1, 0, 0}
}

type RpcBlockRelationAddResponseErrorCode int32

const (
	RpcBlockRelationAddResponseError_NULL          RpcBlockRelationAddResponseErrorCode = 0
	RpcBlockRelationAddResponseError_UNKNOWN_ERROR RpcBlockRelationAddResponseErrorCode = 1
	RpcBlockRelationAddResponseError_BAD_INPUT     RpcBlockRelationAddResponseErrorCode = 2
)

// Enum value maps for RpcBlockRelationAddResponseErrorCode.
var (
	RpcBlockRelationAddResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockRelationAddResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockRelationAddResponseErrorCode) Enum() *RpcBlockRelationAddResponseErrorCode {
	p := new(RpcBlockRelationAddResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockRelationAddResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockRelationAddResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[221].Descriptor()
}

func (RpcBlockRelationAddResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[221]
}

func (x RpcBlockRelationAddResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockRelationAddResponseErrorCode.Descriptor instead.
func (RpcBlockRelationAddResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 26, 1, 1, 0, 0}
}

type RpcBlockBookmarkFetchResponseErrorCode int32

const (
	RpcBlockBookmarkFetchResponseError_NULL          RpcBlockBookmarkFetchResponseErrorCode = 0
	RpcBlockBookmarkFetchResponseError_UNKNOWN_ERROR RpcBlockBookmarkFetchResponseErrorCode = 1
	RpcBlockBookmarkFetchResponseError_BAD_INPUT     RpcBlockBookmarkFetchResponseErrorCode = 2
)

// Enum value maps for RpcBlockBookmarkFetchResponseErrorCode.
var (
	RpcBlockBookmarkFetchResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockBookmarkFetchResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockBookmarkFetchResponseErrorCode) Enum() *RpcBlockBookmarkFetchResponseErrorCode {
	p := new(RpcBlockBookmarkFetchResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockBookmarkFetchResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockBookmarkFetchResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[222].Descriptor()
}

func (RpcBlockBookmarkFetchResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[222]
}

func (x RpcBlockBookmarkFetchResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockBookmarkFetchResponseErrorCode.Descriptor instead.
func (RpcBlockBookmarkFetchResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 27, 0, 1, 0, 0}
}

type RpcBlockBookmarkCreateAndFetchResponseErrorCode int32

const (
	RpcBlockBookmarkCreateAndFetchResponseError_NULL          RpcBlockBookmarkCreateAndFetchResponseErrorCode = 0
	RpcBlockBookmarkCreateAndFetchResponseError_UNKNOWN_ERROR RpcBlockBookmarkCreateAndFetchResponseErrorCode = 1
	RpcBlockBookmarkCreateAndFetchResponseError_BAD_INPUT     RpcBlockBookmarkCreateAndFetchResponseErrorCode = 2
)

// Enum value maps for RpcBlockBookmarkCreateAndFetchResponseErrorCode.
var (
	RpcBlockBookmarkCreateAndFetchResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockBookmarkCreateAndFetchResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockBookmarkCreateAndFetchResponseErrorCode) Enum() *RpcBlockBookmarkCreateAndFetchResponseErrorCode {
	p := new(RpcBlockBookmarkCreateAndFetchResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockBookmarkCreateAndFetchResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockBookmarkCreateAndFetchResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[223].Descriptor()
}

func (RpcBlockBookmarkCreateAndFetchResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[223]
}

func (x RpcBlockBookmarkCreateAndFetchResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockBookmarkCreateAndFetchResponseErrorCode.Descriptor instead.
func (RpcBlockBookmarkCreateAndFetchResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 27, 1, 1, 0, 0}
}

type RpcBlockDivListSetStyleResponseErrorCode int32

const (
	RpcBlockDivListSetStyleResponseError_NULL          RpcBlockDivListSetStyleResponseErrorCode = 0
	RpcBlockDivListSetStyleResponseError_UNKNOWN_ERROR RpcBlockDivListSetStyleResponseErrorCode = 1
	RpcBlockDivListSetStyleResponseError_BAD_INPUT     RpcBlockDivListSetStyleResponseErrorCode = 2 // ...
)

// Enum value maps for RpcBlockDivListSetStyleResponseErrorCode.
var (
	RpcBlockDivListSetStyleResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockDivListSetStyleResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockDivListSetStyleResponseErrorCode) Enum() *RpcBlockDivListSetStyleResponseErrorCode {
	p := new(RpcBlockDivListSetStyleResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockDivListSetStyleResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockDivListSetStyleResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[224].Descriptor()
}

func (RpcBlockDivListSetStyleResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[224]
}

func (x RpcBlockDivListSetStyleResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockDivListSetStyleResponseErrorCode.Descriptor instead.
func (RpcBlockDivListSetStyleResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 28, 0, 1, 0, 0}
}

type RpcBlockDataviewViewCreateResponseErrorCode int32

const (
	RpcBlockDataviewViewCreateResponseError_NULL          RpcBlockDataviewViewCreateResponseErrorCode = 0
	RpcBlockDataviewViewCreateResponseError_UNKNOWN_ERROR RpcBlockDataviewViewCreateResponseErrorCode = 1
	RpcBlockDataviewViewCreateResponseError_BAD_INPUT     RpcBlockDataviewViewCreateResponseErrorCode = 2 // ...
)

// Enum value maps for RpcBlockDataviewViewCreateResponseErrorCode.
var (
	RpcBlockDataviewViewCreateResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockDataviewViewCreateResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockDataviewViewCreateResponseErrorCode) Enum() *RpcBlockDataviewViewCreateResponseErrorCode {
	p := new(RpcBlockDataviewViewCreateResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockDataviewViewCreateResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockDataviewViewCreateResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[225].Descriptor()
}

func (RpcBlockDataviewViewCreateResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[225]
}

func (x RpcBlockDataviewViewCreateResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockDataviewViewCreateResponseErrorCode.Descriptor instead.
func (RpcBlockDataviewViewCreateResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 0, 0, 1, 0, 0}
}

type RpcBlockDataviewViewUpdateResponseErrorCode int32

const (
	RpcBlockDataviewViewUpdateResponseError_NULL          RpcBlockDataviewViewUpdateResponseErrorCode = 0
	RpcBlockDataviewViewUpdateResponseError_UNKNOWN_ERROR RpcBlockDataviewViewUpdateResponseErrorCode = 1
	RpcBlockDataviewViewUpdateResponseError_BAD_INPUT     RpcBlockDataviewViewUpdateResponseErrorCode = 2 // ...
)

// Enum value maps for RpcBlockDataviewViewUpdateResponseErrorCode.
var (
	RpcBlockDataviewViewUpdateResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockDataviewViewUpdateResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockDataviewViewUpdateResponseErrorCode) Enum() *RpcBlockDataviewViewUpdateResponseErrorCode {
	p := new(RpcBlockDataviewViewUpdateResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockDataviewViewUpdateResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockDataviewViewUpdateResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[226].Descriptor()
}

func (RpcBlockDataviewViewUpdateResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[226]
}

func (x RpcBlockDataviewViewUpdateResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockDataviewViewUpdateResponseErrorCode.Descriptor instead.
func (RpcBlockDataviewViewUpdateResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 0, 1, 1, 0, 0}
}

type RpcBlockDataviewViewDeleteResponseErrorCode int32

const (
	RpcBlockDataviewViewDeleteResponseError_NULL          RpcBlockDataviewViewDeleteResponseErrorCode = 0
	RpcBlockDataviewViewDeleteResponseError_UNKNOWN_ERROR RpcBlockDataviewViewDeleteResponseErrorCode = 1
	RpcBlockDataviewViewDeleteResponseError_BAD_INPUT     RpcBlockDataviewViewDeleteResponseErrorCode = 2 // ...
)

// Enum value maps for RpcBlockDataviewViewDeleteResponseErrorCode.
var (
	RpcBlockDataviewViewDeleteResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockDataviewViewDeleteResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockDataviewViewDeleteResponseErrorCode) Enum() *RpcBlockDataviewViewDeleteResponseErrorCode {
	p := new(RpcBlockDataviewViewDeleteResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockDataviewViewDeleteResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockDataviewViewDeleteResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[227].Descriptor()
}

func (RpcBlockDataviewViewDeleteResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[227]
}

func (x RpcBlockDataviewViewDeleteResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockDataviewViewDeleteResponseErrorCode.Descriptor instead.
func (RpcBlockDataviewViewDeleteResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 0, 2, 1, 0, 0}
}

type RpcBlockDataviewViewSetPositionResponseErrorCode int32

const (
	RpcBlockDataviewViewSetPositionResponseError_NULL          RpcBlockDataviewViewSetPositionResponseErrorCode = 0
	RpcBlockDataviewViewSetPositionResponseError_UNKNOWN_ERROR RpcBlockDataviewViewSetPositionResponseErrorCode = 1
	RpcBlockDataviewViewSetPositionResponseError_BAD_INPUT     RpcBlockDataviewViewSetPositionResponseErrorCode = 2 // ...
)

// Enum value maps for RpcBlockDataviewViewSetPositionResponseErrorCode.
var (
	RpcBlockDataviewViewSetPositionResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockDataviewViewSetPositionResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockDataviewViewSetPositionResponseErrorCode) Enum() *RpcBlockDataviewViewSetPositionResponseErrorCode {
	p := new(RpcBlockDataviewViewSetPositionResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockDataviewViewSetPositionResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockDataviewViewSetPositionResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[228].Descriptor()
}

func (RpcBlockDataviewViewSetPositionResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[228]
}

func (x RpcBlockDataviewViewSetPositionResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockDataviewViewSetPositionResponseErrorCode.Descriptor instead.
func (RpcBlockDataviewViewSetPositionResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 0, 3, 1, 0, 0}
}

type RpcBlockDataviewViewSetActiveResponseErrorCode int32

const (
	RpcBlockDataviewViewSetActiveResponseError_NULL          RpcBlockDataviewViewSetActiveResponseErrorCode = 0
	RpcBlockDataviewViewSetActiveResponseError_UNKNOWN_ERROR RpcBlockDataviewViewSetActiveResponseErrorCode = 1
	RpcBlockDataviewViewSetActiveResponseError_BAD_INPUT     RpcBlockDataviewViewSetActiveResponseErrorCode = 2
)

// Enum value maps for RpcBlockDataviewViewSetActiveResponseErrorCode.
var (
	RpcBlockDataviewViewSetActiveResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockDataviewViewSetActiveResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockDataviewViewSetActiveResponseErrorCode) Enum() *RpcBlockDataviewViewSetActiveResponseErrorCode {
	p := new(RpcBlockDataviewViewSetActiveResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockDataviewViewSetActiveResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockDataviewViewSetActiveResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[229].Descriptor()
}

func (RpcBlockDataviewViewSetActiveResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[229]
}

func (x RpcBlockDataviewViewSetActiveResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockDataviewViewSetActiveResponseErrorCode.Descriptor instead.
func (RpcBlockDataviewViewSetActiveResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 0, 4, 1, 0, 0}
}

type RpcBlockDataviewRelationAddResponseErrorCode int32

const (
	RpcBlockDataviewRelationAddResponseError_NULL          RpcBlockDataviewRelationAddResponseErrorCode = 0
	RpcBlockDataviewRelationAddResponseError_UNKNOWN_ERROR RpcBlockDataviewRelationAddResponseErrorCode = 1
	RpcBlockDataviewRelationAddResponseError_BAD_INPUT     RpcBlockDataviewRelationAddResponseErrorCode = 2
)

// Enum value maps for RpcBlockDataviewRelationAddResponseErrorCode.
var (
	RpcBlockDataviewRelationAddResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockDataviewRelationAddResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockDataviewRelationAddResponseErrorCode) Enum() *RpcBlockDataviewRelationAddResponseErrorCode {
	p := new(RpcBlockDataviewRelationAddResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockDataviewRelationAddResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockDataviewRelationAddResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[230].Descriptor()
}

func (RpcBlockDataviewRelationAddResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[230]
}

func (x RpcBlockDataviewRelationAddResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockDataviewRelationAddResponseErrorCode.Descriptor instead.
func (RpcBlockDataviewRelationAddResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 1, 0, 1, 0, 0}
}

type RpcBlockDataviewRelationDeleteResponseErrorCode int32

const (
	RpcBlockDataviewRelationDeleteResponseError_NULL          RpcBlockDataviewRelationDeleteResponseErrorCode = 0
	RpcBlockDataviewRelationDeleteResponseError_UNKNOWN_ERROR RpcBlockDataviewRelationDeleteResponseErrorCode = 1
	RpcBlockDataviewRelationDeleteResponseError_BAD_INPUT     RpcBlockDataviewRelationDeleteResponseErrorCode = 2
)

// Enum value maps for RpcBlockDataviewRelationDeleteResponseErrorCode.
var (
	RpcBlockDataviewRelationDeleteResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockDataviewRelationDeleteResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockDataviewRelationDeleteResponseErrorCode) Enum() *RpcBlockDataviewRelationDeleteResponseErrorCode {
	p := new(RpcBlockDataviewRelationDeleteResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockDataviewRelationDeleteResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockDataviewRelationDeleteResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[231].Descriptor()
}

func (RpcBlockDataviewRelationDeleteResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[231]
}

func (x RpcBlockDataviewRelationDeleteResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockDataviewRelationDeleteResponseErrorCode.Descriptor instead.
func (RpcBlockDataviewRelationDeleteResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 1, 1, 1, 0, 0}
}

type RpcBlockDataviewSetSourceResponseErrorCode int32

const (
	RpcBlockDataviewSetSourceResponseError_NULL          RpcBlockDataviewSetSourceResponseErrorCode = 0
	RpcBlockDataviewSetSourceResponseError_UNKNOWN_ERROR RpcBlockDataviewSetSourceResponseErrorCode = 1
	RpcBlockDataviewSetSourceResponseError_BAD_INPUT     RpcBlockDataviewSetSourceResponseErrorCode = 2
)

// Enum value maps for RpcBlockDataviewSetSourceResponseErrorCode.
var (
	RpcBlockDataviewSetSourceResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockDataviewSetSourceResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockDataviewSetSourceResponseErrorCode) Enum() *RpcBlockDataviewSetSourceResponseErrorCode {
	p := new(RpcBlockDataviewSetSourceResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockDataviewSetSourceResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockDataviewSetSourceResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[232].Descriptor()
}

func (RpcBlockDataviewSetSourceResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[232]
}

func (x RpcBlockDataviewSetSourceResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockDataviewSetSourceResponseErrorCode.Descriptor instead.
func (RpcBlockDataviewSetSourceResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 2, 1, 0, 0}
}

type RpcBlockDataviewGroupOrderUpdateResponseErrorCode int32

const (
	RpcBlockDataviewGroupOrderUpdateResponseError_NULL          RpcBlockDataviewGroupOrderUpdateResponseErrorCode = 0
	RpcBlockDataviewGroupOrderUpdateResponseError_UNKNOWN_ERROR RpcBlockDataviewGroupOrderUpdateResponseErrorCode = 1
	RpcBlockDataviewGroupOrderUpdateResponseError_BAD_INPUT     RpcBlockDataviewGroupOrderUpdateResponseErrorCode = 2
)

// Enum value maps for RpcBlockDataviewGroupOrderUpdateResponseErrorCode.
var (
	RpcBlockDataviewGroupOrderUpdateResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockDataviewGroupOrderUpdateResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockDataviewGroupOrderUpdateResponseErrorCode) Enum() *RpcBlockDataviewGroupOrderUpdateResponseErrorCode {
	p := new(RpcBlockDataviewGroupOrderUpdateResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockDataviewGroupOrderUpdateResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockDataviewGroupOrderUpdateResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[233].Descriptor()
}

func (RpcBlockDataviewGroupOrderUpdateResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[233]
}

func (x RpcBlockDataviewGroupOrderUpdateResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockDataviewGroupOrderUpdateResponseErrorCode.Descriptor instead.
func (RpcBlockDataviewGroupOrderUpdateResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 3, 0, 1, 0, 0}
}

type RpcBlockDataviewObjectOrderUpdateResponseErrorCode int32

const (
	RpcBlockDataviewObjectOrderUpdateResponseError_NULL          RpcBlockDataviewObjectOrderUpdateResponseErrorCode = 0
	RpcBlockDataviewObjectOrderUpdateResponseError_UNKNOWN_ERROR RpcBlockDataviewObjectOrderUpdateResponseErrorCode = 1
	RpcBlockDataviewObjectOrderUpdateResponseError_BAD_INPUT     RpcBlockDataviewObjectOrderUpdateResponseErrorCode = 2
)

// Enum value maps for RpcBlockDataviewObjectOrderUpdateResponseErrorCode.
var (
	RpcBlockDataviewObjectOrderUpdateResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockDataviewObjectOrderUpdateResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockDataviewObjectOrderUpdateResponseErrorCode) Enum() *RpcBlockDataviewObjectOrderUpdateResponseErrorCode {
	p := new(RpcBlockDataviewObjectOrderUpdateResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockDataviewObjectOrderUpdateResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockDataviewObjectOrderUpdateResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[234].Descriptor()
}

func (RpcBlockDataviewObjectOrderUpdateResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[234]
}

func (x RpcBlockDataviewObjectOrderUpdateResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockDataviewObjectOrderUpdateResponseErrorCode.Descriptor instead.
func (RpcBlockDataviewObjectOrderUpdateResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 4, 0, 1, 0, 0}
}

type RpcBlockDataviewObjectOrderMoveResponseErrorCode int32

const (
	RpcBlockDataviewObjectOrderMoveResponseError_NULL          RpcBlockDataviewObjectOrderMoveResponseErrorCode = 0
	RpcBlockDataviewObjectOrderMoveResponseError_UNKNOWN_ERROR RpcBlockDataviewObjectOrderMoveResponseErrorCode = 1
	RpcBlockDataviewObjectOrderMoveResponseError_BAD_INPUT     RpcBlockDataviewObjectOrderMoveResponseErrorCode = 2
)

// Enum value maps for RpcBlockDataviewObjectOrderMoveResponseErrorCode.
var (
	RpcBlockDataviewObjectOrderMoveResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockDataviewObjectOrderMoveResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockDataviewObjectOrderMoveResponseErrorCode) Enum() *RpcBlockDataviewObjectOrderMoveResponseErrorCode {
	p := new(RpcBlockDataviewObjectOrderMoveResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockDataviewObjectOrderMoveResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockDataviewObjectOrderMoveResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[235].Descriptor()
}

func (RpcBlockDataviewObjectOrderMoveResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[235]
}

func (x RpcBlockDataviewObjectOrderMoveResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockDataviewObjectOrderMoveResponseErrorCode.Descriptor instead.
func (RpcBlockDataviewObjectOrderMoveResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 4, 1, 1, 0, 0}
}

type RpcBlockDataviewCreateFromExistingObjectResponseErrorCode int32

const (
	RpcBlockDataviewCreateFromExistingObjectResponseError_NULL          RpcBlockDataviewCreateFromExistingObjectResponseErrorCode = 0
	RpcBlockDataviewCreateFromExistingObjectResponseError_UNKNOWN_ERROR RpcBlockDataviewCreateFromExistingObjectResponseErrorCode = 1
	RpcBlockDataviewCreateFromExistingObjectResponseError_BAD_INPUT     RpcBlockDataviewCreateFromExistingObjectResponseErrorCode = 2 // ...
)

// Enum value maps for RpcBlockDataviewCreateFromExistingObjectResponseErrorCode.
var (
	RpcBlockDataviewCreateFromExistingObjectResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockDataviewCreateFromExistingObjectResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockDataviewCreateFromExistingObjectResponseErrorCode) Enum() *RpcBlockDataviewCreateFromExistingObjectResponseErrorCode {
	p := new(RpcBlockDataviewCreateFromExistingObjectResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockDataviewCreateFromExistingObjectResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockDataviewCreateFromExistingObjectResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[236].Descriptor()
}

func (RpcBlockDataviewCreateFromExistingObjectResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[236]
}

func (x RpcBlockDataviewCreateFromExistingObjectResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockDataviewCreateFromExistingObjectResponseErrorCode.Descriptor instead.
func (RpcBlockDataviewCreateFromExistingObjectResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 5, 1, 0, 0}
}

type RpcBlockDataviewFilterAddResponseErrorCode int32

const (
	RpcBlockDataviewFilterAddResponseError_NULL          RpcBlockDataviewFilterAddResponseErrorCode = 0
	RpcBlockDataviewFilterAddResponseError_UNKNOWN_ERROR RpcBlockDataviewFilterAddResponseErrorCode = 1
	RpcBlockDataviewFilterAddResponseError_BAD_INPUT     RpcBlockDataviewFilterAddResponseErrorCode = 2
)

// Enum value maps for RpcBlockDataviewFilterAddResponseErrorCode.
var (
	RpcBlockDataviewFilterAddResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockDataviewFilterAddResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockDataviewFilterAddResponseErrorCode) Enum() *RpcBlockDataviewFilterAddResponseErrorCode {
	p := new(RpcBlockDataviewFilterAddResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockDataviewFilterAddResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockDataviewFilterAddResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[237].Descriptor()
}

func (RpcBlockDataviewFilterAddResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[237]
}

func (x RpcBlockDataviewFilterAddResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockDataviewFilterAddResponseErrorCode.Descriptor instead.
func (RpcBlockDataviewFilterAddResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 6, 0, 1, 0, 0}
}

type RpcBlockDataviewFilterRemoveResponseErrorCode int32

const (
	RpcBlockDataviewFilterRemoveResponseError_NULL          RpcBlockDataviewFilterRemoveResponseErrorCode = 0
	RpcBlockDataviewFilterRemoveResponseError_UNKNOWN_ERROR RpcBlockDataviewFilterRemoveResponseErrorCode = 1
	RpcBlockDataviewFilterRemoveResponseError_BAD_INPUT     RpcBlockDataviewFilterRemoveResponseErrorCode = 2
)

// Enum value maps for RpcBlockDataviewFilterRemoveResponseErrorCode.
var (
	RpcBlockDataviewFilterRemoveResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockDataviewFilterRemoveResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockDataviewFilterRemoveResponseErrorCode) Enum() *RpcBlockDataviewFilterRemoveResponseErrorCode {
	p := new(RpcBlockDataviewFilterRemoveResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockDataviewFilterRemoveResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockDataviewFilterRemoveResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[238].Descriptor()
}

func (RpcBlockDataviewFilterRemoveResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[238]
}

func (x RpcBlockDataviewFilterRemoveResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockDataviewFilterRemoveResponseErrorCode.Descriptor instead.
func (RpcBlockDataviewFilterRemoveResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 6, 1, 1, 0, 0}
}

type RpcBlockDataviewFilterReplaceResponseErrorCode int32

const (
	RpcBlockDataviewFilterReplaceResponseError_NULL          RpcBlockDataviewFilterReplaceResponseErrorCode = 0
	RpcBlockDataviewFilterReplaceResponseError_UNKNOWN_ERROR RpcBlockDataviewFilterReplaceResponseErrorCode = 1
	RpcBlockDataviewFilterReplaceResponseError_BAD_INPUT     RpcBlockDataviewFilterReplaceResponseErrorCode = 2
)

// Enum value maps for RpcBlockDataviewFilterReplaceResponseErrorCode.
var (
	RpcBlockDataviewFilterReplaceResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockDataviewFilterReplaceResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockDataviewFilterReplaceResponseErrorCode) Enum() *RpcBlockDataviewFilterReplaceResponseErrorCode {
	p := new(RpcBlockDataviewFilterReplaceResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockDataviewFilterReplaceResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockDataviewFilterReplaceResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[239].Descriptor()
}

func (RpcBlockDataviewFilterReplaceResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[239]
}

func (x RpcBlockDataviewFilterReplaceResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockDataviewFilterReplaceResponseErrorCode.Descriptor instead.
func (RpcBlockDataviewFilterReplaceResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 6, 2, 1, 0, 0}
}

type RpcBlockDataviewFilterSortResponseErrorCode int32

const (
	RpcBlockDataviewFilterSortResponseError_NULL          RpcBlockDataviewFilterSortResponseErrorCode = 0
	RpcBlockDataviewFilterSortResponseError_UNKNOWN_ERROR RpcBlockDataviewFilterSortResponseErrorCode = 1
	RpcBlockDataviewFilterSortResponseError_BAD_INPUT     RpcBlockDataviewFilterSortResponseErrorCode = 2
)

// Enum value maps for RpcBlockDataviewFilterSortResponseErrorCode.
var (
	RpcBlockDataviewFilterSortResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockDataviewFilterSortResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockDataviewFilterSortResponseErrorCode) Enum() *RpcBlockDataviewFilterSortResponseErrorCode {
	p := new(RpcBlockDataviewFilterSortResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockDataviewFilterSortResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockDataviewFilterSortResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[240].Descriptor()
}

func (RpcBlockDataviewFilterSortResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[240]
}

func (x RpcBlockDataviewFilterSortResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockDataviewFilterSortResponseErrorCode.Descriptor instead.
func (RpcBlockDataviewFilterSortResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 6, 3, 1, 0, 0}
}

type RpcBlockDataviewSortAddResponseErrorCode int32

const (
	RpcBlockDataviewSortAddResponseError_NULL          RpcBlockDataviewSortAddResponseErrorCode = 0
	RpcBlockDataviewSortAddResponseError_UNKNOWN_ERROR RpcBlockDataviewSortAddResponseErrorCode = 1
	RpcBlockDataviewSortAddResponseError_BAD_INPUT     RpcBlockDataviewSortAddResponseErrorCode = 2
)

// Enum value maps for RpcBlockDataviewSortAddResponseErrorCode.
var (
	RpcBlockDataviewSortAddResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockDataviewSortAddResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockDataviewSortAddResponseErrorCode) Enum() *RpcBlockDataviewSortAddResponseErrorCode {
	p := new(RpcBlockDataviewSortAddResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockDataviewSortAddResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockDataviewSortAddResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[241].Descriptor()
}

func (RpcBlockDataviewSortAddResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[241]
}

func (x RpcBlockDataviewSortAddResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockDataviewSortAddResponseErrorCode.Descriptor instead.
func (RpcBlockDataviewSortAddResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 7, 0, 1, 0, 0}
}

type RpcBlockDataviewSortRemoveResponseErrorCode int32

const (
	RpcBlockDataviewSortRemoveResponseError_NULL          RpcBlockDataviewSortRemoveResponseErrorCode = 0
	RpcBlockDataviewSortRemoveResponseError_UNKNOWN_ERROR RpcBlockDataviewSortRemoveResponseErrorCode = 1
	RpcBlockDataviewSortRemoveResponseError_BAD_INPUT     RpcBlockDataviewSortRemoveResponseErrorCode = 2
)

// Enum value maps for RpcBlockDataviewSortRemoveResponseErrorCode.
var (
	RpcBlockDataviewSortRemoveResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockDataviewSortRemoveResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockDataviewSortRemoveResponseErrorCode) Enum() *RpcBlockDataviewSortRemoveResponseErrorCode {
	p := new(RpcBlockDataviewSortRemoveResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockDataviewSortRemoveResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockDataviewSortRemoveResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[242].Descriptor()
}

func (RpcBlockDataviewSortRemoveResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[242]
}

func (x RpcBlockDataviewSortRemoveResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockDataviewSortRemoveResponseErrorCode.Descriptor instead.
func (RpcBlockDataviewSortRemoveResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 7, 1, 1, 0, 0}
}

type RpcBlockDataviewSortReplaceResponseErrorCode int32

const (
	RpcBlockDataviewSortReplaceResponseError_NULL          RpcBlockDataviewSortReplaceResponseErrorCode = 0
	RpcBlockDataviewSortReplaceResponseError_UNKNOWN_ERROR RpcBlockDataviewSortReplaceResponseErrorCode = 1
	RpcBlockDataviewSortReplaceResponseError_BAD_INPUT     RpcBlockDataviewSortReplaceResponseErrorCode = 2
)

// Enum value maps for RpcBlockDataviewSortReplaceResponseErrorCode.
var (
	RpcBlockDataviewSortReplaceResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockDataviewSortReplaceResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockDataviewSortReplaceResponseErrorCode) Enum() *RpcBlockDataviewSortReplaceResponseErrorCode {
	p := new(RpcBlockDataviewSortReplaceResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockDataviewSortReplaceResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockDataviewSortReplaceResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[243].Descriptor()
}

func (RpcBlockDataviewSortReplaceResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[243]
}

func (x RpcBlockDataviewSortReplaceResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockDataviewSortReplaceResponseErrorCode.Descriptor instead.
func (RpcBlockDataviewSortReplaceResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 7, 2, 1, 0, 0}
}

type RpcBlockDataviewSortSSortResponseErrorCode int32

const (
	RpcBlockDataviewSortSSortResponseError_NULL          RpcBlockDataviewSortSSortResponseErrorCode = 0
	RpcBlockDataviewSortSSortResponseError_UNKNOWN_ERROR RpcBlockDataviewSortSSortResponseErrorCode = 1
	RpcBlockDataviewSortSSortResponseError_BAD_INPUT     RpcBlockDataviewSortSSortResponseErrorCode = 2
)

// Enum value maps for RpcBlockDataviewSortSSortResponseErrorCode.
var (
	RpcBlockDataviewSortSSortResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockDataviewSortSSortResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockDataviewSortSSortResponseErrorCode) Enum() *RpcBlockDataviewSortSSortResponseErrorCode {
	p := new(RpcBlockDataviewSortSSortResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockDataviewSortSSortResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockDataviewSortSSortResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[244].Descriptor()
}

func (RpcBlockDataviewSortSSortResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[244]
}

func (x RpcBlockDataviewSortSSortResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockDataviewSortSSortResponseErrorCode.Descriptor instead.
func (RpcBlockDataviewSortSSortResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 7, 3, 1, 0, 0}
}

type RpcBlockDataviewViewRelationAddResponseErrorCode int32

const (
	RpcBlockDataviewViewRelationAddResponseError_NULL          RpcBlockDataviewViewRelationAddResponseErrorCode = 0
	RpcBlockDataviewViewRelationAddResponseError_UNKNOWN_ERROR RpcBlockDataviewViewRelationAddResponseErrorCode = 1
	RpcBlockDataviewViewRelationAddResponseError_BAD_INPUT     RpcBlockDataviewViewRelationAddResponseErrorCode = 2
)

// Enum value maps for RpcBlockDataviewViewRelationAddResponseErrorCode.
var (
	RpcBlockDataviewViewRelationAddResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockDataviewViewRelationAddResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockDataviewViewRelationAddResponseErrorCode) Enum() *RpcBlockDataviewViewRelationAddResponseErrorCode {
	p := new(RpcBlockDataviewViewRelationAddResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockDataviewViewRelationAddResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockDataviewViewRelationAddResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[245].Descriptor()
}

func (RpcBlockDataviewViewRelationAddResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[245]
}

func (x RpcBlockDataviewViewRelationAddResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockDataviewViewRelationAddResponseErrorCode.Descriptor instead.
func (RpcBlockDataviewViewRelationAddResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 8, 0, 1, 0, 0}
}

type RpcBlockDataviewViewRelationRemoveResponseErrorCode int32

const (
	RpcBlockDataviewViewRelationRemoveResponseError_NULL          RpcBlockDataviewViewRelationRemoveResponseErrorCode = 0
	RpcBlockDataviewViewRelationRemoveResponseError_UNKNOWN_ERROR RpcBlockDataviewViewRelationRemoveResponseErrorCode = 1
	RpcBlockDataviewViewRelationRemoveResponseError_BAD_INPUT     RpcBlockDataviewViewRelationRemoveResponseErrorCode = 2
)

// Enum value maps for RpcBlockDataviewViewRelationRemoveResponseErrorCode.
var (
	RpcBlockDataviewViewRelationRemoveResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockDataviewViewRelationRemoveResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockDataviewViewRelationRemoveResponseErrorCode) Enum() *RpcBlockDataviewViewRelationRemoveResponseErrorCode {
	p := new(RpcBlockDataviewViewRelationRemoveResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockDataviewViewRelationRemoveResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockDataviewViewRelationRemoveResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[246].Descriptor()
}

func (RpcBlockDataviewViewRelationRemoveResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[246]
}

func (x RpcBlockDataviewViewRelationRemoveResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockDataviewViewRelationRemoveResponseErrorCode.Descriptor instead.
func (RpcBlockDataviewViewRelationRemoveResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 8, 1, 1, 0, 0}
}

type RpcBlockDataviewViewRelationReplaceResponseErrorCode int32

const (
	RpcBlockDataviewViewRelationReplaceResponseError_NULL          RpcBlockDataviewViewRelationReplaceResponseErrorCode = 0
	RpcBlockDataviewViewRelationReplaceResponseError_UNKNOWN_ERROR RpcBlockDataviewViewRelationReplaceResponseErrorCode = 1
	RpcBlockDataviewViewRelationReplaceResponseError_BAD_INPUT     RpcBlockDataviewViewRelationReplaceResponseErrorCode = 2
)

// Enum value maps for RpcBlockDataviewViewRelationReplaceResponseErrorCode.
var (
	RpcBlockDataviewViewRelationReplaceResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockDataviewViewRelationReplaceResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockDataviewViewRelationReplaceResponseErrorCode) Enum() *RpcBlockDataviewViewRelationReplaceResponseErrorCode {
	p := new(RpcBlockDataviewViewRelationReplaceResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockDataviewViewRelationReplaceResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockDataviewViewRelationReplaceResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[247].Descriptor()
}

func (RpcBlockDataviewViewRelationReplaceResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[247]
}

func (x RpcBlockDataviewViewRelationReplaceResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockDataviewViewRelationReplaceResponseErrorCode.Descriptor instead.
func (RpcBlockDataviewViewRelationReplaceResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 8, 2, 1, 0, 0}
}

type RpcBlockDataviewViewRelationSortResponseErrorCode int32

const (
	RpcBlockDataviewViewRelationSortResponseError_NULL          RpcBlockDataviewViewRelationSortResponseErrorCode = 0
	RpcBlockDataviewViewRelationSortResponseError_UNKNOWN_ERROR RpcBlockDataviewViewRelationSortResponseErrorCode = 1
	RpcBlockDataviewViewRelationSortResponseError_BAD_INPUT     RpcBlockDataviewViewRelationSortResponseErrorCode = 2
)

// Enum value maps for RpcBlockDataviewViewRelationSortResponseErrorCode.
var (
	RpcBlockDataviewViewRelationSortResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockDataviewViewRelationSortResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockDataviewViewRelationSortResponseErrorCode) Enum() *RpcBlockDataviewViewRelationSortResponseErrorCode {
	p := new(RpcBlockDataviewViewRelationSortResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockDataviewViewRelationSortResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockDataviewViewRelationSortResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[248].Descriptor()
}

func (RpcBlockDataviewViewRelationSortResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[248]
}

func (x RpcBlockDataviewViewRelationSortResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockDataviewViewRelationSortResponseErrorCode.Descriptor instead.
func (RpcBlockDataviewViewRelationSortResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 8, 3, 1, 0, 0}
}

type RpcBlockWidgetSetTargetIdResponseErrorCode int32

const (
	RpcBlockWidgetSetTargetIdResponseError_NULL          RpcBlockWidgetSetTargetIdResponseErrorCode = 0
	RpcBlockWidgetSetTargetIdResponseError_UNKNOWN_ERROR RpcBlockWidgetSetTargetIdResponseErrorCode = 1
	RpcBlockWidgetSetTargetIdResponseError_BAD_INPUT     RpcBlockWidgetSetTargetIdResponseErrorCode = 2
)

// Enum value maps for RpcBlockWidgetSetTargetIdResponseErrorCode.
var (
	RpcBlockWidgetSetTargetIdResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockWidgetSetTargetIdResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockWidgetSetTargetIdResponseErrorCode) Enum() *RpcBlockWidgetSetTargetIdResponseErrorCode {
	p := new(RpcBlockWidgetSetTargetIdResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockWidgetSetTargetIdResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockWidgetSetTargetIdResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[249].Descriptor()
}

func (RpcBlockWidgetSetTargetIdResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[249]
}

func (x RpcBlockWidgetSetTargetIdResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockWidgetSetTargetIdResponseErrorCode.Descriptor instead.
func (RpcBlockWidgetSetTargetIdResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 30, 0, 1, 0, 0}
}

type RpcBlockWidgetSetLayoutResponseErrorCode int32

const (
	RpcBlockWidgetSetLayoutResponseError_NULL          RpcBlockWidgetSetLayoutResponseErrorCode = 0
	RpcBlockWidgetSetLayoutResponseError_UNKNOWN_ERROR RpcBlockWidgetSetLayoutResponseErrorCode = 1
	RpcBlockWidgetSetLayoutResponseError_BAD_INPUT     RpcBlockWidgetSetLayoutResponseErrorCode = 2
)

// Enum value maps for RpcBlockWidgetSetLayoutResponseErrorCode.
var (
	RpcBlockWidgetSetLayoutResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockWidgetSetLayoutResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockWidgetSetLayoutResponseErrorCode) Enum() *RpcBlockWidgetSetLayoutResponseErrorCode {
	p := new(RpcBlockWidgetSetLayoutResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockWidgetSetLayoutResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockWidgetSetLayoutResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[250].Descriptor()
}

func (RpcBlockWidgetSetLayoutResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[250]
}

func (x RpcBlockWidgetSetLayoutResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockWidgetSetLayoutResponseErrorCode.Descriptor instead.
func (RpcBlockWidgetSetLayoutResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 30, 1, 1, 0, 0}
}

type RpcBlockWidgetSetLimitResponseErrorCode int32

const (
	RpcBlockWidgetSetLimitResponseError_NULL          RpcBlockWidgetSetLimitResponseErrorCode = 0
	RpcBlockWidgetSetLimitResponseError_UNKNOWN_ERROR RpcBlockWidgetSetLimitResponseErrorCode = 1
	RpcBlockWidgetSetLimitResponseError_BAD_INPUT     RpcBlockWidgetSetLimitResponseErrorCode = 2
)

// Enum value maps for RpcBlockWidgetSetLimitResponseErrorCode.
var (
	RpcBlockWidgetSetLimitResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockWidgetSetLimitResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockWidgetSetLimitResponseErrorCode) Enum() *RpcBlockWidgetSetLimitResponseErrorCode {
	p := new(RpcBlockWidgetSetLimitResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockWidgetSetLimitResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockWidgetSetLimitResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[251].Descriptor()
}

func (RpcBlockWidgetSetLimitResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[251]
}

func (x RpcBlockWidgetSetLimitResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockWidgetSetLimitResponseErrorCode.Descriptor instead.
func (RpcBlockWidgetSetLimitResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 30, 2, 1, 0, 0}
}

type RpcBlockWidgetSetViewIdResponseErrorCode int32

const (
	RpcBlockWidgetSetViewIdResponseError_NULL          RpcBlockWidgetSetViewIdResponseErrorCode = 0
	RpcBlockWidgetSetViewIdResponseError_UNKNOWN_ERROR RpcBlockWidgetSetViewIdResponseErrorCode = 1
	RpcBlockWidgetSetViewIdResponseError_BAD_INPUT     RpcBlockWidgetSetViewIdResponseErrorCode = 2
)

// Enum value maps for RpcBlockWidgetSetViewIdResponseErrorCode.
var (
	RpcBlockWidgetSetViewIdResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcBlockWidgetSetViewIdResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcBlockWidgetSetViewIdResponseErrorCode) Enum() *RpcBlockWidgetSetViewIdResponseErrorCode {
	p := new(RpcBlockWidgetSetViewIdResponseErrorCode)
	*p = x
	return p
}

func (x RpcBlockWidgetSetViewIdResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBlockWidgetSetViewIdResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[252].Descriptor()
}

func (RpcBlockWidgetSetViewIdResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[252]
}

func (x RpcBlockWidgetSetViewIdResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBlockWidgetSetViewIdResponseErrorCode.Descriptor instead.
func (RpcBlockWidgetSetViewIdResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 30, 3, 1, 0, 0}
}

type RpcDebugStatResponseErrorCode int32

const (
	RpcDebugStatResponseError_NULL          RpcDebugStatResponseErrorCode = 0
	RpcDebugStatResponseError_UNKNOWN_ERROR RpcDebugStatResponseErrorCode = 1
	RpcDebugStatResponseError_BAD_INPUT     RpcDebugStatResponseErrorCode = 2 // ...
)

// Enum value maps for RpcDebugStatResponseErrorCode.
var (
	RpcDebugStatResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcDebugStatResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcDebugStatResponseErrorCode) Enum() *RpcDebugStatResponseErrorCode {
	p := new(RpcDebugStatResponseErrorCode)
	*p = x
	return p
}

func (x RpcDebugStatResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcDebugStatResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[253].Descriptor()
}

func (RpcDebugStatResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[253]
}

func (x RpcDebugStatResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcDebugStatResponseErrorCode.Descriptor instead.
func (RpcDebugStatResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 31, 1, 1, 0, 0}
}

type RpcDebugTreeHeadsResponseErrorCode int32

const (
	RpcDebugTreeHeadsResponseError_NULL          RpcDebugTreeHeadsResponseErrorCode = 0
	RpcDebugTreeHeadsResponseError_UNKNOWN_ERROR RpcDebugTreeHeadsResponseErrorCode = 1
	RpcDebugTreeHeadsResponseError_BAD_INPUT     RpcDebugTreeHeadsResponseErrorCode = 2 // ...
)

// Enum value maps for RpcDebugTreeHeadsResponseErrorCode.
var (
	RpcDebugTreeHeadsResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcDebugTreeHeadsResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcDebugTreeHeadsResponseErrorCode) Enum() *RpcDebugTreeHeadsResponseErrorCode {
	p := new(RpcDebugTreeHeadsResponseErrorCode)
	*p = x
	return p
}

func (x RpcDebugTreeHeadsResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcDebugTreeHeadsResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[254].Descriptor()
}

func (RpcDebugTreeHeadsResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[254]
}

func (x RpcDebugTreeHeadsResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcDebugTreeHeadsResponseErrorCode.Descriptor instead.
func (RpcDebugTreeHeadsResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 31, 2, 1, 0, 0}
}

type RpcDebugTreeResponseErrorCode int32

const (
	RpcDebugTreeResponseError_NULL          RpcDebugTreeResponseErrorCode = 0
	RpcDebugTreeResponseError_UNKNOWN_ERROR RpcDebugTreeResponseErrorCode = 1
	RpcDebugTreeResponseError_BAD_INPUT     RpcDebugTreeResponseErrorCode = 2 // ...
)

// Enum value maps for RpcDebugTreeResponseErrorCode.
var (
	RpcDebugTreeResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcDebugTreeResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcDebugTreeResponseErrorCode) Enum() *RpcDebugTreeResponseErrorCode {
	p := new(RpcDebugTreeResponseErrorCode)
	*p = x
	return p
}

func (x RpcDebugTreeResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcDebugTreeResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[255].Descriptor()
}

func (RpcDebugTreeResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[255]
}

func (x RpcDebugTreeResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcDebugTreeResponseErrorCode.Descriptor instead.
func (RpcDebugTreeResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 31, 3, 1, 0, 0}
}

type RpcDebugSpaceSummaryResponseErrorCode int32

const (
	RpcDebugSpaceSummaryResponseError_NULL          RpcDebugSpaceSummaryResponseErrorCode = 0
	RpcDebugSpaceSummaryResponseError_UNKNOWN_ERROR RpcDebugSpaceSummaryResponseErrorCode = 1
	RpcDebugSpaceSummaryResponseError_BAD_INPUT     RpcDebugSpaceSummaryResponseErrorCode = 2 // ...
)

// Enum value maps for RpcDebugSpaceSummaryResponseErrorCode.
var (
	RpcDebugSpaceSummaryResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcDebugSpaceSummaryResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcDebugSpaceSummaryResponseErrorCode) Enum() *RpcDebugSpaceSummaryResponseErrorCode {
	p := new(RpcDebugSpaceSummaryResponseErrorCode)
	*p = x
	return p
}

func (x RpcDebugSpaceSummaryResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcDebugSpaceSummaryResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[256].Descriptor()
}

func (RpcDebugSpaceSummaryResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[256]
}

func (x RpcDebugSpaceSummaryResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcDebugSpaceSummaryResponseErrorCode.Descriptor instead.
func (RpcDebugSpaceSummaryResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 31, 4, 1, 0, 0}
}

type RpcDebugStackGoroutinesResponseErrorCode int32

const (
	RpcDebugStackGoroutinesResponseError_NULL          RpcDebugStackGoroutinesResponseErrorCode = 0
	RpcDebugStackGoroutinesResponseError_UNKNOWN_ERROR RpcDebugStackGoroutinesResponseErrorCode = 1
	RpcDebugStackGoroutinesResponseError_BAD_INPUT     RpcDebugStackGoroutinesResponseErrorCode = 2 // ...
)

// Enum value maps for RpcDebugStackGoroutinesResponseErrorCode.
var (
	RpcDebugStackGoroutinesResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcDebugStackGoroutinesResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcDebugStackGoroutinesResponseErrorCode) Enum() *RpcDebugStackGoroutinesResponseErrorCode {
	p := new(RpcDebugStackGoroutinesResponseErrorCode)
	*p = x
	return p
}

func (x RpcDebugStackGoroutinesResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcDebugStackGoroutinesResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[257].Descriptor()
}

func (RpcDebugStackGoroutinesResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[257]
}

func (x RpcDebugStackGoroutinesResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcDebugStackGoroutinesResponseErrorCode.Descriptor instead.
func (RpcDebugStackGoroutinesResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 31, 5, 1, 0, 0}
}

type RpcDebugExportLocalstoreResponseErrorCode int32

const (
	RpcDebugExportLocalstoreResponseError_NULL          RpcDebugExportLocalstoreResponseErrorCode = 0
	RpcDebugExportLocalstoreResponseError_UNKNOWN_ERROR RpcDebugExportLocalstoreResponseErrorCode = 1
	RpcDebugExportLocalstoreResponseError_BAD_INPUT     RpcDebugExportLocalstoreResponseErrorCode = 2 // ...
)

// Enum value maps for RpcDebugExportLocalstoreResponseErrorCode.
var (
	RpcDebugExportLocalstoreResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcDebugExportLocalstoreResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcDebugExportLocalstoreResponseErrorCode) Enum() *RpcDebugExportLocalstoreResponseErrorCode {
	p := new(RpcDebugExportLocalstoreResponseErrorCode)
	*p = x
	return p
}

func (x RpcDebugExportLocalstoreResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcDebugExportLocalstoreResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[258].Descriptor()
}

func (RpcDebugExportLocalstoreResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[258]
}

func (x RpcDebugExportLocalstoreResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcDebugExportLocalstoreResponseErrorCode.Descriptor instead.
func (RpcDebugExportLocalstoreResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 31, 6, 1, 0, 0}
}

type RpcDebugSubscriptionsResponseErrorCode int32

const (
	RpcDebugSubscriptionsResponseError_NULL          RpcDebugSubscriptionsResponseErrorCode = 0
	RpcDebugSubscriptionsResponseError_UNKNOWN_ERROR RpcDebugSubscriptionsResponseErrorCode = 1
	RpcDebugSubscriptionsResponseError_BAD_INPUT     RpcDebugSubscriptionsResponseErrorCode = 2
)

// Enum value maps for RpcDebugSubscriptionsResponseErrorCode.
var (
	RpcDebugSubscriptionsResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcDebugSubscriptionsResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcDebugSubscriptionsResponseErrorCode) Enum() *RpcDebugSubscriptionsResponseErrorCode {
	p := new(RpcDebugSubscriptionsResponseErrorCode)
	*p = x
	return p
}

func (x RpcDebugSubscriptionsResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcDebugSubscriptionsResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[259].Descriptor()
}

func (RpcDebugSubscriptionsResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[259]
}

func (x RpcDebugSubscriptionsResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcDebugSubscriptionsResponseErrorCode.Descriptor instead.
func (RpcDebugSubscriptionsResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 31, 7, 1, 0, 0}
}

type RpcDebugOpenedObjectsResponseErrorCode int32

const (
	RpcDebugOpenedObjectsResponseError_NULL          RpcDebugOpenedObjectsResponseErrorCode = 0
	RpcDebugOpenedObjectsResponseError_UNKNOWN_ERROR RpcDebugOpenedObjectsResponseErrorCode = 1
	RpcDebugOpenedObjectsResponseError_BAD_INPUT     RpcDebugOpenedObjectsResponseErrorCode = 2
)

// Enum value maps for RpcDebugOpenedObjectsResponseErrorCode.
var (
	RpcDebugOpenedObjectsResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcDebugOpenedObjectsResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcDebugOpenedObjectsResponseErrorCode) Enum() *RpcDebugOpenedObjectsResponseErrorCode {
	p := new(RpcDebugOpenedObjectsResponseErrorCode)
	*p = x
	return p
}

func (x RpcDebugOpenedObjectsResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcDebugOpenedObjectsResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[260].Descriptor()
}

func (RpcDebugOpenedObjectsResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[260]
}

func (x RpcDebugOpenedObjectsResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcDebugOpenedObjectsResponseErrorCode.Descriptor instead.
func (RpcDebugOpenedObjectsResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 31, 8, 1, 0, 0}
}

type RpcDebugRunProfilerResponseErrorCode int32

const (
	RpcDebugRunProfilerResponseError_NULL          RpcDebugRunProfilerResponseErrorCode = 0
	RpcDebugRunProfilerResponseError_UNKNOWN_ERROR RpcDebugRunProfilerResponseErrorCode = 1
	RpcDebugRunProfilerResponseError_BAD_INPUT     RpcDebugRunProfilerResponseErrorCode = 2
)

// Enum value maps for RpcDebugRunProfilerResponseErrorCode.
var (
	RpcDebugRunProfilerResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcDebugRunProfilerResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcDebugRunProfilerResponseErrorCode) Enum() *RpcDebugRunProfilerResponseErrorCode {
	p := new(RpcDebugRunProfilerResponseErrorCode)
	*p = x
	return p
}

func (x RpcDebugRunProfilerResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcDebugRunProfilerResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[261].Descriptor()
}

func (RpcDebugRunProfilerResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[261]
}

func (x RpcDebugRunProfilerResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcDebugRunProfilerResponseErrorCode.Descriptor instead.
func (RpcDebugRunProfilerResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 31, 9, 1, 0, 0}
}

type RpcDebugAccountSelectTraceResponseErrorCode int32

const (
	RpcDebugAccountSelectTraceResponseError_NULL          RpcDebugAccountSelectTraceResponseErrorCode = 0
	RpcDebugAccountSelectTraceResponseError_UNKNOWN_ERROR RpcDebugAccountSelectTraceResponseErrorCode = 1
	RpcDebugAccountSelectTraceResponseError_BAD_INPUT     RpcDebugAccountSelectTraceResponseErrorCode = 2
)

// Enum value maps for RpcDebugAccountSelectTraceResponseErrorCode.
var (
	RpcDebugAccountSelectTraceResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcDebugAccountSelectTraceResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcDebugAccountSelectTraceResponseErrorCode) Enum() *RpcDebugAccountSelectTraceResponseErrorCode {
	p := new(RpcDebugAccountSelectTraceResponseErrorCode)
	*p = x
	return p
}

func (x RpcDebugAccountSelectTraceResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcDebugAccountSelectTraceResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[262].Descriptor()
}

func (RpcDebugAccountSelectTraceResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[262]
}

func (x RpcDebugAccountSelectTraceResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcDebugAccountSelectTraceResponseErrorCode.Descriptor instead.
func (RpcDebugAccountSelectTraceResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 31, 10, 1, 0, 0}
}

type RpcDebugExportLogResponseErrorCode int32

const (
	RpcDebugExportLogResponseError_NULL          RpcDebugExportLogResponseErrorCode = 0
	RpcDebugExportLogResponseError_UNKNOWN_ERROR RpcDebugExportLogResponseErrorCode = 1
	RpcDebugExportLogResponseError_BAD_INPUT     RpcDebugExportLogResponseErrorCode = 2
	RpcDebugExportLogResponseError_NO_FOLDER     RpcDebugExportLogResponseErrorCode = 3
)

// Enum value maps for RpcDebugExportLogResponseErrorCode.
var (
	RpcDebugExportLogResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
		3: "NO_FOLDER",
	}
	RpcDebugExportLogResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
		"NO_FOLDER":     3,
	}
)

func (x RpcDebugExportLogResponseErrorCode) Enum() *RpcDebugExportLogResponseErrorCode {
	p := new(RpcDebugExportLogResponseErrorCode)
	*p = x
	return p
}

func (x RpcDebugExportLogResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcDebugExportLogResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[263].Descriptor()
}

func (RpcDebugExportLogResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[263]
}

func (x RpcDebugExportLogResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcDebugExportLogResponseErrorCode.Descriptor instead.
func (RpcDebugExportLogResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 31, 11, 1, 0, 0}
}

type RpcDebugPingResponseErrorCode int32

const (
	RpcDebugPingResponseError_NULL          RpcDebugPingResponseErrorCode = 0
	RpcDebugPingResponseError_UNKNOWN_ERROR RpcDebugPingResponseErrorCode = 1
	RpcDebugPingResponseError_BAD_INPUT     RpcDebugPingResponseErrorCode = 2
)

// Enum value maps for RpcDebugPingResponseErrorCode.
var (
	RpcDebugPingResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcDebugPingResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcDebugPingResponseErrorCode) Enum() *RpcDebugPingResponseErrorCode {
	p := new(RpcDebugPingResponseErrorCode)
	*p = x
	return p
}

func (x RpcDebugPingResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcDebugPingResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[264].Descriptor()
}

func (RpcDebugPingResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[264]
}

func (x RpcDebugPingResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcDebugPingResponseErrorCode.Descriptor instead.
func (RpcDebugPingResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 31, 12, 1, 0, 0}
}

type RpcDebugAnystoreObjectChangesRequestOrderBy int32

const (
	RpcDebugAnystoreObjectChangesRequest_ORDER_ID        RpcDebugAnystoreObjectChangesRequestOrderBy = 0
	RpcDebugAnystoreObjectChangesRequest_ITERATION_ORDER RpcDebugAnystoreObjectChangesRequestOrderBy = 1
)

// Enum value maps for RpcDebugAnystoreObjectChangesRequestOrderBy.
var (
	RpcDebugAnystoreObjectChangesRequestOrderBy_name = map[int32]string{
		0: "ORDER_ID",
		1: "ITERATION_ORDER",
	}
	RpcDebugAnystoreObjectChangesRequestOrderBy_value = map[string]int32{
		"ORDER_ID":        0,
		"ITERATION_ORDER": 1,
	}
)

func (x RpcDebugAnystoreObjectChangesRequestOrderBy) Enum() *RpcDebugAnystoreObjectChangesRequestOrderBy {
	p := new(RpcDebugAnystoreObjectChangesRequestOrderBy)
	*p = x
	return p
}

func (x RpcDebugAnystoreObjectChangesRequestOrderBy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcDebugAnystoreObjectChangesRequestOrderBy) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[265].Descriptor()
}

func (RpcDebugAnystoreObjectChangesRequestOrderBy) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[265]
}

func (x RpcDebugAnystoreObjectChangesRequestOrderBy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcDebugAnystoreObjectChangesRequestOrderBy.Descriptor instead.
func (RpcDebugAnystoreObjectChangesRequestOrderBy) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 31, 13, 0, 0}
}

type RpcDebugAnystoreObjectChangesResponseErrorCode int32

const (
	RpcDebugAnystoreObjectChangesResponseError_NULL          RpcDebugAnystoreObjectChangesResponseErrorCode = 0
	RpcDebugAnystoreObjectChangesResponseError_UNKNOWN_ERROR RpcDebugAnystoreObjectChangesResponseErrorCode = 1
	RpcDebugAnystoreObjectChangesResponseError_BAD_INPUT     RpcDebugAnystoreObjectChangesResponseErrorCode = 2
)

// Enum value maps for RpcDebugAnystoreObjectChangesResponseErrorCode.
var (
	RpcDebugAnystoreObjectChangesResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcDebugAnystoreObjectChangesResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcDebugAnystoreObjectChangesResponseErrorCode) Enum() *RpcDebugAnystoreObjectChangesResponseErrorCode {
	p := new(RpcDebugAnystoreObjectChangesResponseErrorCode)
	*p = x
	return p
}

func (x RpcDebugAnystoreObjectChangesResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcDebugAnystoreObjectChangesResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[266].Descriptor()
}

func (RpcDebugAnystoreObjectChangesResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[266]
}

func (x RpcDebugAnystoreObjectChangesResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcDebugAnystoreObjectChangesResponseErrorCode.Descriptor instead.
func (RpcDebugAnystoreObjectChangesResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 31, 13, 1, 1, 0}
}

type RpcDebugNetCheckResponseErrorCode int32

const (
	RpcDebugNetCheckResponseError_NULL          RpcDebugNetCheckResponseErrorCode = 0
	RpcDebugNetCheckResponseError_UNKNOWN_ERROR RpcDebugNetCheckResponseErrorCode = 1
	RpcDebugNetCheckResponseError_BAD_INPUT     RpcDebugNetCheckResponseErrorCode = 2
)

// Enum value maps for RpcDebugNetCheckResponseErrorCode.
var (
	RpcDebugNetCheckResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcDebugNetCheckResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcDebugNetCheckResponseErrorCode) Enum() *RpcDebugNetCheckResponseErrorCode {
	p := new(RpcDebugNetCheckResponseErrorCode)
	*p = x
	return p
}

func (x RpcDebugNetCheckResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcDebugNetCheckResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[267].Descriptor()
}

func (RpcDebugNetCheckResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[267]
}

func (x RpcDebugNetCheckResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcDebugNetCheckResponseErrorCode.Descriptor instead.
func (RpcDebugNetCheckResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 31, 14, 1, 0, 0}
}

type RpcInitialSetParametersResponseErrorCode int32

const (
	RpcInitialSetParametersResponseError_NULL          RpcInitialSetParametersResponseErrorCode = 0
	RpcInitialSetParametersResponseError_UNKNOWN_ERROR RpcInitialSetParametersResponseErrorCode = 1
	RpcInitialSetParametersResponseError_BAD_INPUT     RpcInitialSetParametersResponseErrorCode = 2 // ...
)

// Enum value maps for RpcInitialSetParametersResponseErrorCode.
var (
	RpcInitialSetParametersResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcInitialSetParametersResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcInitialSetParametersResponseErrorCode) Enum() *RpcInitialSetParametersResponseErrorCode {
	p := new(RpcInitialSetParametersResponseErrorCode)
	*p = x
	return p
}

func (x RpcInitialSetParametersResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcInitialSetParametersResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[268].Descriptor()
}

func (RpcInitialSetParametersResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[268]
}

func (x RpcInitialSetParametersResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcInitialSetParametersResponseErrorCode.Descriptor instead.
func (RpcInitialSetParametersResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 32, 0, 1, 0, 0}
}

type RpcLogSendRequestLevel int32

const (
	RpcLogSendRequest_DEBUG   RpcLogSendRequestLevel = 0
	RpcLogSendRequest_ERROR   RpcLogSendRequestLevel = 1
	RpcLogSendRequest_FATAL   RpcLogSendRequestLevel = 2
	RpcLogSendRequest_INFO    RpcLogSendRequestLevel = 3
	RpcLogSendRequest_PANIC   RpcLogSendRequestLevel = 4
	RpcLogSendRequest_WARNING RpcLogSendRequestLevel = 5
)

// Enum value maps for RpcLogSendRequestLevel.
var (
	RpcLogSendRequestLevel_name = map[int32]string{
		0: "DEBUG",
		1: "ERROR",
		2: "FATAL",
		3: "INFO",
		4: "PANIC",
		5: "WARNING",
	}
	RpcLogSendRequestLevel_value = map[string]int32{
		"DEBUG":   0,
		"ERROR":   1,
		"FATAL":   2,
		"INFO":    3,
		"PANIC":   4,
		"WARNING": 5,
	}
)

func (x RpcLogSendRequestLevel) Enum() *RpcLogSendRequestLevel {
	p := new(RpcLogSendRequestLevel)
	*p = x
	return p
}

func (x RpcLogSendRequestLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcLogSendRequestLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[269].Descriptor()
}

func (RpcLogSendRequestLevel) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[269]
}

func (x RpcLogSendRequestLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcLogSendRequestLevel.Descriptor instead.
func (RpcLogSendRequestLevel) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 33, 0, 0, 0}
}

type RpcLogSendResponseErrorCode int32

const (
	RpcLogSendResponseError_NULL          RpcLogSendResponseErrorCode = 0
	RpcLogSendResponseError_UNKNOWN_ERROR RpcLogSendResponseErrorCode = 1
	RpcLogSendResponseError_BAD_INPUT     RpcLogSendResponseErrorCode = 2
)

// Enum value maps for RpcLogSendResponseErrorCode.
var (
	RpcLogSendResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcLogSendResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcLogSendResponseErrorCode) Enum() *RpcLogSendResponseErrorCode {
	p := new(RpcLogSendResponseErrorCode)
	*p = x
	return p
}

func (x RpcLogSendResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcLogSendResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[270].Descriptor()
}

func (RpcLogSendResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[270]
}

func (x RpcLogSendResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcLogSendResponseErrorCode.Descriptor instead.
func (RpcLogSendResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 33, 0, 1, 0, 0}
}

type RpcProcessCancelResponseErrorCode int32

const (
	RpcProcessCancelResponseError_NULL          RpcProcessCancelResponseErrorCode = 0
	RpcProcessCancelResponseError_UNKNOWN_ERROR RpcProcessCancelResponseErrorCode = 1
	RpcProcessCancelResponseError_BAD_INPUT     RpcProcessCancelResponseErrorCode = 2
)

// Enum value maps for RpcProcessCancelResponseErrorCode.
var (
	RpcProcessCancelResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcProcessCancelResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcProcessCancelResponseErrorCode) Enum() *RpcProcessCancelResponseErrorCode {
	p := new(RpcProcessCancelResponseErrorCode)
	*p = x
	return p
}

func (x RpcProcessCancelResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcProcessCancelResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[271].Descriptor()
}

func (RpcProcessCancelResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[271]
}

func (x RpcProcessCancelResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcProcessCancelResponseErrorCode.Descriptor instead.
func (RpcProcessCancelResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 34, 0, 1, 0, 0}
}

type RpcProcessSubscribeResponseErrorCode int32

const (
	RpcProcessSubscribeResponseError_NULL          RpcProcessSubscribeResponseErrorCode = 0
	RpcProcessSubscribeResponseError_UNKNOWN_ERROR RpcProcessSubscribeResponseErrorCode = 1
	RpcProcessSubscribeResponseError_BAD_INPUT     RpcProcessSubscribeResponseErrorCode = 2
)

// Enum value maps for RpcProcessSubscribeResponseErrorCode.
var (
	RpcProcessSubscribeResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcProcessSubscribeResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcProcessSubscribeResponseErrorCode) Enum() *RpcProcessSubscribeResponseErrorCode {
	p := new(RpcProcessSubscribeResponseErrorCode)
	*p = x
	return p
}

func (x RpcProcessSubscribeResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcProcessSubscribeResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[272].Descriptor()
}

func (RpcProcessSubscribeResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[272]
}

func (x RpcProcessSubscribeResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcProcessSubscribeResponseErrorCode.Descriptor instead.
func (RpcProcessSubscribeResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 34, 1, 1, 0, 0}
}

type RpcProcessUnsubscribeResponseErrorCode int32

const (
	RpcProcessUnsubscribeResponseError_NULL          RpcProcessUnsubscribeResponseErrorCode = 0
	RpcProcessUnsubscribeResponseError_UNKNOWN_ERROR RpcProcessUnsubscribeResponseErrorCode = 1
	RpcProcessUnsubscribeResponseError_BAD_INPUT     RpcProcessUnsubscribeResponseErrorCode = 2
)

// Enum value maps for RpcProcessUnsubscribeResponseErrorCode.
var (
	RpcProcessUnsubscribeResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcProcessUnsubscribeResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcProcessUnsubscribeResponseErrorCode) Enum() *RpcProcessUnsubscribeResponseErrorCode {
	p := new(RpcProcessUnsubscribeResponseErrorCode)
	*p = x
	return p
}

func (x RpcProcessUnsubscribeResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcProcessUnsubscribeResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[273].Descriptor()
}

func (RpcProcessUnsubscribeResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[273]
}

func (x RpcProcessUnsubscribeResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcProcessUnsubscribeResponseErrorCode.Descriptor instead.
func (RpcProcessUnsubscribeResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 34, 2, 1, 0, 0}
}

type RpcGenericErrorResponseErrorCode int32

const (
	RpcGenericErrorResponseError_NULL          RpcGenericErrorResponseErrorCode = 0
	RpcGenericErrorResponseError_UNKNOWN_ERROR RpcGenericErrorResponseErrorCode = 1
	RpcGenericErrorResponseError_BAD_INPUT     RpcGenericErrorResponseErrorCode = 2 // ...
)

// Enum value maps for RpcGenericErrorResponseErrorCode.
var (
	RpcGenericErrorResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcGenericErrorResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcGenericErrorResponseErrorCode) Enum() *RpcGenericErrorResponseErrorCode {
	p := new(RpcGenericErrorResponseErrorCode)
	*p = x
	return p
}

func (x RpcGenericErrorResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcGenericErrorResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[274].Descriptor()
}

func (RpcGenericErrorResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[274]
}

func (x RpcGenericErrorResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcGenericErrorResponseErrorCode.Descriptor instead.
func (RpcGenericErrorResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 35, 0, 0}
}

type RpcNotificationListResponseErrorCode int32

const (
	RpcNotificationListResponseError_NULL           RpcNotificationListResponseErrorCode = 0
	RpcNotificationListResponseError_UNKNOWN_ERROR  RpcNotificationListResponseErrorCode = 1
	RpcNotificationListResponseError_BAD_INPUT      RpcNotificationListResponseErrorCode = 2
	RpcNotificationListResponseError_INTERNAL_ERROR RpcNotificationListResponseErrorCode = 3
)

// Enum value maps for RpcNotificationListResponseErrorCode.
var (
	RpcNotificationListResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
		3: "INTERNAL_ERROR",
	}
	RpcNotificationListResponseErrorCode_value = map[string]int32{
		"NULL":           0,
		"UNKNOWN_ERROR":  1,
		"BAD_INPUT":      2,
		"INTERNAL_ERROR": 3,
	}
)

func (x RpcNotificationListResponseErrorCode) Enum() *RpcNotificationListResponseErrorCode {
	p := new(RpcNotificationListResponseErrorCode)
	*p = x
	return p
}

func (x RpcNotificationListResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcNotificationListResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[275].Descriptor()
}

func (RpcNotificationListResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[275]
}

func (x RpcNotificationListResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcNotificationListResponseErrorCode.Descriptor instead.
func (RpcNotificationListResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 36, 0, 1, 0, 0}
}

type RpcNotificationReplyResponseErrorCode int32

const (
	RpcNotificationReplyResponseError_NULL           RpcNotificationReplyResponseErrorCode = 0
	RpcNotificationReplyResponseError_UNKNOWN_ERROR  RpcNotificationReplyResponseErrorCode = 1
	RpcNotificationReplyResponseError_BAD_INPUT      RpcNotificationReplyResponseErrorCode = 2
	RpcNotificationReplyResponseError_INTERNAL_ERROR RpcNotificationReplyResponseErrorCode = 3
)

// Enum value maps for RpcNotificationReplyResponseErrorCode.
var (
	RpcNotificationReplyResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
		3: "INTERNAL_ERROR",
	}
	RpcNotificationReplyResponseErrorCode_value = map[string]int32{
		"NULL":           0,
		"UNKNOWN_ERROR":  1,
		"BAD_INPUT":      2,
		"INTERNAL_ERROR": 3,
	}
)

func (x RpcNotificationReplyResponseErrorCode) Enum() *RpcNotificationReplyResponseErrorCode {
	p := new(RpcNotificationReplyResponseErrorCode)
	*p = x
	return p
}

func (x RpcNotificationReplyResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcNotificationReplyResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[276].Descriptor()
}

func (RpcNotificationReplyResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[276]
}

func (x RpcNotificationReplyResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcNotificationReplyResponseErrorCode.Descriptor instead.
func (RpcNotificationReplyResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 36, 1, 1, 0, 0}
}

type RpcNotificationTestResponseErrorCode int32

const (
	RpcNotificationTestResponseError_NULL           RpcNotificationTestResponseErrorCode = 0
	RpcNotificationTestResponseError_UNKNOWN_ERROR  RpcNotificationTestResponseErrorCode = 1
	RpcNotificationTestResponseError_BAD_INPUT      RpcNotificationTestResponseErrorCode = 2
	RpcNotificationTestResponseError_INTERNAL_ERROR RpcNotificationTestResponseErrorCode = 3
)

// Enum value maps for RpcNotificationTestResponseErrorCode.
var (
	RpcNotificationTestResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
		3: "INTERNAL_ERROR",
	}
	RpcNotificationTestResponseErrorCode_value = map[string]int32{
		"NULL":           0,
		"UNKNOWN_ERROR":  1,
		"BAD_INPUT":      2,
		"INTERNAL_ERROR": 3,
	}
)

func (x RpcNotificationTestResponseErrorCode) Enum() *RpcNotificationTestResponseErrorCode {
	p := new(RpcNotificationTestResponseErrorCode)
	*p = x
	return p
}

func (x RpcNotificationTestResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcNotificationTestResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[277].Descriptor()
}

func (RpcNotificationTestResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[277]
}

func (x RpcNotificationTestResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcNotificationTestResponseErrorCode.Descriptor instead.
func (RpcNotificationTestResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 36, 2, 1, 0, 0}
}

type RpcMembershipGetStatusResponseErrorCode int32

const (
	RpcMembershipGetStatusResponseError_NULL                   RpcMembershipGetStatusResponseErrorCode = 0
	RpcMembershipGetStatusResponseError_UNKNOWN_ERROR          RpcMembershipGetStatusResponseErrorCode = 1
	RpcMembershipGetStatusResponseError_BAD_INPUT              RpcMembershipGetStatusResponseErrorCode = 2
	RpcMembershipGetStatusResponseError_NOT_LOGGED_IN          RpcMembershipGetStatusResponseErrorCode = 3
	RpcMembershipGetStatusResponseError_PAYMENT_NODE_ERROR     RpcMembershipGetStatusResponseErrorCode = 4
	RpcMembershipGetStatusResponseError_CACHE_ERROR            RpcMembershipGetStatusResponseErrorCode = 5
	RpcMembershipGetStatusResponseError_MEMBERSHIP_NOT_FOUND   RpcMembershipGetStatusResponseErrorCode = 6
	RpcMembershipGetStatusResponseError_MEMBERSHIP_WRONG_STATE RpcMembershipGetStatusResponseErrorCode = 7
	RpcMembershipGetStatusResponseError_CAN_NOT_CONNECT        RpcMembershipGetStatusResponseErrorCode = 8
)

// Enum value maps for RpcMembershipGetStatusResponseErrorCode.
var (
	RpcMembershipGetStatusResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
		3: "NOT_LOGGED_IN",
		4: "PAYMENT_NODE_ERROR",
		5: "CACHE_ERROR",
		6: "MEMBERSHIP_NOT_FOUND",
		7: "MEMBERSHIP_WRONG_STATE",
		8: "CAN_NOT_CONNECT",
	}
	RpcMembershipGetStatusResponseErrorCode_value = map[string]int32{
		"NULL":                   0,
		"UNKNOWN_ERROR":          1,
		"BAD_INPUT":              2,
		"NOT_LOGGED_IN":          3,
		"PAYMENT_NODE_ERROR":     4,
		"CACHE_ERROR":            5,
		"MEMBERSHIP_NOT_FOUND":   6,
		"MEMBERSHIP_WRONG_STATE": 7,
		"CAN_NOT_CONNECT":        8,
	}
)

func (x RpcMembershipGetStatusResponseErrorCode) Enum() *RpcMembershipGetStatusResponseErrorCode {
	p := new(RpcMembershipGetStatusResponseErrorCode)
	*p = x
	return p
}

func (x RpcMembershipGetStatusResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcMembershipGetStatusResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[278].Descriptor()
}

func (RpcMembershipGetStatusResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[278]
}

func (x RpcMembershipGetStatusResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcMembershipGetStatusResponseErrorCode.Descriptor instead.
func (RpcMembershipGetStatusResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 37, 0, 1, 0, 0}
}

type RpcMembershipIsNameValidResponseErrorCode int32

const (
	RpcMembershipIsNameValidResponseError_NULL                  RpcMembershipIsNameValidResponseErrorCode = 0
	RpcMembershipIsNameValidResponseError_UNKNOWN_ERROR         RpcMembershipIsNameValidResponseErrorCode = 1
	RpcMembershipIsNameValidResponseError_BAD_INPUT             RpcMembershipIsNameValidResponseErrorCode = 2
	RpcMembershipIsNameValidResponseError_TOO_SHORT             RpcMembershipIsNameValidResponseErrorCode = 3
	RpcMembershipIsNameValidResponseError_TOO_LONG              RpcMembershipIsNameValidResponseErrorCode = 4
	RpcMembershipIsNameValidResponseError_HAS_INVALID_CHARS     RpcMembershipIsNameValidResponseErrorCode = 5
	RpcMembershipIsNameValidResponseError_TIER_FEATURES_NO_NAME RpcMembershipIsNameValidResponseErrorCode = 6
	// if everything is fine - "name is already taken" check should be done in the NS
	// see IsNameAvailable()
	RpcMembershipIsNameValidResponseError_TIER_NOT_FOUND     RpcMembershipIsNameValidResponseErrorCode = 7
	RpcMembershipIsNameValidResponseError_NOT_LOGGED_IN      RpcMembershipIsNameValidResponseErrorCode = 8
	RpcMembershipIsNameValidResponseError_PAYMENT_NODE_ERROR RpcMembershipIsNameValidResponseErrorCode = 9
	RpcMembershipIsNameValidResponseError_CACHE_ERROR        RpcMembershipIsNameValidResponseErrorCode = 10
	// for some probable future use (if needed)
	RpcMembershipIsNameValidResponseError_CAN_NOT_RESERVE RpcMembershipIsNameValidResponseErrorCode = 11
	RpcMembershipIsNameValidResponseError_CAN_NOT_CONNECT RpcMembershipIsNameValidResponseErrorCode = 12
	// Same as if NameService.ResolveName returned that name is already
	// occupied by some user
	RpcMembershipIsNameValidResponseError_NAME_IS_RESERVED RpcMembershipIsNameValidResponseErrorCode = 13
)

// Enum value maps for RpcMembershipIsNameValidResponseErrorCode.
var (
	RpcMembershipIsNameValidResponseErrorCode_name = map[int32]string{
		0:  "NULL",
		1:  "UNKNOWN_ERROR",
		2:  "BAD_INPUT",
		3:  "TOO_SHORT",
		4:  "TOO_LONG",
		5:  "HAS_INVALID_CHARS",
		6:  "TIER_FEATURES_NO_NAME",
		7:  "TIER_NOT_FOUND",
		8:  "NOT_LOGGED_IN",
		9:  "PAYMENT_NODE_ERROR",
		10: "CACHE_ERROR",
		11: "CAN_NOT_RESERVE",
		12: "CAN_NOT_CONNECT",
		13: "NAME_IS_RESERVED",
	}
	RpcMembershipIsNameValidResponseErrorCode_value = map[string]int32{
		"NULL":                  0,
		"UNKNOWN_ERROR":         1,
		"BAD_INPUT":             2,
		"TOO_SHORT":             3,
		"TOO_LONG":              4,
		"HAS_INVALID_CHARS":     5,
		"TIER_FEATURES_NO_NAME": 6,
		"TIER_NOT_FOUND":        7,
		"NOT_LOGGED_IN":         8,
		"PAYMENT_NODE_ERROR":    9,
		"CACHE_ERROR":           10,
		"CAN_NOT_RESERVE":       11,
		"CAN_NOT_CONNECT":       12,
		"NAME_IS_RESERVED":      13,
	}
)

func (x RpcMembershipIsNameValidResponseErrorCode) Enum() *RpcMembershipIsNameValidResponseErrorCode {
	p := new(RpcMembershipIsNameValidResponseErrorCode)
	*p = x
	return p
}

func (x RpcMembershipIsNameValidResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcMembershipIsNameValidResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[279].Descriptor()
}

func (RpcMembershipIsNameValidResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[279]
}

func (x RpcMembershipIsNameValidResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcMembershipIsNameValidResponseErrorCode.Descriptor instead.
func (RpcMembershipIsNameValidResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 37, 1, 1, 0, 0}
}

type RpcMembershipRegisterPaymentRequestResponseErrorCode int32

const (
	RpcMembershipRegisterPaymentRequestResponseError_NULL                      RpcMembershipRegisterPaymentRequestResponseErrorCode = 0
	RpcMembershipRegisterPaymentRequestResponseError_UNKNOWN_ERROR             RpcMembershipRegisterPaymentRequestResponseErrorCode = 1
	RpcMembershipRegisterPaymentRequestResponseError_BAD_INPUT                 RpcMembershipRegisterPaymentRequestResponseErrorCode = 2
	RpcMembershipRegisterPaymentRequestResponseError_NOT_LOGGED_IN             RpcMembershipRegisterPaymentRequestResponseErrorCode = 3
	RpcMembershipRegisterPaymentRequestResponseError_PAYMENT_NODE_ERROR        RpcMembershipRegisterPaymentRequestResponseErrorCode = 4
	RpcMembershipRegisterPaymentRequestResponseError_CACHE_ERROR               RpcMembershipRegisterPaymentRequestResponseErrorCode = 5
	RpcMembershipRegisterPaymentRequestResponseError_TIER_NOT_FOUND            RpcMembershipRegisterPaymentRequestResponseErrorCode = 6
	RpcMembershipRegisterPaymentRequestResponseError_TIER_INVALID              RpcMembershipRegisterPaymentRequestResponseErrorCode = 7
	RpcMembershipRegisterPaymentRequestResponseError_PAYMENT_METHOD_INVALID    RpcMembershipRegisterPaymentRequestResponseErrorCode = 8
	RpcMembershipRegisterPaymentRequestResponseError_BAD_ANYNAME               RpcMembershipRegisterPaymentRequestResponseErrorCode = 9
	RpcMembershipRegisterPaymentRequestResponseError_MEMBERSHIP_ALREADY_EXISTS RpcMembershipRegisterPaymentRequestResponseErrorCode = 10
	RpcMembershipRegisterPaymentRequestResponseError_CAN_NOT_CONNECT           RpcMembershipRegisterPaymentRequestResponseErrorCode = 11
	// for tiers and payment methods that require that
	RpcMembershipRegisterPaymentRequestResponseError_EMAIL_WRONG_FORMAT RpcMembershipRegisterPaymentRequestResponseErrorCode = 12
)

// Enum value maps for RpcMembershipRegisterPaymentRequestResponseErrorCode.
var (
	RpcMembershipRegisterPaymentRequestResponseErrorCode_name = map[int32]string{
		0:  "NULL",
		1:  "UNKNOWN_ERROR",
		2:  "BAD_INPUT",
		3:  "NOT_LOGGED_IN",
		4:  "PAYMENT_NODE_ERROR",
		5:  "CACHE_ERROR",
		6:  "TIER_NOT_FOUND",
		7:  "TIER_INVALID",
		8:  "PAYMENT_METHOD_INVALID",
		9:  "BAD_ANYNAME",
		10: "MEMBERSHIP_ALREADY_EXISTS",
		11: "CAN_NOT_CONNECT",
		12: "EMAIL_WRONG_FORMAT",
	}
	RpcMembershipRegisterPaymentRequestResponseErrorCode_value = map[string]int32{
		"NULL":                      0,
		"UNKNOWN_ERROR":             1,
		"BAD_INPUT":                 2,
		"NOT_LOGGED_IN":             3,
		"PAYMENT_NODE_ERROR":        4,
		"CACHE_ERROR":               5,
		"TIER_NOT_FOUND":            6,
		"TIER_INVALID":              7,
		"PAYMENT_METHOD_INVALID":    8,
		"BAD_ANYNAME":               9,
		"MEMBERSHIP_ALREADY_EXISTS": 10,
		"CAN_NOT_CONNECT":           11,
		"EMAIL_WRONG_FORMAT":        12,
	}
)

func (x RpcMembershipRegisterPaymentRequestResponseErrorCode) Enum() *RpcMembershipRegisterPaymentRequestResponseErrorCode {
	p := new(RpcMembershipRegisterPaymentRequestResponseErrorCode)
	*p = x
	return p
}

func (x RpcMembershipRegisterPaymentRequestResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcMembershipRegisterPaymentRequestResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[280].Descriptor()
}

func (RpcMembershipRegisterPaymentRequestResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[280]
}

func (x RpcMembershipRegisterPaymentRequestResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcMembershipRegisterPaymentRequestResponseErrorCode.Descriptor instead.
func (RpcMembershipRegisterPaymentRequestResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 37, 2, 1, 0, 0}
}

type RpcMembershipGetPortalLinkUrlResponseErrorCode int32

const (
	RpcMembershipGetPortalLinkUrlResponseError_NULL               RpcMembershipGetPortalLinkUrlResponseErrorCode = 0
	RpcMembershipGetPortalLinkUrlResponseError_UNKNOWN_ERROR      RpcMembershipGetPortalLinkUrlResponseErrorCode = 1
	RpcMembershipGetPortalLinkUrlResponseError_BAD_INPUT          RpcMembershipGetPortalLinkUrlResponseErrorCode = 2
	RpcMembershipGetPortalLinkUrlResponseError_NOT_LOGGED_IN      RpcMembershipGetPortalLinkUrlResponseErrorCode = 3
	RpcMembershipGetPortalLinkUrlResponseError_PAYMENT_NODE_ERROR RpcMembershipGetPortalLinkUrlResponseErrorCode = 4
	RpcMembershipGetPortalLinkUrlResponseError_CACHE_ERROR        RpcMembershipGetPortalLinkUrlResponseErrorCode = 5
	RpcMembershipGetPortalLinkUrlResponseError_CAN_NOT_CONNECT    RpcMembershipGetPortalLinkUrlResponseErrorCode = 6
)

// Enum value maps for RpcMembershipGetPortalLinkUrlResponseErrorCode.
var (
	RpcMembershipGetPortalLinkUrlResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
		3: "NOT_LOGGED_IN",
		4: "PAYMENT_NODE_ERROR",
		5: "CACHE_ERROR",
		6: "CAN_NOT_CONNECT",
	}
	RpcMembershipGetPortalLinkUrlResponseErrorCode_value = map[string]int32{
		"NULL":               0,
		"UNKNOWN_ERROR":      1,
		"BAD_INPUT":          2,
		"NOT_LOGGED_IN":      3,
		"PAYMENT_NODE_ERROR": 4,
		"CACHE_ERROR":        5,
		"CAN_NOT_CONNECT":    6,
	}
)

func (x RpcMembershipGetPortalLinkUrlResponseErrorCode) Enum() *RpcMembershipGetPortalLinkUrlResponseErrorCode {
	p := new(RpcMembershipGetPortalLinkUrlResponseErrorCode)
	*p = x
	return p
}

func (x RpcMembershipGetPortalLinkUrlResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcMembershipGetPortalLinkUrlResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[281].Descriptor()
}

func (RpcMembershipGetPortalLinkUrlResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[281]
}

func (x RpcMembershipGetPortalLinkUrlResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcMembershipGetPortalLinkUrlResponseErrorCode.Descriptor instead.
func (RpcMembershipGetPortalLinkUrlResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 37, 3, 1, 0, 0}
}

type RpcMembershipFinalizeResponseErrorCode int32

const (
	RpcMembershipFinalizeResponseError_NULL                   RpcMembershipFinalizeResponseErrorCode = 0
	RpcMembershipFinalizeResponseError_UNKNOWN_ERROR          RpcMembershipFinalizeResponseErrorCode = 1
	RpcMembershipFinalizeResponseError_BAD_INPUT              RpcMembershipFinalizeResponseErrorCode = 2
	RpcMembershipFinalizeResponseError_NOT_LOGGED_IN          RpcMembershipFinalizeResponseErrorCode = 3
	RpcMembershipFinalizeResponseError_PAYMENT_NODE_ERROR     RpcMembershipFinalizeResponseErrorCode = 4
	RpcMembershipFinalizeResponseError_CACHE_ERROR            RpcMembershipFinalizeResponseErrorCode = 5
	RpcMembershipFinalizeResponseError_MEMBERSHIP_NOT_FOUND   RpcMembershipFinalizeResponseErrorCode = 6
	RpcMembershipFinalizeResponseError_MEMBERSHIP_WRONG_STATE RpcMembershipFinalizeResponseErrorCode = 7
	RpcMembershipFinalizeResponseError_BAD_ANYNAME            RpcMembershipFinalizeResponseErrorCode = 8
	RpcMembershipFinalizeResponseError_CAN_NOT_CONNECT        RpcMembershipFinalizeResponseErrorCode = 9
)

// Enum value maps for RpcMembershipFinalizeResponseErrorCode.
var (
	RpcMembershipFinalizeResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
		3: "NOT_LOGGED_IN",
		4: "PAYMENT_NODE_ERROR",
		5: "CACHE_ERROR",
		6: "MEMBERSHIP_NOT_FOUND",
		7: "MEMBERSHIP_WRONG_STATE",
		8: "BAD_ANYNAME",
		9: "CAN_NOT_CONNECT",
	}
	RpcMembershipFinalizeResponseErrorCode_value = map[string]int32{
		"NULL":                   0,
		"UNKNOWN_ERROR":          1,
		"BAD_INPUT":              2,
		"NOT_LOGGED_IN":          3,
		"PAYMENT_NODE_ERROR":     4,
		"CACHE_ERROR":            5,
		"MEMBERSHIP_NOT_FOUND":   6,
		"MEMBERSHIP_WRONG_STATE": 7,
		"BAD_ANYNAME":            8,
		"CAN_NOT_CONNECT":        9,
	}
)

func (x RpcMembershipFinalizeResponseErrorCode) Enum() *RpcMembershipFinalizeResponseErrorCode {
	p := new(RpcMembershipFinalizeResponseErrorCode)
	*p = x
	return p
}

func (x RpcMembershipFinalizeResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcMembershipFinalizeResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[282].Descriptor()
}

func (RpcMembershipFinalizeResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[282]
}

func (x RpcMembershipFinalizeResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcMembershipFinalizeResponseErrorCode.Descriptor instead.
func (RpcMembershipFinalizeResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 37, 4, 1, 0, 0}
}

type RpcMembershipGetVerificationEmailStatusResponseErrorCode int32

const (
	RpcMembershipGetVerificationEmailStatusResponseError_NULL               RpcMembershipGetVerificationEmailStatusResponseErrorCode = 0
	RpcMembershipGetVerificationEmailStatusResponseError_UNKNOWN_ERROR      RpcMembershipGetVerificationEmailStatusResponseErrorCode = 1
	RpcMembershipGetVerificationEmailStatusResponseError_BAD_INPUT          RpcMembershipGetVerificationEmailStatusResponseErrorCode = 2
	RpcMembershipGetVerificationEmailStatusResponseError_NOT_LOGGED_IN      RpcMembershipGetVerificationEmailStatusResponseErrorCode = 3
	RpcMembershipGetVerificationEmailStatusResponseError_PAYMENT_NODE_ERROR RpcMembershipGetVerificationEmailStatusResponseErrorCode = 4
	RpcMembershipGetVerificationEmailStatusResponseError_CAN_NOT_CONNECT    RpcMembershipGetVerificationEmailStatusResponseErrorCode = 12
)

// Enum value maps for RpcMembershipGetVerificationEmailStatusResponseErrorCode.
var (
	RpcMembershipGetVerificationEmailStatusResponseErrorCode_name = map[int32]string{
		0:  "NULL",
		1:  "UNKNOWN_ERROR",
		2:  "BAD_INPUT",
		3:  "NOT_LOGGED_IN",
		4:  "PAYMENT_NODE_ERROR",
		12: "CAN_NOT_CONNECT",
	}
	RpcMembershipGetVerificationEmailStatusResponseErrorCode_value = map[string]int32{
		"NULL":               0,
		"UNKNOWN_ERROR":      1,
		"BAD_INPUT":          2,
		"NOT_LOGGED_IN":      3,
		"PAYMENT_NODE_ERROR": 4,
		"CAN_NOT_CONNECT":    12,
	}
)

func (x RpcMembershipGetVerificationEmailStatusResponseErrorCode) Enum() *RpcMembershipGetVerificationEmailStatusResponseErrorCode {
	p := new(RpcMembershipGetVerificationEmailStatusResponseErrorCode)
	*p = x
	return p
}

func (x RpcMembershipGetVerificationEmailStatusResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcMembershipGetVerificationEmailStatusResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[283].Descriptor()
}

func (RpcMembershipGetVerificationEmailStatusResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[283]
}

func (x RpcMembershipGetVerificationEmailStatusResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcMembershipGetVerificationEmailStatusResponseErrorCode.Descriptor instead.
func (RpcMembershipGetVerificationEmailStatusResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 37, 5, 1, 0, 0}
}

type RpcMembershipGetVerificationEmailResponseErrorCode int32

const (
	RpcMembershipGetVerificationEmailResponseError_NULL                      RpcMembershipGetVerificationEmailResponseErrorCode = 0
	RpcMembershipGetVerificationEmailResponseError_UNKNOWN_ERROR             RpcMembershipGetVerificationEmailResponseErrorCode = 1
	RpcMembershipGetVerificationEmailResponseError_BAD_INPUT                 RpcMembershipGetVerificationEmailResponseErrorCode = 2
	RpcMembershipGetVerificationEmailResponseError_NOT_LOGGED_IN             RpcMembershipGetVerificationEmailResponseErrorCode = 3
	RpcMembershipGetVerificationEmailResponseError_PAYMENT_NODE_ERROR        RpcMembershipGetVerificationEmailResponseErrorCode = 4
	RpcMembershipGetVerificationEmailResponseError_CACHE_ERROR               RpcMembershipGetVerificationEmailResponseErrorCode = 5
	RpcMembershipGetVerificationEmailResponseError_EMAIL_WRONG_FORMAT        RpcMembershipGetVerificationEmailResponseErrorCode = 6
	RpcMembershipGetVerificationEmailResponseError_EMAIL_ALREADY_VERIFIED    RpcMembershipGetVerificationEmailResponseErrorCode = 7
	RpcMembershipGetVerificationEmailResponseError_EMAIL_ALREDY_SENT         RpcMembershipGetVerificationEmailResponseErrorCode = 8
	RpcMembershipGetVerificationEmailResponseError_EMAIL_FAILED_TO_SEND      RpcMembershipGetVerificationEmailResponseErrorCode = 9
	RpcMembershipGetVerificationEmailResponseError_MEMBERSHIP_ALREADY_EXISTS RpcMembershipGetVerificationEmailResponseErrorCode = 10
	RpcMembershipGetVerificationEmailResponseError_CAN_NOT_CONNECT           RpcMembershipGetVerificationEmailResponseErrorCode = 11
)

// Enum value maps for RpcMembershipGetVerificationEmailResponseErrorCode.
var (
	RpcMembershipGetVerificationEmailResponseErrorCode_name = map[int32]string{
		0:  "NULL",
		1:  "UNKNOWN_ERROR",
		2:  "BAD_INPUT",
		3:  "NOT_LOGGED_IN",
		4:  "PAYMENT_NODE_ERROR",
		5:  "CACHE_ERROR",
		6:  "EMAIL_WRONG_FORMAT",
		7:  "EMAIL_ALREADY_VERIFIED",
		8:  "EMAIL_ALREDY_SENT",
		9:  "EMAIL_FAILED_TO_SEND",
		10: "MEMBERSHIP_ALREADY_EXISTS",
		11: "CAN_NOT_CONNECT",
	}
	RpcMembershipGetVerificationEmailResponseErrorCode_value = map[string]int32{
		"NULL":                      0,
		"UNKNOWN_ERROR":             1,
		"BAD_INPUT":                 2,
		"NOT_LOGGED_IN":             3,
		"PAYMENT_NODE_ERROR":        4,
		"CACHE_ERROR":               5,
		"EMAIL_WRONG_FORMAT":        6,
		"EMAIL_ALREADY_VERIFIED":    7,
		"EMAIL_ALREDY_SENT":         8,
		"EMAIL_FAILED_TO_SEND":      9,
		"MEMBERSHIP_ALREADY_EXISTS": 10,
		"CAN_NOT_CONNECT":           11,
	}
)

func (x RpcMembershipGetVerificationEmailResponseErrorCode) Enum() *RpcMembershipGetVerificationEmailResponseErrorCode {
	p := new(RpcMembershipGetVerificationEmailResponseErrorCode)
	*p = x
	return p
}

func (x RpcMembershipGetVerificationEmailResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcMembershipGetVerificationEmailResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[284].Descriptor()
}

func (RpcMembershipGetVerificationEmailResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[284]
}

func (x RpcMembershipGetVerificationEmailResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcMembershipGetVerificationEmailResponseErrorCode.Descriptor instead.
func (RpcMembershipGetVerificationEmailResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 37, 6, 1, 0, 0}
}

type RpcMembershipVerifyEmailCodeResponseErrorCode int32

const (
	RpcMembershipVerifyEmailCodeResponseError_NULL                      RpcMembershipVerifyEmailCodeResponseErrorCode = 0
	RpcMembershipVerifyEmailCodeResponseError_UNKNOWN_ERROR             RpcMembershipVerifyEmailCodeResponseErrorCode = 1
	RpcMembershipVerifyEmailCodeResponseError_BAD_INPUT                 RpcMembershipVerifyEmailCodeResponseErrorCode = 2
	RpcMembershipVerifyEmailCodeResponseError_NOT_LOGGED_IN             RpcMembershipVerifyEmailCodeResponseErrorCode = 3
	RpcMembershipVerifyEmailCodeResponseError_PAYMENT_NODE_ERROR        RpcMembershipVerifyEmailCodeResponseErrorCode = 4
	RpcMembershipVerifyEmailCodeResponseError_CACHE_ERROR               RpcMembershipVerifyEmailCodeResponseErrorCode = 5
	RpcMembershipVerifyEmailCodeResponseError_EMAIL_ALREADY_VERIFIED    RpcMembershipVerifyEmailCodeResponseErrorCode = 6
	RpcMembershipVerifyEmailCodeResponseError_CODE_EXPIRED              RpcMembershipVerifyEmailCodeResponseErrorCode = 7
	RpcMembershipVerifyEmailCodeResponseError_CODE_WRONG                RpcMembershipVerifyEmailCodeResponseErrorCode = 8
	RpcMembershipVerifyEmailCodeResponseError_MEMBERSHIP_NOT_FOUND      RpcMembershipVerifyEmailCodeResponseErrorCode = 9
	RpcMembershipVerifyEmailCodeResponseError_MEMBERSHIP_ALREADY_ACTIVE RpcMembershipVerifyEmailCodeResponseErrorCode = 10
	RpcMembershipVerifyEmailCodeResponseError_CAN_NOT_CONNECT           RpcMembershipVerifyEmailCodeResponseErrorCode = 11
)

// Enum value maps for RpcMembershipVerifyEmailCodeResponseErrorCode.
var (
	RpcMembershipVerifyEmailCodeResponseErrorCode_name = map[int32]string{
		0:  "NULL",
		1:  "UNKNOWN_ERROR",
		2:  "BAD_INPUT",
		3:  "NOT_LOGGED_IN",
		4:  "PAYMENT_NODE_ERROR",
		5:  "CACHE_ERROR",
		6:  "EMAIL_ALREADY_VERIFIED",
		7:  "CODE_EXPIRED",
		8:  "CODE_WRONG",
		9:  "MEMBERSHIP_NOT_FOUND",
		10: "MEMBERSHIP_ALREADY_ACTIVE",
		11: "CAN_NOT_CONNECT",
	}
	RpcMembershipVerifyEmailCodeResponseErrorCode_value = map[string]int32{
		"NULL":                      0,
		"UNKNOWN_ERROR":             1,
		"BAD_INPUT":                 2,
		"NOT_LOGGED_IN":             3,
		"PAYMENT_NODE_ERROR":        4,
		"CACHE_ERROR":               5,
		"EMAIL_ALREADY_VERIFIED":    6,
		"CODE_EXPIRED":              7,
		"CODE_WRONG":                8,
		"MEMBERSHIP_NOT_FOUND":      9,
		"MEMBERSHIP_ALREADY_ACTIVE": 10,
		"CAN_NOT_CONNECT":           11,
	}
)

func (x RpcMembershipVerifyEmailCodeResponseErrorCode) Enum() *RpcMembershipVerifyEmailCodeResponseErrorCode {
	p := new(RpcMembershipVerifyEmailCodeResponseErrorCode)
	*p = x
	return p
}

func (x RpcMembershipVerifyEmailCodeResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcMembershipVerifyEmailCodeResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[285].Descriptor()
}

func (RpcMembershipVerifyEmailCodeResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[285]
}

func (x RpcMembershipVerifyEmailCodeResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcMembershipVerifyEmailCodeResponseErrorCode.Descriptor instead.
func (RpcMembershipVerifyEmailCodeResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 37, 7, 1, 0, 0}
}

type RpcMembershipGetTiersResponseErrorCode int32

const (
	RpcMembershipGetTiersResponseError_NULL               RpcMembershipGetTiersResponseErrorCode = 0
	RpcMembershipGetTiersResponseError_UNKNOWN_ERROR      RpcMembershipGetTiersResponseErrorCode = 1
	RpcMembershipGetTiersResponseError_BAD_INPUT          RpcMembershipGetTiersResponseErrorCode = 2
	RpcMembershipGetTiersResponseError_NOT_LOGGED_IN      RpcMembershipGetTiersResponseErrorCode = 3
	RpcMembershipGetTiersResponseError_PAYMENT_NODE_ERROR RpcMembershipGetTiersResponseErrorCode = 4
	RpcMembershipGetTiersResponseError_CACHE_ERROR        RpcMembershipGetTiersResponseErrorCode = 5
	RpcMembershipGetTiersResponseError_CAN_NOT_CONNECT    RpcMembershipGetTiersResponseErrorCode = 6
)

// Enum value maps for RpcMembershipGetTiersResponseErrorCode.
var (
	RpcMembershipGetTiersResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
		3: "NOT_LOGGED_IN",
		4: "PAYMENT_NODE_ERROR",
		5: "CACHE_ERROR",
		6: "CAN_NOT_CONNECT",
	}
	RpcMembershipGetTiersResponseErrorCode_value = map[string]int32{
		"NULL":               0,
		"UNKNOWN_ERROR":      1,
		"BAD_INPUT":          2,
		"NOT_LOGGED_IN":      3,
		"PAYMENT_NODE_ERROR": 4,
		"CACHE_ERROR":        5,
		"CAN_NOT_CONNECT":    6,
	}
)

func (x RpcMembershipGetTiersResponseErrorCode) Enum() *RpcMembershipGetTiersResponseErrorCode {
	p := new(RpcMembershipGetTiersResponseErrorCode)
	*p = x
	return p
}

func (x RpcMembershipGetTiersResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcMembershipGetTiersResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[286].Descriptor()
}

func (RpcMembershipGetTiersResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[286]
}

func (x RpcMembershipGetTiersResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcMembershipGetTiersResponseErrorCode.Descriptor instead.
func (RpcMembershipGetTiersResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 37, 8, 1, 0, 0}
}

type RpcMembershipVerifyAppStoreReceiptResponseErrorCode int32

const (
	RpcMembershipVerifyAppStoreReceiptResponseError_NULL                        RpcMembershipVerifyAppStoreReceiptResponseErrorCode = 0
	RpcMembershipVerifyAppStoreReceiptResponseError_UNKNOWN_ERROR               RpcMembershipVerifyAppStoreReceiptResponseErrorCode = 1
	RpcMembershipVerifyAppStoreReceiptResponseError_BAD_INPUT                   RpcMembershipVerifyAppStoreReceiptResponseErrorCode = 2
	RpcMembershipVerifyAppStoreReceiptResponseError_NOT_LOGGED_IN               RpcMembershipVerifyAppStoreReceiptResponseErrorCode = 3
	RpcMembershipVerifyAppStoreReceiptResponseError_PAYMENT_NODE_ERROR          RpcMembershipVerifyAppStoreReceiptResponseErrorCode = 4
	RpcMembershipVerifyAppStoreReceiptResponseError_CACHE_ERROR                 RpcMembershipVerifyAppStoreReceiptResponseErrorCode = 5
	RpcMembershipVerifyAppStoreReceiptResponseError_INVALID_RECEIPT             RpcMembershipVerifyAppStoreReceiptResponseErrorCode = 6
	RpcMembershipVerifyAppStoreReceiptResponseError_PURCHASE_REGISTRATION_ERROR RpcMembershipVerifyAppStoreReceiptResponseErrorCode = 7
	RpcMembershipVerifyAppStoreReceiptResponseError_SUBSCRIPTION_RENEW_ERROR    RpcMembershipVerifyAppStoreReceiptResponseErrorCode = 8
)

// Enum value maps for RpcMembershipVerifyAppStoreReceiptResponseErrorCode.
var (
	RpcMembershipVerifyAppStoreReceiptResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
		3: "NOT_LOGGED_IN",
		4: "PAYMENT_NODE_ERROR",
		5: "CACHE_ERROR",
		6: "INVALID_RECEIPT",
		7: "PURCHASE_REGISTRATION_ERROR",
		8: "SUBSCRIPTION_RENEW_ERROR",
	}
	RpcMembershipVerifyAppStoreReceiptResponseErrorCode_value = map[string]int32{
		"NULL":                        0,
		"UNKNOWN_ERROR":               1,
		"BAD_INPUT":                   2,
		"NOT_LOGGED_IN":               3,
		"PAYMENT_NODE_ERROR":          4,
		"CACHE_ERROR":                 5,
		"INVALID_RECEIPT":             6,
		"PURCHASE_REGISTRATION_ERROR": 7,
		"SUBSCRIPTION_RENEW_ERROR":    8,
	}
)

func (x RpcMembershipVerifyAppStoreReceiptResponseErrorCode) Enum() *RpcMembershipVerifyAppStoreReceiptResponseErrorCode {
	p := new(RpcMembershipVerifyAppStoreReceiptResponseErrorCode)
	*p = x
	return p
}

func (x RpcMembershipVerifyAppStoreReceiptResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcMembershipVerifyAppStoreReceiptResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[287].Descriptor()
}

func (RpcMembershipVerifyAppStoreReceiptResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[287]
}

func (x RpcMembershipVerifyAppStoreReceiptResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcMembershipVerifyAppStoreReceiptResponseErrorCode.Descriptor instead.
func (RpcMembershipVerifyAppStoreReceiptResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 37, 9, 1, 0, 0}
}

type RpcNameServiceResolveNameResponseErrorCode int32

const (
	RpcNameServiceResolveNameResponseError_NULL            RpcNameServiceResolveNameResponseErrorCode = 0
	RpcNameServiceResolveNameResponseError_UNKNOWN_ERROR   RpcNameServiceResolveNameResponseErrorCode = 1
	RpcNameServiceResolveNameResponseError_BAD_INPUT       RpcNameServiceResolveNameResponseErrorCode = 2
	RpcNameServiceResolveNameResponseError_CAN_NOT_CONNECT RpcNameServiceResolveNameResponseErrorCode = 3
)

// Enum value maps for RpcNameServiceResolveNameResponseErrorCode.
var (
	RpcNameServiceResolveNameResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
		3: "CAN_NOT_CONNECT",
	}
	RpcNameServiceResolveNameResponseErrorCode_value = map[string]int32{
		"NULL":            0,
		"UNKNOWN_ERROR":   1,
		"BAD_INPUT":       2,
		"CAN_NOT_CONNECT": 3,
	}
)

func (x RpcNameServiceResolveNameResponseErrorCode) Enum() *RpcNameServiceResolveNameResponseErrorCode {
	p := new(RpcNameServiceResolveNameResponseErrorCode)
	*p = x
	return p
}

func (x RpcNameServiceResolveNameResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcNameServiceResolveNameResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[288].Descriptor()
}

func (RpcNameServiceResolveNameResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[288]
}

func (x RpcNameServiceResolveNameResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcNameServiceResolveNameResponseErrorCode.Descriptor instead.
func (RpcNameServiceResolveNameResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 38, 0, 1, 0, 0}
}

type RpcNameServiceResolveAnyIdResponseErrorCode int32

const (
	RpcNameServiceResolveAnyIdResponseError_NULL            RpcNameServiceResolveAnyIdResponseErrorCode = 0
	RpcNameServiceResolveAnyIdResponseError_UNKNOWN_ERROR   RpcNameServiceResolveAnyIdResponseErrorCode = 1
	RpcNameServiceResolveAnyIdResponseError_BAD_INPUT       RpcNameServiceResolveAnyIdResponseErrorCode = 2
	RpcNameServiceResolveAnyIdResponseError_CAN_NOT_CONNECT RpcNameServiceResolveAnyIdResponseErrorCode = 3
)

// Enum value maps for RpcNameServiceResolveAnyIdResponseErrorCode.
var (
	RpcNameServiceResolveAnyIdResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
		3: "CAN_NOT_CONNECT",
	}
	RpcNameServiceResolveAnyIdResponseErrorCode_value = map[string]int32{
		"NULL":            0,
		"UNKNOWN_ERROR":   1,
		"BAD_INPUT":       2,
		"CAN_NOT_CONNECT": 3,
	}
)

func (x RpcNameServiceResolveAnyIdResponseErrorCode) Enum() *RpcNameServiceResolveAnyIdResponseErrorCode {
	p := new(RpcNameServiceResolveAnyIdResponseErrorCode)
	*p = x
	return p
}

func (x RpcNameServiceResolveAnyIdResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcNameServiceResolveAnyIdResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[289].Descriptor()
}

func (RpcNameServiceResolveAnyIdResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[289]
}

func (x RpcNameServiceResolveAnyIdResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcNameServiceResolveAnyIdResponseErrorCode.Descriptor instead.
func (RpcNameServiceResolveAnyIdResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 38, 1, 1, 0, 0}
}

type RpcNameServiceResolveSpaceIdResponseErrorCode int32

const (
	RpcNameServiceResolveSpaceIdResponseError_NULL            RpcNameServiceResolveSpaceIdResponseErrorCode = 0
	RpcNameServiceResolveSpaceIdResponseError_UNKNOWN_ERROR   RpcNameServiceResolveSpaceIdResponseErrorCode = 1
	RpcNameServiceResolveSpaceIdResponseError_BAD_INPUT       RpcNameServiceResolveSpaceIdResponseErrorCode = 2
	RpcNameServiceResolveSpaceIdResponseError_CAN_NOT_CONNECT RpcNameServiceResolveSpaceIdResponseErrorCode = 3
)

// Enum value maps for RpcNameServiceResolveSpaceIdResponseErrorCode.
var (
	RpcNameServiceResolveSpaceIdResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
		3: "CAN_NOT_CONNECT",
	}
	RpcNameServiceResolveSpaceIdResponseErrorCode_value = map[string]int32{
		"NULL":            0,
		"UNKNOWN_ERROR":   1,
		"BAD_INPUT":       2,
		"CAN_NOT_CONNECT": 3,
	}
)

func (x RpcNameServiceResolveSpaceIdResponseErrorCode) Enum() *RpcNameServiceResolveSpaceIdResponseErrorCode {
	p := new(RpcNameServiceResolveSpaceIdResponseErrorCode)
	*p = x
	return p
}

func (x RpcNameServiceResolveSpaceIdResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcNameServiceResolveSpaceIdResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[290].Descriptor()
}

func (RpcNameServiceResolveSpaceIdResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[290]
}

func (x RpcNameServiceResolveSpaceIdResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcNameServiceResolveSpaceIdResponseErrorCode.Descriptor instead.
func (RpcNameServiceResolveSpaceIdResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 38, 2, 1, 0, 0}
}

type RpcNameServiceUserAccountGetResponseErrorCode int32

const (
	RpcNameServiceUserAccountGetResponseError_NULL             RpcNameServiceUserAccountGetResponseErrorCode = 0
	RpcNameServiceUserAccountGetResponseError_UNKNOWN_ERROR    RpcNameServiceUserAccountGetResponseErrorCode = 1
	RpcNameServiceUserAccountGetResponseError_BAD_INPUT        RpcNameServiceUserAccountGetResponseErrorCode = 2
	RpcNameServiceUserAccountGetResponseError_NOT_LOGGED_IN    RpcNameServiceUserAccountGetResponseErrorCode = 3
	RpcNameServiceUserAccountGetResponseError_BAD_NAME_RESOLVE RpcNameServiceUserAccountGetResponseErrorCode = 4
	RpcNameServiceUserAccountGetResponseError_CAN_NOT_CONNECT  RpcNameServiceUserAccountGetResponseErrorCode = 5
)

// Enum value maps for RpcNameServiceUserAccountGetResponseErrorCode.
var (
	RpcNameServiceUserAccountGetResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
		3: "NOT_LOGGED_IN",
		4: "BAD_NAME_RESOLVE",
		5: "CAN_NOT_CONNECT",
	}
	RpcNameServiceUserAccountGetResponseErrorCode_value = map[string]int32{
		"NULL":             0,
		"UNKNOWN_ERROR":    1,
		"BAD_INPUT":        2,
		"NOT_LOGGED_IN":    3,
		"BAD_NAME_RESOLVE": 4,
		"CAN_NOT_CONNECT":  5,
	}
)

func (x RpcNameServiceUserAccountGetResponseErrorCode) Enum() *RpcNameServiceUserAccountGetResponseErrorCode {
	p := new(RpcNameServiceUserAccountGetResponseErrorCode)
	*p = x
	return p
}

func (x RpcNameServiceUserAccountGetResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcNameServiceUserAccountGetResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[291].Descriptor()
}

func (RpcNameServiceUserAccountGetResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[291]
}

func (x RpcNameServiceUserAccountGetResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcNameServiceUserAccountGetResponseErrorCode.Descriptor instead.
func (RpcNameServiceUserAccountGetResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 38, 3, 0, 1, 0, 0}
}

type RpcBroadcastPayloadEventResponseErrorCode int32

const (
	RpcBroadcastPayloadEventResponseError_NULL           RpcBroadcastPayloadEventResponseErrorCode = 0
	RpcBroadcastPayloadEventResponseError_UNKNOWN_ERROR  RpcBroadcastPayloadEventResponseErrorCode = 1
	RpcBroadcastPayloadEventResponseError_BAD_INPUT      RpcBroadcastPayloadEventResponseErrorCode = 2
	RpcBroadcastPayloadEventResponseError_INTERNAL_ERROR RpcBroadcastPayloadEventResponseErrorCode = 3
)

// Enum value maps for RpcBroadcastPayloadEventResponseErrorCode.
var (
	RpcBroadcastPayloadEventResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
		3: "INTERNAL_ERROR",
	}
	RpcBroadcastPayloadEventResponseErrorCode_value = map[string]int32{
		"NULL":           0,
		"UNKNOWN_ERROR":  1,
		"BAD_INPUT":      2,
		"INTERNAL_ERROR": 3,
	}
)

func (x RpcBroadcastPayloadEventResponseErrorCode) Enum() *RpcBroadcastPayloadEventResponseErrorCode {
	p := new(RpcBroadcastPayloadEventResponseErrorCode)
	*p = x
	return p
}

func (x RpcBroadcastPayloadEventResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcBroadcastPayloadEventResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[292].Descriptor()
}

func (RpcBroadcastPayloadEventResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[292]
}

func (x RpcBroadcastPayloadEventResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcBroadcastPayloadEventResponseErrorCode.Descriptor instead.
func (RpcBroadcastPayloadEventResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 39, 0, 1, 0, 0}
}

type RpcDeviceSetNameResponseErrorCode int32

const (
	RpcDeviceSetNameResponseError_NULL          RpcDeviceSetNameResponseErrorCode = 0
	RpcDeviceSetNameResponseError_UNKNOWN_ERROR RpcDeviceSetNameResponseErrorCode = 1
	RpcDeviceSetNameResponseError_BAD_INPUT     RpcDeviceSetNameResponseErrorCode = 2
)

// Enum value maps for RpcDeviceSetNameResponseErrorCode.
var (
	RpcDeviceSetNameResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcDeviceSetNameResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcDeviceSetNameResponseErrorCode) Enum() *RpcDeviceSetNameResponseErrorCode {
	p := new(RpcDeviceSetNameResponseErrorCode)
	*p = x
	return p
}

func (x RpcDeviceSetNameResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcDeviceSetNameResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[293].Descriptor()
}

func (RpcDeviceSetNameResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[293]
}

func (x RpcDeviceSetNameResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcDeviceSetNameResponseErrorCode.Descriptor instead.
func (RpcDeviceSetNameResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 40, 0, 1, 0, 0}
}

type RpcDeviceListResponseErrorCode int32

const (
	RpcDeviceListResponseError_NULL          RpcDeviceListResponseErrorCode = 0
	RpcDeviceListResponseError_UNKNOWN_ERROR RpcDeviceListResponseErrorCode = 1
	RpcDeviceListResponseError_BAD_INPUT     RpcDeviceListResponseErrorCode = 2
)

// Enum value maps for RpcDeviceListResponseErrorCode.
var (
	RpcDeviceListResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcDeviceListResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcDeviceListResponseErrorCode) Enum() *RpcDeviceListResponseErrorCode {
	p := new(RpcDeviceListResponseErrorCode)
	*p = x
	return p
}

func (x RpcDeviceListResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcDeviceListResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[294].Descriptor()
}

func (RpcDeviceListResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[294]
}

func (x RpcDeviceListResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcDeviceListResponseErrorCode.Descriptor instead.
func (RpcDeviceListResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 40, 1, 1, 0, 0}
}

type RpcDeviceNetworkStateSetResponseErrorCode int32

const (
	RpcDeviceNetworkStateSetResponseError_NULL           RpcDeviceNetworkStateSetResponseErrorCode = 0
	RpcDeviceNetworkStateSetResponseError_UNKNOWN_ERROR  RpcDeviceNetworkStateSetResponseErrorCode = 1
	RpcDeviceNetworkStateSetResponseError_BAD_INPUT      RpcDeviceNetworkStateSetResponseErrorCode = 2
	RpcDeviceNetworkStateSetResponseError_INTERNAL_ERROR RpcDeviceNetworkStateSetResponseErrorCode = 3
)

// Enum value maps for RpcDeviceNetworkStateSetResponseErrorCode.
var (
	RpcDeviceNetworkStateSetResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
		3: "INTERNAL_ERROR",
	}
	RpcDeviceNetworkStateSetResponseErrorCode_value = map[string]int32{
		"NULL":           0,
		"UNKNOWN_ERROR":  1,
		"BAD_INPUT":      2,
		"INTERNAL_ERROR": 3,
	}
)

func (x RpcDeviceNetworkStateSetResponseErrorCode) Enum() *RpcDeviceNetworkStateSetResponseErrorCode {
	p := new(RpcDeviceNetworkStateSetResponseErrorCode)
	*p = x
	return p
}

func (x RpcDeviceNetworkStateSetResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcDeviceNetworkStateSetResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[295].Descriptor()
}

func (RpcDeviceNetworkStateSetResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[295]
}

func (x RpcDeviceNetworkStateSetResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcDeviceNetworkStateSetResponseErrorCode.Descriptor instead.
func (RpcDeviceNetworkStateSetResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 40, 2, 0, 1, 0, 0}
}

type RpcChatAddMessageResponseErrorCode int32

const (
	RpcChatAddMessageResponseError_NULL          RpcChatAddMessageResponseErrorCode = 0
	RpcChatAddMessageResponseError_UNKNOWN_ERROR RpcChatAddMessageResponseErrorCode = 1
	RpcChatAddMessageResponseError_BAD_INPUT     RpcChatAddMessageResponseErrorCode = 2 // ...
)

// Enum value maps for RpcChatAddMessageResponseErrorCode.
var (
	RpcChatAddMessageResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcChatAddMessageResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcChatAddMessageResponseErrorCode) Enum() *RpcChatAddMessageResponseErrorCode {
	p := new(RpcChatAddMessageResponseErrorCode)
	*p = x
	return p
}

func (x RpcChatAddMessageResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcChatAddMessageResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[296].Descriptor()
}

func (RpcChatAddMessageResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[296]
}

func (x RpcChatAddMessageResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcChatAddMessageResponseErrorCode.Descriptor instead.
func (RpcChatAddMessageResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 41, 0, 1, 0, 0}
}

type RpcChatEditMessageContentResponseErrorCode int32

const (
	RpcChatEditMessageContentResponseError_NULL          RpcChatEditMessageContentResponseErrorCode = 0
	RpcChatEditMessageContentResponseError_UNKNOWN_ERROR RpcChatEditMessageContentResponseErrorCode = 1
	RpcChatEditMessageContentResponseError_BAD_INPUT     RpcChatEditMessageContentResponseErrorCode = 2 // ...
)

// Enum value maps for RpcChatEditMessageContentResponseErrorCode.
var (
	RpcChatEditMessageContentResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcChatEditMessageContentResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcChatEditMessageContentResponseErrorCode) Enum() *RpcChatEditMessageContentResponseErrorCode {
	p := new(RpcChatEditMessageContentResponseErrorCode)
	*p = x
	return p
}

func (x RpcChatEditMessageContentResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcChatEditMessageContentResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[297].Descriptor()
}

func (RpcChatEditMessageContentResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[297]
}

func (x RpcChatEditMessageContentResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcChatEditMessageContentResponseErrorCode.Descriptor instead.
func (RpcChatEditMessageContentResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 41, 1, 1, 0, 0}
}

type RpcChatToggleMessageReactionResponseErrorCode int32

const (
	RpcChatToggleMessageReactionResponseError_NULL          RpcChatToggleMessageReactionResponseErrorCode = 0
	RpcChatToggleMessageReactionResponseError_UNKNOWN_ERROR RpcChatToggleMessageReactionResponseErrorCode = 1
	RpcChatToggleMessageReactionResponseError_BAD_INPUT     RpcChatToggleMessageReactionResponseErrorCode = 2 // ...
)

// Enum value maps for RpcChatToggleMessageReactionResponseErrorCode.
var (
	RpcChatToggleMessageReactionResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcChatToggleMessageReactionResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcChatToggleMessageReactionResponseErrorCode) Enum() *RpcChatToggleMessageReactionResponseErrorCode {
	p := new(RpcChatToggleMessageReactionResponseErrorCode)
	*p = x
	return p
}

func (x RpcChatToggleMessageReactionResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcChatToggleMessageReactionResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[298].Descriptor()
}

func (RpcChatToggleMessageReactionResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[298]
}

func (x RpcChatToggleMessageReactionResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcChatToggleMessageReactionResponseErrorCode.Descriptor instead.
func (RpcChatToggleMessageReactionResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 41, 2, 1, 0, 0}
}

type RpcChatDeleteMessageResponseErrorCode int32

const (
	RpcChatDeleteMessageResponseError_NULL          RpcChatDeleteMessageResponseErrorCode = 0
	RpcChatDeleteMessageResponseError_UNKNOWN_ERROR RpcChatDeleteMessageResponseErrorCode = 1
	RpcChatDeleteMessageResponseError_BAD_INPUT     RpcChatDeleteMessageResponseErrorCode = 2 // ...
)

// Enum value maps for RpcChatDeleteMessageResponseErrorCode.
var (
	RpcChatDeleteMessageResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcChatDeleteMessageResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcChatDeleteMessageResponseErrorCode) Enum() *RpcChatDeleteMessageResponseErrorCode {
	p := new(RpcChatDeleteMessageResponseErrorCode)
	*p = x
	return p
}

func (x RpcChatDeleteMessageResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcChatDeleteMessageResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[299].Descriptor()
}

func (RpcChatDeleteMessageResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[299]
}

func (x RpcChatDeleteMessageResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcChatDeleteMessageResponseErrorCode.Descriptor instead.
func (RpcChatDeleteMessageResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 41, 3, 1, 0, 0}
}

type RpcChatGetMessagesResponseErrorCode int32

const (
	RpcChatGetMessagesResponseError_NULL          RpcChatGetMessagesResponseErrorCode = 0
	RpcChatGetMessagesResponseError_UNKNOWN_ERROR RpcChatGetMessagesResponseErrorCode = 1
	RpcChatGetMessagesResponseError_BAD_INPUT     RpcChatGetMessagesResponseErrorCode = 2 // ...
)

// Enum value maps for RpcChatGetMessagesResponseErrorCode.
var (
	RpcChatGetMessagesResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcChatGetMessagesResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcChatGetMessagesResponseErrorCode) Enum() *RpcChatGetMessagesResponseErrorCode {
	p := new(RpcChatGetMessagesResponseErrorCode)
	*p = x
	return p
}

func (x RpcChatGetMessagesResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcChatGetMessagesResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[300].Descriptor()
}

func (RpcChatGetMessagesResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[300]
}

func (x RpcChatGetMessagesResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcChatGetMessagesResponseErrorCode.Descriptor instead.
func (RpcChatGetMessagesResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 41, 4, 1, 0, 0}
}

type RpcChatGetMessagesByIdsResponseErrorCode int32

const (
	RpcChatGetMessagesByIdsResponseError_NULL          RpcChatGetMessagesByIdsResponseErrorCode = 0
	RpcChatGetMessagesByIdsResponseError_UNKNOWN_ERROR RpcChatGetMessagesByIdsResponseErrorCode = 1
	RpcChatGetMessagesByIdsResponseError_BAD_INPUT     RpcChatGetMessagesByIdsResponseErrorCode = 2 // ...
)

// Enum value maps for RpcChatGetMessagesByIdsResponseErrorCode.
var (
	RpcChatGetMessagesByIdsResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcChatGetMessagesByIdsResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcChatGetMessagesByIdsResponseErrorCode) Enum() *RpcChatGetMessagesByIdsResponseErrorCode {
	p := new(RpcChatGetMessagesByIdsResponseErrorCode)
	*p = x
	return p
}

func (x RpcChatGetMessagesByIdsResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcChatGetMessagesByIdsResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[301].Descriptor()
}

func (RpcChatGetMessagesByIdsResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[301]
}

func (x RpcChatGetMessagesByIdsResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcChatGetMessagesByIdsResponseErrorCode.Descriptor instead.
func (RpcChatGetMessagesByIdsResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 41, 5, 1, 0, 0}
}

type RpcChatSubscribeLastMessagesResponseErrorCode int32

const (
	RpcChatSubscribeLastMessagesResponseError_NULL          RpcChatSubscribeLastMessagesResponseErrorCode = 0
	RpcChatSubscribeLastMessagesResponseError_UNKNOWN_ERROR RpcChatSubscribeLastMessagesResponseErrorCode = 1
	RpcChatSubscribeLastMessagesResponseError_BAD_INPUT     RpcChatSubscribeLastMessagesResponseErrorCode = 2 // ...
)

// Enum value maps for RpcChatSubscribeLastMessagesResponseErrorCode.
var (
	RpcChatSubscribeLastMessagesResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcChatSubscribeLastMessagesResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcChatSubscribeLastMessagesResponseErrorCode) Enum() *RpcChatSubscribeLastMessagesResponseErrorCode {
	p := new(RpcChatSubscribeLastMessagesResponseErrorCode)
	*p = x
	return p
}

func (x RpcChatSubscribeLastMessagesResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcChatSubscribeLastMessagesResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[302].Descriptor()
}

func (RpcChatSubscribeLastMessagesResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[302]
}

func (x RpcChatSubscribeLastMessagesResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcChatSubscribeLastMessagesResponseErrorCode.Descriptor instead.
func (RpcChatSubscribeLastMessagesResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 41, 6, 1, 0, 0}
}

type RpcChatUnsubscribeResponseErrorCode int32

const (
	RpcChatUnsubscribeResponseError_NULL          RpcChatUnsubscribeResponseErrorCode = 0
	RpcChatUnsubscribeResponseError_UNKNOWN_ERROR RpcChatUnsubscribeResponseErrorCode = 1
	RpcChatUnsubscribeResponseError_BAD_INPUT     RpcChatUnsubscribeResponseErrorCode = 2 // ...
)

// Enum value maps for RpcChatUnsubscribeResponseErrorCode.
var (
	RpcChatUnsubscribeResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcChatUnsubscribeResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcChatUnsubscribeResponseErrorCode) Enum() *RpcChatUnsubscribeResponseErrorCode {
	p := new(RpcChatUnsubscribeResponseErrorCode)
	*p = x
	return p
}

func (x RpcChatUnsubscribeResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcChatUnsubscribeResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[303].Descriptor()
}

func (RpcChatUnsubscribeResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[303]
}

func (x RpcChatUnsubscribeResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcChatUnsubscribeResponseErrorCode.Descriptor instead.
func (RpcChatUnsubscribeResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 41, 7, 1, 0, 0}
}

type RpcChatSubscribeToMessagePreviewsResponseErrorCode int32

const (
	RpcChatSubscribeToMessagePreviewsResponseError_NULL          RpcChatSubscribeToMessagePreviewsResponseErrorCode = 0
	RpcChatSubscribeToMessagePreviewsResponseError_UNKNOWN_ERROR RpcChatSubscribeToMessagePreviewsResponseErrorCode = 1
	RpcChatSubscribeToMessagePreviewsResponseError_BAD_INPUT     RpcChatSubscribeToMessagePreviewsResponseErrorCode = 2 // ...
)

// Enum value maps for RpcChatSubscribeToMessagePreviewsResponseErrorCode.
var (
	RpcChatSubscribeToMessagePreviewsResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcChatSubscribeToMessagePreviewsResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcChatSubscribeToMessagePreviewsResponseErrorCode) Enum() *RpcChatSubscribeToMessagePreviewsResponseErrorCode {
	p := new(RpcChatSubscribeToMessagePreviewsResponseErrorCode)
	*p = x
	return p
}

func (x RpcChatSubscribeToMessagePreviewsResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcChatSubscribeToMessagePreviewsResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[304].Descriptor()
}

func (RpcChatSubscribeToMessagePreviewsResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[304]
}

func (x RpcChatSubscribeToMessagePreviewsResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcChatSubscribeToMessagePreviewsResponseErrorCode.Descriptor instead.
func (RpcChatSubscribeToMessagePreviewsResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 41, 8, 1, 0, 0}
}

type RpcChatReadMessagesReadType int32

const (
	RpcChatReadMessages_messages RpcChatReadMessagesReadType = 0
	RpcChatReadMessages_replies  RpcChatReadMessagesReadType = 1
)

// Enum value maps for RpcChatReadMessagesReadType.
var (
	RpcChatReadMessagesReadType_name = map[int32]string{
		0: "messages",
		1: "replies",
	}
	RpcChatReadMessagesReadType_value = map[string]int32{
		"messages": 0,
		"replies":  1,
	}
)

func (x RpcChatReadMessagesReadType) Enum() *RpcChatReadMessagesReadType {
	p := new(RpcChatReadMessagesReadType)
	*p = x
	return p
}

func (x RpcChatReadMessagesReadType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcChatReadMessagesReadType) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[305].Descriptor()
}

func (RpcChatReadMessagesReadType) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[305]
}

func (x RpcChatReadMessagesReadType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcChatReadMessagesReadType.Descriptor instead.
func (RpcChatReadMessagesReadType) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 41, 9, 0}
}

type RpcChatReadMessagesResponseErrorCode int32

const (
	RpcChatReadMessagesResponseError_NULL               RpcChatReadMessagesResponseErrorCode = 0
	RpcChatReadMessagesResponseError_UNKNOWN_ERROR      RpcChatReadMessagesResponseErrorCode = 1
	RpcChatReadMessagesResponseError_BAD_INPUT          RpcChatReadMessagesResponseErrorCode = 2
	RpcChatReadMessagesResponseError_MESSAGES_NOT_FOUND RpcChatReadMessagesResponseErrorCode = 100 // chat is empty or invalid beforeOrderId/lastDbState
)

// Enum value maps for RpcChatReadMessagesResponseErrorCode.
var (
	RpcChatReadMessagesResponseErrorCode_name = map[int32]string{
		0:   "NULL",
		1:   "UNKNOWN_ERROR",
		2:   "BAD_INPUT",
		100: "MESSAGES_NOT_FOUND",
	}
	RpcChatReadMessagesResponseErrorCode_value = map[string]int32{
		"NULL":               0,
		"UNKNOWN_ERROR":      1,
		"BAD_INPUT":          2,
		"MESSAGES_NOT_FOUND": 100,
	}
)

func (x RpcChatReadMessagesResponseErrorCode) Enum() *RpcChatReadMessagesResponseErrorCode {
	p := new(RpcChatReadMessagesResponseErrorCode)
	*p = x
	return p
}

func (x RpcChatReadMessagesResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcChatReadMessagesResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[306].Descriptor()
}

func (RpcChatReadMessagesResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[306]
}

func (x RpcChatReadMessagesResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcChatReadMessagesResponseErrorCode.Descriptor instead.
func (RpcChatReadMessagesResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 41, 9, 1, 0, 0}
}

type RpcChatUnreadResponseErrorCode int32

const (
	RpcChatUnreadResponseError_NULL          RpcChatUnreadResponseErrorCode = 0
	RpcChatUnreadResponseError_UNKNOWN_ERROR RpcChatUnreadResponseErrorCode = 1
	RpcChatUnreadResponseError_BAD_INPUT     RpcChatUnreadResponseErrorCode = 2
)

// Enum value maps for RpcChatUnreadResponseErrorCode.
var (
	RpcChatUnreadResponseErrorCode_name = map[int32]string{
		0: "NULL",
		1: "UNKNOWN_ERROR",
		2: "BAD_INPUT",
	}
	RpcChatUnreadResponseErrorCode_value = map[string]int32{
		"NULL":          0,
		"UNKNOWN_ERROR": 1,
		"BAD_INPUT":     2,
	}
)

func (x RpcChatUnreadResponseErrorCode) Enum() *RpcChatUnreadResponseErrorCode {
	p := new(RpcChatUnreadResponseErrorCode)
	*p = x
	return p
}

func (x RpcChatUnreadResponseErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RpcChatUnreadResponseErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_commands_proto_enumTypes[307].Descriptor()
}

func (RpcChatUnreadResponseErrorCode) Type() protoreflect.EnumType {
	return &file_pb_protos_commands_proto_enumTypes[307]
}

func (x RpcChatUnreadResponseErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RpcChatUnreadResponseErrorCode.Descriptor instead.
func (RpcChatUnreadResponseErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 41, 10, 1, 0, 0}
}

// Rpc is a namespace, that agregates all of the service commands between client and middleware.
// Structure: Topic > Subtopic > Subsub... > Action > (Request, Response).
// Request – message from a client.
// Response – message from a middleware.
type Rpc struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Rpc) Reset() {
	*x = Rpc{}
	mi := &file_pb_protos_commands_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Rpc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rpc) ProtoMessage() {}

func (x *Rpc) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rpc.ProtoReflect.Descriptor instead.
func (*Rpc) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0}
}

type Empty struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Empty) Reset() {
	*x = Empty{}
	mi := &file_pb_protos_commands_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{1}
}

type StreamRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Token         string                 `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamRequest) Reset() {
	*x = StreamRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamRequest) ProtoMessage() {}

func (x *StreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamRequest.ProtoReflect.Descriptor instead.
func (*StreamRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{2}
}

func (x *StreamRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type RpcApp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcApp) Reset() {
	*x = RpcApp{}
	mi := &file_pb_protos_commands_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcApp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcApp) ProtoMessage() {}

func (x *RpcApp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcApp.ProtoReflect.Descriptor instead.
func (*RpcApp) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 0}
}

type RpcSpace struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcSpace) Reset() {
	*x = RpcSpace{}
	mi := &file_pb_protos_commands_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcSpace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcSpace) ProtoMessage() {}

func (x *RpcSpace) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcSpace.ProtoReflect.Descriptor instead.
func (*RpcSpace) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 1}
}

type RpcWallet struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcWallet) Reset() {
	*x = RpcWallet{}
	mi := &file_pb_protos_commands_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcWallet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcWallet) ProtoMessage() {}

func (x *RpcWallet) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcWallet.ProtoReflect.Descriptor instead.
func (*RpcWallet) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 2}
}

type RpcAccount struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcAccount) Reset() {
	*x = RpcAccount{}
	mi := &file_pb_protos_commands_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcAccount) ProtoMessage() {}

func (x *RpcAccount) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcAccount.ProtoReflect.Descriptor instead.
func (*RpcAccount) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 3}
}

type RpcWorkspace struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcWorkspace) Reset() {
	*x = RpcWorkspace{}
	mi := &file_pb_protos_commands_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcWorkspace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcWorkspace) ProtoMessage() {}

func (x *RpcWorkspace) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcWorkspace.ProtoReflect.Descriptor instead.
func (*RpcWorkspace) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 4}
}

type RpcPublishing struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcPublishing) Reset() {
	*x = RpcPublishing{}
	mi := &file_pb_protos_commands_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcPublishing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcPublishing) ProtoMessage() {}

func (x *RpcPublishing) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcPublishing.ProtoReflect.Descriptor instead.
func (*RpcPublishing) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 5}
}

type RpcObject struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObject) Reset() {
	*x = RpcObject{}
	mi := &file_pb_protos_commands_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObject) ProtoMessage() {}

func (x *RpcObject) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObject.ProtoReflect.Descriptor instead.
func (*RpcObject) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6}
}

type RpcObjectCollection struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectCollection) Reset() {
	*x = RpcObjectCollection{}
	mi := &file_pb_protos_commands_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectCollection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectCollection) ProtoMessage() {}

func (x *RpcObjectCollection) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectCollection.ProtoReflect.Descriptor instead.
func (*RpcObjectCollection) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 7}
}

type RpcObjectRelation struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectRelation) Reset() {
	*x = RpcObjectRelation{}
	mi := &file_pb_protos_commands_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectRelation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectRelation) ProtoMessage() {}

func (x *RpcObjectRelation) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectRelation.ProtoReflect.Descriptor instead.
func (*RpcObjectRelation) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 8}
}

type RpcObjectType struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectType) Reset() {
	*x = RpcObjectType{}
	mi := &file_pb_protos_commands_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectType) ProtoMessage() {}

func (x *RpcObjectType) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectType.ProtoReflect.Descriptor instead.
func (*RpcObjectType) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 9}
}

type RpcRelation struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcRelation) Reset() {
	*x = RpcRelation{}
	mi := &file_pb_protos_commands_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcRelation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcRelation) ProtoMessage() {}

func (x *RpcRelation) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcRelation.ProtoReflect.Descriptor instead.
func (*RpcRelation) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 10}
}

type RpcHistory struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcHistory) Reset() {
	*x = RpcHistory{}
	mi := &file_pb_protos_commands_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcHistory) ProtoMessage() {}

func (x *RpcHistory) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcHistory.ProtoReflect.Descriptor instead.
func (*RpcHistory) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 11}
}

type RpcFile struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcFile) Reset() {
	*x = RpcFile{}
	mi := &file_pb_protos_commands_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcFile) ProtoMessage() {}

func (x *RpcFile) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcFile.ProtoReflect.Descriptor instead.
func (*RpcFile) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 12}
}

type RpcNavigation struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcNavigation) Reset() {
	*x = RpcNavigation{}
	mi := &file_pb_protos_commands_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcNavigation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcNavigation) ProtoMessage() {}

func (x *RpcNavigation) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcNavigation.ProtoReflect.Descriptor instead.
func (*RpcNavigation) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 13}
}

type RpcTemplate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcTemplate) Reset() {
	*x = RpcTemplate{}
	mi := &file_pb_protos_commands_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcTemplate) ProtoMessage() {}

func (x *RpcTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcTemplate.ProtoReflect.Descriptor instead.
func (*RpcTemplate) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 14}
}

type RpcLinkPreview struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcLinkPreview) Reset() {
	*x = RpcLinkPreview{}
	mi := &file_pb_protos_commands_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcLinkPreview) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcLinkPreview) ProtoMessage() {}

func (x *RpcLinkPreview) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcLinkPreview.ProtoReflect.Descriptor instead.
func (*RpcLinkPreview) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 15}
}

type RpcUnsplash struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcUnsplash) Reset() {
	*x = RpcUnsplash{}
	mi := &file_pb_protos_commands_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcUnsplash) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcUnsplash) ProtoMessage() {}

func (x *RpcUnsplash) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcUnsplash.ProtoReflect.Descriptor instead.
func (*RpcUnsplash) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 16}
}

type RpcGallery struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcGallery) Reset() {
	*x = RpcGallery{}
	mi := &file_pb_protos_commands_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcGallery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcGallery) ProtoMessage() {}

func (x *RpcGallery) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcGallery.ProtoReflect.Descriptor instead.
func (*RpcGallery) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 17}
}

// Block commands
type RpcBlock struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlock) Reset() {
	*x = RpcBlock{}
	mi := &file_pb_protos_commands_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlock) ProtoMessage() {}

func (x *RpcBlock) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlock.ProtoReflect.Descriptor instead.
func (*RpcBlock) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18}
}

type RpcBlockLatex struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockLatex) Reset() {
	*x = RpcBlockLatex{}
	mi := &file_pb_protos_commands_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockLatex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockLatex) ProtoMessage() {}

func (x *RpcBlockLatex) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockLatex.ProtoReflect.Descriptor instead.
func (*RpcBlockLatex) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 19}
}

type RpcBlockText struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockText) Reset() {
	*x = RpcBlockText{}
	mi := &file_pb_protos_commands_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockText) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockText) ProtoMessage() {}

func (x *RpcBlockText) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockText.ProtoReflect.Descriptor instead.
func (*RpcBlockText) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 20}
}

type RpcBlockTable struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTable) Reset() {
	*x = RpcBlockTable{}
	mi := &file_pb_protos_commands_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTable) ProtoMessage() {}

func (x *RpcBlockTable) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTable.ProtoReflect.Descriptor instead.
func (*RpcBlockTable) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 21}
}

type RpcBlockFile struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockFile) Reset() {
	*x = RpcBlockFile{}
	mi := &file_pb_protos_commands_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockFile) ProtoMessage() {}

func (x *RpcBlockFile) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockFile.ProtoReflect.Descriptor instead.
func (*RpcBlockFile) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 22}
}

type RpcBlockImage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockImage) Reset() {
	*x = RpcBlockImage{}
	mi := &file_pb_protos_commands_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockImage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockImage) ProtoMessage() {}

func (x *RpcBlockImage) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockImage.ProtoReflect.Descriptor instead.
func (*RpcBlockImage) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 23}
}

type RpcBlockVideo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockVideo) Reset() {
	*x = RpcBlockVideo{}
	mi := &file_pb_protos_commands_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockVideo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockVideo) ProtoMessage() {}

func (x *RpcBlockVideo) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockVideo.ProtoReflect.Descriptor instead.
func (*RpcBlockVideo) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 24}
}

type RpcBlockLink struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockLink) Reset() {
	*x = RpcBlockLink{}
	mi := &file_pb_protos_commands_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockLink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockLink) ProtoMessage() {}

func (x *RpcBlockLink) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockLink.ProtoReflect.Descriptor instead.
func (*RpcBlockLink) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 25}
}

type RpcBlockRelation struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockRelation) Reset() {
	*x = RpcBlockRelation{}
	mi := &file_pb_protos_commands_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockRelation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockRelation) ProtoMessage() {}

func (x *RpcBlockRelation) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockRelation.ProtoReflect.Descriptor instead.
func (*RpcBlockRelation) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 26}
}

type RpcBlockBookmark struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockBookmark) Reset() {
	*x = RpcBlockBookmark{}
	mi := &file_pb_protos_commands_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockBookmark) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockBookmark) ProtoMessage() {}

func (x *RpcBlockBookmark) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockBookmark.ProtoReflect.Descriptor instead.
func (*RpcBlockBookmark) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 27}
}

type RpcBlockDiv struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDiv) Reset() {
	*x = RpcBlockDiv{}
	mi := &file_pb_protos_commands_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDiv) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDiv) ProtoMessage() {}

func (x *RpcBlockDiv) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDiv.ProtoReflect.Descriptor instead.
func (*RpcBlockDiv) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 28}
}

type RpcBlockDataview struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataview) Reset() {
	*x = RpcBlockDataview{}
	mi := &file_pb_protos_commands_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataview) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataview) ProtoMessage() {}

func (x *RpcBlockDataview) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataview.ProtoReflect.Descriptor instead.
func (*RpcBlockDataview) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29}
}

type RpcBlockWidget struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockWidget) Reset() {
	*x = RpcBlockWidget{}
	mi := &file_pb_protos_commands_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockWidget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockWidget) ProtoMessage() {}

func (x *RpcBlockWidget) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockWidget.ProtoReflect.Descriptor instead.
func (*RpcBlockWidget) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 30}
}

type RpcDebug struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcDebug) Reset() {
	*x = RpcDebug{}
	mi := &file_pb_protos_commands_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcDebug) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcDebug) ProtoMessage() {}

func (x *RpcDebug) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcDebug.ProtoReflect.Descriptor instead.
func (*RpcDebug) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 31}
}

type RpcInitial struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcInitial) Reset() {
	*x = RpcInitial{}
	mi := &file_pb_protos_commands_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcInitial) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcInitial) ProtoMessage() {}

func (x *RpcInitial) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcInitial.ProtoReflect.Descriptor instead.
func (*RpcInitial) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 32}
}

type RpcLog struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcLog) Reset() {
	*x = RpcLog{}
	mi := &file_pb_protos_commands_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcLog) ProtoMessage() {}

func (x *RpcLog) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcLog.ProtoReflect.Descriptor instead.
func (*RpcLog) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 33}
}

type RpcProcess struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcProcess) Reset() {
	*x = RpcProcess{}
	mi := &file_pb_protos_commands_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcProcess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcProcess) ProtoMessage() {}

func (x *RpcProcess) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcProcess.ProtoReflect.Descriptor instead.
func (*RpcProcess) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 34}
}

type RpcGenericErrorResponse struct {
	state         protoimpl.MessageState        `protogen:"open.v1"`
	Error         *RpcGenericErrorResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcGenericErrorResponse) Reset() {
	*x = RpcGenericErrorResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcGenericErrorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcGenericErrorResponse) ProtoMessage() {}

func (x *RpcGenericErrorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcGenericErrorResponse.ProtoReflect.Descriptor instead.
func (*RpcGenericErrorResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 35}
}

func (x *RpcGenericErrorResponse) GetError() *RpcGenericErrorResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

type RpcNotification struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcNotification) Reset() {
	*x = RpcNotification{}
	mi := &file_pb_protos_commands_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcNotification) ProtoMessage() {}

func (x *RpcNotification) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcNotification.ProtoReflect.Descriptor instead.
func (*RpcNotification) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 36}
}

// *
// A Membership is a bundle of several "Features"
// every user should have one and only one tier
// users can not have N tiers (no combining)
type RpcMembership struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcMembership) Reset() {
	*x = RpcMembership{}
	mi := &file_pb_protos_commands_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcMembership) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcMembership) ProtoMessage() {}

func (x *RpcMembership) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcMembership.ProtoReflect.Descriptor instead.
func (*RpcMembership) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 37}
}

type RpcNameService struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcNameService) Reset() {
	*x = RpcNameService{}
	mi := &file_pb_protos_commands_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcNameService) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcNameService) ProtoMessage() {}

func (x *RpcNameService) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcNameService.ProtoReflect.Descriptor instead.
func (*RpcNameService) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 38}
}

type RpcBroadcast struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBroadcast) Reset() {
	*x = RpcBroadcast{}
	mi := &file_pb_protos_commands_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBroadcast) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBroadcast) ProtoMessage() {}

func (x *RpcBroadcast) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBroadcast.ProtoReflect.Descriptor instead.
func (*RpcBroadcast) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 39}
}

type RpcDevice struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcDevice) Reset() {
	*x = RpcDevice{}
	mi := &file_pb_protos_commands_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcDevice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcDevice) ProtoMessage() {}

func (x *RpcDevice) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcDevice.ProtoReflect.Descriptor instead.
func (*RpcDevice) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 40}
}

type RpcChat struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcChat) Reset() {
	*x = RpcChat{}
	mi := &file_pb_protos_commands_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcChat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcChat) ProtoMessage() {}

func (x *RpcChat) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcChat.ProtoReflect.Descriptor instead.
func (*RpcChat) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 41}
}

type RpcAppGetVersion struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcAppGetVersion) Reset() {
	*x = RpcAppGetVersion{}
	mi := &file_pb_protos_commands_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcAppGetVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcAppGetVersion) ProtoMessage() {}

func (x *RpcAppGetVersion) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcAppGetVersion.ProtoReflect.Descriptor instead.
func (*RpcAppGetVersion) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 0, 0}
}

type RpcAppSetDeviceState struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcAppSetDeviceState) Reset() {
	*x = RpcAppSetDeviceState{}
	mi := &file_pb_protos_commands_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcAppSetDeviceState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcAppSetDeviceState) ProtoMessage() {}

func (x *RpcAppSetDeviceState) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcAppSetDeviceState.ProtoReflect.Descriptor instead.
func (*RpcAppSetDeviceState) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 0, 1}
}

type RpcAppShutdown struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcAppShutdown) Reset() {
	*x = RpcAppShutdown{}
	mi := &file_pb_protos_commands_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcAppShutdown) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcAppShutdown) ProtoMessage() {}

func (x *RpcAppShutdown) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcAppShutdown.ProtoReflect.Descriptor instead.
func (*RpcAppShutdown) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 0, 2}
}

type RpcAppGetVersionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcAppGetVersionRequest) Reset() {
	*x = RpcAppGetVersionRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcAppGetVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcAppGetVersionRequest) ProtoMessage() {}

func (x *RpcAppGetVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcAppGetVersionRequest.ProtoReflect.Descriptor instead.
func (*RpcAppGetVersionRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 0, 0, 0}
}

type RpcAppGetVersionResponse struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	Error         *RpcAppGetVersionResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Version       string                         `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Details       string                         `protobuf:"bytes,3,opt,name=details,proto3" json:"details,omitempty"` // build date, branch and commit
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcAppGetVersionResponse) Reset() {
	*x = RpcAppGetVersionResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcAppGetVersionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcAppGetVersionResponse) ProtoMessage() {}

func (x *RpcAppGetVersionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcAppGetVersionResponse.ProtoReflect.Descriptor instead.
func (*RpcAppGetVersionResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 0, 0, 1}
}

func (x *RpcAppGetVersionResponse) GetError() *RpcAppGetVersionResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcAppGetVersionResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *RpcAppGetVersionResponse) GetDetails() string {
	if x != nil {
		return x.Details
	}
	return ""
}

type RpcAppGetVersionResponseError struct {
	state         protoimpl.MessageState            `protogen:"open.v1"`
	Code          RpcAppGetVersionResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcAppGetVersionResponseErrorCode" json:"code,omitempty"`
	Description   string                            `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcAppGetVersionResponseError) Reset() {
	*x = RpcAppGetVersionResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcAppGetVersionResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcAppGetVersionResponseError) ProtoMessage() {}

func (x *RpcAppGetVersionResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcAppGetVersionResponseError.ProtoReflect.Descriptor instead.
func (*RpcAppGetVersionResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 0, 0, 1, 0}
}

func (x *RpcAppGetVersionResponseError) GetCode() RpcAppGetVersionResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcAppGetVersionResponseError_NULL
}

func (x *RpcAppGetVersionResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcAppSetDeviceStateRequest struct {
	state         protoimpl.MessageState                 `protogen:"open.v1"`
	DeviceState   RpcAppSetDeviceStateRequestDeviceState `protobuf:"varint,1,opt,name=deviceState,proto3,enum=anytype.RpcAppSetDeviceStateRequestDeviceState" json:"deviceState,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcAppSetDeviceStateRequest) Reset() {
	*x = RpcAppSetDeviceStateRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcAppSetDeviceStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcAppSetDeviceStateRequest) ProtoMessage() {}

func (x *RpcAppSetDeviceStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcAppSetDeviceStateRequest.ProtoReflect.Descriptor instead.
func (*RpcAppSetDeviceStateRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 0, 1, 0}
}

func (x *RpcAppSetDeviceStateRequest) GetDeviceState() RpcAppSetDeviceStateRequestDeviceState {
	if x != nil {
		return x.DeviceState
	}
	return RpcAppSetDeviceStateRequest_BACKGROUND
}

type RpcAppSetDeviceStateResponse struct {
	state         protoimpl.MessageState             `protogen:"open.v1"`
	Error         *RpcAppSetDeviceStateResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcAppSetDeviceStateResponse) Reset() {
	*x = RpcAppSetDeviceStateResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcAppSetDeviceStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcAppSetDeviceStateResponse) ProtoMessage() {}

func (x *RpcAppSetDeviceStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcAppSetDeviceStateResponse.ProtoReflect.Descriptor instead.
func (*RpcAppSetDeviceStateResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 0, 1, 1}
}

func (x *RpcAppSetDeviceStateResponse) GetError() *RpcAppSetDeviceStateResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

type RpcAppSetDeviceStateResponseError struct {
	state         protoimpl.MessageState                `protogen:"open.v1"`
	Code          RpcAppSetDeviceStateResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcAppSetDeviceStateResponseErrorCode" json:"code,omitempty"`
	Description   string                                `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcAppSetDeviceStateResponseError) Reset() {
	*x = RpcAppSetDeviceStateResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcAppSetDeviceStateResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcAppSetDeviceStateResponseError) ProtoMessage() {}

func (x *RpcAppSetDeviceStateResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcAppSetDeviceStateResponseError.ProtoReflect.Descriptor instead.
func (*RpcAppSetDeviceStateResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 0, 1, 1, 0}
}

func (x *RpcAppSetDeviceStateResponseError) GetCode() RpcAppSetDeviceStateResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcAppSetDeviceStateResponseError_NULL
}

func (x *RpcAppSetDeviceStateResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcAppShutdownRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcAppShutdownRequest) Reset() {
	*x = RpcAppShutdownRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcAppShutdownRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcAppShutdownRequest) ProtoMessage() {}

func (x *RpcAppShutdownRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcAppShutdownRequest.ProtoReflect.Descriptor instead.
func (*RpcAppShutdownRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 0, 2, 0}
}

type RpcAppShutdownResponse struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	Error         *RpcAppShutdownResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcAppShutdownResponse) Reset() {
	*x = RpcAppShutdownResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcAppShutdownResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcAppShutdownResponse) ProtoMessage() {}

func (x *RpcAppShutdownResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcAppShutdownResponse.ProtoReflect.Descriptor instead.
func (*RpcAppShutdownResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 0, 2, 1}
}

func (x *RpcAppShutdownResponse) GetError() *RpcAppShutdownResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

type RpcAppShutdownResponseError struct {
	state         protoimpl.MessageState          `protogen:"open.v1"`
	Code          RpcAppShutdownResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcAppShutdownResponseErrorCode" json:"code,omitempty"`
	Description   string                          `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcAppShutdownResponseError) Reset() {
	*x = RpcAppShutdownResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcAppShutdownResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcAppShutdownResponseError) ProtoMessage() {}

func (x *RpcAppShutdownResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcAppShutdownResponseError.ProtoReflect.Descriptor instead.
func (*RpcAppShutdownResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 0, 2, 1, 0}
}

func (x *RpcAppShutdownResponseError) GetCode() RpcAppShutdownResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcAppShutdownResponseError_NULL
}

func (x *RpcAppShutdownResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcSpaceLeaveApprove struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcSpaceLeaveApprove) Reset() {
	*x = RpcSpaceLeaveApprove{}
	mi := &file_pb_protos_commands_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcSpaceLeaveApprove) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcSpaceLeaveApprove) ProtoMessage() {}

func (x *RpcSpaceLeaveApprove) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcSpaceLeaveApprove.ProtoReflect.Descriptor instead.
func (*RpcSpaceLeaveApprove) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 1, 0}
}

type RpcSpaceMakeShareable struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcSpaceMakeShareable) Reset() {
	*x = RpcSpaceMakeShareable{}
	mi := &file_pb_protos_commands_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcSpaceMakeShareable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcSpaceMakeShareable) ProtoMessage() {}

func (x *RpcSpaceMakeShareable) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcSpaceMakeShareable.ProtoReflect.Descriptor instead.
func (*RpcSpaceMakeShareable) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 1, 1}
}

type RpcSpaceInviteGenerate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcSpaceInviteGenerate) Reset() {
	*x = RpcSpaceInviteGenerate{}
	mi := &file_pb_protos_commands_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcSpaceInviteGenerate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcSpaceInviteGenerate) ProtoMessage() {}

func (x *RpcSpaceInviteGenerate) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcSpaceInviteGenerate.ProtoReflect.Descriptor instead.
func (*RpcSpaceInviteGenerate) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 1, 2}
}

type RpcSpaceStopSharing struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcSpaceStopSharing) Reset() {
	*x = RpcSpaceStopSharing{}
	mi := &file_pb_protos_commands_proto_msgTypes[60]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcSpaceStopSharing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcSpaceStopSharing) ProtoMessage() {}

func (x *RpcSpaceStopSharing) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[60]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcSpaceStopSharing.ProtoReflect.Descriptor instead.
func (*RpcSpaceStopSharing) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 1, 3}
}

type RpcSpaceInviteGetCurrent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcSpaceInviteGetCurrent) Reset() {
	*x = RpcSpaceInviteGetCurrent{}
	mi := &file_pb_protos_commands_proto_msgTypes[61]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcSpaceInviteGetCurrent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcSpaceInviteGetCurrent) ProtoMessage() {}

func (x *RpcSpaceInviteGetCurrent) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[61]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcSpaceInviteGetCurrent.ProtoReflect.Descriptor instead.
func (*RpcSpaceInviteGetCurrent) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 1, 4}
}

type RpcSpaceInviteRevoke struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcSpaceInviteRevoke) Reset() {
	*x = RpcSpaceInviteRevoke{}
	mi := &file_pb_protos_commands_proto_msgTypes[62]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcSpaceInviteRevoke) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcSpaceInviteRevoke) ProtoMessage() {}

func (x *RpcSpaceInviteRevoke) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[62]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcSpaceInviteRevoke.ProtoReflect.Descriptor instead.
func (*RpcSpaceInviteRevoke) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 1, 5}
}

type RpcSpaceInviteView struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcSpaceInviteView) Reset() {
	*x = RpcSpaceInviteView{}
	mi := &file_pb_protos_commands_proto_msgTypes[63]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcSpaceInviteView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcSpaceInviteView) ProtoMessage() {}

func (x *RpcSpaceInviteView) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[63]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcSpaceInviteView.ProtoReflect.Descriptor instead.
func (*RpcSpaceInviteView) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 1, 6}
}

type RpcSpaceJoin struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcSpaceJoin) Reset() {
	*x = RpcSpaceJoin{}
	mi := &file_pb_protos_commands_proto_msgTypes[64]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcSpaceJoin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcSpaceJoin) ProtoMessage() {}

func (x *RpcSpaceJoin) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[64]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcSpaceJoin.ProtoReflect.Descriptor instead.
func (*RpcSpaceJoin) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 1, 7}
}

type RpcSpaceJoinCancel struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcSpaceJoinCancel) Reset() {
	*x = RpcSpaceJoinCancel{}
	mi := &file_pb_protos_commands_proto_msgTypes[65]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcSpaceJoinCancel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcSpaceJoinCancel) ProtoMessage() {}

func (x *RpcSpaceJoinCancel) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[65]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcSpaceJoinCancel.ProtoReflect.Descriptor instead.
func (*RpcSpaceJoinCancel) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 1, 8}
}

type RpcSpaceRequestApprove struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcSpaceRequestApprove) Reset() {
	*x = RpcSpaceRequestApprove{}
	mi := &file_pb_protos_commands_proto_msgTypes[66]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcSpaceRequestApprove) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcSpaceRequestApprove) ProtoMessage() {}

func (x *RpcSpaceRequestApprove) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[66]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcSpaceRequestApprove.ProtoReflect.Descriptor instead.
func (*RpcSpaceRequestApprove) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 1, 9}
}

type RpcSpaceRequestDecline struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcSpaceRequestDecline) Reset() {
	*x = RpcSpaceRequestDecline{}
	mi := &file_pb_protos_commands_proto_msgTypes[67]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcSpaceRequestDecline) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcSpaceRequestDecline) ProtoMessage() {}

func (x *RpcSpaceRequestDecline) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[67]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcSpaceRequestDecline.ProtoReflect.Descriptor instead.
func (*RpcSpaceRequestDecline) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 1, 10}
}

type RpcSpaceParticipantRemove struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcSpaceParticipantRemove) Reset() {
	*x = RpcSpaceParticipantRemove{}
	mi := &file_pb_protos_commands_proto_msgTypes[68]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcSpaceParticipantRemove) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcSpaceParticipantRemove) ProtoMessage() {}

func (x *RpcSpaceParticipantRemove) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[68]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcSpaceParticipantRemove.ProtoReflect.Descriptor instead.
func (*RpcSpaceParticipantRemove) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 1, 11}
}

type RpcSpaceParticipantPermissionsChange struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcSpaceParticipantPermissionsChange) Reset() {
	*x = RpcSpaceParticipantPermissionsChange{}
	mi := &file_pb_protos_commands_proto_msgTypes[69]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcSpaceParticipantPermissionsChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcSpaceParticipantPermissionsChange) ProtoMessage() {}

func (x *RpcSpaceParticipantPermissionsChange) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[69]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcSpaceParticipantPermissionsChange.ProtoReflect.Descriptor instead.
func (*RpcSpaceParticipantPermissionsChange) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 1, 12}
}

type RpcSpaceDelete struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcSpaceDelete) Reset() {
	*x = RpcSpaceDelete{}
	mi := &file_pb_protos_commands_proto_msgTypes[70]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcSpaceDelete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcSpaceDelete) ProtoMessage() {}

func (x *RpcSpaceDelete) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[70]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcSpaceDelete.ProtoReflect.Descriptor instead.
func (*RpcSpaceDelete) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 1, 13}
}

type RpcSpaceSetOrder struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcSpaceSetOrder) Reset() {
	*x = RpcSpaceSetOrder{}
	mi := &file_pb_protos_commands_proto_msgTypes[71]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcSpaceSetOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcSpaceSetOrder) ProtoMessage() {}

func (x *RpcSpaceSetOrder) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[71]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcSpaceSetOrder.ProtoReflect.Descriptor instead.
func (*RpcSpaceSetOrder) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 1, 14}
}

type RpcSpaceUnsetOrder struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcSpaceUnsetOrder) Reset() {
	*x = RpcSpaceUnsetOrder{}
	mi := &file_pb_protos_commands_proto_msgTypes[72]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcSpaceUnsetOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcSpaceUnsetOrder) ProtoMessage() {}

func (x *RpcSpaceUnsetOrder) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[72]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcSpaceUnsetOrder.ProtoReflect.Descriptor instead.
func (*RpcSpaceUnsetOrder) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 1, 15}
}

type RpcSpaceLeaveApproveRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SpaceId       string                 `protobuf:"bytes,1,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	Identities    []string               `protobuf:"bytes,2,rep,name=identities,proto3" json:"identities,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcSpaceLeaveApproveRequest) Reset() {
	*x = RpcSpaceLeaveApproveRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[73]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcSpaceLeaveApproveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcSpaceLeaveApproveRequest) ProtoMessage() {}

func (x *RpcSpaceLeaveApproveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[73]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcSpaceLeaveApproveRequest.ProtoReflect.Descriptor instead.
func (*RpcSpaceLeaveApproveRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 1, 0, 0}
}

func (x *RpcSpaceLeaveApproveRequest) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *RpcSpaceLeaveApproveRequest) GetIdentities() []string {
	if x != nil {
		return x.Identities
	}
	return nil
}

type RpcSpaceLeaveApproveResponse struct {
	state         protoimpl.MessageState             `protogen:"open.v1"`
	Error         *RpcSpaceLeaveApproveResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcSpaceLeaveApproveResponse) Reset() {
	*x = RpcSpaceLeaveApproveResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[74]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcSpaceLeaveApproveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcSpaceLeaveApproveResponse) ProtoMessage() {}

func (x *RpcSpaceLeaveApproveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[74]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcSpaceLeaveApproveResponse.ProtoReflect.Descriptor instead.
func (*RpcSpaceLeaveApproveResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 1, 0, 1}
}

func (x *RpcSpaceLeaveApproveResponse) GetError() *RpcSpaceLeaveApproveResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

type RpcSpaceLeaveApproveResponseError struct {
	state         protoimpl.MessageState                `protogen:"open.v1"`
	Code          RpcSpaceLeaveApproveResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcSpaceLeaveApproveResponseErrorCode" json:"code,omitempty"`
	Description   string                                `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcSpaceLeaveApproveResponseError) Reset() {
	*x = RpcSpaceLeaveApproveResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[75]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcSpaceLeaveApproveResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcSpaceLeaveApproveResponseError) ProtoMessage() {}

func (x *RpcSpaceLeaveApproveResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[75]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcSpaceLeaveApproveResponseError.ProtoReflect.Descriptor instead.
func (*RpcSpaceLeaveApproveResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 1, 0, 1, 0}
}

func (x *RpcSpaceLeaveApproveResponseError) GetCode() RpcSpaceLeaveApproveResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcSpaceLeaveApproveResponseError_NULL
}

func (x *RpcSpaceLeaveApproveResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcSpaceMakeShareableRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SpaceId       string                 `protobuf:"bytes,1,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcSpaceMakeShareableRequest) Reset() {
	*x = RpcSpaceMakeShareableRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[76]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcSpaceMakeShareableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcSpaceMakeShareableRequest) ProtoMessage() {}

func (x *RpcSpaceMakeShareableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[76]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcSpaceMakeShareableRequest.ProtoReflect.Descriptor instead.
func (*RpcSpaceMakeShareableRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 1, 1, 0}
}

func (x *RpcSpaceMakeShareableRequest) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

type RpcSpaceMakeShareableResponse struct {
	state         protoimpl.MessageState              `protogen:"open.v1"`
	Error         *RpcSpaceMakeShareableResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcSpaceMakeShareableResponse) Reset() {
	*x = RpcSpaceMakeShareableResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[77]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcSpaceMakeShareableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcSpaceMakeShareableResponse) ProtoMessage() {}

func (x *RpcSpaceMakeShareableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[77]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcSpaceMakeShareableResponse.ProtoReflect.Descriptor instead.
func (*RpcSpaceMakeShareableResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 1, 1, 1}
}

func (x *RpcSpaceMakeShareableResponse) GetError() *RpcSpaceMakeShareableResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

type RpcSpaceMakeShareableResponseError struct {
	state         protoimpl.MessageState                 `protogen:"open.v1"`
	Code          RpcSpaceMakeShareableResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcSpaceMakeShareableResponseErrorCode" json:"code,omitempty"`
	Description   string                                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcSpaceMakeShareableResponseError) Reset() {
	*x = RpcSpaceMakeShareableResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[78]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcSpaceMakeShareableResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcSpaceMakeShareableResponseError) ProtoMessage() {}

func (x *RpcSpaceMakeShareableResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[78]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcSpaceMakeShareableResponseError.ProtoReflect.Descriptor instead.
func (*RpcSpaceMakeShareableResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 1, 1, 1, 0}
}

func (x *RpcSpaceMakeShareableResponseError) GetCode() RpcSpaceMakeShareableResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcSpaceMakeShareableResponseError_NULL
}

func (x *RpcSpaceMakeShareableResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcSpaceInviteGenerateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SpaceId       string                 `protobuf:"bytes,1,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcSpaceInviteGenerateRequest) Reset() {
	*x = RpcSpaceInviteGenerateRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[79]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcSpaceInviteGenerateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcSpaceInviteGenerateRequest) ProtoMessage() {}

func (x *RpcSpaceInviteGenerateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[79]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcSpaceInviteGenerateRequest.ProtoReflect.Descriptor instead.
func (*RpcSpaceInviteGenerateRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 1, 2, 0}
}

func (x *RpcSpaceInviteGenerateRequest) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

type RpcSpaceInviteGenerateResponse struct {
	state         protoimpl.MessageState               `protogen:"open.v1"`
	Error         *RpcSpaceInviteGenerateResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	InviteCid     string                               `protobuf:"bytes,2,opt,name=inviteCid,proto3" json:"inviteCid,omitempty"`
	InviteFileKey string                               `protobuf:"bytes,3,opt,name=inviteFileKey,proto3" json:"inviteFileKey,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcSpaceInviteGenerateResponse) Reset() {
	*x = RpcSpaceInviteGenerateResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[80]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcSpaceInviteGenerateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcSpaceInviteGenerateResponse) ProtoMessage() {}

func (x *RpcSpaceInviteGenerateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[80]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcSpaceInviteGenerateResponse.ProtoReflect.Descriptor instead.
func (*RpcSpaceInviteGenerateResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 1, 2, 1}
}

func (x *RpcSpaceInviteGenerateResponse) GetError() *RpcSpaceInviteGenerateResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcSpaceInviteGenerateResponse) GetInviteCid() string {
	if x != nil {
		return x.InviteCid
	}
	return ""
}

func (x *RpcSpaceInviteGenerateResponse) GetInviteFileKey() string {
	if x != nil {
		return x.InviteFileKey
	}
	return ""
}

type RpcSpaceInviteGenerateResponseError struct {
	state         protoimpl.MessageState                  `protogen:"open.v1"`
	Code          RpcSpaceInviteGenerateResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcSpaceInviteGenerateResponseErrorCode" json:"code,omitempty"`
	Description   string                                  `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcSpaceInviteGenerateResponseError) Reset() {
	*x = RpcSpaceInviteGenerateResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[81]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcSpaceInviteGenerateResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcSpaceInviteGenerateResponseError) ProtoMessage() {}

func (x *RpcSpaceInviteGenerateResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[81]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcSpaceInviteGenerateResponseError.ProtoReflect.Descriptor instead.
func (*RpcSpaceInviteGenerateResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 1, 2, 1, 0}
}

func (x *RpcSpaceInviteGenerateResponseError) GetCode() RpcSpaceInviteGenerateResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcSpaceInviteGenerateResponseError_NULL
}

func (x *RpcSpaceInviteGenerateResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcSpaceStopSharingRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SpaceId       string                 `protobuf:"bytes,1,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcSpaceStopSharingRequest) Reset() {
	*x = RpcSpaceStopSharingRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[82]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcSpaceStopSharingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcSpaceStopSharingRequest) ProtoMessage() {}

func (x *RpcSpaceStopSharingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[82]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcSpaceStopSharingRequest.ProtoReflect.Descriptor instead.
func (*RpcSpaceStopSharingRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 1, 3, 0}
}

func (x *RpcSpaceStopSharingRequest) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

type RpcSpaceStopSharingResponse struct {
	state         protoimpl.MessageState            `protogen:"open.v1"`
	Error         *RpcSpaceStopSharingResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcSpaceStopSharingResponse) Reset() {
	*x = RpcSpaceStopSharingResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[83]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcSpaceStopSharingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcSpaceStopSharingResponse) ProtoMessage() {}

func (x *RpcSpaceStopSharingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[83]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcSpaceStopSharingResponse.ProtoReflect.Descriptor instead.
func (*RpcSpaceStopSharingResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 1, 3, 1}
}

func (x *RpcSpaceStopSharingResponse) GetError() *RpcSpaceStopSharingResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

type RpcSpaceStopSharingResponseError struct {
	state         protoimpl.MessageState               `protogen:"open.v1"`
	Code          RpcSpaceStopSharingResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcSpaceStopSharingResponseErrorCode" json:"code,omitempty"`
	Description   string                               `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcSpaceStopSharingResponseError) Reset() {
	*x = RpcSpaceStopSharingResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[84]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcSpaceStopSharingResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcSpaceStopSharingResponseError) ProtoMessage() {}

func (x *RpcSpaceStopSharingResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[84]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcSpaceStopSharingResponseError.ProtoReflect.Descriptor instead.
func (*RpcSpaceStopSharingResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 1, 3, 1, 0}
}

func (x *RpcSpaceStopSharingResponseError) GetCode() RpcSpaceStopSharingResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcSpaceStopSharingResponseError_NULL
}

func (x *RpcSpaceStopSharingResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcSpaceInviteGetCurrentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SpaceId       string                 `protobuf:"bytes,1,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcSpaceInviteGetCurrentRequest) Reset() {
	*x = RpcSpaceInviteGetCurrentRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[85]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcSpaceInviteGetCurrentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcSpaceInviteGetCurrentRequest) ProtoMessage() {}

func (x *RpcSpaceInviteGetCurrentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[85]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcSpaceInviteGetCurrentRequest.ProtoReflect.Descriptor instead.
func (*RpcSpaceInviteGetCurrentRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 1, 4, 0}
}

func (x *RpcSpaceInviteGetCurrentRequest) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

type RpcSpaceInviteGetCurrentResponse struct {
	state         protoimpl.MessageState                 `protogen:"open.v1"`
	Error         *RpcSpaceInviteGetCurrentResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	InviteCid     string                                 `protobuf:"bytes,2,opt,name=inviteCid,proto3" json:"inviteCid,omitempty"`
	InviteFileKey string                                 `protobuf:"bytes,3,opt,name=inviteFileKey,proto3" json:"inviteFileKey,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcSpaceInviteGetCurrentResponse) Reset() {
	*x = RpcSpaceInviteGetCurrentResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[86]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcSpaceInviteGetCurrentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcSpaceInviteGetCurrentResponse) ProtoMessage() {}

func (x *RpcSpaceInviteGetCurrentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[86]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcSpaceInviteGetCurrentResponse.ProtoReflect.Descriptor instead.
func (*RpcSpaceInviteGetCurrentResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 1, 4, 1}
}

func (x *RpcSpaceInviteGetCurrentResponse) GetError() *RpcSpaceInviteGetCurrentResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcSpaceInviteGetCurrentResponse) GetInviteCid() string {
	if x != nil {
		return x.InviteCid
	}
	return ""
}

func (x *RpcSpaceInviteGetCurrentResponse) GetInviteFileKey() string {
	if x != nil {
		return x.InviteFileKey
	}
	return ""
}

type RpcSpaceInviteGetCurrentResponseError struct {
	state         protoimpl.MessageState                    `protogen:"open.v1"`
	Code          RpcSpaceInviteGetCurrentResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcSpaceInviteGetCurrentResponseErrorCode" json:"code,omitempty"`
	Description   string                                    `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcSpaceInviteGetCurrentResponseError) Reset() {
	*x = RpcSpaceInviteGetCurrentResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[87]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcSpaceInviteGetCurrentResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcSpaceInviteGetCurrentResponseError) ProtoMessage() {}

func (x *RpcSpaceInviteGetCurrentResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[87]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcSpaceInviteGetCurrentResponseError.ProtoReflect.Descriptor instead.
func (*RpcSpaceInviteGetCurrentResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 1, 4, 1, 0}
}

func (x *RpcSpaceInviteGetCurrentResponseError) GetCode() RpcSpaceInviteGetCurrentResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcSpaceInviteGetCurrentResponseError_NULL
}

func (x *RpcSpaceInviteGetCurrentResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcSpaceInviteRevokeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SpaceId       string                 `protobuf:"bytes,1,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcSpaceInviteRevokeRequest) Reset() {
	*x = RpcSpaceInviteRevokeRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[88]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcSpaceInviteRevokeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcSpaceInviteRevokeRequest) ProtoMessage() {}

func (x *RpcSpaceInviteRevokeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[88]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcSpaceInviteRevokeRequest.ProtoReflect.Descriptor instead.
func (*RpcSpaceInviteRevokeRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 1, 5, 0}
}

func (x *RpcSpaceInviteRevokeRequest) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

type RpcSpaceInviteRevokeResponse struct {
	state         protoimpl.MessageState             `protogen:"open.v1"`
	Error         *RpcSpaceInviteRevokeResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcSpaceInviteRevokeResponse) Reset() {
	*x = RpcSpaceInviteRevokeResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[89]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcSpaceInviteRevokeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcSpaceInviteRevokeResponse) ProtoMessage() {}

func (x *RpcSpaceInviteRevokeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[89]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcSpaceInviteRevokeResponse.ProtoReflect.Descriptor instead.
func (*RpcSpaceInviteRevokeResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 1, 5, 1}
}

func (x *RpcSpaceInviteRevokeResponse) GetError() *RpcSpaceInviteRevokeResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

type RpcSpaceInviteRevokeResponseError struct {
	state         protoimpl.MessageState                `protogen:"open.v1"`
	Code          RpcSpaceInviteRevokeResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcSpaceInviteRevokeResponseErrorCode" json:"code,omitempty"`
	Description   string                                `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcSpaceInviteRevokeResponseError) Reset() {
	*x = RpcSpaceInviteRevokeResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[90]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcSpaceInviteRevokeResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcSpaceInviteRevokeResponseError) ProtoMessage() {}

func (x *RpcSpaceInviteRevokeResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[90]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcSpaceInviteRevokeResponseError.ProtoReflect.Descriptor instead.
func (*RpcSpaceInviteRevokeResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 1, 5, 1, 0}
}

func (x *RpcSpaceInviteRevokeResponseError) GetCode() RpcSpaceInviteRevokeResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcSpaceInviteRevokeResponseError_NULL
}

func (x *RpcSpaceInviteRevokeResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcSpaceInviteViewRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	InviteCid     string                 `protobuf:"bytes,1,opt,name=inviteCid,proto3" json:"inviteCid,omitempty"`
	InviteFileKey string                 `protobuf:"bytes,2,opt,name=inviteFileKey,proto3" json:"inviteFileKey,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcSpaceInviteViewRequest) Reset() {
	*x = RpcSpaceInviteViewRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[91]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcSpaceInviteViewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcSpaceInviteViewRequest) ProtoMessage() {}

func (x *RpcSpaceInviteViewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[91]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcSpaceInviteViewRequest.ProtoReflect.Descriptor instead.
func (*RpcSpaceInviteViewRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 1, 6, 0}
}

func (x *RpcSpaceInviteViewRequest) GetInviteCid() string {
	if x != nil {
		return x.InviteCid
	}
	return ""
}

func (x *RpcSpaceInviteViewRequest) GetInviteFileKey() string {
	if x != nil {
		return x.InviteFileKey
	}
	return ""
}

type RpcSpaceInviteViewResponse struct {
	state         protoimpl.MessageState           `protogen:"open.v1"`
	Error         *RpcSpaceInviteViewResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	SpaceId       string                           `protobuf:"bytes,2,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	SpaceName     string                           `protobuf:"bytes,3,opt,name=spaceName,proto3" json:"spaceName,omitempty"`
	SpaceIconCid  string                           `protobuf:"bytes,4,opt,name=spaceIconCid,proto3" json:"spaceIconCid,omitempty"`
	CreatorName   string                           `protobuf:"bytes,5,opt,name=creatorName,proto3" json:"creatorName,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcSpaceInviteViewResponse) Reset() {
	*x = RpcSpaceInviteViewResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[92]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcSpaceInviteViewResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcSpaceInviteViewResponse) ProtoMessage() {}

func (x *RpcSpaceInviteViewResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[92]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcSpaceInviteViewResponse.ProtoReflect.Descriptor instead.
func (*RpcSpaceInviteViewResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 1, 6, 1}
}

func (x *RpcSpaceInviteViewResponse) GetError() *RpcSpaceInviteViewResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcSpaceInviteViewResponse) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *RpcSpaceInviteViewResponse) GetSpaceName() string {
	if x != nil {
		return x.SpaceName
	}
	return ""
}

func (x *RpcSpaceInviteViewResponse) GetSpaceIconCid() string {
	if x != nil {
		return x.SpaceIconCid
	}
	return ""
}

func (x *RpcSpaceInviteViewResponse) GetCreatorName() string {
	if x != nil {
		return x.CreatorName
	}
	return ""
}

type RpcSpaceInviteViewResponseError struct {
	state         protoimpl.MessageState              `protogen:"open.v1"`
	Code          RpcSpaceInviteViewResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcSpaceInviteViewResponseErrorCode" json:"code,omitempty"`
	Description   string                              `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcSpaceInviteViewResponseError) Reset() {
	*x = RpcSpaceInviteViewResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[93]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcSpaceInviteViewResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcSpaceInviteViewResponseError) ProtoMessage() {}

func (x *RpcSpaceInviteViewResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[93]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcSpaceInviteViewResponseError.ProtoReflect.Descriptor instead.
func (*RpcSpaceInviteViewResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 1, 6, 1, 0}
}

func (x *RpcSpaceInviteViewResponseError) GetCode() RpcSpaceInviteViewResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcSpaceInviteViewResponseError_NULL
}

func (x *RpcSpaceInviteViewResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcSpaceJoinRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NetworkId     string                 `protobuf:"bytes,1,opt,name=networkId,proto3" json:"networkId,omitempty"` // not-empty only for self-hosting
	SpaceId       string                 `protobuf:"bytes,2,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	InviteCid     string                 `protobuf:"bytes,3,opt,name=inviteCid,proto3" json:"inviteCid,omitempty"`
	InviteFileKey string                 `protobuf:"bytes,4,opt,name=inviteFileKey,proto3" json:"inviteFileKey,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcSpaceJoinRequest) Reset() {
	*x = RpcSpaceJoinRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[94]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcSpaceJoinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcSpaceJoinRequest) ProtoMessage() {}

func (x *RpcSpaceJoinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[94]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcSpaceJoinRequest.ProtoReflect.Descriptor instead.
func (*RpcSpaceJoinRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 1, 7, 0}
}

func (x *RpcSpaceJoinRequest) GetNetworkId() string {
	if x != nil {
		return x.NetworkId
	}
	return ""
}

func (x *RpcSpaceJoinRequest) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *RpcSpaceJoinRequest) GetInviteCid() string {
	if x != nil {
		return x.InviteCid
	}
	return ""
}

func (x *RpcSpaceJoinRequest) GetInviteFileKey() string {
	if x != nil {
		return x.InviteFileKey
	}
	return ""
}

type RpcSpaceJoinResponse struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	Error         *RpcSpaceJoinResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcSpaceJoinResponse) Reset() {
	*x = RpcSpaceJoinResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[95]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcSpaceJoinResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcSpaceJoinResponse) ProtoMessage() {}

func (x *RpcSpaceJoinResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[95]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcSpaceJoinResponse.ProtoReflect.Descriptor instead.
func (*RpcSpaceJoinResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 1, 7, 1}
}

func (x *RpcSpaceJoinResponse) GetError() *RpcSpaceJoinResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

type RpcSpaceJoinResponseError struct {
	state         protoimpl.MessageState        `protogen:"open.v1"`
	Code          RpcSpaceJoinResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcSpaceJoinResponseErrorCode" json:"code,omitempty"`
	Description   string                        `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcSpaceJoinResponseError) Reset() {
	*x = RpcSpaceJoinResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[96]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcSpaceJoinResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcSpaceJoinResponseError) ProtoMessage() {}

func (x *RpcSpaceJoinResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[96]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcSpaceJoinResponseError.ProtoReflect.Descriptor instead.
func (*RpcSpaceJoinResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 1, 7, 1, 0}
}

func (x *RpcSpaceJoinResponseError) GetCode() RpcSpaceJoinResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcSpaceJoinResponseError_NULL
}

func (x *RpcSpaceJoinResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcSpaceJoinCancelRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SpaceId       string                 `protobuf:"bytes,1,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcSpaceJoinCancelRequest) Reset() {
	*x = RpcSpaceJoinCancelRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[97]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcSpaceJoinCancelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcSpaceJoinCancelRequest) ProtoMessage() {}

func (x *RpcSpaceJoinCancelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[97]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcSpaceJoinCancelRequest.ProtoReflect.Descriptor instead.
func (*RpcSpaceJoinCancelRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 1, 8, 0}
}

func (x *RpcSpaceJoinCancelRequest) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

type RpcSpaceJoinCancelResponse struct {
	state         protoimpl.MessageState           `protogen:"open.v1"`
	Error         *RpcSpaceJoinCancelResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcSpaceJoinCancelResponse) Reset() {
	*x = RpcSpaceJoinCancelResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[98]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcSpaceJoinCancelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcSpaceJoinCancelResponse) ProtoMessage() {}

func (x *RpcSpaceJoinCancelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[98]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcSpaceJoinCancelResponse.ProtoReflect.Descriptor instead.
func (*RpcSpaceJoinCancelResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 1, 8, 1}
}

func (x *RpcSpaceJoinCancelResponse) GetError() *RpcSpaceJoinCancelResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

type RpcSpaceJoinCancelResponseError struct {
	state         protoimpl.MessageState              `protogen:"open.v1"`
	Code          RpcSpaceJoinCancelResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcSpaceJoinCancelResponseErrorCode" json:"code,omitempty"`
	Description   string                              `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcSpaceJoinCancelResponseError) Reset() {
	*x = RpcSpaceJoinCancelResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[99]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcSpaceJoinCancelResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcSpaceJoinCancelResponseError) ProtoMessage() {}

func (x *RpcSpaceJoinCancelResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[99]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcSpaceJoinCancelResponseError.ProtoReflect.Descriptor instead.
func (*RpcSpaceJoinCancelResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 1, 8, 1, 0}
}

func (x *RpcSpaceJoinCancelResponseError) GetCode() RpcSpaceJoinCancelResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcSpaceJoinCancelResponseError_NULL
}

func (x *RpcSpaceJoinCancelResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcSpaceRequestApproveRequest struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	SpaceId       string                       `protobuf:"bytes,1,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	Identity      string                       `protobuf:"bytes,2,opt,name=identity,proto3" json:"identity,omitempty"`
	Permissions   model.ParticipantPermissions `protobuf:"varint,3,opt,name=permissions,proto3,enum=anytype.model.ParticipantPermissions" json:"permissions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcSpaceRequestApproveRequest) Reset() {
	*x = RpcSpaceRequestApproveRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[100]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcSpaceRequestApproveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcSpaceRequestApproveRequest) ProtoMessage() {}

func (x *RpcSpaceRequestApproveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[100]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcSpaceRequestApproveRequest.ProtoReflect.Descriptor instead.
func (*RpcSpaceRequestApproveRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 1, 9, 0}
}

func (x *RpcSpaceRequestApproveRequest) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *RpcSpaceRequestApproveRequest) GetIdentity() string {
	if x != nil {
		return x.Identity
	}
	return ""
}

func (x *RpcSpaceRequestApproveRequest) GetPermissions() model.ParticipantPermissions {
	if x != nil {
		return x.Permissions
	}
	return model.ParticipantPermissions(0)
}

type RpcSpaceRequestApproveResponse struct {
	state         protoimpl.MessageState               `protogen:"open.v1"`
	Error         *RpcSpaceRequestApproveResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcSpaceRequestApproveResponse) Reset() {
	*x = RpcSpaceRequestApproveResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[101]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcSpaceRequestApproveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcSpaceRequestApproveResponse) ProtoMessage() {}

func (x *RpcSpaceRequestApproveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[101]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcSpaceRequestApproveResponse.ProtoReflect.Descriptor instead.
func (*RpcSpaceRequestApproveResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 1, 9, 1}
}

func (x *RpcSpaceRequestApproveResponse) GetError() *RpcSpaceRequestApproveResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

type RpcSpaceRequestApproveResponseError struct {
	state         protoimpl.MessageState                  `protogen:"open.v1"`
	Code          RpcSpaceRequestApproveResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcSpaceRequestApproveResponseErrorCode" json:"code,omitempty"`
	Description   string                                  `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcSpaceRequestApproveResponseError) Reset() {
	*x = RpcSpaceRequestApproveResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[102]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcSpaceRequestApproveResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcSpaceRequestApproveResponseError) ProtoMessage() {}

func (x *RpcSpaceRequestApproveResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[102]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcSpaceRequestApproveResponseError.ProtoReflect.Descriptor instead.
func (*RpcSpaceRequestApproveResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 1, 9, 1, 0}
}

func (x *RpcSpaceRequestApproveResponseError) GetCode() RpcSpaceRequestApproveResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcSpaceRequestApproveResponseError_NULL
}

func (x *RpcSpaceRequestApproveResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcSpaceRequestDeclineRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SpaceId       string                 `protobuf:"bytes,1,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	Identity      string                 `protobuf:"bytes,2,opt,name=identity,proto3" json:"identity,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcSpaceRequestDeclineRequest) Reset() {
	*x = RpcSpaceRequestDeclineRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[103]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcSpaceRequestDeclineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcSpaceRequestDeclineRequest) ProtoMessage() {}

func (x *RpcSpaceRequestDeclineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[103]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcSpaceRequestDeclineRequest.ProtoReflect.Descriptor instead.
func (*RpcSpaceRequestDeclineRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 1, 10, 0}
}

func (x *RpcSpaceRequestDeclineRequest) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *RpcSpaceRequestDeclineRequest) GetIdentity() string {
	if x != nil {
		return x.Identity
	}
	return ""
}

type RpcSpaceRequestDeclineResponse struct {
	state         protoimpl.MessageState               `protogen:"open.v1"`
	Error         *RpcSpaceRequestDeclineResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcSpaceRequestDeclineResponse) Reset() {
	*x = RpcSpaceRequestDeclineResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[104]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcSpaceRequestDeclineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcSpaceRequestDeclineResponse) ProtoMessage() {}

func (x *RpcSpaceRequestDeclineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[104]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcSpaceRequestDeclineResponse.ProtoReflect.Descriptor instead.
func (*RpcSpaceRequestDeclineResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 1, 10, 1}
}

func (x *RpcSpaceRequestDeclineResponse) GetError() *RpcSpaceRequestDeclineResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

type RpcSpaceRequestDeclineResponseError struct {
	state         protoimpl.MessageState                  `protogen:"open.v1"`
	Code          RpcSpaceRequestDeclineResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcSpaceRequestDeclineResponseErrorCode" json:"code,omitempty"`
	Description   string                                  `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcSpaceRequestDeclineResponseError) Reset() {
	*x = RpcSpaceRequestDeclineResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[105]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcSpaceRequestDeclineResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcSpaceRequestDeclineResponseError) ProtoMessage() {}

func (x *RpcSpaceRequestDeclineResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[105]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcSpaceRequestDeclineResponseError.ProtoReflect.Descriptor instead.
func (*RpcSpaceRequestDeclineResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 1, 10, 1, 0}
}

func (x *RpcSpaceRequestDeclineResponseError) GetCode() RpcSpaceRequestDeclineResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcSpaceRequestDeclineResponseError_NULL
}

func (x *RpcSpaceRequestDeclineResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcSpaceParticipantRemoveRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SpaceId       string                 `protobuf:"bytes,1,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	Identities    []string               `protobuf:"bytes,2,rep,name=identities,proto3" json:"identities,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcSpaceParticipantRemoveRequest) Reset() {
	*x = RpcSpaceParticipantRemoveRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[106]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcSpaceParticipantRemoveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcSpaceParticipantRemoveRequest) ProtoMessage() {}

func (x *RpcSpaceParticipantRemoveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[106]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcSpaceParticipantRemoveRequest.ProtoReflect.Descriptor instead.
func (*RpcSpaceParticipantRemoveRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 1, 11, 0}
}

func (x *RpcSpaceParticipantRemoveRequest) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *RpcSpaceParticipantRemoveRequest) GetIdentities() []string {
	if x != nil {
		return x.Identities
	}
	return nil
}

type RpcSpaceParticipantRemoveResponse struct {
	state         protoimpl.MessageState                  `protogen:"open.v1"`
	Error         *RpcSpaceParticipantRemoveResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcSpaceParticipantRemoveResponse) Reset() {
	*x = RpcSpaceParticipantRemoveResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[107]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcSpaceParticipantRemoveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcSpaceParticipantRemoveResponse) ProtoMessage() {}

func (x *RpcSpaceParticipantRemoveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[107]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcSpaceParticipantRemoveResponse.ProtoReflect.Descriptor instead.
func (*RpcSpaceParticipantRemoveResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 1, 11, 1}
}

func (x *RpcSpaceParticipantRemoveResponse) GetError() *RpcSpaceParticipantRemoveResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

type RpcSpaceParticipantRemoveResponseError struct {
	state         protoimpl.MessageState                     `protogen:"open.v1"`
	Code          RpcSpaceParticipantRemoveResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcSpaceParticipantRemoveResponseErrorCode" json:"code,omitempty"`
	Description   string                                     `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcSpaceParticipantRemoveResponseError) Reset() {
	*x = RpcSpaceParticipantRemoveResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[108]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcSpaceParticipantRemoveResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcSpaceParticipantRemoveResponseError) ProtoMessage() {}

func (x *RpcSpaceParticipantRemoveResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[108]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcSpaceParticipantRemoveResponseError.ProtoReflect.Descriptor instead.
func (*RpcSpaceParticipantRemoveResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 1, 11, 1, 0}
}

func (x *RpcSpaceParticipantRemoveResponseError) GetCode() RpcSpaceParticipantRemoveResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcSpaceParticipantRemoveResponseError_NULL
}

func (x *RpcSpaceParticipantRemoveResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcSpaceParticipantPermissionsChangeRequest struct {
	state         protoimpl.MessageState               `protogen:"open.v1"`
	SpaceId       string                               `protobuf:"bytes,1,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	Changes       []*model.ParticipantPermissionChange `protobuf:"bytes,2,rep,name=changes,proto3" json:"changes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcSpaceParticipantPermissionsChangeRequest) Reset() {
	*x = RpcSpaceParticipantPermissionsChangeRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[109]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcSpaceParticipantPermissionsChangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcSpaceParticipantPermissionsChangeRequest) ProtoMessage() {}

func (x *RpcSpaceParticipantPermissionsChangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[109]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcSpaceParticipantPermissionsChangeRequest.ProtoReflect.Descriptor instead.
func (*RpcSpaceParticipantPermissionsChangeRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 1, 12, 0}
}

func (x *RpcSpaceParticipantPermissionsChangeRequest) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *RpcSpaceParticipantPermissionsChangeRequest) GetChanges() []*model.ParticipantPermissionChange {
	if x != nil {
		return x.Changes
	}
	return nil
}

type RpcSpaceParticipantPermissionsChangeResponse struct {
	state         protoimpl.MessageState                             `protogen:"open.v1"`
	Error         *RpcSpaceParticipantPermissionsChangeResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcSpaceParticipantPermissionsChangeResponse) Reset() {
	*x = RpcSpaceParticipantPermissionsChangeResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[110]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcSpaceParticipantPermissionsChangeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcSpaceParticipantPermissionsChangeResponse) ProtoMessage() {}

func (x *RpcSpaceParticipantPermissionsChangeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[110]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcSpaceParticipantPermissionsChangeResponse.ProtoReflect.Descriptor instead.
func (*RpcSpaceParticipantPermissionsChangeResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 1, 12, 1}
}

func (x *RpcSpaceParticipantPermissionsChangeResponse) GetError() *RpcSpaceParticipantPermissionsChangeResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

type RpcSpaceParticipantPermissionsChangeResponseError struct {
	state         protoimpl.MessageState                                `protogen:"open.v1"`
	Code          RpcSpaceParticipantPermissionsChangeResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcSpaceParticipantPermissionsChangeResponseErrorCode" json:"code,omitempty"`
	Description   string                                                `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcSpaceParticipantPermissionsChangeResponseError) Reset() {
	*x = RpcSpaceParticipantPermissionsChangeResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[111]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcSpaceParticipantPermissionsChangeResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcSpaceParticipantPermissionsChangeResponseError) ProtoMessage() {}

func (x *RpcSpaceParticipantPermissionsChangeResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[111]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcSpaceParticipantPermissionsChangeResponseError.ProtoReflect.Descriptor instead.
func (*RpcSpaceParticipantPermissionsChangeResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 1, 12, 1, 0}
}

func (x *RpcSpaceParticipantPermissionsChangeResponseError) GetCode() RpcSpaceParticipantPermissionsChangeResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcSpaceParticipantPermissionsChangeResponseError_NULL
}

func (x *RpcSpaceParticipantPermissionsChangeResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcSpaceDeleteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SpaceId       string                 `protobuf:"bytes,1,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcSpaceDeleteRequest) Reset() {
	*x = RpcSpaceDeleteRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[112]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcSpaceDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcSpaceDeleteRequest) ProtoMessage() {}

func (x *RpcSpaceDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[112]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcSpaceDeleteRequest.ProtoReflect.Descriptor instead.
func (*RpcSpaceDeleteRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 1, 13, 0}
}

func (x *RpcSpaceDeleteRequest) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

type RpcSpaceDeleteResponse struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	Error         *RpcSpaceDeleteResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Timestamp     int64                        `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcSpaceDeleteResponse) Reset() {
	*x = RpcSpaceDeleteResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[113]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcSpaceDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcSpaceDeleteResponse) ProtoMessage() {}

func (x *RpcSpaceDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[113]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcSpaceDeleteResponse.ProtoReflect.Descriptor instead.
func (*RpcSpaceDeleteResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 1, 13, 1}
}

func (x *RpcSpaceDeleteResponse) GetError() *RpcSpaceDeleteResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcSpaceDeleteResponse) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type RpcSpaceDeleteResponseError struct {
	state         protoimpl.MessageState          `protogen:"open.v1"`
	Code          RpcSpaceDeleteResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcSpaceDeleteResponseErrorCode" json:"code,omitempty"`
	Description   string                          `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcSpaceDeleteResponseError) Reset() {
	*x = RpcSpaceDeleteResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[114]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcSpaceDeleteResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcSpaceDeleteResponseError) ProtoMessage() {}

func (x *RpcSpaceDeleteResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[114]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcSpaceDeleteResponseError.ProtoReflect.Descriptor instead.
func (*RpcSpaceDeleteResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 1, 13, 1, 0}
}

func (x *RpcSpaceDeleteResponseError) GetCode() RpcSpaceDeleteResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcSpaceDeleteResponseError_NULL
}

func (x *RpcSpaceDeleteResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcSpaceSetOrderRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	SpaceViewId    string                 `protobuf:"bytes,1,opt,name=spaceViewId,proto3" json:"spaceViewId,omitempty"`
	SpaceViewOrder []string               `protobuf:"bytes,2,rep,name=spaceViewOrder,proto3" json:"spaceViewOrder,omitempty"` // result order of space view ids
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RpcSpaceSetOrderRequest) Reset() {
	*x = RpcSpaceSetOrderRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[115]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcSpaceSetOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcSpaceSetOrderRequest) ProtoMessage() {}

func (x *RpcSpaceSetOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[115]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcSpaceSetOrderRequest.ProtoReflect.Descriptor instead.
func (*RpcSpaceSetOrderRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 1, 14, 0}
}

func (x *RpcSpaceSetOrderRequest) GetSpaceViewId() string {
	if x != nil {
		return x.SpaceViewId
	}
	return ""
}

func (x *RpcSpaceSetOrderRequest) GetSpaceViewOrder() []string {
	if x != nil {
		return x.SpaceViewOrder
	}
	return nil
}

type RpcSpaceSetOrderResponse struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	Error         *RpcSpaceSetOrderResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcSpaceSetOrderResponse) Reset() {
	*x = RpcSpaceSetOrderResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[116]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcSpaceSetOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcSpaceSetOrderResponse) ProtoMessage() {}

func (x *RpcSpaceSetOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[116]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcSpaceSetOrderResponse.ProtoReflect.Descriptor instead.
func (*RpcSpaceSetOrderResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 1, 14, 1}
}

func (x *RpcSpaceSetOrderResponse) GetError() *RpcSpaceSetOrderResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

type RpcSpaceSetOrderResponseError struct {
	state         protoimpl.MessageState            `protogen:"open.v1"`
	Code          RpcSpaceSetOrderResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcSpaceSetOrderResponseErrorCode" json:"code,omitempty"`
	Description   string                            `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcSpaceSetOrderResponseError) Reset() {
	*x = RpcSpaceSetOrderResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[117]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcSpaceSetOrderResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcSpaceSetOrderResponseError) ProtoMessage() {}

func (x *RpcSpaceSetOrderResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[117]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcSpaceSetOrderResponseError.ProtoReflect.Descriptor instead.
func (*RpcSpaceSetOrderResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 1, 14, 1, 0}
}

func (x *RpcSpaceSetOrderResponseError) GetCode() RpcSpaceSetOrderResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcSpaceSetOrderResponseError_NULL
}

func (x *RpcSpaceSetOrderResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcSpaceUnsetOrderRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SpaceViewId   string                 `protobuf:"bytes,1,opt,name=spaceViewId,proto3" json:"spaceViewId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcSpaceUnsetOrderRequest) Reset() {
	*x = RpcSpaceUnsetOrderRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[118]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcSpaceUnsetOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcSpaceUnsetOrderRequest) ProtoMessage() {}

func (x *RpcSpaceUnsetOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[118]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcSpaceUnsetOrderRequest.ProtoReflect.Descriptor instead.
func (*RpcSpaceUnsetOrderRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 1, 15, 0}
}

func (x *RpcSpaceUnsetOrderRequest) GetSpaceViewId() string {
	if x != nil {
		return x.SpaceViewId
	}
	return ""
}

type RpcSpaceUnsetOrderResponse struct {
	state         protoimpl.MessageState           `protogen:"open.v1"`
	Error         *RpcSpaceUnsetOrderResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcSpaceUnsetOrderResponse) Reset() {
	*x = RpcSpaceUnsetOrderResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[119]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcSpaceUnsetOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcSpaceUnsetOrderResponse) ProtoMessage() {}

func (x *RpcSpaceUnsetOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[119]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcSpaceUnsetOrderResponse.ProtoReflect.Descriptor instead.
func (*RpcSpaceUnsetOrderResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 1, 15, 1}
}

func (x *RpcSpaceUnsetOrderResponse) GetError() *RpcSpaceUnsetOrderResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

type RpcSpaceUnsetOrderResponseError struct {
	state         protoimpl.MessageState              `protogen:"open.v1"`
	Code          RpcSpaceUnsetOrderResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcSpaceUnsetOrderResponseErrorCode" json:"code,omitempty"`
	Description   string                              `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcSpaceUnsetOrderResponseError) Reset() {
	*x = RpcSpaceUnsetOrderResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[120]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcSpaceUnsetOrderResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcSpaceUnsetOrderResponseError) ProtoMessage() {}

func (x *RpcSpaceUnsetOrderResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[120]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcSpaceUnsetOrderResponseError.ProtoReflect.Descriptor instead.
func (*RpcSpaceUnsetOrderResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 1, 15, 1, 0}
}

func (x *RpcSpaceUnsetOrderResponseError) GetCode() RpcSpaceUnsetOrderResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcSpaceUnsetOrderResponseError_NULL
}

func (x *RpcSpaceUnsetOrderResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcWalletCreate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcWalletCreate) Reset() {
	*x = RpcWalletCreate{}
	mi := &file_pb_protos_commands_proto_msgTypes[121]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcWalletCreate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcWalletCreate) ProtoMessage() {}

func (x *RpcWalletCreate) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[121]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcWalletCreate.ProtoReflect.Descriptor instead.
func (*RpcWalletCreate) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 2, 0}
}

type RpcWalletRecover struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcWalletRecover) Reset() {
	*x = RpcWalletRecover{}
	mi := &file_pb_protos_commands_proto_msgTypes[122]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcWalletRecover) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcWalletRecover) ProtoMessage() {}

func (x *RpcWalletRecover) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[122]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcWalletRecover.ProtoReflect.Descriptor instead.
func (*RpcWalletRecover) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 2, 1}
}

type RpcWalletConvert struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcWalletConvert) Reset() {
	*x = RpcWalletConvert{}
	mi := &file_pb_protos_commands_proto_msgTypes[123]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcWalletConvert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcWalletConvert) ProtoMessage() {}

func (x *RpcWalletConvert) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[123]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcWalletConvert.ProtoReflect.Descriptor instead.
func (*RpcWalletConvert) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 2, 2}
}

type RpcWalletCreateSession struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcWalletCreateSession) Reset() {
	*x = RpcWalletCreateSession{}
	mi := &file_pb_protos_commands_proto_msgTypes[124]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcWalletCreateSession) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcWalletCreateSession) ProtoMessage() {}

func (x *RpcWalletCreateSession) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[124]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcWalletCreateSession.ProtoReflect.Descriptor instead.
func (*RpcWalletCreateSession) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 2, 3}
}

type RpcWalletCloseSession struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcWalletCloseSession) Reset() {
	*x = RpcWalletCloseSession{}
	mi := &file_pb_protos_commands_proto_msgTypes[125]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcWalletCloseSession) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcWalletCloseSession) ProtoMessage() {}

func (x *RpcWalletCloseSession) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[125]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcWalletCloseSession.ProtoReflect.Descriptor instead.
func (*RpcWalletCloseSession) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 2, 4}
}

// *
// Front-end-to-middleware request to create a new wallet
type RpcWalletCreateRequest struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	RootPath                string                 `protobuf:"bytes,1,opt,name=rootPath,proto3" json:"rootPath,omitempty"`                               // Path to a wallet directory
	FulltextPrimaryLanguage string                 `protobuf:"bytes,2,opt,name=fulltextPrimaryLanguage,proto3" json:"fulltextPrimaryLanguage,omitempty"` // optional, default fts language
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *RpcWalletCreateRequest) Reset() {
	*x = RpcWalletCreateRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[126]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcWalletCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcWalletCreateRequest) ProtoMessage() {}

func (x *RpcWalletCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[126]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcWalletCreateRequest.ProtoReflect.Descriptor instead.
func (*RpcWalletCreateRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 2, 0, 0}
}

func (x *RpcWalletCreateRequest) GetRootPath() string {
	if x != nil {
		return x.RootPath
	}
	return ""
}

func (x *RpcWalletCreateRequest) GetFulltextPrimaryLanguage() string {
	if x != nil {
		return x.FulltextPrimaryLanguage
	}
	return ""
}

// *
// Middleware-to-front-end response, that can contain mnemonic of a created account and a NULL error or an empty mnemonic and a non-NULL error
type RpcWalletCreateResponse struct {
	state         protoimpl.MessageState        `protogen:"open.v1"`
	Error         *RpcWalletCreateResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Mnemonic      string                        `protobuf:"bytes,2,opt,name=mnemonic,proto3" json:"mnemonic,omitempty"` // Mnemonic of a new account (sequence of words, divided by spaces)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcWalletCreateResponse) Reset() {
	*x = RpcWalletCreateResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[127]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcWalletCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcWalletCreateResponse) ProtoMessage() {}

func (x *RpcWalletCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[127]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcWalletCreateResponse.ProtoReflect.Descriptor instead.
func (*RpcWalletCreateResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 2, 0, 1}
}

func (x *RpcWalletCreateResponse) GetError() *RpcWalletCreateResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcWalletCreateResponse) GetMnemonic() string {
	if x != nil {
		return x.Mnemonic
	}
	return ""
}

type RpcWalletCreateResponseError struct {
	state         protoimpl.MessageState           `protogen:"open.v1"`
	Code          RpcWalletCreateResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcWalletCreateResponseErrorCode" json:"code,omitempty"`
	Description   string                           `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcWalletCreateResponseError) Reset() {
	*x = RpcWalletCreateResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[128]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcWalletCreateResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcWalletCreateResponseError) ProtoMessage() {}

func (x *RpcWalletCreateResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[128]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcWalletCreateResponseError.ProtoReflect.Descriptor instead.
func (*RpcWalletCreateResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 2, 0, 1, 0}
}

func (x *RpcWalletCreateResponseError) GetCode() RpcWalletCreateResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcWalletCreateResponseError_NULL
}

func (x *RpcWalletCreateResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// *
// Front end to middleware request-to-recover-a wallet with this mnemonic and a rootPath
type RpcWalletRecoverRequest struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	RootPath                string                 `protobuf:"bytes,1,opt,name=rootPath,proto3" json:"rootPath,omitempty"`                               // Path to a wallet directory
	Mnemonic                string                 `protobuf:"bytes,2,opt,name=mnemonic,proto3" json:"mnemonic,omitempty"`                               // Mnemonic of a wallet to recover
	FulltextPrimaryLanguage string                 `protobuf:"bytes,3,opt,name=fulltextPrimaryLanguage,proto3" json:"fulltextPrimaryLanguage,omitempty"` // optional, default fts language
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *RpcWalletRecoverRequest) Reset() {
	*x = RpcWalletRecoverRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[129]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcWalletRecoverRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcWalletRecoverRequest) ProtoMessage() {}

func (x *RpcWalletRecoverRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[129]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcWalletRecoverRequest.ProtoReflect.Descriptor instead.
func (*RpcWalletRecoverRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 2, 1, 0}
}

func (x *RpcWalletRecoverRequest) GetRootPath() string {
	if x != nil {
		return x.RootPath
	}
	return ""
}

func (x *RpcWalletRecoverRequest) GetMnemonic() string {
	if x != nil {
		return x.Mnemonic
	}
	return ""
}

func (x *RpcWalletRecoverRequest) GetFulltextPrimaryLanguage() string {
	if x != nil {
		return x.FulltextPrimaryLanguage
	}
	return ""
}

// *
// Middleware-to-front-end response, that can contain a NULL error or a non-NULL error
type RpcWalletRecoverResponse struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	Error         *RpcWalletRecoverResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"` // Error while trying to recover a wallet
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcWalletRecoverResponse) Reset() {
	*x = RpcWalletRecoverResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[130]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcWalletRecoverResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcWalletRecoverResponse) ProtoMessage() {}

func (x *RpcWalletRecoverResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[130]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcWalletRecoverResponse.ProtoReflect.Descriptor instead.
func (*RpcWalletRecoverResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 2, 1, 1}
}

func (x *RpcWalletRecoverResponse) GetError() *RpcWalletRecoverResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

type RpcWalletRecoverResponseError struct {
	state         protoimpl.MessageState            `protogen:"open.v1"`
	Code          RpcWalletRecoverResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcWalletRecoverResponseErrorCode" json:"code,omitempty"`
	Description   string                            `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcWalletRecoverResponseError) Reset() {
	*x = RpcWalletRecoverResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[131]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcWalletRecoverResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcWalletRecoverResponseError) ProtoMessage() {}

func (x *RpcWalletRecoverResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[131]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcWalletRecoverResponseError.ProtoReflect.Descriptor instead.
func (*RpcWalletRecoverResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 2, 1, 1, 0}
}

func (x *RpcWalletRecoverResponseError) GetCode() RpcWalletRecoverResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcWalletRecoverResponseError_NULL
}

func (x *RpcWalletRecoverResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcWalletConvertRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Mnemonic      string                 `protobuf:"bytes,1,opt,name=mnemonic,proto3" json:"mnemonic,omitempty"` // Mnemonic of a wallet to convert
	Entropy       string                 `protobuf:"bytes,2,opt,name=entropy,proto3" json:"entropy,omitempty"`   // entropy of a wallet to convert
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcWalletConvertRequest) Reset() {
	*x = RpcWalletConvertRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[132]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcWalletConvertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcWalletConvertRequest) ProtoMessage() {}

func (x *RpcWalletConvertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[132]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcWalletConvertRequest.ProtoReflect.Descriptor instead.
func (*RpcWalletConvertRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 2, 2, 0}
}

func (x *RpcWalletConvertRequest) GetMnemonic() string {
	if x != nil {
		return x.Mnemonic
	}
	return ""
}

func (x *RpcWalletConvertRequest) GetEntropy() string {
	if x != nil {
		return x.Entropy
	}
	return ""
}

type RpcWalletConvertResponse struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	Error         *RpcWalletConvertResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"` // Error while trying to recover a wallet
	Entropy       string                         `protobuf:"bytes,2,opt,name=entropy,proto3" json:"entropy,omitempty"`
	Mnemonic      string                         `protobuf:"bytes,3,opt,name=mnemonic,proto3" json:"mnemonic,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcWalletConvertResponse) Reset() {
	*x = RpcWalletConvertResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[133]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcWalletConvertResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcWalletConvertResponse) ProtoMessage() {}

func (x *RpcWalletConvertResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[133]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcWalletConvertResponse.ProtoReflect.Descriptor instead.
func (*RpcWalletConvertResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 2, 2, 1}
}

func (x *RpcWalletConvertResponse) GetError() *RpcWalletConvertResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcWalletConvertResponse) GetEntropy() string {
	if x != nil {
		return x.Entropy
	}
	return ""
}

func (x *RpcWalletConvertResponse) GetMnemonic() string {
	if x != nil {
		return x.Mnemonic
	}
	return ""
}

type RpcWalletConvertResponseError struct {
	state         protoimpl.MessageState            `protogen:"open.v1"`
	Code          RpcWalletConvertResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcWalletConvertResponseErrorCode" json:"code,omitempty"`
	Description   string                            `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcWalletConvertResponseError) Reset() {
	*x = RpcWalletConvertResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[134]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcWalletConvertResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcWalletConvertResponseError) ProtoMessage() {}

func (x *RpcWalletConvertResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[134]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcWalletConvertResponseError.ProtoReflect.Descriptor instead.
func (*RpcWalletConvertResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 2, 2, 1, 0}
}

func (x *RpcWalletConvertResponseError) GetCode() RpcWalletConvertResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcWalletConvertResponseError_NULL
}

func (x *RpcWalletConvertResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcWalletCreateSessionRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Auth:
	//
	//	*RpcWalletCreateSessionRequestAuthOfMnemonic
	//	*RpcWalletCreateSessionRequestAuthOfAppKey
	Auth          IsRpcWalletCreateSessionRequestAuth `protobuf_oneof:"auth"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcWalletCreateSessionRequest) Reset() {
	*x = RpcWalletCreateSessionRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[135]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcWalletCreateSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcWalletCreateSessionRequest) ProtoMessage() {}

func (x *RpcWalletCreateSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[135]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcWalletCreateSessionRequest.ProtoReflect.Descriptor instead.
func (*RpcWalletCreateSessionRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 2, 3, 0}
}

func (x *RpcWalletCreateSessionRequest) GetAuth() IsRpcWalletCreateSessionRequestAuth {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *RpcWalletCreateSessionRequest) GetMnemonic() string {
	if x != nil {
		if x, ok := x.Auth.(*RpcWalletCreateSessionRequestAuthOfMnemonic); ok {
			return x.Mnemonic
		}
	}
	return ""
}

func (x *RpcWalletCreateSessionRequest) GetAppKey() string {
	if x != nil {
		if x, ok := x.Auth.(*RpcWalletCreateSessionRequestAuthOfAppKey); ok {
			return x.AppKey
		}
	}
	return ""
}

type IsRpcWalletCreateSessionRequestAuth interface {
	IsRpcWalletCreateSessionRequestAuth()
}

type RpcWalletCreateSessionRequestAuthOfMnemonic struct {
	Mnemonic string `protobuf:"bytes,1,opt,name=mnemonic,proto3,oneof" json:"mnemonic,omitempty"` // cold auth
}

type RpcWalletCreateSessionRequestAuthOfAppKey struct {
	AppKey string `protobuf:"bytes,2,opt,name=appKey,proto3,oneof" json:"appKey,omitempty"` // persistent app key, that can be used to restore session
}

func (*RpcWalletCreateSessionRequestAuthOfMnemonic) IsRpcWalletCreateSessionRequestAuth() {}

func (*RpcWalletCreateSessionRequestAuthOfAppKey) IsRpcWalletCreateSessionRequestAuth() {}

type RpcWalletCreateSessionResponse struct {
	state         protoimpl.MessageState               `protogen:"open.v1"`
	Error         *RpcWalletCreateSessionResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Token         string                               `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	AppToken      string                               `protobuf:"bytes,3,opt,name=appToken,proto3" json:"appToken,omitempty"`   // in case of mnemonic auth, need to be persisted by client
	AccountId     string                               `protobuf:"bytes,4,opt,name=accountId,proto3" json:"accountId,omitempty"` // temp, should be replaced with AccountInfo message
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcWalletCreateSessionResponse) Reset() {
	*x = RpcWalletCreateSessionResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[136]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcWalletCreateSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcWalletCreateSessionResponse) ProtoMessage() {}

func (x *RpcWalletCreateSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[136]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcWalletCreateSessionResponse.ProtoReflect.Descriptor instead.
func (*RpcWalletCreateSessionResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 2, 3, 1}
}

func (x *RpcWalletCreateSessionResponse) GetError() *RpcWalletCreateSessionResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcWalletCreateSessionResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *RpcWalletCreateSessionResponse) GetAppToken() string {
	if x != nil {
		return x.AppToken
	}
	return ""
}

func (x *RpcWalletCreateSessionResponse) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

type RpcWalletCreateSessionResponseError struct {
	state         protoimpl.MessageState                  `protogen:"open.v1"`
	Code          RpcWalletCreateSessionResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcWalletCreateSessionResponseErrorCode" json:"code,omitempty"`
	Description   string                                  `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcWalletCreateSessionResponseError) Reset() {
	*x = RpcWalletCreateSessionResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[137]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcWalletCreateSessionResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcWalletCreateSessionResponseError) ProtoMessage() {}

func (x *RpcWalletCreateSessionResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[137]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcWalletCreateSessionResponseError.ProtoReflect.Descriptor instead.
func (*RpcWalletCreateSessionResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 2, 3, 1, 0}
}

func (x *RpcWalletCreateSessionResponseError) GetCode() RpcWalletCreateSessionResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcWalletCreateSessionResponseError_NULL
}

func (x *RpcWalletCreateSessionResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcWalletCloseSessionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Token         string                 `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcWalletCloseSessionRequest) Reset() {
	*x = RpcWalletCloseSessionRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[138]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcWalletCloseSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcWalletCloseSessionRequest) ProtoMessage() {}

func (x *RpcWalletCloseSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[138]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcWalletCloseSessionRequest.ProtoReflect.Descriptor instead.
func (*RpcWalletCloseSessionRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 2, 4, 0}
}

func (x *RpcWalletCloseSessionRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type RpcWalletCloseSessionResponse struct {
	state         protoimpl.MessageState              `protogen:"open.v1"`
	Error         *RpcWalletCloseSessionResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcWalletCloseSessionResponse) Reset() {
	*x = RpcWalletCloseSessionResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[139]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcWalletCloseSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcWalletCloseSessionResponse) ProtoMessage() {}

func (x *RpcWalletCloseSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[139]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcWalletCloseSessionResponse.ProtoReflect.Descriptor instead.
func (*RpcWalletCloseSessionResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 2, 4, 1}
}

func (x *RpcWalletCloseSessionResponse) GetError() *RpcWalletCloseSessionResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

type RpcWalletCloseSessionResponseError struct {
	state         protoimpl.MessageState                 `protogen:"open.v1"`
	Code          RpcWalletCloseSessionResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcWalletCloseSessionResponseErrorCode" json:"code,omitempty"`
	Description   string                                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcWalletCloseSessionResponseError) Reset() {
	*x = RpcWalletCloseSessionResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[140]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcWalletCloseSessionResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcWalletCloseSessionResponseError) ProtoMessage() {}

func (x *RpcWalletCloseSessionResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[140]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcWalletCloseSessionResponseError.ProtoReflect.Descriptor instead.
func (*RpcWalletCloseSessionResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 2, 4, 1, 0}
}

func (x *RpcWalletCloseSessionResponseError) GetCode() RpcWalletCloseSessionResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcWalletCloseSessionResponseError_NULL
}

func (x *RpcWalletCloseSessionResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcAccountConfig struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	EnableDataview          bool                   `protobuf:"varint,1,opt,name=enableDataview,proto3" json:"enableDataview,omitempty"`
	EnableDebug             bool                   `protobuf:"varint,2,opt,name=enableDebug,proto3" json:"enableDebug,omitempty"`
	EnablePrereleaseChannel bool                   `protobuf:"varint,3,opt,name=enablePrereleaseChannel,proto3" json:"enablePrereleaseChannel,omitempty"`
	EnableSpaces            bool                   `protobuf:"varint,4,opt,name=enableSpaces,proto3" json:"enableSpaces,omitempty"`
	Extra                   *structpb.Struct       `protobuf:"bytes,100,opt,name=extra,proto3" json:"extra,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *RpcAccountConfig) Reset() {
	*x = RpcAccountConfig{}
	mi := &file_pb_protos_commands_proto_msgTypes[141]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcAccountConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcAccountConfig) ProtoMessage() {}

func (x *RpcAccountConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[141]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcAccountConfig.ProtoReflect.Descriptor instead.
func (*RpcAccountConfig) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 3, 0}
}

func (x *RpcAccountConfig) GetEnableDataview() bool {
	if x != nil {
		return x.EnableDataview
	}
	return false
}

func (x *RpcAccountConfig) GetEnableDebug() bool {
	if x != nil {
		return x.EnableDebug
	}
	return false
}

func (x *RpcAccountConfig) GetEnablePrereleaseChannel() bool {
	if x != nil {
		return x.EnablePrereleaseChannel
	}
	return false
}

func (x *RpcAccountConfig) GetEnableSpaces() bool {
	if x != nil {
		return x.EnableSpaces
	}
	return false
}

func (x *RpcAccountConfig) GetExtra() *structpb.Struct {
	if x != nil {
		return x.Extra
	}
	return nil
}

type RpcAccountCreate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcAccountCreate) Reset() {
	*x = RpcAccountCreate{}
	mi := &file_pb_protos_commands_proto_msgTypes[142]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcAccountCreate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcAccountCreate) ProtoMessage() {}

func (x *RpcAccountCreate) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[142]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcAccountCreate.ProtoReflect.Descriptor instead.
func (*RpcAccountCreate) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 3, 1}
}

type RpcAccountRecover struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcAccountRecover) Reset() {
	*x = RpcAccountRecover{}
	mi := &file_pb_protos_commands_proto_msgTypes[143]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcAccountRecover) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcAccountRecover) ProtoMessage() {}

func (x *RpcAccountRecover) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[143]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcAccountRecover.ProtoReflect.Descriptor instead.
func (*RpcAccountRecover) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 3, 2}
}

type RpcAccountDelete struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcAccountDelete) Reset() {
	*x = RpcAccountDelete{}
	mi := &file_pb_protos_commands_proto_msgTypes[144]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcAccountDelete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcAccountDelete) ProtoMessage() {}

func (x *RpcAccountDelete) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[144]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcAccountDelete.ProtoReflect.Descriptor instead.
func (*RpcAccountDelete) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 3, 3}
}

type RpcAccountRevertDeletion struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcAccountRevertDeletion) Reset() {
	*x = RpcAccountRevertDeletion{}
	mi := &file_pb_protos_commands_proto_msgTypes[145]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcAccountRevertDeletion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcAccountRevertDeletion) ProtoMessage() {}

func (x *RpcAccountRevertDeletion) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[145]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcAccountRevertDeletion.ProtoReflect.Descriptor instead.
func (*RpcAccountRevertDeletion) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 3, 4}
}

type RpcAccountMigrate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcAccountMigrate) Reset() {
	*x = RpcAccountMigrate{}
	mi := &file_pb_protos_commands_proto_msgTypes[146]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcAccountMigrate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcAccountMigrate) ProtoMessage() {}

func (x *RpcAccountMigrate) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[146]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcAccountMigrate.ProtoReflect.Descriptor instead.
func (*RpcAccountMigrate) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 3, 5}
}

type RpcAccountMigrateCancel struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcAccountMigrateCancel) Reset() {
	*x = RpcAccountMigrateCancel{}
	mi := &file_pb_protos_commands_proto_msgTypes[147]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcAccountMigrateCancel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcAccountMigrateCancel) ProtoMessage() {}

func (x *RpcAccountMigrateCancel) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[147]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcAccountMigrateCancel.ProtoReflect.Descriptor instead.
func (*RpcAccountMigrateCancel) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 3, 6}
}

type RpcAccountSelect struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcAccountSelect) Reset() {
	*x = RpcAccountSelect{}
	mi := &file_pb_protos_commands_proto_msgTypes[148]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcAccountSelect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcAccountSelect) ProtoMessage() {}

func (x *RpcAccountSelect) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[148]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcAccountSelect.ProtoReflect.Descriptor instead.
func (*RpcAccountSelect) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 3, 7}
}

type RpcAccountStop struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcAccountStop) Reset() {
	*x = RpcAccountStop{}
	mi := &file_pb_protos_commands_proto_msgTypes[149]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcAccountStop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcAccountStop) ProtoMessage() {}

func (x *RpcAccountStop) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[149]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcAccountStop.ProtoReflect.Descriptor instead.
func (*RpcAccountStop) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 3, 8}
}

type RpcAccountMove struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcAccountMove) Reset() {
	*x = RpcAccountMove{}
	mi := &file_pb_protos_commands_proto_msgTypes[150]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcAccountMove) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcAccountMove) ProtoMessage() {}

func (x *RpcAccountMove) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[150]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcAccountMove.ProtoReflect.Descriptor instead.
func (*RpcAccountMove) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 3, 9}
}

type RpcAccountConfigUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcAccountConfigUpdate) Reset() {
	*x = RpcAccountConfigUpdate{}
	mi := &file_pb_protos_commands_proto_msgTypes[151]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcAccountConfigUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcAccountConfigUpdate) ProtoMessage() {}

func (x *RpcAccountConfigUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[151]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcAccountConfigUpdate.ProtoReflect.Descriptor instead.
func (*RpcAccountConfigUpdate) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 3, 10}
}

type RpcAccountGetConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcAccountGetConfig) Reset() {
	*x = RpcAccountGetConfig{}
	mi := &file_pb_protos_commands_proto_msgTypes[152]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcAccountGetConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcAccountGetConfig) ProtoMessage() {}

func (x *RpcAccountGetConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[152]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcAccountGetConfig.ProtoReflect.Descriptor instead.
func (*RpcAccountGetConfig) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 3, 11}
}

type RpcAccountRecoverFromLegacyExport struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcAccountRecoverFromLegacyExport) Reset() {
	*x = RpcAccountRecoverFromLegacyExport{}
	mi := &file_pb_protos_commands_proto_msgTypes[153]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcAccountRecoverFromLegacyExport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcAccountRecoverFromLegacyExport) ProtoMessage() {}

func (x *RpcAccountRecoverFromLegacyExport) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[153]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcAccountRecoverFromLegacyExport.ProtoReflect.Descriptor instead.
func (*RpcAccountRecoverFromLegacyExport) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 3, 12}
}

type RpcAccountEnableLocalNetworkSync struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcAccountEnableLocalNetworkSync) Reset() {
	*x = RpcAccountEnableLocalNetworkSync{}
	mi := &file_pb_protos_commands_proto_msgTypes[154]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcAccountEnableLocalNetworkSync) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcAccountEnableLocalNetworkSync) ProtoMessage() {}

func (x *RpcAccountEnableLocalNetworkSync) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[154]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcAccountEnableLocalNetworkSync.ProtoReflect.Descriptor instead.
func (*RpcAccountEnableLocalNetworkSync) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 3, 13}
}

type RpcAccountChangeJsonApiAddr struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcAccountChangeJsonApiAddr) Reset() {
	*x = RpcAccountChangeJsonApiAddr{}
	mi := &file_pb_protos_commands_proto_msgTypes[155]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcAccountChangeJsonApiAddr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcAccountChangeJsonApiAddr) ProtoMessage() {}

func (x *RpcAccountChangeJsonApiAddr) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[155]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcAccountChangeJsonApiAddr.ProtoReflect.Descriptor instead.
func (*RpcAccountChangeJsonApiAddr) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 3, 14}
}

type RpcAccountChangeNetworkConfigAndRestart struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcAccountChangeNetworkConfigAndRestart) Reset() {
	*x = RpcAccountChangeNetworkConfigAndRestart{}
	mi := &file_pb_protos_commands_proto_msgTypes[156]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcAccountChangeNetworkConfigAndRestart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcAccountChangeNetworkConfigAndRestart) ProtoMessage() {}

func (x *RpcAccountChangeNetworkConfigAndRestart) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[156]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcAccountChangeNetworkConfigAndRestart.ProtoReflect.Descriptor instead.
func (*RpcAccountChangeNetworkConfigAndRestart) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 3, 15}
}

type RpcAccountLocalLink struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcAccountLocalLink) Reset() {
	*x = RpcAccountLocalLink{}
	mi := &file_pb_protos_commands_proto_msgTypes[157]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcAccountLocalLink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcAccountLocalLink) ProtoMessage() {}

func (x *RpcAccountLocalLink) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[157]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcAccountLocalLink.ProtoReflect.Descriptor instead.
func (*RpcAccountLocalLink) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 3, 16}
}

// *
// Front end to middleware request-to-create-an account
type RpcAccountCreateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Name  string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"` // Account name
	// Types that are valid to be assigned to Avatar:
	//
	//	*RpcAccountCreateRequestAvatarOfAvatarLocalPath
	Avatar                      IsRpcAccountCreateRequestAvatar `protobuf_oneof:"avatar"`
	StorePath                   string                          `protobuf:"bytes,3,opt,name=storePath,proto3" json:"storePath,omitempty"`                                         // Path to local storage
	Icon                        int64                           `protobuf:"varint,4,opt,name=icon,proto3" json:"icon,omitempty"`                                                  // Option of pre-installed icon
	DisableLocalNetworkSync     bool                            `protobuf:"varint,5,opt,name=disableLocalNetworkSync,proto3" json:"disableLocalNetworkSync,omitempty"`            // Disable local network discovery
	NetworkMode                 RpcAccountNetworkMode           `protobuf:"varint,6,opt,name=networkMode,proto3,enum=anytype.RpcAccountNetworkMode" json:"networkMode,omitempty"` // optional, default is DefaultConfig
	NetworkCustomConfigFilePath string                          `protobuf:"bytes,7,opt,name=networkCustomConfigFilePath,proto3" json:"networkCustomConfigFilePath,omitempty"`     // config path for the custom network mode            }
	PreferYamuxTransport        bool                            `protobuf:"varint,8,opt,name=preferYamuxTransport,proto3" json:"preferYamuxTransport,omitempty"`                  // optional, default is false, recommended in case of problems with QUIC transport
	JsonApiListenAddr           string                          `protobuf:"bytes,9,opt,name=jsonApiListenAddr,proto3" json:"jsonApiListenAddr,omitempty"`                         // optional, if empty json api will not be started; 127.0.0.1:31009 should be the default one
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *RpcAccountCreateRequest) Reset() {
	*x = RpcAccountCreateRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[158]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcAccountCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcAccountCreateRequest) ProtoMessage() {}

func (x *RpcAccountCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[158]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcAccountCreateRequest.ProtoReflect.Descriptor instead.
func (*RpcAccountCreateRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 3, 1, 0}
}

func (x *RpcAccountCreateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RpcAccountCreateRequest) GetAvatar() IsRpcAccountCreateRequestAvatar {
	if x != nil {
		return x.Avatar
	}
	return nil
}

func (x *RpcAccountCreateRequest) GetAvatarLocalPath() string {
	if x != nil {
		if x, ok := x.Avatar.(*RpcAccountCreateRequestAvatarOfAvatarLocalPath); ok {
			return x.AvatarLocalPath
		}
	}
	return ""
}

func (x *RpcAccountCreateRequest) GetStorePath() string {
	if x != nil {
		return x.StorePath
	}
	return ""
}

func (x *RpcAccountCreateRequest) GetIcon() int64 {
	if x != nil {
		return x.Icon
	}
	return 0
}

func (x *RpcAccountCreateRequest) GetDisableLocalNetworkSync() bool {
	if x != nil {
		return x.DisableLocalNetworkSync
	}
	return false
}

func (x *RpcAccountCreateRequest) GetNetworkMode() RpcAccountNetworkMode {
	if x != nil {
		return x.NetworkMode
	}
	return RpcAccount_DefaultConfig
}

func (x *RpcAccountCreateRequest) GetNetworkCustomConfigFilePath() string {
	if x != nil {
		return x.NetworkCustomConfigFilePath
	}
	return ""
}

func (x *RpcAccountCreateRequest) GetPreferYamuxTransport() bool {
	if x != nil {
		return x.PreferYamuxTransport
	}
	return false
}

func (x *RpcAccountCreateRequest) GetJsonApiListenAddr() string {
	if x != nil {
		return x.JsonApiListenAddr
	}
	return ""
}

type IsRpcAccountCreateRequestAvatar interface {
	IsRpcAccountCreateRequestAvatar()
}

type RpcAccountCreateRequestAvatarOfAvatarLocalPath struct {
	AvatarLocalPath string `protobuf:"bytes,2,opt,name=avatarLocalPath,proto3,oneof" json:"avatarLocalPath,omitempty"` // Path to an image, that will be used as an avatar of this account
}

func (*RpcAccountCreateRequestAvatarOfAvatarLocalPath) IsRpcAccountCreateRequestAvatar() {}

// *
// Middleware-to-front-end response for an account creation request, that can contain a NULL error and created account or a non-NULL error and an empty account
type RpcAccountCreateResponse struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	Error         *RpcAccountCreateResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`     // Error while trying to create an account
	Account       *model.Account                 `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"` // A newly created account; In case of a failure, i.e. error is non-NULL, the account model should contain empty/default-value fields
	Config        *RpcAccountConfig              `protobuf:"bytes,3,opt,name=config,proto3" json:"config,omitempty"`   // deprecated, use account, GO-1926
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcAccountCreateResponse) Reset() {
	*x = RpcAccountCreateResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[159]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcAccountCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcAccountCreateResponse) ProtoMessage() {}

func (x *RpcAccountCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[159]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcAccountCreateResponse.ProtoReflect.Descriptor instead.
func (*RpcAccountCreateResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 3, 1, 1}
}

func (x *RpcAccountCreateResponse) GetError() *RpcAccountCreateResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcAccountCreateResponse) GetAccount() *model.Account {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *RpcAccountCreateResponse) GetConfig() *RpcAccountConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type RpcAccountCreateResponseError struct {
	state         protoimpl.MessageState            `protogen:"open.v1"`
	Code          RpcAccountCreateResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcAccountCreateResponseErrorCode" json:"code,omitempty"`
	Description   string                            `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcAccountCreateResponseError) Reset() {
	*x = RpcAccountCreateResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[160]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcAccountCreateResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcAccountCreateResponseError) ProtoMessage() {}

func (x *RpcAccountCreateResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[160]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcAccountCreateResponseError.ProtoReflect.Descriptor instead.
func (*RpcAccountCreateResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 3, 1, 1, 0}
}

func (x *RpcAccountCreateResponseError) GetCode() RpcAccountCreateResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcAccountCreateResponseError_NULL
}

func (x *RpcAccountCreateResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// *
// Front end to middleware request-to-start-search of an accounts for a recovered mnemonic.
// Each of an account that would be found will come with an AccountAdd event
type RpcAccountRecoverRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcAccountRecoverRequest) Reset() {
	*x = RpcAccountRecoverRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[161]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcAccountRecoverRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcAccountRecoverRequest) ProtoMessage() {}

func (x *RpcAccountRecoverRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[161]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcAccountRecoverRequest.ProtoReflect.Descriptor instead.
func (*RpcAccountRecoverRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 3, 2, 0}
}

// *
// Middleware-to-front-end response to an account recover request, that can contain a NULL error and created account or a non-NULL error and an empty account
type RpcAccountRecoverResponse struct {
	state         protoimpl.MessageState          `protogen:"open.v1"`
	Error         *RpcAccountRecoverResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"` // Error while trying to recover an account
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcAccountRecoverResponse) Reset() {
	*x = RpcAccountRecoverResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[162]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcAccountRecoverResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcAccountRecoverResponse) ProtoMessage() {}

func (x *RpcAccountRecoverResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[162]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcAccountRecoverResponse.ProtoReflect.Descriptor instead.
func (*RpcAccountRecoverResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 3, 2, 1}
}

func (x *RpcAccountRecoverResponse) GetError() *RpcAccountRecoverResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

type RpcAccountRecoverResponseError struct {
	state         protoimpl.MessageState             `protogen:"open.v1"`
	Code          RpcAccountRecoverResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcAccountRecoverResponseErrorCode" json:"code,omitempty"`
	Description   string                             `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcAccountRecoverResponseError) Reset() {
	*x = RpcAccountRecoverResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[163]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcAccountRecoverResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcAccountRecoverResponseError) ProtoMessage() {}

func (x *RpcAccountRecoverResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[163]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcAccountRecoverResponseError.ProtoReflect.Descriptor instead.
func (*RpcAccountRecoverResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 3, 2, 1, 0}
}

func (x *RpcAccountRecoverResponseError) GetCode() RpcAccountRecoverResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcAccountRecoverResponseError_NULL
}

func (x *RpcAccountRecoverResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcAccountDeleteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcAccountDeleteRequest) Reset() {
	*x = RpcAccountDeleteRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[164]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcAccountDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcAccountDeleteRequest) ProtoMessage() {}

func (x *RpcAccountDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[164]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcAccountDeleteRequest.ProtoReflect.Descriptor instead.
func (*RpcAccountDeleteRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 3, 3, 0}
}

type RpcAccountDeleteResponse struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	Error         *RpcAccountDeleteResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"` // Error while trying to recover an account
	Status        *model.AccountStatus           `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcAccountDeleteResponse) Reset() {
	*x = RpcAccountDeleteResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[165]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcAccountDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcAccountDeleteResponse) ProtoMessage() {}

func (x *RpcAccountDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[165]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcAccountDeleteResponse.ProtoReflect.Descriptor instead.
func (*RpcAccountDeleteResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 3, 3, 1}
}

func (x *RpcAccountDeleteResponse) GetError() *RpcAccountDeleteResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcAccountDeleteResponse) GetStatus() *model.AccountStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type RpcAccountDeleteResponseError struct {
	state         protoimpl.MessageState            `protogen:"open.v1"`
	Code          RpcAccountDeleteResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcAccountDeleteResponseErrorCode" json:"code,omitempty"`
	Description   string                            `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcAccountDeleteResponseError) Reset() {
	*x = RpcAccountDeleteResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[166]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcAccountDeleteResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcAccountDeleteResponseError) ProtoMessage() {}

func (x *RpcAccountDeleteResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[166]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcAccountDeleteResponseError.ProtoReflect.Descriptor instead.
func (*RpcAccountDeleteResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 3, 3, 1, 0}
}

func (x *RpcAccountDeleteResponseError) GetCode() RpcAccountDeleteResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcAccountDeleteResponseError_NULL
}

func (x *RpcAccountDeleteResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcAccountRevertDeletionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcAccountRevertDeletionRequest) Reset() {
	*x = RpcAccountRevertDeletionRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[167]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcAccountRevertDeletionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcAccountRevertDeletionRequest) ProtoMessage() {}

func (x *RpcAccountRevertDeletionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[167]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcAccountRevertDeletionRequest.ProtoReflect.Descriptor instead.
func (*RpcAccountRevertDeletionRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 3, 4, 0}
}

type RpcAccountRevertDeletionResponse struct {
	state         protoimpl.MessageState                 `protogen:"open.v1"`
	Error         *RpcAccountRevertDeletionResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"` // Error while trying to recover an account
	Status        *model.AccountStatus                   `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcAccountRevertDeletionResponse) Reset() {
	*x = RpcAccountRevertDeletionResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[168]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcAccountRevertDeletionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcAccountRevertDeletionResponse) ProtoMessage() {}

func (x *RpcAccountRevertDeletionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[168]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcAccountRevertDeletionResponse.ProtoReflect.Descriptor instead.
func (*RpcAccountRevertDeletionResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 3, 4, 1}
}

func (x *RpcAccountRevertDeletionResponse) GetError() *RpcAccountRevertDeletionResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcAccountRevertDeletionResponse) GetStatus() *model.AccountStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type RpcAccountRevertDeletionResponseError struct {
	state         protoimpl.MessageState                    `protogen:"open.v1"`
	Code          RpcAccountRevertDeletionResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcAccountRevertDeletionResponseErrorCode" json:"code,omitempty"`
	Description   string                                    `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcAccountRevertDeletionResponseError) Reset() {
	*x = RpcAccountRevertDeletionResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[169]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcAccountRevertDeletionResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcAccountRevertDeletionResponseError) ProtoMessage() {}

func (x *RpcAccountRevertDeletionResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[169]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcAccountRevertDeletionResponseError.ProtoReflect.Descriptor instead.
func (*RpcAccountRevertDeletionResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 3, 4, 1, 0}
}

func (x *RpcAccountRevertDeletionResponseError) GetCode() RpcAccountRevertDeletionResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcAccountRevertDeletionResponseError_NULL
}

func (x *RpcAccountRevertDeletionResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcAccountMigrateRequest struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	Id                      string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // Id of a selected account
	RootPath                string                 `protobuf:"bytes,2,opt,name=rootPath,proto3" json:"rootPath,omitempty"`
	FulltextPrimaryLanguage string                 `protobuf:"bytes,3,opt,name=fulltextPrimaryLanguage,proto3" json:"fulltextPrimaryLanguage,omitempty"` // optional, default fts language
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *RpcAccountMigrateRequest) Reset() {
	*x = RpcAccountMigrateRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[170]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcAccountMigrateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcAccountMigrateRequest) ProtoMessage() {}

func (x *RpcAccountMigrateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[170]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcAccountMigrateRequest.ProtoReflect.Descriptor instead.
func (*RpcAccountMigrateRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 3, 5, 0}
}

func (x *RpcAccountMigrateRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RpcAccountMigrateRequest) GetRootPath() string {
	if x != nil {
		return x.RootPath
	}
	return ""
}

func (x *RpcAccountMigrateRequest) GetFulltextPrimaryLanguage() string {
	if x != nil {
		return x.FulltextPrimaryLanguage
	}
	return ""
}

type RpcAccountMigrateResponse struct {
	state         protoimpl.MessageState          `protogen:"open.v1"`
	Error         *RpcAccountMigrateResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcAccountMigrateResponse) Reset() {
	*x = RpcAccountMigrateResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[171]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcAccountMigrateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcAccountMigrateResponse) ProtoMessage() {}

func (x *RpcAccountMigrateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[171]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcAccountMigrateResponse.ProtoReflect.Descriptor instead.
func (*RpcAccountMigrateResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 3, 5, 1}
}

func (x *RpcAccountMigrateResponse) GetError() *RpcAccountMigrateResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

type RpcAccountMigrateResponseError struct {
	state         protoimpl.MessageState             `protogen:"open.v1"`
	Code          RpcAccountMigrateResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcAccountMigrateResponseErrorCode" json:"code,omitempty"`
	Description   string                             `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcAccountMigrateResponseError) Reset() {
	*x = RpcAccountMigrateResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[172]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcAccountMigrateResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcAccountMigrateResponseError) ProtoMessage() {}

func (x *RpcAccountMigrateResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[172]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcAccountMigrateResponseError.ProtoReflect.Descriptor instead.
func (*RpcAccountMigrateResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 3, 5, 1, 0}
}

func (x *RpcAccountMigrateResponseError) GetCode() RpcAccountMigrateResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcAccountMigrateResponseError_NULL
}

func (x *RpcAccountMigrateResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcAccountMigrateCancelRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // Id of a selected account
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcAccountMigrateCancelRequest) Reset() {
	*x = RpcAccountMigrateCancelRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[173]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcAccountMigrateCancelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcAccountMigrateCancelRequest) ProtoMessage() {}

func (x *RpcAccountMigrateCancelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[173]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcAccountMigrateCancelRequest.ProtoReflect.Descriptor instead.
func (*RpcAccountMigrateCancelRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 3, 6, 0}
}

func (x *RpcAccountMigrateCancelRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type RpcAccountMigrateCancelResponse struct {
	state         protoimpl.MessageState                `protogen:"open.v1"`
	Error         *RpcAccountMigrateCancelResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcAccountMigrateCancelResponse) Reset() {
	*x = RpcAccountMigrateCancelResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[174]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcAccountMigrateCancelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcAccountMigrateCancelResponse) ProtoMessage() {}

func (x *RpcAccountMigrateCancelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[174]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcAccountMigrateCancelResponse.ProtoReflect.Descriptor instead.
func (*RpcAccountMigrateCancelResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 3, 6, 1}
}

func (x *RpcAccountMigrateCancelResponse) GetError() *RpcAccountMigrateCancelResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

type RpcAccountMigrateCancelResponseError struct {
	state         protoimpl.MessageState                   `protogen:"open.v1"`
	Code          RpcAccountMigrateCancelResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcAccountMigrateCancelResponseErrorCode" json:"code,omitempty"`
	Description   string                                   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcAccountMigrateCancelResponseError) Reset() {
	*x = RpcAccountMigrateCancelResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[175]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcAccountMigrateCancelResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcAccountMigrateCancelResponseError) ProtoMessage() {}

func (x *RpcAccountMigrateCancelResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[175]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcAccountMigrateCancelResponseError.ProtoReflect.Descriptor instead.
func (*RpcAccountMigrateCancelResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 3, 6, 1, 0}
}

func (x *RpcAccountMigrateCancelResponseError) GetCode() RpcAccountMigrateCancelResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcAccountMigrateCancelResponseError_NULL
}

func (x *RpcAccountMigrateCancelResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// *
// Front end to middleware request-to-launch-a specific account using account id and a root path
// User can select an account from those, that came with an AccountAdd events
type RpcAccountSelectRequest struct {
	state                       protoimpl.MessageState `protogen:"open.v1"`
	Id                          string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                                       // Id of a selected account
	RootPath                    string                 `protobuf:"bytes,2,opt,name=rootPath,proto3" json:"rootPath,omitempty"`                                           // Root path is optional, set if this is a first request
	DisableLocalNetworkSync     bool                   `protobuf:"varint,3,opt,name=disableLocalNetworkSync,proto3" json:"disableLocalNetworkSync,omitempty"`            // Disable local network discovery
	NetworkMode                 RpcAccountNetworkMode  `protobuf:"varint,4,opt,name=networkMode,proto3,enum=anytype.RpcAccountNetworkMode" json:"networkMode,omitempty"` // optional, default is DefaultConfig
	NetworkCustomConfigFilePath string                 `protobuf:"bytes,5,opt,name=networkCustomConfigFilePath,proto3" json:"networkCustomConfigFilePath,omitempty"`     // config path for the custom network mode
	PreferYamuxTransport        bool                   `protobuf:"varint,6,opt,name=preferYamuxTransport,proto3" json:"preferYamuxTransport,omitempty"`                  // optional, default is false, recommended in case of problems with QUIC transport
	JsonApiListenAddr           string                 `protobuf:"bytes,7,opt,name=jsonApiListenAddr,proto3" json:"jsonApiListenAddr,omitempty"`                         // optional, if empty json api will not be started; 127.0.0.1:31009 should be the default one
	FulltextPrimaryLanguage     string                 `protobuf:"bytes,8,opt,name=fulltextPrimaryLanguage,proto3" json:"fulltextPrimaryLanguage,omitempty"`             // optional, default fts language
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *RpcAccountSelectRequest) Reset() {
	*x = RpcAccountSelectRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[176]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcAccountSelectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcAccountSelectRequest) ProtoMessage() {}

func (x *RpcAccountSelectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[176]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcAccountSelectRequest.ProtoReflect.Descriptor instead.
func (*RpcAccountSelectRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 3, 7, 0}
}

func (x *RpcAccountSelectRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RpcAccountSelectRequest) GetRootPath() string {
	if x != nil {
		return x.RootPath
	}
	return ""
}

func (x *RpcAccountSelectRequest) GetDisableLocalNetworkSync() bool {
	if x != nil {
		return x.DisableLocalNetworkSync
	}
	return false
}

func (x *RpcAccountSelectRequest) GetNetworkMode() RpcAccountNetworkMode {
	if x != nil {
		return x.NetworkMode
	}
	return RpcAccount_DefaultConfig
}

func (x *RpcAccountSelectRequest) GetNetworkCustomConfigFilePath() string {
	if x != nil {
		return x.NetworkCustomConfigFilePath
	}
	return ""
}

func (x *RpcAccountSelectRequest) GetPreferYamuxTransport() bool {
	if x != nil {
		return x.PreferYamuxTransport
	}
	return false
}

func (x *RpcAccountSelectRequest) GetJsonApiListenAddr() string {
	if x != nil {
		return x.JsonApiListenAddr
	}
	return ""
}

func (x *RpcAccountSelectRequest) GetFulltextPrimaryLanguage() string {
	if x != nil {
		return x.FulltextPrimaryLanguage
	}
	return ""
}

// *
// Middleware-to-front-end response for an account select request, that can contain a NULL error and selected account or a non-NULL error and an empty account
type RpcAccountSelectResponse struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	Error         *RpcAccountSelectResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`     // Error while trying to launch/select an account
	Account       *model.Account                 `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"` // Selected account
	Config        *RpcAccountConfig              `protobuf:"bytes,3,opt,name=config,proto3" json:"config,omitempty"`   // deprecated, use account, GO-1926
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcAccountSelectResponse) Reset() {
	*x = RpcAccountSelectResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[177]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcAccountSelectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcAccountSelectResponse) ProtoMessage() {}

func (x *RpcAccountSelectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[177]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcAccountSelectResponse.ProtoReflect.Descriptor instead.
func (*RpcAccountSelectResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 3, 7, 1}
}

func (x *RpcAccountSelectResponse) GetError() *RpcAccountSelectResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcAccountSelectResponse) GetAccount() *model.Account {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *RpcAccountSelectResponse) GetConfig() *RpcAccountConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type RpcAccountSelectResponseError struct {
	state         protoimpl.MessageState            `protogen:"open.v1"`
	Code          RpcAccountSelectResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcAccountSelectResponseErrorCode" json:"code,omitempty"`
	Description   string                            `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcAccountSelectResponseError) Reset() {
	*x = RpcAccountSelectResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[178]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcAccountSelectResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcAccountSelectResponseError) ProtoMessage() {}

func (x *RpcAccountSelectResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[178]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcAccountSelectResponseError.ProtoReflect.Descriptor instead.
func (*RpcAccountSelectResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 3, 7, 1, 0}
}

func (x *RpcAccountSelectResponseError) GetCode() RpcAccountSelectResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcAccountSelectResponseError_NULL
}

func (x *RpcAccountSelectResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// *
// Front end to middleware request to stop currently running account node and optionally remove the locally stored data
type RpcAccountStopRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RemoveData    bool                   `protobuf:"varint,1,opt,name=removeData,proto3" json:"removeData,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcAccountStopRequest) Reset() {
	*x = RpcAccountStopRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[179]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcAccountStopRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcAccountStopRequest) ProtoMessage() {}

func (x *RpcAccountStopRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[179]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcAccountStopRequest.ProtoReflect.Descriptor instead.
func (*RpcAccountStopRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 3, 8, 0}
}

func (x *RpcAccountStopRequest) GetRemoveData() bool {
	if x != nil {
		return x.RemoveData
	}
	return false
}

// *
// Middleware-to-front-end response for an account stop request
type RpcAccountStopResponse struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	Error         *RpcAccountStopResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"` // Error while trying to launch/select an account
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcAccountStopResponse) Reset() {
	*x = RpcAccountStopResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[180]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcAccountStopResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcAccountStopResponse) ProtoMessage() {}

func (x *RpcAccountStopResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[180]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcAccountStopResponse.ProtoReflect.Descriptor instead.
func (*RpcAccountStopResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 3, 8, 1}
}

func (x *RpcAccountStopResponse) GetError() *RpcAccountStopResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

type RpcAccountStopResponseError struct {
	state         protoimpl.MessageState          `protogen:"open.v1"`
	Code          RpcAccountStopResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcAccountStopResponseErrorCode" json:"code,omitempty"`
	Description   string                          `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcAccountStopResponseError) Reset() {
	*x = RpcAccountStopResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[181]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcAccountStopResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcAccountStopResponseError) ProtoMessage() {}

func (x *RpcAccountStopResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[181]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcAccountStopResponseError.ProtoReflect.Descriptor instead.
func (*RpcAccountStopResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 3, 8, 1, 0}
}

func (x *RpcAccountStopResponseError) GetCode() RpcAccountStopResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcAccountStopResponseError_NULL
}

func (x *RpcAccountStopResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// *
// Front-end-to-middleware request to move a account to a new disk location
type RpcAccountMoveRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NewPath       string                 `protobuf:"bytes,1,opt,name=newPath,proto3" json:"newPath,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcAccountMoveRequest) Reset() {
	*x = RpcAccountMoveRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[182]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcAccountMoveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcAccountMoveRequest) ProtoMessage() {}

func (x *RpcAccountMoveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[182]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcAccountMoveRequest.ProtoReflect.Descriptor instead.
func (*RpcAccountMoveRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 3, 9, 0}
}

func (x *RpcAccountMoveRequest) GetNewPath() string {
	if x != nil {
		return x.NewPath
	}
	return ""
}

type RpcAccountMoveResponse struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	Error         *RpcAccountMoveResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcAccountMoveResponse) Reset() {
	*x = RpcAccountMoveResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[183]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcAccountMoveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcAccountMoveResponse) ProtoMessage() {}

func (x *RpcAccountMoveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[183]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcAccountMoveResponse.ProtoReflect.Descriptor instead.
func (*RpcAccountMoveResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 3, 9, 1}
}

func (x *RpcAccountMoveResponse) GetError() *RpcAccountMoveResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

type RpcAccountMoveResponseError struct {
	state         protoimpl.MessageState          `protogen:"open.v1"`
	Code          RpcAccountMoveResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcAccountMoveResponseErrorCode" json:"code,omitempty"`
	Description   string                          `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcAccountMoveResponseError) Reset() {
	*x = RpcAccountMoveResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[184]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcAccountMoveResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcAccountMoveResponseError) ProtoMessage() {}

func (x *RpcAccountMoveResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[184]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcAccountMoveResponseError.ProtoReflect.Descriptor instead.
func (*RpcAccountMoveResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 3, 9, 1, 0}
}

func (x *RpcAccountMoveResponseError) GetCode() RpcAccountMoveResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcAccountMoveResponseError_NULL
}

func (x *RpcAccountMoveResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcAccountConfigUpdateRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	IPFSStorageAddr string                 `protobuf:"bytes,2,opt,name=IPFSStorageAddr,proto3" json:"IPFSStorageAddr,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *RpcAccountConfigUpdateRequest) Reset() {
	*x = RpcAccountConfigUpdateRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[185]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcAccountConfigUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcAccountConfigUpdateRequest) ProtoMessage() {}

func (x *RpcAccountConfigUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[185]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcAccountConfigUpdateRequest.ProtoReflect.Descriptor instead.
func (*RpcAccountConfigUpdateRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 3, 10, 0}
}

func (x *RpcAccountConfigUpdateRequest) GetIPFSStorageAddr() string {
	if x != nil {
		return x.IPFSStorageAddr
	}
	return ""
}

type RpcAccountConfigUpdateResponse struct {
	state         protoimpl.MessageState               `protogen:"open.v1"`
	Error         *RpcAccountConfigUpdateResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcAccountConfigUpdateResponse) Reset() {
	*x = RpcAccountConfigUpdateResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[186]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcAccountConfigUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcAccountConfigUpdateResponse) ProtoMessage() {}

func (x *RpcAccountConfigUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[186]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcAccountConfigUpdateResponse.ProtoReflect.Descriptor instead.
func (*RpcAccountConfigUpdateResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 3, 10, 1}
}

func (x *RpcAccountConfigUpdateResponse) GetError() *RpcAccountConfigUpdateResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

type RpcAccountConfigUpdateResponseError struct {
	state         protoimpl.MessageState                  `protogen:"open.v1"`
	Code          RpcAccountConfigUpdateResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcAccountConfigUpdateResponseErrorCode" json:"code,omitempty"`
	Description   string                                  `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcAccountConfigUpdateResponseError) Reset() {
	*x = RpcAccountConfigUpdateResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[187]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcAccountConfigUpdateResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcAccountConfigUpdateResponseError) ProtoMessage() {}

func (x *RpcAccountConfigUpdateResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[187]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcAccountConfigUpdateResponseError.ProtoReflect.Descriptor instead.
func (*RpcAccountConfigUpdateResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 3, 10, 1, 0}
}

func (x *RpcAccountConfigUpdateResponseError) GetCode() RpcAccountConfigUpdateResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcAccountConfigUpdateResponseError_NULL
}

func (x *RpcAccountConfigUpdateResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcAccountGetConfigGet struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcAccountGetConfigGet) Reset() {
	*x = RpcAccountGetConfigGet{}
	mi := &file_pb_protos_commands_proto_msgTypes[188]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcAccountGetConfigGet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcAccountGetConfigGet) ProtoMessage() {}

func (x *RpcAccountGetConfigGet) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[188]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcAccountGetConfigGet.ProtoReflect.Descriptor instead.
func (*RpcAccountGetConfigGet) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 3, 11, 0}
}

type RpcAccountGetConfigGetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcAccountGetConfigGetRequest) Reset() {
	*x = RpcAccountGetConfigGetRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[189]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcAccountGetConfigGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcAccountGetConfigGetRequest) ProtoMessage() {}

func (x *RpcAccountGetConfigGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[189]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcAccountGetConfigGetRequest.ProtoReflect.Descriptor instead.
func (*RpcAccountGetConfigGetRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 3, 11, 0, 0}
}

type RpcAccountRecoverFromLegacyExportRequest struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	Path                    string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	RootPath                string                 `protobuf:"bytes,2,opt,name=rootPath,proto3" json:"rootPath,omitempty"`
	Icon                    int64                  `protobuf:"varint,3,opt,name=icon,proto3" json:"icon,omitempty"`
	FulltextPrimaryLanguage string                 `protobuf:"bytes,4,opt,name=fulltextPrimaryLanguage,proto3" json:"fulltextPrimaryLanguage,omitempty"` // optional, default fts language
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *RpcAccountRecoverFromLegacyExportRequest) Reset() {
	*x = RpcAccountRecoverFromLegacyExportRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[190]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcAccountRecoverFromLegacyExportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcAccountRecoverFromLegacyExportRequest) ProtoMessage() {}

func (x *RpcAccountRecoverFromLegacyExportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[190]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcAccountRecoverFromLegacyExportRequest.ProtoReflect.Descriptor instead.
func (*RpcAccountRecoverFromLegacyExportRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 3, 12, 0}
}

func (x *RpcAccountRecoverFromLegacyExportRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *RpcAccountRecoverFromLegacyExportRequest) GetRootPath() string {
	if x != nil {
		return x.RootPath
	}
	return ""
}

func (x *RpcAccountRecoverFromLegacyExportRequest) GetIcon() int64 {
	if x != nil {
		return x.Icon
	}
	return 0
}

func (x *RpcAccountRecoverFromLegacyExportRequest) GetFulltextPrimaryLanguage() string {
	if x != nil {
		return x.FulltextPrimaryLanguage
	}
	return ""
}

type RpcAccountRecoverFromLegacyExportResponse struct {
	state           protoimpl.MessageState                          `protogen:"open.v1"`
	AccountId       string                                          `protobuf:"bytes,1,opt,name=accountId,proto3" json:"accountId,omitempty"`
	PersonalSpaceId string                                          `protobuf:"bytes,3,opt,name=personalSpaceId,proto3" json:"personalSpaceId,omitempty"`
	Error           *RpcAccountRecoverFromLegacyExportResponseError `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *RpcAccountRecoverFromLegacyExportResponse) Reset() {
	*x = RpcAccountRecoverFromLegacyExportResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[191]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcAccountRecoverFromLegacyExportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcAccountRecoverFromLegacyExportResponse) ProtoMessage() {}

func (x *RpcAccountRecoverFromLegacyExportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[191]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcAccountRecoverFromLegacyExportResponse.ProtoReflect.Descriptor instead.
func (*RpcAccountRecoverFromLegacyExportResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 3, 12, 1}
}

func (x *RpcAccountRecoverFromLegacyExportResponse) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *RpcAccountRecoverFromLegacyExportResponse) GetPersonalSpaceId() string {
	if x != nil {
		return x.PersonalSpaceId
	}
	return ""
}

func (x *RpcAccountRecoverFromLegacyExportResponse) GetError() *RpcAccountRecoverFromLegacyExportResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

type RpcAccountRecoverFromLegacyExportResponseError struct {
	state         protoimpl.MessageState                             `protogen:"open.v1"`
	Code          RpcAccountRecoverFromLegacyExportResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcAccountRecoverFromLegacyExportResponseErrorCode" json:"code,omitempty"`
	Description   string                                             `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcAccountRecoverFromLegacyExportResponseError) Reset() {
	*x = RpcAccountRecoverFromLegacyExportResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[192]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcAccountRecoverFromLegacyExportResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcAccountRecoverFromLegacyExportResponseError) ProtoMessage() {}

func (x *RpcAccountRecoverFromLegacyExportResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[192]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcAccountRecoverFromLegacyExportResponseError.ProtoReflect.Descriptor instead.
func (*RpcAccountRecoverFromLegacyExportResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 3, 12, 1, 0}
}

func (x *RpcAccountRecoverFromLegacyExportResponseError) GetCode() RpcAccountRecoverFromLegacyExportResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcAccountRecoverFromLegacyExportResponseError_NULL
}

func (x *RpcAccountRecoverFromLegacyExportResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcAccountEnableLocalNetworkSyncRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcAccountEnableLocalNetworkSyncRequest) Reset() {
	*x = RpcAccountEnableLocalNetworkSyncRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[193]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcAccountEnableLocalNetworkSyncRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcAccountEnableLocalNetworkSyncRequest) ProtoMessage() {}

func (x *RpcAccountEnableLocalNetworkSyncRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[193]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcAccountEnableLocalNetworkSyncRequest.ProtoReflect.Descriptor instead.
func (*RpcAccountEnableLocalNetworkSyncRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 3, 13, 0}
}

type RpcAccountEnableLocalNetworkSyncResponse struct {
	state         protoimpl.MessageState                         `protogen:"open.v1"`
	Error         *RpcAccountEnableLocalNetworkSyncResponseError `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcAccountEnableLocalNetworkSyncResponse) Reset() {
	*x = RpcAccountEnableLocalNetworkSyncResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[194]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcAccountEnableLocalNetworkSyncResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcAccountEnableLocalNetworkSyncResponse) ProtoMessage() {}

func (x *RpcAccountEnableLocalNetworkSyncResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[194]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcAccountEnableLocalNetworkSyncResponse.ProtoReflect.Descriptor instead.
func (*RpcAccountEnableLocalNetworkSyncResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 3, 13, 1}
}

func (x *RpcAccountEnableLocalNetworkSyncResponse) GetError() *RpcAccountEnableLocalNetworkSyncResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

type RpcAccountEnableLocalNetworkSyncResponseError struct {
	state         protoimpl.MessageState                            `protogen:"open.v1"`
	Code          RpcAccountEnableLocalNetworkSyncResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcAccountEnableLocalNetworkSyncResponseErrorCode" json:"code,omitempty"`
	Description   string                                            `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcAccountEnableLocalNetworkSyncResponseError) Reset() {
	*x = RpcAccountEnableLocalNetworkSyncResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[195]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcAccountEnableLocalNetworkSyncResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcAccountEnableLocalNetworkSyncResponseError) ProtoMessage() {}

func (x *RpcAccountEnableLocalNetworkSyncResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[195]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcAccountEnableLocalNetworkSyncResponseError.ProtoReflect.Descriptor instead.
func (*RpcAccountEnableLocalNetworkSyncResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 3, 13, 1, 0}
}

func (x *RpcAccountEnableLocalNetworkSyncResponseError) GetCode() RpcAccountEnableLocalNetworkSyncResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcAccountEnableLocalNetworkSyncResponseError_NULL
}

func (x *RpcAccountEnableLocalNetworkSyncResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcAccountChangeJsonApiAddrRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ListenAddr    string                 `protobuf:"bytes,1,opt,name=listenAddr,proto3" json:"listenAddr,omitempty"` // make sure to use 127.0.0.1:x to not listen on all interfaces; recommended value is 127.0.0.1:31009
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcAccountChangeJsonApiAddrRequest) Reset() {
	*x = RpcAccountChangeJsonApiAddrRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[196]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcAccountChangeJsonApiAddrRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcAccountChangeJsonApiAddrRequest) ProtoMessage() {}

func (x *RpcAccountChangeJsonApiAddrRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[196]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcAccountChangeJsonApiAddrRequest.ProtoReflect.Descriptor instead.
func (*RpcAccountChangeJsonApiAddrRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 3, 14, 0}
}

func (x *RpcAccountChangeJsonApiAddrRequest) GetListenAddr() string {
	if x != nil {
		return x.ListenAddr
	}
	return ""
}

type RpcAccountChangeJsonApiAddrResponse struct {
	state         protoimpl.MessageState                    `protogen:"open.v1"`
	Error         *RpcAccountChangeJsonApiAddrResponseError `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcAccountChangeJsonApiAddrResponse) Reset() {
	*x = RpcAccountChangeJsonApiAddrResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[197]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcAccountChangeJsonApiAddrResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcAccountChangeJsonApiAddrResponse) ProtoMessage() {}

func (x *RpcAccountChangeJsonApiAddrResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[197]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcAccountChangeJsonApiAddrResponse.ProtoReflect.Descriptor instead.
func (*RpcAccountChangeJsonApiAddrResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 3, 14, 1}
}

func (x *RpcAccountChangeJsonApiAddrResponse) GetError() *RpcAccountChangeJsonApiAddrResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

type RpcAccountChangeJsonApiAddrResponseError struct {
	state         protoimpl.MessageState                       `protogen:"open.v1"`
	Code          RpcAccountChangeJsonApiAddrResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcAccountChangeJsonApiAddrResponseErrorCode" json:"code,omitempty"`
	Description   string                                       `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcAccountChangeJsonApiAddrResponseError) Reset() {
	*x = RpcAccountChangeJsonApiAddrResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[198]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcAccountChangeJsonApiAddrResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcAccountChangeJsonApiAddrResponseError) ProtoMessage() {}

func (x *RpcAccountChangeJsonApiAddrResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[198]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcAccountChangeJsonApiAddrResponseError.ProtoReflect.Descriptor instead.
func (*RpcAccountChangeJsonApiAddrResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 3, 14, 1, 0}
}

func (x *RpcAccountChangeJsonApiAddrResponseError) GetCode() RpcAccountChangeJsonApiAddrResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcAccountChangeJsonApiAddrResponseError_NULL
}

func (x *RpcAccountChangeJsonApiAddrResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcAccountChangeNetworkConfigAndRestartRequest struct {
	state                       protoimpl.MessageState `protogen:"open.v1"`
	NetworkMode                 RpcAccountNetworkMode  `protobuf:"varint,1,opt,name=networkMode,proto3,enum=anytype.RpcAccountNetworkMode" json:"networkMode,omitempty"`
	NetworkCustomConfigFilePath string                 `protobuf:"bytes,2,opt,name=networkCustomConfigFilePath,proto3" json:"networkCustomConfigFilePath,omitempty"`
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *RpcAccountChangeNetworkConfigAndRestartRequest) Reset() {
	*x = RpcAccountChangeNetworkConfigAndRestartRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[199]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcAccountChangeNetworkConfigAndRestartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcAccountChangeNetworkConfigAndRestartRequest) ProtoMessage() {}

func (x *RpcAccountChangeNetworkConfigAndRestartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[199]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcAccountChangeNetworkConfigAndRestartRequest.ProtoReflect.Descriptor instead.
func (*RpcAccountChangeNetworkConfigAndRestartRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 3, 15, 0}
}

func (x *RpcAccountChangeNetworkConfigAndRestartRequest) GetNetworkMode() RpcAccountNetworkMode {
	if x != nil {
		return x.NetworkMode
	}
	return RpcAccount_DefaultConfig
}

func (x *RpcAccountChangeNetworkConfigAndRestartRequest) GetNetworkCustomConfigFilePath() string {
	if x != nil {
		return x.NetworkCustomConfigFilePath
	}
	return ""
}

type RpcAccountChangeNetworkConfigAndRestartResponse struct {
	state         protoimpl.MessageState                                `protogen:"open.v1"`
	Error         *RpcAccountChangeNetworkConfigAndRestartResponseError `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcAccountChangeNetworkConfigAndRestartResponse) Reset() {
	*x = RpcAccountChangeNetworkConfigAndRestartResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[200]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcAccountChangeNetworkConfigAndRestartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcAccountChangeNetworkConfigAndRestartResponse) ProtoMessage() {}

func (x *RpcAccountChangeNetworkConfigAndRestartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[200]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcAccountChangeNetworkConfigAndRestartResponse.ProtoReflect.Descriptor instead.
func (*RpcAccountChangeNetworkConfigAndRestartResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 3, 15, 1}
}

func (x *RpcAccountChangeNetworkConfigAndRestartResponse) GetError() *RpcAccountChangeNetworkConfigAndRestartResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

type RpcAccountChangeNetworkConfigAndRestartResponseError struct {
	state         protoimpl.MessageState                                   `protogen:"open.v1"`
	Code          RpcAccountChangeNetworkConfigAndRestartResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcAccountChangeNetworkConfigAndRestartResponseErrorCode" json:"code,omitempty"`
	Description   string                                                   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcAccountChangeNetworkConfigAndRestartResponseError) Reset() {
	*x = RpcAccountChangeNetworkConfigAndRestartResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[201]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcAccountChangeNetworkConfigAndRestartResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcAccountChangeNetworkConfigAndRestartResponseError) ProtoMessage() {}

func (x *RpcAccountChangeNetworkConfigAndRestartResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[201]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcAccountChangeNetworkConfigAndRestartResponseError.ProtoReflect.Descriptor instead.
func (*RpcAccountChangeNetworkConfigAndRestartResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 3, 15, 1, 0}
}

func (x *RpcAccountChangeNetworkConfigAndRestartResponseError) GetCode() RpcAccountChangeNetworkConfigAndRestartResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcAccountChangeNetworkConfigAndRestartResponseError_NULL
}

func (x *RpcAccountChangeNetworkConfigAndRestartResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcAccountLocalLinkNewChallenge struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcAccountLocalLinkNewChallenge) Reset() {
	*x = RpcAccountLocalLinkNewChallenge{}
	mi := &file_pb_protos_commands_proto_msgTypes[202]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcAccountLocalLinkNewChallenge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcAccountLocalLinkNewChallenge) ProtoMessage() {}

func (x *RpcAccountLocalLinkNewChallenge) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[202]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcAccountLocalLinkNewChallenge.ProtoReflect.Descriptor instead.
func (*RpcAccountLocalLinkNewChallenge) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 3, 16, 0}
}

type RpcAccountLocalLinkSolveChallenge struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcAccountLocalLinkSolveChallenge) Reset() {
	*x = RpcAccountLocalLinkSolveChallenge{}
	mi := &file_pb_protos_commands_proto_msgTypes[203]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcAccountLocalLinkSolveChallenge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcAccountLocalLinkSolveChallenge) ProtoMessage() {}

func (x *RpcAccountLocalLinkSolveChallenge) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[203]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcAccountLocalLinkSolveChallenge.ProtoReflect.Descriptor instead.
func (*RpcAccountLocalLinkSolveChallenge) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 3, 16, 1}
}

type RpcAccountLocalLinkNewChallengeRequest struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	AppName       string                         `protobuf:"bytes,1,opt,name=appName,proto3" json:"appName,omitempty"` // just for info, not secure to rely on
	Scope         model.AccountAuthLocalApiScope `protobuf:"varint,2,opt,name=scope,proto3,enum=anytype.model.AccountAuthLocalApiScope" json:"scope,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcAccountLocalLinkNewChallengeRequest) Reset() {
	*x = RpcAccountLocalLinkNewChallengeRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[204]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcAccountLocalLinkNewChallengeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcAccountLocalLinkNewChallengeRequest) ProtoMessage() {}

func (x *RpcAccountLocalLinkNewChallengeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[204]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcAccountLocalLinkNewChallengeRequest.ProtoReflect.Descriptor instead.
func (*RpcAccountLocalLinkNewChallengeRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 3, 16, 0, 0}
}

func (x *RpcAccountLocalLinkNewChallengeRequest) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

func (x *RpcAccountLocalLinkNewChallengeRequest) GetScope() model.AccountAuthLocalApiScope {
	if x != nil {
		return x.Scope
	}
	return model.AccountAuthLocalApiScope(0)
}

type RpcAccountLocalLinkNewChallengeResponse struct {
	state         protoimpl.MessageState                        `protogen:"open.v1"`
	Error         *RpcAccountLocalLinkNewChallengeResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	ChallengeId   string                                        `protobuf:"bytes,2,opt,name=challengeId,proto3" json:"challengeId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcAccountLocalLinkNewChallengeResponse) Reset() {
	*x = RpcAccountLocalLinkNewChallengeResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[205]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcAccountLocalLinkNewChallengeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcAccountLocalLinkNewChallengeResponse) ProtoMessage() {}

func (x *RpcAccountLocalLinkNewChallengeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[205]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcAccountLocalLinkNewChallengeResponse.ProtoReflect.Descriptor instead.
func (*RpcAccountLocalLinkNewChallengeResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 3, 16, 0, 1}
}

func (x *RpcAccountLocalLinkNewChallengeResponse) GetError() *RpcAccountLocalLinkNewChallengeResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcAccountLocalLinkNewChallengeResponse) GetChallengeId() string {
	if x != nil {
		return x.ChallengeId
	}
	return ""
}

type RpcAccountLocalLinkNewChallengeResponseError struct {
	state         protoimpl.MessageState                           `protogen:"open.v1"`
	Code          RpcAccountLocalLinkNewChallengeResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcAccountLocalLinkNewChallengeResponseErrorCode" json:"code,omitempty"`
	Description   string                                           `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcAccountLocalLinkNewChallengeResponseError) Reset() {
	*x = RpcAccountLocalLinkNewChallengeResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[206]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcAccountLocalLinkNewChallengeResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcAccountLocalLinkNewChallengeResponseError) ProtoMessage() {}

func (x *RpcAccountLocalLinkNewChallengeResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[206]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcAccountLocalLinkNewChallengeResponseError.ProtoReflect.Descriptor instead.
func (*RpcAccountLocalLinkNewChallengeResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 3, 16, 0, 1, 0}
}

func (x *RpcAccountLocalLinkNewChallengeResponseError) GetCode() RpcAccountLocalLinkNewChallengeResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcAccountLocalLinkNewChallengeResponseError_NULL
}

func (x *RpcAccountLocalLinkNewChallengeResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcAccountLocalLinkSolveChallengeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChallengeId   string                 `protobuf:"bytes,1,opt,name=challengeId,proto3" json:"challengeId,omitempty"`
	Answer        string                 `protobuf:"bytes,2,opt,name=answer,proto3" json:"answer,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcAccountLocalLinkSolveChallengeRequest) Reset() {
	*x = RpcAccountLocalLinkSolveChallengeRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[207]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcAccountLocalLinkSolveChallengeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcAccountLocalLinkSolveChallengeRequest) ProtoMessage() {}

func (x *RpcAccountLocalLinkSolveChallengeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[207]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcAccountLocalLinkSolveChallengeRequest.ProtoReflect.Descriptor instead.
func (*RpcAccountLocalLinkSolveChallengeRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 3, 16, 1, 0}
}

func (x *RpcAccountLocalLinkSolveChallengeRequest) GetChallengeId() string {
	if x != nil {
		return x.ChallengeId
	}
	return ""
}

func (x *RpcAccountLocalLinkSolveChallengeRequest) GetAnswer() string {
	if x != nil {
		return x.Answer
	}
	return ""
}

type RpcAccountLocalLinkSolveChallengeResponse struct {
	state         protoimpl.MessageState                          `protogen:"open.v1"`
	Error         *RpcAccountLocalLinkSolveChallengeResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	SessionToken  string                                          `protobuf:"bytes,2,opt,name=sessionToken,proto3" json:"sessionToken,omitempty"` // ephemeral token for the session
	AppKey        string                                          `protobuf:"bytes,3,opt,name=appKey,proto3" json:"appKey,omitempty"`             // persistent key, that can be used to restore session via CreateSession
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcAccountLocalLinkSolveChallengeResponse) Reset() {
	*x = RpcAccountLocalLinkSolveChallengeResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[208]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcAccountLocalLinkSolveChallengeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcAccountLocalLinkSolveChallengeResponse) ProtoMessage() {}

func (x *RpcAccountLocalLinkSolveChallengeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[208]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcAccountLocalLinkSolveChallengeResponse.ProtoReflect.Descriptor instead.
func (*RpcAccountLocalLinkSolveChallengeResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 3, 16, 1, 1}
}

func (x *RpcAccountLocalLinkSolveChallengeResponse) GetError() *RpcAccountLocalLinkSolveChallengeResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcAccountLocalLinkSolveChallengeResponse) GetSessionToken() string {
	if x != nil {
		return x.SessionToken
	}
	return ""
}

func (x *RpcAccountLocalLinkSolveChallengeResponse) GetAppKey() string {
	if x != nil {
		return x.AppKey
	}
	return ""
}

type RpcAccountLocalLinkSolveChallengeResponseError struct {
	state         protoimpl.MessageState                             `protogen:"open.v1"`
	Code          RpcAccountLocalLinkSolveChallengeResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcAccountLocalLinkSolveChallengeResponseErrorCode" json:"code,omitempty"`
	Description   string                                             `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcAccountLocalLinkSolveChallengeResponseError) Reset() {
	*x = RpcAccountLocalLinkSolveChallengeResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[209]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcAccountLocalLinkSolveChallengeResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcAccountLocalLinkSolveChallengeResponseError) ProtoMessage() {}

func (x *RpcAccountLocalLinkSolveChallengeResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[209]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcAccountLocalLinkSolveChallengeResponseError.ProtoReflect.Descriptor instead.
func (*RpcAccountLocalLinkSolveChallengeResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 3, 16, 1, 1, 0}
}

func (x *RpcAccountLocalLinkSolveChallengeResponseError) GetCode() RpcAccountLocalLinkSolveChallengeResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcAccountLocalLinkSolveChallengeResponseError_NULL
}

func (x *RpcAccountLocalLinkSolveChallengeResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcWorkspaceGetCurrent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcWorkspaceGetCurrent) Reset() {
	*x = RpcWorkspaceGetCurrent{}
	mi := &file_pb_protos_commands_proto_msgTypes[210]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcWorkspaceGetCurrent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcWorkspaceGetCurrent) ProtoMessage() {}

func (x *RpcWorkspaceGetCurrent) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[210]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcWorkspaceGetCurrent.ProtoReflect.Descriptor instead.
func (*RpcWorkspaceGetCurrent) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 4, 0}
}

type RpcWorkspaceGetAll struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcWorkspaceGetAll) Reset() {
	*x = RpcWorkspaceGetAll{}
	mi := &file_pb_protos_commands_proto_msgTypes[211]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcWorkspaceGetAll) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcWorkspaceGetAll) ProtoMessage() {}

func (x *RpcWorkspaceGetAll) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[211]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcWorkspaceGetAll.ProtoReflect.Descriptor instead.
func (*RpcWorkspaceGetAll) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 4, 1}
}

type RpcWorkspaceCreate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcWorkspaceCreate) Reset() {
	*x = RpcWorkspaceCreate{}
	mi := &file_pb_protos_commands_proto_msgTypes[212]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcWorkspaceCreate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcWorkspaceCreate) ProtoMessage() {}

func (x *RpcWorkspaceCreate) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[212]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcWorkspaceCreate.ProtoReflect.Descriptor instead.
func (*RpcWorkspaceCreate) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 4, 2}
}

type RpcWorkspaceOpen struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcWorkspaceOpen) Reset() {
	*x = RpcWorkspaceOpen{}
	mi := &file_pb_protos_commands_proto_msgTypes[213]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcWorkspaceOpen) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcWorkspaceOpen) ProtoMessage() {}

func (x *RpcWorkspaceOpen) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[213]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcWorkspaceOpen.ProtoReflect.Descriptor instead.
func (*RpcWorkspaceOpen) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 4, 3}
}

type RpcWorkspaceObject struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcWorkspaceObject) Reset() {
	*x = RpcWorkspaceObject{}
	mi := &file_pb_protos_commands_proto_msgTypes[214]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcWorkspaceObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcWorkspaceObject) ProtoMessage() {}

func (x *RpcWorkspaceObject) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[214]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcWorkspaceObject.ProtoReflect.Descriptor instead.
func (*RpcWorkspaceObject) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 4, 4}
}

type RpcWorkspaceSetInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcWorkspaceSetInfo) Reset() {
	*x = RpcWorkspaceSetInfo{}
	mi := &file_pb_protos_commands_proto_msgTypes[215]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcWorkspaceSetInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcWorkspaceSetInfo) ProtoMessage() {}

func (x *RpcWorkspaceSetInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[215]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcWorkspaceSetInfo.ProtoReflect.Descriptor instead.
func (*RpcWorkspaceSetInfo) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 4, 5}
}

type RpcWorkspaceSelect struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcWorkspaceSelect) Reset() {
	*x = RpcWorkspaceSelect{}
	mi := &file_pb_protos_commands_proto_msgTypes[216]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcWorkspaceSelect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcWorkspaceSelect) ProtoMessage() {}

func (x *RpcWorkspaceSelect) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[216]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcWorkspaceSelect.ProtoReflect.Descriptor instead.
func (*RpcWorkspaceSelect) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 4, 6}
}

type RpcWorkspaceExport struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcWorkspaceExport) Reset() {
	*x = RpcWorkspaceExport{}
	mi := &file_pb_protos_commands_proto_msgTypes[217]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcWorkspaceExport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcWorkspaceExport) ProtoMessage() {}

func (x *RpcWorkspaceExport) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[217]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcWorkspaceExport.ProtoReflect.Descriptor instead.
func (*RpcWorkspaceExport) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 4, 7}
}

type RpcWorkspaceGetCurrentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcWorkspaceGetCurrentRequest) Reset() {
	*x = RpcWorkspaceGetCurrentRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[218]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcWorkspaceGetCurrentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcWorkspaceGetCurrentRequest) ProtoMessage() {}

func (x *RpcWorkspaceGetCurrentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[218]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcWorkspaceGetCurrentRequest.ProtoReflect.Descriptor instead.
func (*RpcWorkspaceGetCurrentRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 4, 0, 0}
}

type RpcWorkspaceGetCurrentResponse struct {
	state         protoimpl.MessageState               `protogen:"open.v1"`
	Error         *RpcWorkspaceGetCurrentResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	WorkspaceId   string                               `protobuf:"bytes,2,opt,name=workspaceId,proto3" json:"workspaceId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcWorkspaceGetCurrentResponse) Reset() {
	*x = RpcWorkspaceGetCurrentResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[219]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcWorkspaceGetCurrentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcWorkspaceGetCurrentResponse) ProtoMessage() {}

func (x *RpcWorkspaceGetCurrentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[219]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcWorkspaceGetCurrentResponse.ProtoReflect.Descriptor instead.
func (*RpcWorkspaceGetCurrentResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 4, 0, 1}
}

func (x *RpcWorkspaceGetCurrentResponse) GetError() *RpcWorkspaceGetCurrentResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcWorkspaceGetCurrentResponse) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

type RpcWorkspaceGetCurrentResponseError struct {
	state         protoimpl.MessageState                  `protogen:"open.v1"`
	Code          RpcWorkspaceGetCurrentResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcWorkspaceGetCurrentResponseErrorCode" json:"code,omitempty"`
	Description   string                                  `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcWorkspaceGetCurrentResponseError) Reset() {
	*x = RpcWorkspaceGetCurrentResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[220]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcWorkspaceGetCurrentResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcWorkspaceGetCurrentResponseError) ProtoMessage() {}

func (x *RpcWorkspaceGetCurrentResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[220]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcWorkspaceGetCurrentResponseError.ProtoReflect.Descriptor instead.
func (*RpcWorkspaceGetCurrentResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 4, 0, 1, 0}
}

func (x *RpcWorkspaceGetCurrentResponseError) GetCode() RpcWorkspaceGetCurrentResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcWorkspaceGetCurrentResponseError_NULL
}

func (x *RpcWorkspaceGetCurrentResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcWorkspaceGetAllRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcWorkspaceGetAllRequest) Reset() {
	*x = RpcWorkspaceGetAllRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[221]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcWorkspaceGetAllRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcWorkspaceGetAllRequest) ProtoMessage() {}

func (x *RpcWorkspaceGetAllRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[221]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcWorkspaceGetAllRequest.ProtoReflect.Descriptor instead.
func (*RpcWorkspaceGetAllRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 4, 1, 0}
}

type RpcWorkspaceGetAllResponse struct {
	state         protoimpl.MessageState           `protogen:"open.v1"`
	Error         *RpcWorkspaceGetAllResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	WorkspaceIds  []string                         `protobuf:"bytes,2,rep,name=workspaceIds,proto3" json:"workspaceIds,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcWorkspaceGetAllResponse) Reset() {
	*x = RpcWorkspaceGetAllResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[222]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcWorkspaceGetAllResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcWorkspaceGetAllResponse) ProtoMessage() {}

func (x *RpcWorkspaceGetAllResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[222]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcWorkspaceGetAllResponse.ProtoReflect.Descriptor instead.
func (*RpcWorkspaceGetAllResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 4, 1, 1}
}

func (x *RpcWorkspaceGetAllResponse) GetError() *RpcWorkspaceGetAllResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcWorkspaceGetAllResponse) GetWorkspaceIds() []string {
	if x != nil {
		return x.WorkspaceIds
	}
	return nil
}

type RpcWorkspaceGetAllResponseError struct {
	state         protoimpl.MessageState              `protogen:"open.v1"`
	Code          RpcWorkspaceGetAllResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcWorkspaceGetAllResponseErrorCode" json:"code,omitempty"`
	Description   string                              `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcWorkspaceGetAllResponseError) Reset() {
	*x = RpcWorkspaceGetAllResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[223]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcWorkspaceGetAllResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcWorkspaceGetAllResponseError) ProtoMessage() {}

func (x *RpcWorkspaceGetAllResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[223]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcWorkspaceGetAllResponseError.ProtoReflect.Descriptor instead.
func (*RpcWorkspaceGetAllResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 4, 1, 1, 0}
}

func (x *RpcWorkspaceGetAllResponseError) GetCode() RpcWorkspaceGetAllResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcWorkspaceGetAllResponseError_NULL
}

func (x *RpcWorkspaceGetAllResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcWorkspaceCreateRequest struct {
	state         protoimpl.MessageState               `protogen:"open.v1"`
	Details       *structpb.Struct                     `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`                                                    // object details
	UseCase       RpcObjectImportUseCaseRequestUseCase `protobuf:"varint,2,opt,name=useCase,proto3,enum=anytype.RpcObjectImportUseCaseRequestUseCase" json:"useCase,omitempty"` // use case
	WithChat      bool                                 `protobuf:"varint,3,opt,name=withChat,proto3" json:"withChat,omitempty"`                                                 // create space-level chat; temporary solution, should be removed after chats released for all users
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcWorkspaceCreateRequest) Reset() {
	*x = RpcWorkspaceCreateRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[224]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcWorkspaceCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcWorkspaceCreateRequest) ProtoMessage() {}

func (x *RpcWorkspaceCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[224]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcWorkspaceCreateRequest.ProtoReflect.Descriptor instead.
func (*RpcWorkspaceCreateRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 4, 2, 0}
}

func (x *RpcWorkspaceCreateRequest) GetDetails() *structpb.Struct {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *RpcWorkspaceCreateRequest) GetUseCase() RpcObjectImportUseCaseRequestUseCase {
	if x != nil {
		return x.UseCase
	}
	return RpcObjectImportUseCaseRequest_NONE
}

func (x *RpcWorkspaceCreateRequest) GetWithChat() bool {
	if x != nil {
		return x.WithChat
	}
	return false
}

type RpcWorkspaceCreateResponse struct {
	state         protoimpl.MessageState           `protogen:"open.v1"`
	Error         *RpcWorkspaceCreateResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	SpaceId       string                           `protobuf:"bytes,2,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcWorkspaceCreateResponse) Reset() {
	*x = RpcWorkspaceCreateResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[225]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcWorkspaceCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcWorkspaceCreateResponse) ProtoMessage() {}

func (x *RpcWorkspaceCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[225]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcWorkspaceCreateResponse.ProtoReflect.Descriptor instead.
func (*RpcWorkspaceCreateResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 4, 2, 1}
}

func (x *RpcWorkspaceCreateResponse) GetError() *RpcWorkspaceCreateResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcWorkspaceCreateResponse) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

type RpcWorkspaceCreateResponseError struct {
	state         protoimpl.MessageState              `protogen:"open.v1"`
	Code          RpcWorkspaceCreateResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcWorkspaceCreateResponseErrorCode" json:"code,omitempty"`
	Description   string                              `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcWorkspaceCreateResponseError) Reset() {
	*x = RpcWorkspaceCreateResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[226]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcWorkspaceCreateResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcWorkspaceCreateResponseError) ProtoMessage() {}

func (x *RpcWorkspaceCreateResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[226]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcWorkspaceCreateResponseError.ProtoReflect.Descriptor instead.
func (*RpcWorkspaceCreateResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 4, 2, 1, 0}
}

func (x *RpcWorkspaceCreateResponseError) GetCode() RpcWorkspaceCreateResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcWorkspaceCreateResponseError_NULL
}

func (x *RpcWorkspaceCreateResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcWorkspaceOpenRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SpaceId       string                 `protobuf:"bytes,1,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	WithChat      bool                   `protobuf:"varint,2,opt,name=withChat,proto3" json:"withChat,omitempty"` // create space-level chat if not exists; temporary solution, should be removed after chats released for all users
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcWorkspaceOpenRequest) Reset() {
	*x = RpcWorkspaceOpenRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[227]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcWorkspaceOpenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcWorkspaceOpenRequest) ProtoMessage() {}

func (x *RpcWorkspaceOpenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[227]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcWorkspaceOpenRequest.ProtoReflect.Descriptor instead.
func (*RpcWorkspaceOpenRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 4, 3, 0}
}

func (x *RpcWorkspaceOpenRequest) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *RpcWorkspaceOpenRequest) GetWithChat() bool {
	if x != nil {
		return x.WithChat
	}
	return false
}

type RpcWorkspaceOpenResponse struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	Error         *RpcWorkspaceOpenResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Info          *model.AccountInfo             `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcWorkspaceOpenResponse) Reset() {
	*x = RpcWorkspaceOpenResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[228]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcWorkspaceOpenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcWorkspaceOpenResponse) ProtoMessage() {}

func (x *RpcWorkspaceOpenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[228]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcWorkspaceOpenResponse.ProtoReflect.Descriptor instead.
func (*RpcWorkspaceOpenResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 4, 3, 1}
}

func (x *RpcWorkspaceOpenResponse) GetError() *RpcWorkspaceOpenResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcWorkspaceOpenResponse) GetInfo() *model.AccountInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type RpcWorkspaceOpenResponseError struct {
	state         protoimpl.MessageState            `protogen:"open.v1"`
	Code          RpcWorkspaceOpenResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcWorkspaceOpenResponseErrorCode" json:"code,omitempty"`
	Description   string                            `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcWorkspaceOpenResponseError) Reset() {
	*x = RpcWorkspaceOpenResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[229]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcWorkspaceOpenResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcWorkspaceOpenResponseError) ProtoMessage() {}

func (x *RpcWorkspaceOpenResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[229]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcWorkspaceOpenResponseError.ProtoReflect.Descriptor instead.
func (*RpcWorkspaceOpenResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 4, 3, 1, 0}
}

func (x *RpcWorkspaceOpenResponseError) GetCode() RpcWorkspaceOpenResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcWorkspaceOpenResponseError_NULL
}

func (x *RpcWorkspaceOpenResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcWorkspaceObjectAdd struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcWorkspaceObjectAdd) Reset() {
	*x = RpcWorkspaceObjectAdd{}
	mi := &file_pb_protos_commands_proto_msgTypes[230]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcWorkspaceObjectAdd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcWorkspaceObjectAdd) ProtoMessage() {}

func (x *RpcWorkspaceObjectAdd) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[230]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcWorkspaceObjectAdd.ProtoReflect.Descriptor instead.
func (*RpcWorkspaceObjectAdd) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 4, 4, 0}
}

type RpcWorkspaceObjectListAdd struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcWorkspaceObjectListAdd) Reset() {
	*x = RpcWorkspaceObjectListAdd{}
	mi := &file_pb_protos_commands_proto_msgTypes[231]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcWorkspaceObjectListAdd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcWorkspaceObjectListAdd) ProtoMessage() {}

func (x *RpcWorkspaceObjectListAdd) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[231]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcWorkspaceObjectListAdd.ProtoReflect.Descriptor instead.
func (*RpcWorkspaceObjectListAdd) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 4, 4, 1}
}

type RpcWorkspaceObjectListRemove struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcWorkspaceObjectListRemove) Reset() {
	*x = RpcWorkspaceObjectListRemove{}
	mi := &file_pb_protos_commands_proto_msgTypes[232]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcWorkspaceObjectListRemove) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcWorkspaceObjectListRemove) ProtoMessage() {}

func (x *RpcWorkspaceObjectListRemove) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[232]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcWorkspaceObjectListRemove.ProtoReflect.Descriptor instead.
func (*RpcWorkspaceObjectListRemove) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 4, 4, 2}
}

type RpcWorkspaceObjectAddRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SpaceId       string                 `protobuf:"bytes,2,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	ObjectId      string                 `protobuf:"bytes,1,opt,name=objectId,proto3" json:"objectId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcWorkspaceObjectAddRequest) Reset() {
	*x = RpcWorkspaceObjectAddRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[233]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcWorkspaceObjectAddRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcWorkspaceObjectAddRequest) ProtoMessage() {}

func (x *RpcWorkspaceObjectAddRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[233]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcWorkspaceObjectAddRequest.ProtoReflect.Descriptor instead.
func (*RpcWorkspaceObjectAddRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 4, 4, 0, 0}
}

func (x *RpcWorkspaceObjectAddRequest) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *RpcWorkspaceObjectAddRequest) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

type RpcWorkspaceObjectAddResponse struct {
	state         protoimpl.MessageState              `protogen:"open.v1"`
	Error         *RpcWorkspaceObjectAddResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	ObjectId      string                              `protobuf:"bytes,2,opt,name=objectId,proto3" json:"objectId,omitempty"`
	Details       *structpb.Struct                    `protobuf:"bytes,3,opt,name=details,proto3" json:"details,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcWorkspaceObjectAddResponse) Reset() {
	*x = RpcWorkspaceObjectAddResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[234]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcWorkspaceObjectAddResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcWorkspaceObjectAddResponse) ProtoMessage() {}

func (x *RpcWorkspaceObjectAddResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[234]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcWorkspaceObjectAddResponse.ProtoReflect.Descriptor instead.
func (*RpcWorkspaceObjectAddResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 4, 4, 0, 1}
}

func (x *RpcWorkspaceObjectAddResponse) GetError() *RpcWorkspaceObjectAddResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcWorkspaceObjectAddResponse) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

func (x *RpcWorkspaceObjectAddResponse) GetDetails() *structpb.Struct {
	if x != nil {
		return x.Details
	}
	return nil
}

type RpcWorkspaceObjectAddResponseError struct {
	state         protoimpl.MessageState                 `protogen:"open.v1"`
	Code          RpcWorkspaceObjectAddResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcWorkspaceObjectAddResponseErrorCode" json:"code,omitempty"`
	Description   string                                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcWorkspaceObjectAddResponseError) Reset() {
	*x = RpcWorkspaceObjectAddResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[235]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcWorkspaceObjectAddResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcWorkspaceObjectAddResponseError) ProtoMessage() {}

func (x *RpcWorkspaceObjectAddResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[235]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcWorkspaceObjectAddResponseError.ProtoReflect.Descriptor instead.
func (*RpcWorkspaceObjectAddResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 4, 4, 0, 1, 0}
}

func (x *RpcWorkspaceObjectAddResponseError) GetCode() RpcWorkspaceObjectAddResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcWorkspaceObjectAddResponseError_NULL
}

func (x *RpcWorkspaceObjectAddResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcWorkspaceObjectListAddRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SpaceId       string                 `protobuf:"bytes,2,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	ObjectIds     []string               `protobuf:"bytes,1,rep,name=objectIds,proto3" json:"objectIds,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcWorkspaceObjectListAddRequest) Reset() {
	*x = RpcWorkspaceObjectListAddRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[236]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcWorkspaceObjectListAddRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcWorkspaceObjectListAddRequest) ProtoMessage() {}

func (x *RpcWorkspaceObjectListAddRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[236]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcWorkspaceObjectListAddRequest.ProtoReflect.Descriptor instead.
func (*RpcWorkspaceObjectListAddRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 4, 4, 1, 0}
}

func (x *RpcWorkspaceObjectListAddRequest) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *RpcWorkspaceObjectListAddRequest) GetObjectIds() []string {
	if x != nil {
		return x.ObjectIds
	}
	return nil
}

type RpcWorkspaceObjectListAddResponse struct {
	state         protoimpl.MessageState                  `protogen:"open.v1"`
	Error         *RpcWorkspaceObjectListAddResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	ObjectIds     []string                                `protobuf:"bytes,2,rep,name=objectIds,proto3" json:"objectIds,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcWorkspaceObjectListAddResponse) Reset() {
	*x = RpcWorkspaceObjectListAddResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[237]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcWorkspaceObjectListAddResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcWorkspaceObjectListAddResponse) ProtoMessage() {}

func (x *RpcWorkspaceObjectListAddResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[237]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcWorkspaceObjectListAddResponse.ProtoReflect.Descriptor instead.
func (*RpcWorkspaceObjectListAddResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 4, 4, 1, 1}
}

func (x *RpcWorkspaceObjectListAddResponse) GetError() *RpcWorkspaceObjectListAddResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcWorkspaceObjectListAddResponse) GetObjectIds() []string {
	if x != nil {
		return x.ObjectIds
	}
	return nil
}

type RpcWorkspaceObjectListAddResponseError struct {
	state         protoimpl.MessageState                     `protogen:"open.v1"`
	Code          RpcWorkspaceObjectListAddResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcWorkspaceObjectListAddResponseErrorCode" json:"code,omitempty"`
	Description   string                                     `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcWorkspaceObjectListAddResponseError) Reset() {
	*x = RpcWorkspaceObjectListAddResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[238]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcWorkspaceObjectListAddResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcWorkspaceObjectListAddResponseError) ProtoMessage() {}

func (x *RpcWorkspaceObjectListAddResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[238]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcWorkspaceObjectListAddResponseError.ProtoReflect.Descriptor instead.
func (*RpcWorkspaceObjectListAddResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 4, 4, 1, 1, 0}
}

func (x *RpcWorkspaceObjectListAddResponseError) GetCode() RpcWorkspaceObjectListAddResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcWorkspaceObjectListAddResponseError_NULL
}

func (x *RpcWorkspaceObjectListAddResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcWorkspaceObjectListRemoveRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ObjectIds     []string               `protobuf:"bytes,1,rep,name=objectIds,proto3" json:"objectIds,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcWorkspaceObjectListRemoveRequest) Reset() {
	*x = RpcWorkspaceObjectListRemoveRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[239]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcWorkspaceObjectListRemoveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcWorkspaceObjectListRemoveRequest) ProtoMessage() {}

func (x *RpcWorkspaceObjectListRemoveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[239]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcWorkspaceObjectListRemoveRequest.ProtoReflect.Descriptor instead.
func (*RpcWorkspaceObjectListRemoveRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 4, 4, 2, 0}
}

func (x *RpcWorkspaceObjectListRemoveRequest) GetObjectIds() []string {
	if x != nil {
		return x.ObjectIds
	}
	return nil
}

type RpcWorkspaceObjectListRemoveResponse struct {
	state         protoimpl.MessageState                     `protogen:"open.v1"`
	Error         *RpcWorkspaceObjectListRemoveResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Ids           []string                                   `protobuf:"bytes,2,rep,name=ids,proto3" json:"ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcWorkspaceObjectListRemoveResponse) Reset() {
	*x = RpcWorkspaceObjectListRemoveResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[240]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcWorkspaceObjectListRemoveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcWorkspaceObjectListRemoveResponse) ProtoMessage() {}

func (x *RpcWorkspaceObjectListRemoveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[240]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcWorkspaceObjectListRemoveResponse.ProtoReflect.Descriptor instead.
func (*RpcWorkspaceObjectListRemoveResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 4, 4, 2, 1}
}

func (x *RpcWorkspaceObjectListRemoveResponse) GetError() *RpcWorkspaceObjectListRemoveResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcWorkspaceObjectListRemoveResponse) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

type RpcWorkspaceObjectListRemoveResponseError struct {
	state         protoimpl.MessageState                        `protogen:"open.v1"`
	Code          RpcWorkspaceObjectListRemoveResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcWorkspaceObjectListRemoveResponseErrorCode" json:"code,omitempty"`
	Description   string                                        `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcWorkspaceObjectListRemoveResponseError) Reset() {
	*x = RpcWorkspaceObjectListRemoveResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[241]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcWorkspaceObjectListRemoveResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcWorkspaceObjectListRemoveResponseError) ProtoMessage() {}

func (x *RpcWorkspaceObjectListRemoveResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[241]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcWorkspaceObjectListRemoveResponseError.ProtoReflect.Descriptor instead.
func (*RpcWorkspaceObjectListRemoveResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 4, 4, 2, 1, 0}
}

func (x *RpcWorkspaceObjectListRemoveResponseError) GetCode() RpcWorkspaceObjectListRemoveResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcWorkspaceObjectListRemoveResponseError_NULL
}

func (x *RpcWorkspaceObjectListRemoveResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcWorkspaceSetInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SpaceId       string                 `protobuf:"bytes,1,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	Details       *structpb.Struct       `protobuf:"bytes,2,opt,name=details,proto3" json:"details,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcWorkspaceSetInfoRequest) Reset() {
	*x = RpcWorkspaceSetInfoRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[242]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcWorkspaceSetInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcWorkspaceSetInfoRequest) ProtoMessage() {}

func (x *RpcWorkspaceSetInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[242]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcWorkspaceSetInfoRequest.ProtoReflect.Descriptor instead.
func (*RpcWorkspaceSetInfoRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 4, 5, 0}
}

func (x *RpcWorkspaceSetInfoRequest) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *RpcWorkspaceSetInfoRequest) GetDetails() *structpb.Struct {
	if x != nil {
		return x.Details
	}
	return nil
}

type RpcWorkspaceSetInfoResponse struct {
	state         protoimpl.MessageState            `protogen:"open.v1"`
	Error         *RpcWorkspaceSetInfoResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcWorkspaceSetInfoResponse) Reset() {
	*x = RpcWorkspaceSetInfoResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[243]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcWorkspaceSetInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcWorkspaceSetInfoResponse) ProtoMessage() {}

func (x *RpcWorkspaceSetInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[243]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcWorkspaceSetInfoResponse.ProtoReflect.Descriptor instead.
func (*RpcWorkspaceSetInfoResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 4, 5, 1}
}

func (x *RpcWorkspaceSetInfoResponse) GetError() *RpcWorkspaceSetInfoResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

type RpcWorkspaceSetInfoResponseError struct {
	state         protoimpl.MessageState               `protogen:"open.v1"`
	Code          RpcWorkspaceSetInfoResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcWorkspaceSetInfoResponseErrorCode" json:"code,omitempty"`
	Description   string                               `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcWorkspaceSetInfoResponseError) Reset() {
	*x = RpcWorkspaceSetInfoResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[244]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcWorkspaceSetInfoResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcWorkspaceSetInfoResponseError) ProtoMessage() {}

func (x *RpcWorkspaceSetInfoResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[244]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcWorkspaceSetInfoResponseError.ProtoReflect.Descriptor instead.
func (*RpcWorkspaceSetInfoResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 4, 5, 1, 0}
}

func (x *RpcWorkspaceSetInfoResponseError) GetCode() RpcWorkspaceSetInfoResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcWorkspaceSetInfoResponseError_NULL
}

func (x *RpcWorkspaceSetInfoResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcWorkspaceSelectRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkspaceId   string                 `protobuf:"bytes,1,opt,name=workspaceId,proto3" json:"workspaceId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcWorkspaceSelectRequest) Reset() {
	*x = RpcWorkspaceSelectRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[245]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcWorkspaceSelectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcWorkspaceSelectRequest) ProtoMessage() {}

func (x *RpcWorkspaceSelectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[245]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcWorkspaceSelectRequest.ProtoReflect.Descriptor instead.
func (*RpcWorkspaceSelectRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 4, 6, 0}
}

func (x *RpcWorkspaceSelectRequest) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

type RpcWorkspaceSelectResponse struct {
	state         protoimpl.MessageState           `protogen:"open.v1"`
	Error         *RpcWorkspaceSelectResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcWorkspaceSelectResponse) Reset() {
	*x = RpcWorkspaceSelectResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[246]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcWorkspaceSelectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcWorkspaceSelectResponse) ProtoMessage() {}

func (x *RpcWorkspaceSelectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[246]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcWorkspaceSelectResponse.ProtoReflect.Descriptor instead.
func (*RpcWorkspaceSelectResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 4, 6, 1}
}

func (x *RpcWorkspaceSelectResponse) GetError() *RpcWorkspaceSelectResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

type RpcWorkspaceSelectResponseError struct {
	state         protoimpl.MessageState              `protogen:"open.v1"`
	Code          RpcWorkspaceSelectResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcWorkspaceSelectResponseErrorCode" json:"code,omitempty"`
	Description   string                              `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcWorkspaceSelectResponseError) Reset() {
	*x = RpcWorkspaceSelectResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[247]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcWorkspaceSelectResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcWorkspaceSelectResponseError) ProtoMessage() {}

func (x *RpcWorkspaceSelectResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[247]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcWorkspaceSelectResponseError.ProtoReflect.Descriptor instead.
func (*RpcWorkspaceSelectResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 4, 6, 1, 0}
}

func (x *RpcWorkspaceSelectResponseError) GetCode() RpcWorkspaceSelectResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcWorkspaceSelectResponseError_NULL
}

func (x *RpcWorkspaceSelectResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcWorkspaceExportRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// the path where export files will place
	Path          string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	WorkspaceId   string `protobuf:"bytes,2,opt,name=workspaceId,proto3" json:"workspaceId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcWorkspaceExportRequest) Reset() {
	*x = RpcWorkspaceExportRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[248]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcWorkspaceExportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcWorkspaceExportRequest) ProtoMessage() {}

func (x *RpcWorkspaceExportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[248]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcWorkspaceExportRequest.ProtoReflect.Descriptor instead.
func (*RpcWorkspaceExportRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 4, 7, 0}
}

func (x *RpcWorkspaceExportRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *RpcWorkspaceExportRequest) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

type RpcWorkspaceExportResponse struct {
	state         protoimpl.MessageState           `protogen:"open.v1"`
	Error         *RpcWorkspaceExportResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Path          string                           `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Event         *ResponseEvent                   `protobuf:"bytes,3,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcWorkspaceExportResponse) Reset() {
	*x = RpcWorkspaceExportResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[249]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcWorkspaceExportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcWorkspaceExportResponse) ProtoMessage() {}

func (x *RpcWorkspaceExportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[249]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcWorkspaceExportResponse.ProtoReflect.Descriptor instead.
func (*RpcWorkspaceExportResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 4, 7, 1}
}

func (x *RpcWorkspaceExportResponse) GetError() *RpcWorkspaceExportResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcWorkspaceExportResponse) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *RpcWorkspaceExportResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcWorkspaceExportResponseError struct {
	state         protoimpl.MessageState              `protogen:"open.v1"`
	Code          RpcWorkspaceExportResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcWorkspaceExportResponseErrorCode" json:"code,omitempty"`
	Description   string                              `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcWorkspaceExportResponseError) Reset() {
	*x = RpcWorkspaceExportResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[250]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcWorkspaceExportResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcWorkspaceExportResponseError) ProtoMessage() {}

func (x *RpcWorkspaceExportResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[250]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcWorkspaceExportResponseError.ProtoReflect.Descriptor instead.
func (*RpcWorkspaceExportResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 4, 7, 1, 0}
}

func (x *RpcWorkspaceExportResponseError) GetCode() RpcWorkspaceExportResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcWorkspaceExportResponseError_NULL
}

func (x *RpcWorkspaceExportResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcPublishingPublishState struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	SpaceId       string                     `protobuf:"bytes,1,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	ObjectId      string                     `protobuf:"bytes,2,opt,name=objectId,proto3" json:"objectId,omitempty"`
	Uri           string                     `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
	Status        RpcPublishingPublishStatus `protobuf:"varint,4,opt,name=status,proto3,enum=anytype.RpcPublishingPublishStatus" json:"status,omitempty"`
	Version       string                     `protobuf:"bytes,5,opt,name=version,proto3" json:"version,omitempty"`
	Timestamp     int64                      `protobuf:"varint,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Size          int64                      `protobuf:"varint,7,opt,name=size,proto3" json:"size,omitempty"`
	JoinSpace     bool                       `protobuf:"varint,8,opt,name=joinSpace,proto3" json:"joinSpace,omitempty"`
	Details       *structpb.Struct           `protobuf:"bytes,9,opt,name=details,proto3" json:"details,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcPublishingPublishState) Reset() {
	*x = RpcPublishingPublishState{}
	mi := &file_pb_protos_commands_proto_msgTypes[251]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcPublishingPublishState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcPublishingPublishState) ProtoMessage() {}

func (x *RpcPublishingPublishState) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[251]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcPublishingPublishState.ProtoReflect.Descriptor instead.
func (*RpcPublishingPublishState) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 5, 0}
}

func (x *RpcPublishingPublishState) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *RpcPublishingPublishState) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

func (x *RpcPublishingPublishState) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *RpcPublishingPublishState) GetStatus() RpcPublishingPublishStatus {
	if x != nil {
		return x.Status
	}
	return RpcPublishing_PublishStatusCreated
}

func (x *RpcPublishingPublishState) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *RpcPublishingPublishState) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *RpcPublishingPublishState) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *RpcPublishingPublishState) GetJoinSpace() bool {
	if x != nil {
		return x.JoinSpace
	}
	return false
}

func (x *RpcPublishingPublishState) GetDetails() *structpb.Struct {
	if x != nil {
		return x.Details
	}
	return nil
}

type RpcPublishingCreate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcPublishingCreate) Reset() {
	*x = RpcPublishingCreate{}
	mi := &file_pb_protos_commands_proto_msgTypes[252]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcPublishingCreate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcPublishingCreate) ProtoMessage() {}

func (x *RpcPublishingCreate) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[252]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcPublishingCreate.ProtoReflect.Descriptor instead.
func (*RpcPublishingCreate) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 5, 1}
}

type RpcPublishingRemove struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcPublishingRemove) Reset() {
	*x = RpcPublishingRemove{}
	mi := &file_pb_protos_commands_proto_msgTypes[253]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcPublishingRemove) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcPublishingRemove) ProtoMessage() {}

func (x *RpcPublishingRemove) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[253]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcPublishingRemove.ProtoReflect.Descriptor instead.
func (*RpcPublishingRemove) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 5, 2}
}

type RpcPublishingList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcPublishingList) Reset() {
	*x = RpcPublishingList{}
	mi := &file_pb_protos_commands_proto_msgTypes[254]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcPublishingList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcPublishingList) ProtoMessage() {}

func (x *RpcPublishingList) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[254]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcPublishingList.ProtoReflect.Descriptor instead.
func (*RpcPublishingList) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 5, 3}
}

type RpcPublishingResolveUri struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcPublishingResolveUri) Reset() {
	*x = RpcPublishingResolveUri{}
	mi := &file_pb_protos_commands_proto_msgTypes[255]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcPublishingResolveUri) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcPublishingResolveUri) ProtoMessage() {}

func (x *RpcPublishingResolveUri) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[255]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcPublishingResolveUri.ProtoReflect.Descriptor instead.
func (*RpcPublishingResolveUri) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 5, 4}
}

type RpcPublishingGetStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcPublishingGetStatus) Reset() {
	*x = RpcPublishingGetStatus{}
	mi := &file_pb_protos_commands_proto_msgTypes[256]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcPublishingGetStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcPublishingGetStatus) ProtoMessage() {}

func (x *RpcPublishingGetStatus) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[256]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcPublishingGetStatus.ProtoReflect.Descriptor instead.
func (*RpcPublishingGetStatus) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 5, 5}
}

type RpcPublishingCreateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SpaceId       string                 `protobuf:"bytes,1,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	ObjectId      string                 `protobuf:"bytes,2,opt,name=objectId,proto3" json:"objectId,omitempty"`
	Uri           string                 `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
	JoinSpace     bool                   `protobuf:"varint,4,opt,name=joinSpace,proto3" json:"joinSpace,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcPublishingCreateRequest) Reset() {
	*x = RpcPublishingCreateRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[257]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcPublishingCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcPublishingCreateRequest) ProtoMessage() {}

func (x *RpcPublishingCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[257]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcPublishingCreateRequest.ProtoReflect.Descriptor instead.
func (*RpcPublishingCreateRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 5, 1, 0}
}

func (x *RpcPublishingCreateRequest) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *RpcPublishingCreateRequest) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

func (x *RpcPublishingCreateRequest) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *RpcPublishingCreateRequest) GetJoinSpace() bool {
	if x != nil {
		return x.JoinSpace
	}
	return false
}

type RpcPublishingCreateResponse struct {
	state         protoimpl.MessageState            `protogen:"open.v1"`
	Error         *RpcPublishingCreateResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Uri           string                            `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcPublishingCreateResponse) Reset() {
	*x = RpcPublishingCreateResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[258]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcPublishingCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcPublishingCreateResponse) ProtoMessage() {}

func (x *RpcPublishingCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[258]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcPublishingCreateResponse.ProtoReflect.Descriptor instead.
func (*RpcPublishingCreateResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 5, 1, 1}
}

func (x *RpcPublishingCreateResponse) GetError() *RpcPublishingCreateResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcPublishingCreateResponse) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

type RpcPublishingCreateResponseError struct {
	state         protoimpl.MessageState               `protogen:"open.v1"`
	Code          RpcPublishingCreateResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcPublishingCreateResponseErrorCode" json:"code,omitempty"`
	Description   string                               `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcPublishingCreateResponseError) Reset() {
	*x = RpcPublishingCreateResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[259]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcPublishingCreateResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcPublishingCreateResponseError) ProtoMessage() {}

func (x *RpcPublishingCreateResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[259]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcPublishingCreateResponseError.ProtoReflect.Descriptor instead.
func (*RpcPublishingCreateResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 5, 1, 1, 0}
}

func (x *RpcPublishingCreateResponseError) GetCode() RpcPublishingCreateResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcPublishingCreateResponseError_NULL
}

func (x *RpcPublishingCreateResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcPublishingRemoveRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SpaceId       string                 `protobuf:"bytes,1,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	ObjectId      string                 `protobuf:"bytes,2,opt,name=objectId,proto3" json:"objectId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcPublishingRemoveRequest) Reset() {
	*x = RpcPublishingRemoveRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[260]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcPublishingRemoveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcPublishingRemoveRequest) ProtoMessage() {}

func (x *RpcPublishingRemoveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[260]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcPublishingRemoveRequest.ProtoReflect.Descriptor instead.
func (*RpcPublishingRemoveRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 5, 2, 0}
}

func (x *RpcPublishingRemoveRequest) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *RpcPublishingRemoveRequest) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

type RpcPublishingRemoveResponse struct {
	state         protoimpl.MessageState            `protogen:"open.v1"`
	Error         *RpcPublishingRemoveResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcPublishingRemoveResponse) Reset() {
	*x = RpcPublishingRemoveResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[261]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcPublishingRemoveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcPublishingRemoveResponse) ProtoMessage() {}

func (x *RpcPublishingRemoveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[261]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcPublishingRemoveResponse.ProtoReflect.Descriptor instead.
func (*RpcPublishingRemoveResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 5, 2, 1}
}

func (x *RpcPublishingRemoveResponse) GetError() *RpcPublishingRemoveResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

type RpcPublishingRemoveResponseError struct {
	state         protoimpl.MessageState               `protogen:"open.v1"`
	Code          RpcPublishingRemoveResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcPublishingRemoveResponseErrorCode" json:"code,omitempty"`
	Description   string                               `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcPublishingRemoveResponseError) Reset() {
	*x = RpcPublishingRemoveResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[262]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcPublishingRemoveResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcPublishingRemoveResponseError) ProtoMessage() {}

func (x *RpcPublishingRemoveResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[262]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcPublishingRemoveResponseError.ProtoReflect.Descriptor instead.
func (*RpcPublishingRemoveResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 5, 2, 1, 0}
}

func (x *RpcPublishingRemoveResponseError) GetCode() RpcPublishingRemoveResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcPublishingRemoveResponseError_NULL
}

func (x *RpcPublishingRemoveResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcPublishingListRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SpaceId       string                 `protobuf:"bytes,1,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcPublishingListRequest) Reset() {
	*x = RpcPublishingListRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[263]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcPublishingListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcPublishingListRequest) ProtoMessage() {}

func (x *RpcPublishingListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[263]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcPublishingListRequest.ProtoReflect.Descriptor instead.
func (*RpcPublishingListRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 5, 3, 0}
}

func (x *RpcPublishingListRequest) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

type RpcPublishingListResponse struct {
	state         protoimpl.MessageState          `protogen:"open.v1"`
	Error         *RpcPublishingListResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Publishes     []*RpcPublishingPublishState    `protobuf:"bytes,2,rep,name=publishes,proto3" json:"publishes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcPublishingListResponse) Reset() {
	*x = RpcPublishingListResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[264]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcPublishingListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcPublishingListResponse) ProtoMessage() {}

func (x *RpcPublishingListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[264]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcPublishingListResponse.ProtoReflect.Descriptor instead.
func (*RpcPublishingListResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 5, 3, 1}
}

func (x *RpcPublishingListResponse) GetError() *RpcPublishingListResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcPublishingListResponse) GetPublishes() []*RpcPublishingPublishState {
	if x != nil {
		return x.Publishes
	}
	return nil
}

type RpcPublishingListResponseError struct {
	state         protoimpl.MessageState             `protogen:"open.v1"`
	Code          RpcPublishingListResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcPublishingListResponseErrorCode" json:"code,omitempty"`
	Description   string                             `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcPublishingListResponseError) Reset() {
	*x = RpcPublishingListResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[265]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcPublishingListResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcPublishingListResponseError) ProtoMessage() {}

func (x *RpcPublishingListResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[265]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcPublishingListResponseError.ProtoReflect.Descriptor instead.
func (*RpcPublishingListResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 5, 3, 1, 0}
}

func (x *RpcPublishingListResponseError) GetCode() RpcPublishingListResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcPublishingListResponseError_NULL
}

func (x *RpcPublishingListResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcPublishingResolveUriRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uri           string                 `protobuf:"bytes,1,opt,name=uri,proto3" json:"uri,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcPublishingResolveUriRequest) Reset() {
	*x = RpcPublishingResolveUriRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[266]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcPublishingResolveUriRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcPublishingResolveUriRequest) ProtoMessage() {}

func (x *RpcPublishingResolveUriRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[266]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcPublishingResolveUriRequest.ProtoReflect.Descriptor instead.
func (*RpcPublishingResolveUriRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 5, 4, 0}
}

func (x *RpcPublishingResolveUriRequest) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

type RpcPublishingResolveUriResponse struct {
	state         protoimpl.MessageState                `protogen:"open.v1"`
	Error         *RpcPublishingResolveUriResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Publish       *RpcPublishingPublishState            `protobuf:"bytes,2,opt,name=publish,proto3" json:"publish,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcPublishingResolveUriResponse) Reset() {
	*x = RpcPublishingResolveUriResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[267]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcPublishingResolveUriResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcPublishingResolveUriResponse) ProtoMessage() {}

func (x *RpcPublishingResolveUriResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[267]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcPublishingResolveUriResponse.ProtoReflect.Descriptor instead.
func (*RpcPublishingResolveUriResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 5, 4, 1}
}

func (x *RpcPublishingResolveUriResponse) GetError() *RpcPublishingResolveUriResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcPublishingResolveUriResponse) GetPublish() *RpcPublishingPublishState {
	if x != nil {
		return x.Publish
	}
	return nil
}

type RpcPublishingResolveUriResponseError struct {
	state         protoimpl.MessageState                   `protogen:"open.v1"`
	Code          RpcPublishingResolveUriResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcPublishingResolveUriResponseErrorCode" json:"code,omitempty"`
	Description   string                                   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcPublishingResolveUriResponseError) Reset() {
	*x = RpcPublishingResolveUriResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[268]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcPublishingResolveUriResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcPublishingResolveUriResponseError) ProtoMessage() {}

func (x *RpcPublishingResolveUriResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[268]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcPublishingResolveUriResponseError.ProtoReflect.Descriptor instead.
func (*RpcPublishingResolveUriResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 5, 4, 1, 0}
}

func (x *RpcPublishingResolveUriResponseError) GetCode() RpcPublishingResolveUriResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcPublishingResolveUriResponseError_NULL
}

func (x *RpcPublishingResolveUriResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcPublishingGetStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SpaceId       string                 `protobuf:"bytes,1,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	ObjectId      string                 `protobuf:"bytes,2,opt,name=objectId,proto3" json:"objectId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcPublishingGetStatusRequest) Reset() {
	*x = RpcPublishingGetStatusRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[269]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcPublishingGetStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcPublishingGetStatusRequest) ProtoMessage() {}

func (x *RpcPublishingGetStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[269]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcPublishingGetStatusRequest.ProtoReflect.Descriptor instead.
func (*RpcPublishingGetStatusRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 5, 5, 0}
}

func (x *RpcPublishingGetStatusRequest) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *RpcPublishingGetStatusRequest) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

type RpcPublishingGetStatusResponse struct {
	state         protoimpl.MessageState               `protogen:"open.v1"`
	Error         *RpcPublishingGetStatusResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Publish       *RpcPublishingPublishState           `protobuf:"bytes,2,opt,name=publish,proto3" json:"publish,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcPublishingGetStatusResponse) Reset() {
	*x = RpcPublishingGetStatusResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[270]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcPublishingGetStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcPublishingGetStatusResponse) ProtoMessage() {}

func (x *RpcPublishingGetStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[270]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcPublishingGetStatusResponse.ProtoReflect.Descriptor instead.
func (*RpcPublishingGetStatusResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 5, 5, 1}
}

func (x *RpcPublishingGetStatusResponse) GetError() *RpcPublishingGetStatusResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcPublishingGetStatusResponse) GetPublish() *RpcPublishingPublishState {
	if x != nil {
		return x.Publish
	}
	return nil
}

type RpcPublishingGetStatusResponseError struct {
	state         protoimpl.MessageState                  `protogen:"open.v1"`
	Code          RpcPublishingGetStatusResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcPublishingGetStatusResponseErrorCode" json:"code,omitempty"`
	Description   string                                  `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcPublishingGetStatusResponseError) Reset() {
	*x = RpcPublishingGetStatusResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[271]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcPublishingGetStatusResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcPublishingGetStatusResponseError) ProtoMessage() {}

func (x *RpcPublishingGetStatusResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[271]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcPublishingGetStatusResponseError.ProtoReflect.Descriptor instead.
func (*RpcPublishingGetStatusResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 5, 5, 1, 0}
}

func (x *RpcPublishingGetStatusResponseError) GetCode() RpcPublishingGetStatusResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcPublishingGetStatusResponseError_NULL
}

func (x *RpcPublishingGetStatusResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcObjectOpen struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectOpen) Reset() {
	*x = RpcObjectOpen{}
	mi := &file_pb_protos_commands_proto_msgTypes[272]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectOpen) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectOpen) ProtoMessage() {}

func (x *RpcObjectOpen) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[272]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectOpen.ProtoReflect.Descriptor instead.
func (*RpcObjectOpen) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 0}
}

type RpcObjectClose struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectClose) Reset() {
	*x = RpcObjectClose{}
	mi := &file_pb_protos_commands_proto_msgTypes[273]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectClose) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectClose) ProtoMessage() {}

func (x *RpcObjectClose) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[273]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectClose.ProtoReflect.Descriptor instead.
func (*RpcObjectClose) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 1}
}

type RpcObjectShow struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectShow) Reset() {
	*x = RpcObjectShow{}
	mi := &file_pb_protos_commands_proto_msgTypes[274]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectShow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectShow) ProtoMessage() {}

func (x *RpcObjectShow) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[274]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectShow.ProtoReflect.Descriptor instead.
func (*RpcObjectShow) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 2}
}

type RpcObjectCreate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectCreate) Reset() {
	*x = RpcObjectCreate{}
	mi := &file_pb_protos_commands_proto_msgTypes[275]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectCreate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectCreate) ProtoMessage() {}

func (x *RpcObjectCreate) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[275]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectCreate.ProtoReflect.Descriptor instead.
func (*RpcObjectCreate) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 3}
}

type RpcObjectCreateBookmark struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectCreateBookmark) Reset() {
	*x = RpcObjectCreateBookmark{}
	mi := &file_pb_protos_commands_proto_msgTypes[276]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectCreateBookmark) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectCreateBookmark) ProtoMessage() {}

func (x *RpcObjectCreateBookmark) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[276]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectCreateBookmark.ProtoReflect.Descriptor instead.
func (*RpcObjectCreateBookmark) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 4}
}

type RpcObjectCreateRelation struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectCreateRelation) Reset() {
	*x = RpcObjectCreateRelation{}
	mi := &file_pb_protos_commands_proto_msgTypes[277]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectCreateRelation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectCreateRelation) ProtoMessage() {}

func (x *RpcObjectCreateRelation) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[277]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectCreateRelation.ProtoReflect.Descriptor instead.
func (*RpcObjectCreateRelation) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 5}
}

type RpcObjectCreateRelationOption struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectCreateRelationOption) Reset() {
	*x = RpcObjectCreateRelationOption{}
	mi := &file_pb_protos_commands_proto_msgTypes[278]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectCreateRelationOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectCreateRelationOption) ProtoMessage() {}

func (x *RpcObjectCreateRelationOption) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[278]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectCreateRelationOption.ProtoReflect.Descriptor instead.
func (*RpcObjectCreateRelationOption) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 6}
}

type RpcObjectCreateSet struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectCreateSet) Reset() {
	*x = RpcObjectCreateSet{}
	mi := &file_pb_protos_commands_proto_msgTypes[279]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectCreateSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectCreateSet) ProtoMessage() {}

func (x *RpcObjectCreateSet) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[279]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectCreateSet.ProtoReflect.Descriptor instead.
func (*RpcObjectCreateSet) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 7}
}

type RpcObjectCreateObjectType struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectCreateObjectType) Reset() {
	*x = RpcObjectCreateObjectType{}
	mi := &file_pb_protos_commands_proto_msgTypes[280]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectCreateObjectType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectCreateObjectType) ProtoMessage() {}

func (x *RpcObjectCreateObjectType) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[280]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectCreateObjectType.ProtoReflect.Descriptor instead.
func (*RpcObjectCreateObjectType) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 8}
}

type RpcObjectCreateFromUrl struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectCreateFromUrl) Reset() {
	*x = RpcObjectCreateFromUrl{}
	mi := &file_pb_protos_commands_proto_msgTypes[281]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectCreateFromUrl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectCreateFromUrl) ProtoMessage() {}

func (x *RpcObjectCreateFromUrl) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[281]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectCreateFromUrl.ProtoReflect.Descriptor instead.
func (*RpcObjectCreateFromUrl) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 9}
}

type RpcObjectChatAdd struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectChatAdd) Reset() {
	*x = RpcObjectChatAdd{}
	mi := &file_pb_protos_commands_proto_msgTypes[282]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectChatAdd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectChatAdd) ProtoMessage() {}

func (x *RpcObjectChatAdd) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[282]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectChatAdd.ProtoReflect.Descriptor instead.
func (*RpcObjectChatAdd) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 10}
}

type RpcObjectBookmarkFetch struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectBookmarkFetch) Reset() {
	*x = RpcObjectBookmarkFetch{}
	mi := &file_pb_protos_commands_proto_msgTypes[283]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectBookmarkFetch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectBookmarkFetch) ProtoMessage() {}

func (x *RpcObjectBookmarkFetch) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[283]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectBookmarkFetch.ProtoReflect.Descriptor instead.
func (*RpcObjectBookmarkFetch) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 11}
}

type RpcObjectToBookmark struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectToBookmark) Reset() {
	*x = RpcObjectToBookmark{}
	mi := &file_pb_protos_commands_proto_msgTypes[284]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectToBookmark) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectToBookmark) ProtoMessage() {}

func (x *RpcObjectToBookmark) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[284]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectToBookmark.ProtoReflect.Descriptor instead.
func (*RpcObjectToBookmark) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 12}
}

type RpcObjectDuplicate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectDuplicate) Reset() {
	*x = RpcObjectDuplicate{}
	mi := &file_pb_protos_commands_proto_msgTypes[285]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectDuplicate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectDuplicate) ProtoMessage() {}

func (x *RpcObjectDuplicate) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[285]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectDuplicate.ProtoReflect.Descriptor instead.
func (*RpcObjectDuplicate) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 13}
}

type RpcObjectOpenBreadcrumbs struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectOpenBreadcrumbs) Reset() {
	*x = RpcObjectOpenBreadcrumbs{}
	mi := &file_pb_protos_commands_proto_msgTypes[286]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectOpenBreadcrumbs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectOpenBreadcrumbs) ProtoMessage() {}

func (x *RpcObjectOpenBreadcrumbs) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[286]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectOpenBreadcrumbs.ProtoReflect.Descriptor instead.
func (*RpcObjectOpenBreadcrumbs) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 14}
}

type RpcObjectSetBreadcrumbs struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectSetBreadcrumbs) Reset() {
	*x = RpcObjectSetBreadcrumbs{}
	mi := &file_pb_protos_commands_proto_msgTypes[287]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectSetBreadcrumbs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectSetBreadcrumbs) ProtoMessage() {}

func (x *RpcObjectSetBreadcrumbs) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[287]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectSetBreadcrumbs.ProtoReflect.Descriptor instead.
func (*RpcObjectSetBreadcrumbs) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 15}
}

type RpcObjectShareByLink struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectShareByLink) Reset() {
	*x = RpcObjectShareByLink{}
	mi := &file_pb_protos_commands_proto_msgTypes[288]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectShareByLink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectShareByLink) ProtoMessage() {}

func (x *RpcObjectShareByLink) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[288]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectShareByLink.ProtoReflect.Descriptor instead.
func (*RpcObjectShareByLink) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 16}
}

// deprecated in favor of SearchWithMeta
type RpcObjectSearch struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectSearch) Reset() {
	*x = RpcObjectSearch{}
	mi := &file_pb_protos_commands_proto_msgTypes[289]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectSearch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectSearch) ProtoMessage() {}

func (x *RpcObjectSearch) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[289]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectSearch.ProtoReflect.Descriptor instead.
func (*RpcObjectSearch) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 17}
}

type RpcObjectSearchWithMeta struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectSearchWithMeta) Reset() {
	*x = RpcObjectSearchWithMeta{}
	mi := &file_pb_protos_commands_proto_msgTypes[290]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectSearchWithMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectSearchWithMeta) ProtoMessage() {}

func (x *RpcObjectSearchWithMeta) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[290]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectSearchWithMeta.ProtoReflect.Descriptor instead.
func (*RpcObjectSearchWithMeta) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 18}
}

type RpcObjectGraph struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectGraph) Reset() {
	*x = RpcObjectGraph{}
	mi := &file_pb_protos_commands_proto_msgTypes[291]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectGraph) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectGraph) ProtoMessage() {}

func (x *RpcObjectGraph) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[291]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectGraph.ProtoReflect.Descriptor instead.
func (*RpcObjectGraph) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 19}
}

type RpcObjectSearchSubscribe struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectSearchSubscribe) Reset() {
	*x = RpcObjectSearchSubscribe{}
	mi := &file_pb_protos_commands_proto_msgTypes[292]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectSearchSubscribe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectSearchSubscribe) ProtoMessage() {}

func (x *RpcObjectSearchSubscribe) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[292]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectSearchSubscribe.ProtoReflect.Descriptor instead.
func (*RpcObjectSearchSubscribe) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 20}
}

type RpcObjectCrossSpaceSearchSubscribe struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectCrossSpaceSearchSubscribe) Reset() {
	*x = RpcObjectCrossSpaceSearchSubscribe{}
	mi := &file_pb_protos_commands_proto_msgTypes[293]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectCrossSpaceSearchSubscribe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectCrossSpaceSearchSubscribe) ProtoMessage() {}

func (x *RpcObjectCrossSpaceSearchSubscribe) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[293]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectCrossSpaceSearchSubscribe.ProtoReflect.Descriptor instead.
func (*RpcObjectCrossSpaceSearchSubscribe) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 21}
}

type RpcObjectCrossSpaceSearchUnsubscribe struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectCrossSpaceSearchUnsubscribe) Reset() {
	*x = RpcObjectCrossSpaceSearchUnsubscribe{}
	mi := &file_pb_protos_commands_proto_msgTypes[294]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectCrossSpaceSearchUnsubscribe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectCrossSpaceSearchUnsubscribe) ProtoMessage() {}

func (x *RpcObjectCrossSpaceSearchUnsubscribe) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[294]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectCrossSpaceSearchUnsubscribe.ProtoReflect.Descriptor instead.
func (*RpcObjectCrossSpaceSearchUnsubscribe) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 22}
}

type RpcObjectGroupsSubscribe struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectGroupsSubscribe) Reset() {
	*x = RpcObjectGroupsSubscribe{}
	mi := &file_pb_protos_commands_proto_msgTypes[295]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectGroupsSubscribe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectGroupsSubscribe) ProtoMessage() {}

func (x *RpcObjectGroupsSubscribe) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[295]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectGroupsSubscribe.ProtoReflect.Descriptor instead.
func (*RpcObjectGroupsSubscribe) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 23}
}

type RpcObjectSubscribeIds struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectSubscribeIds) Reset() {
	*x = RpcObjectSubscribeIds{}
	mi := &file_pb_protos_commands_proto_msgTypes[296]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectSubscribeIds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectSubscribeIds) ProtoMessage() {}

func (x *RpcObjectSubscribeIds) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[296]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectSubscribeIds.ProtoReflect.Descriptor instead.
func (*RpcObjectSubscribeIds) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 24}
}

type RpcObjectSearchUnsubscribe struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectSearchUnsubscribe) Reset() {
	*x = RpcObjectSearchUnsubscribe{}
	mi := &file_pb_protos_commands_proto_msgTypes[297]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectSearchUnsubscribe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectSearchUnsubscribe) ProtoMessage() {}

func (x *RpcObjectSearchUnsubscribe) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[297]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectSearchUnsubscribe.ProtoReflect.Descriptor instead.
func (*RpcObjectSearchUnsubscribe) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 25}
}

type RpcObjectSetLayout struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectSetLayout) Reset() {
	*x = RpcObjectSetLayout{}
	mi := &file_pb_protos_commands_proto_msgTypes[298]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectSetLayout) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectSetLayout) ProtoMessage() {}

func (x *RpcObjectSetLayout) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[298]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectSetLayout.ProtoReflect.Descriptor instead.
func (*RpcObjectSetLayout) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 26}
}

type RpcObjectSetIsFavorite struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectSetIsFavorite) Reset() {
	*x = RpcObjectSetIsFavorite{}
	mi := &file_pb_protos_commands_proto_msgTypes[299]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectSetIsFavorite) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectSetIsFavorite) ProtoMessage() {}

func (x *RpcObjectSetIsFavorite) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[299]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectSetIsFavorite.ProtoReflect.Descriptor instead.
func (*RpcObjectSetIsFavorite) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 27}
}

type RpcObjectSetIsArchived struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectSetIsArchived) Reset() {
	*x = RpcObjectSetIsArchived{}
	mi := &file_pb_protos_commands_proto_msgTypes[300]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectSetIsArchived) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectSetIsArchived) ProtoMessage() {}

func (x *RpcObjectSetIsArchived) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[300]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectSetIsArchived.ProtoReflect.Descriptor instead.
func (*RpcObjectSetIsArchived) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 28}
}

type RpcObjectSetSource struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectSetSource) Reset() {
	*x = RpcObjectSetSource{}
	mi := &file_pb_protos_commands_proto_msgTypes[301]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectSetSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectSetSource) ProtoMessage() {}

func (x *RpcObjectSetSource) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[301]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectSetSource.ProtoReflect.Descriptor instead.
func (*RpcObjectSetSource) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 29}
}

type RpcObjectWorkspaceSetDashboard struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectWorkspaceSetDashboard) Reset() {
	*x = RpcObjectWorkspaceSetDashboard{}
	mi := &file_pb_protos_commands_proto_msgTypes[302]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectWorkspaceSetDashboard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectWorkspaceSetDashboard) ProtoMessage() {}

func (x *RpcObjectWorkspaceSetDashboard) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[302]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectWorkspaceSetDashboard.ProtoReflect.Descriptor instead.
func (*RpcObjectWorkspaceSetDashboard) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 30}
}

type RpcObjectSetObjectType struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectSetObjectType) Reset() {
	*x = RpcObjectSetObjectType{}
	mi := &file_pb_protos_commands_proto_msgTypes[303]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectSetObjectType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectSetObjectType) ProtoMessage() {}

func (x *RpcObjectSetObjectType) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[303]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectSetObjectType.ProtoReflect.Descriptor instead.
func (*RpcObjectSetObjectType) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 31}
}

type RpcObjectSetInternalFlags struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectSetInternalFlags) Reset() {
	*x = RpcObjectSetInternalFlags{}
	mi := &file_pb_protos_commands_proto_msgTypes[304]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectSetInternalFlags) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectSetInternalFlags) ProtoMessage() {}

func (x *RpcObjectSetInternalFlags) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[304]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectSetInternalFlags.ProtoReflect.Descriptor instead.
func (*RpcObjectSetInternalFlags) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 32}
}

type RpcObjectSetDetails struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectSetDetails) Reset() {
	*x = RpcObjectSetDetails{}
	mi := &file_pb_protos_commands_proto_msgTypes[305]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectSetDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectSetDetails) ProtoMessage() {}

func (x *RpcObjectSetDetails) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[305]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectSetDetails.ProtoReflect.Descriptor instead.
func (*RpcObjectSetDetails) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 33}
}

type RpcObjectToSet struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectToSet) Reset() {
	*x = RpcObjectToSet{}
	mi := &file_pb_protos_commands_proto_msgTypes[306]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectToSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectToSet) ProtoMessage() {}

func (x *RpcObjectToSet) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[306]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectToSet.ProtoReflect.Descriptor instead.
func (*RpcObjectToSet) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 34}
}

type RpcObjectToCollection struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectToCollection) Reset() {
	*x = RpcObjectToCollection{}
	mi := &file_pb_protos_commands_proto_msgTypes[307]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectToCollection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectToCollection) ProtoMessage() {}

func (x *RpcObjectToCollection) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[307]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectToCollection.ProtoReflect.Descriptor instead.
func (*RpcObjectToCollection) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 35}
}

// Available undo/redo operations
type RpcObjectUndoRedoCounter struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Undo          int32                  `protobuf:"varint,1,opt,name=undo,proto3" json:"undo,omitempty"`
	Redo          int32                  `protobuf:"varint,2,opt,name=redo,proto3" json:"redo,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectUndoRedoCounter) Reset() {
	*x = RpcObjectUndoRedoCounter{}
	mi := &file_pb_protos_commands_proto_msgTypes[308]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectUndoRedoCounter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectUndoRedoCounter) ProtoMessage() {}

func (x *RpcObjectUndoRedoCounter) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[308]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectUndoRedoCounter.ProtoReflect.Descriptor instead.
func (*RpcObjectUndoRedoCounter) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 36}
}

func (x *RpcObjectUndoRedoCounter) GetUndo() int32 {
	if x != nil {
		return x.Undo
	}
	return 0
}

func (x *RpcObjectUndoRedoCounter) GetRedo() int32 {
	if x != nil {
		return x.Redo
	}
	return 0
}

type RpcObjectUndo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectUndo) Reset() {
	*x = RpcObjectUndo{}
	mi := &file_pb_protos_commands_proto_msgTypes[309]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectUndo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectUndo) ProtoMessage() {}

func (x *RpcObjectUndo) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[309]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectUndo.ProtoReflect.Descriptor instead.
func (*RpcObjectUndo) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 37}
}

type RpcObjectRedo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectRedo) Reset() {
	*x = RpcObjectRedo{}
	mi := &file_pb_protos_commands_proto_msgTypes[310]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectRedo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectRedo) ProtoMessage() {}

func (x *RpcObjectRedo) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[310]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectRedo.ProtoReflect.Descriptor instead.
func (*RpcObjectRedo) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 38}
}

type RpcObjectListDuplicate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectListDuplicate) Reset() {
	*x = RpcObjectListDuplicate{}
	mi := &file_pb_protos_commands_proto_msgTypes[311]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectListDuplicate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectListDuplicate) ProtoMessage() {}

func (x *RpcObjectListDuplicate) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[311]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectListDuplicate.ProtoReflect.Descriptor instead.
func (*RpcObjectListDuplicate) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 39}
}

type RpcObjectListDelete struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectListDelete) Reset() {
	*x = RpcObjectListDelete{}
	mi := &file_pb_protos_commands_proto_msgTypes[312]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectListDelete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectListDelete) ProtoMessage() {}

func (x *RpcObjectListDelete) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[312]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectListDelete.ProtoReflect.Descriptor instead.
func (*RpcObjectListDelete) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 40}
}

type RpcObjectListSetIsArchived struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectListSetIsArchived) Reset() {
	*x = RpcObjectListSetIsArchived{}
	mi := &file_pb_protos_commands_proto_msgTypes[313]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectListSetIsArchived) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectListSetIsArchived) ProtoMessage() {}

func (x *RpcObjectListSetIsArchived) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[313]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectListSetIsArchived.ProtoReflect.Descriptor instead.
func (*RpcObjectListSetIsArchived) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 41}
}

type RpcObjectListSetIsFavorite struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectListSetIsFavorite) Reset() {
	*x = RpcObjectListSetIsFavorite{}
	mi := &file_pb_protos_commands_proto_msgTypes[314]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectListSetIsFavorite) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectListSetIsFavorite) ProtoMessage() {}

func (x *RpcObjectListSetIsFavorite) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[314]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectListSetIsFavorite.ProtoReflect.Descriptor instead.
func (*RpcObjectListSetIsFavorite) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 42}
}

type RpcObjectListSetObjectType struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectListSetObjectType) Reset() {
	*x = RpcObjectListSetObjectType{}
	mi := &file_pb_protos_commands_proto_msgTypes[315]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectListSetObjectType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectListSetObjectType) ProtoMessage() {}

func (x *RpcObjectListSetObjectType) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[315]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectListSetObjectType.ProtoReflect.Descriptor instead.
func (*RpcObjectListSetObjectType) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 43}
}

type RpcObjectListSetDetails struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectListSetDetails) Reset() {
	*x = RpcObjectListSetDetails{}
	mi := &file_pb_protos_commands_proto_msgTypes[316]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectListSetDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectListSetDetails) ProtoMessage() {}

func (x *RpcObjectListSetDetails) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[316]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectListSetDetails.ProtoReflect.Descriptor instead.
func (*RpcObjectListSetDetails) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 44}
}

type RpcObjectListModifyDetailValues struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectListModifyDetailValues) Reset() {
	*x = RpcObjectListModifyDetailValues{}
	mi := &file_pb_protos_commands_proto_msgTypes[317]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectListModifyDetailValues) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectListModifyDetailValues) ProtoMessage() {}

func (x *RpcObjectListModifyDetailValues) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[317]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectListModifyDetailValues.ProtoReflect.Descriptor instead.
func (*RpcObjectListModifyDetailValues) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 45}
}

type RpcObjectApplyTemplate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectApplyTemplate) Reset() {
	*x = RpcObjectApplyTemplate{}
	mi := &file_pb_protos_commands_proto_msgTypes[318]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectApplyTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectApplyTemplate) ProtoMessage() {}

func (x *RpcObjectApplyTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[318]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectApplyTemplate.ProtoReflect.Descriptor instead.
func (*RpcObjectApplyTemplate) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 46}
}

type RpcObjectListExport struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectListExport) Reset() {
	*x = RpcObjectListExport{}
	mi := &file_pb_protos_commands_proto_msgTypes[319]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectListExport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectListExport) ProtoMessage() {}

func (x *RpcObjectListExport) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[319]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectListExport.ProtoReflect.Descriptor instead.
func (*RpcObjectListExport) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 47}
}

type RpcObjectImport struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectImport) Reset() {
	*x = RpcObjectImport{}
	mi := &file_pb_protos_commands_proto_msgTypes[320]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectImport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectImport) ProtoMessage() {}

func (x *RpcObjectImport) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[320]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectImport.ProtoReflect.Descriptor instead.
func (*RpcObjectImport) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 48}
}

type RpcObjectImportList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectImportList) Reset() {
	*x = RpcObjectImportList{}
	mi := &file_pb_protos_commands_proto_msgTypes[321]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectImportList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectImportList) ProtoMessage() {}

func (x *RpcObjectImportList) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[321]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectImportList.ProtoReflect.Descriptor instead.
func (*RpcObjectImportList) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 49}
}

type RpcObjectImportUseCase struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectImportUseCase) Reset() {
	*x = RpcObjectImportUseCase{}
	mi := &file_pb_protos_commands_proto_msgTypes[322]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectImportUseCase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectImportUseCase) ProtoMessage() {}

func (x *RpcObjectImportUseCase) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[322]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectImportUseCase.ProtoReflect.Descriptor instead.
func (*RpcObjectImportUseCase) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 50}
}

type RpcObjectImportExperience struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectImportExperience) Reset() {
	*x = RpcObjectImportExperience{}
	mi := &file_pb_protos_commands_proto_msgTypes[323]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectImportExperience) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectImportExperience) ProtoMessage() {}

func (x *RpcObjectImportExperience) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[323]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectImportExperience.ProtoReflect.Descriptor instead.
func (*RpcObjectImportExperience) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 51}
}

type RpcObjectDateByTimestamp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectDateByTimestamp) Reset() {
	*x = RpcObjectDateByTimestamp{}
	mi := &file_pb_protos_commands_proto_msgTypes[324]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectDateByTimestamp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectDateByTimestamp) ProtoMessage() {}

func (x *RpcObjectDateByTimestamp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[324]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectDateByTimestamp.ProtoReflect.Descriptor instead.
func (*RpcObjectDateByTimestamp) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 52}
}

type RpcObjectOpenRequest struct {
	state                              protoimpl.MessageState `protogen:"open.v1"`
	ContextId                          string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"` // id of the context blo1k
	ObjectId                           string                 `protobuf:"bytes,2,opt,name=objectId,proto3" json:"objectId,omitempty"`
	TraceId                            string                 `protobuf:"bytes,3,opt,name=traceId,proto3" json:"traceId,omitempty"`
	SpaceId                            string                 `protobuf:"bytes,5,opt,name=spaceId,proto3" json:"spaceId,omitempty"`                                                        // Required only for date objects
	IncludeRelationsAsDependentObjects bool                   `protobuf:"varint,4,opt,name=includeRelationsAsDependentObjects,proto3" json:"includeRelationsAsDependentObjects,omitempty"` // some clients may set this option instead if having the single subscription to all relations
	unknownFields                      protoimpl.UnknownFields
	sizeCache                          protoimpl.SizeCache
}

func (x *RpcObjectOpenRequest) Reset() {
	*x = RpcObjectOpenRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[325]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectOpenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectOpenRequest) ProtoMessage() {}

func (x *RpcObjectOpenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[325]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectOpenRequest.ProtoReflect.Descriptor instead.
func (*RpcObjectOpenRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 0, 0}
}

func (x *RpcObjectOpenRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcObjectOpenRequest) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

func (x *RpcObjectOpenRequest) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *RpcObjectOpenRequest) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *RpcObjectOpenRequest) GetIncludeRelationsAsDependentObjects() bool {
	if x != nil {
		return x.IncludeRelationsAsDependentObjects
	}
	return false
}

type RpcObjectOpenResponse struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	Error         *RpcObjectOpenResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	ObjectView    *model.ObjectView           `protobuf:"bytes,2,opt,name=objectView,proto3" json:"objectView,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectOpenResponse) Reset() {
	*x = RpcObjectOpenResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[326]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectOpenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectOpenResponse) ProtoMessage() {}

func (x *RpcObjectOpenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[326]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectOpenResponse.ProtoReflect.Descriptor instead.
func (*RpcObjectOpenResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 0, 1}
}

func (x *RpcObjectOpenResponse) GetError() *RpcObjectOpenResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcObjectOpenResponse) GetObjectView() *model.ObjectView {
	if x != nil {
		return x.ObjectView
	}
	return nil
}

type RpcObjectOpenResponseError struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	Code          RpcObjectOpenResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcObjectOpenResponseErrorCode" json:"code,omitempty"`
	Description   string                         `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectOpenResponseError) Reset() {
	*x = RpcObjectOpenResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[327]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectOpenResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectOpenResponseError) ProtoMessage() {}

func (x *RpcObjectOpenResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[327]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectOpenResponseError.ProtoReflect.Descriptor instead.
func (*RpcObjectOpenResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 0, 1, 0}
}

func (x *RpcObjectOpenResponseError) GetCode() RpcObjectOpenResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcObjectOpenResponseError_NULL
}

func (x *RpcObjectOpenResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcObjectCloseRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextId     string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"` // deprecated, GO-1926
	ObjectId      string                 `protobuf:"bytes,2,opt,name=objectId,proto3" json:"objectId,omitempty"`
	SpaceId       string                 `protobuf:"bytes,3,opt,name=spaceId,proto3" json:"spaceId,omitempty"` // Required only for date objects
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectCloseRequest) Reset() {
	*x = RpcObjectCloseRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[328]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectCloseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectCloseRequest) ProtoMessage() {}

func (x *RpcObjectCloseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[328]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectCloseRequest.ProtoReflect.Descriptor instead.
func (*RpcObjectCloseRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 1, 0}
}

func (x *RpcObjectCloseRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcObjectCloseRequest) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

func (x *RpcObjectCloseRequest) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

type RpcObjectCloseResponse struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	Error         *RpcObjectCloseResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectCloseResponse) Reset() {
	*x = RpcObjectCloseResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[329]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectCloseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectCloseResponse) ProtoMessage() {}

func (x *RpcObjectCloseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[329]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectCloseResponse.ProtoReflect.Descriptor instead.
func (*RpcObjectCloseResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 1, 1}
}

func (x *RpcObjectCloseResponse) GetError() *RpcObjectCloseResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

type RpcObjectCloseResponseError struct {
	state         protoimpl.MessageState          `protogen:"open.v1"`
	Code          RpcObjectCloseResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcObjectCloseResponseErrorCode" json:"code,omitempty"`
	Description   string                          `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectCloseResponseError) Reset() {
	*x = RpcObjectCloseResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[330]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectCloseResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectCloseResponseError) ProtoMessage() {}

func (x *RpcObjectCloseResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[330]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectCloseResponseError.ProtoReflect.Descriptor instead.
func (*RpcObjectCloseResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 1, 1, 0}
}

func (x *RpcObjectCloseResponseError) GetCode() RpcObjectCloseResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcObjectCloseResponseError_NULL
}

func (x *RpcObjectCloseResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcObjectShowRequest struct {
	state                              protoimpl.MessageState `protogen:"open.v1"`
	ContextId                          string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"` // deprecated, GO-1926
	ObjectId                           string                 `protobuf:"bytes,2,opt,name=objectId,proto3" json:"objectId,omitempty"`
	TraceId                            string                 `protobuf:"bytes,3,opt,name=traceId,proto3" json:"traceId,omitempty"`
	SpaceId                            string                 `protobuf:"bytes,5,opt,name=spaceId,proto3" json:"spaceId,omitempty"`                                                        // Required only for date objects
	IncludeRelationsAsDependentObjects bool                   `protobuf:"varint,4,opt,name=includeRelationsAsDependentObjects,proto3" json:"includeRelationsAsDependentObjects,omitempty"` // some clients may set this option instead if having the single subscription to all relations
	unknownFields                      protoimpl.UnknownFields
	sizeCache                          protoimpl.SizeCache
}

func (x *RpcObjectShowRequest) Reset() {
	*x = RpcObjectShowRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[331]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectShowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectShowRequest) ProtoMessage() {}

func (x *RpcObjectShowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[331]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectShowRequest.ProtoReflect.Descriptor instead.
func (*RpcObjectShowRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 2, 0}
}

func (x *RpcObjectShowRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcObjectShowRequest) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

func (x *RpcObjectShowRequest) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *RpcObjectShowRequest) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *RpcObjectShowRequest) GetIncludeRelationsAsDependentObjects() bool {
	if x != nil {
		return x.IncludeRelationsAsDependentObjects
	}
	return false
}

type RpcObjectShowResponse struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	Error         *RpcObjectShowResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	ObjectView    *model.ObjectView           `protobuf:"bytes,2,opt,name=objectView,proto3" json:"objectView,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectShowResponse) Reset() {
	*x = RpcObjectShowResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[332]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectShowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectShowResponse) ProtoMessage() {}

func (x *RpcObjectShowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[332]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectShowResponse.ProtoReflect.Descriptor instead.
func (*RpcObjectShowResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 2, 1}
}

func (x *RpcObjectShowResponse) GetError() *RpcObjectShowResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcObjectShowResponse) GetObjectView() *model.ObjectView {
	if x != nil {
		return x.ObjectView
	}
	return nil
}

type RpcObjectShowResponseError struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	Code          RpcObjectShowResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcObjectShowResponseErrorCode" json:"code,omitempty"`
	Description   string                         `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectShowResponseError) Reset() {
	*x = RpcObjectShowResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[333]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectShowResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectShowResponseError) ProtoMessage() {}

func (x *RpcObjectShowResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[333]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectShowResponseError.ProtoReflect.Descriptor instead.
func (*RpcObjectShowResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 2, 1, 0}
}

func (x *RpcObjectShowResponseError) GetCode() RpcObjectShowResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcObjectShowResponseError_NULL
}

func (x *RpcObjectShowResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcObjectCreateRequest struct {
	state                     protoimpl.MessageState `protogen:"open.v1"`
	Details                   *structpb.Struct       `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"` // object details
	InternalFlags             []*model.InternalFlag  `protobuf:"bytes,2,rep,name=internalFlags,proto3" json:"internalFlags,omitempty"`
	TemplateId                string                 `protobuf:"bytes,3,opt,name=templateId,proto3" json:"templateId,omitempty"`
	SpaceId                   string                 `protobuf:"bytes,4,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	ObjectTypeUniqueKey       string                 `protobuf:"bytes,5,opt,name=objectTypeUniqueKey,proto3" json:"objectTypeUniqueKey,omitempty"`
	WithChat                  bool                   `protobuf:"varint,6,opt,name=withChat,proto3" json:"withChat,omitempty"`
	CreateTypeWidgetIfMissing bool                   `protobuf:"varint,7,opt,name=createTypeWidgetIfMissing,proto3" json:"createTypeWidgetIfMissing,omitempty"` // experimental flag to auto-create type widget if missing
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *RpcObjectCreateRequest) Reset() {
	*x = RpcObjectCreateRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[334]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectCreateRequest) ProtoMessage() {}

func (x *RpcObjectCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[334]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectCreateRequest.ProtoReflect.Descriptor instead.
func (*RpcObjectCreateRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 3, 0}
}

func (x *RpcObjectCreateRequest) GetDetails() *structpb.Struct {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *RpcObjectCreateRequest) GetInternalFlags() []*model.InternalFlag {
	if x != nil {
		return x.InternalFlags
	}
	return nil
}

func (x *RpcObjectCreateRequest) GetTemplateId() string {
	if x != nil {
		return x.TemplateId
	}
	return ""
}

func (x *RpcObjectCreateRequest) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *RpcObjectCreateRequest) GetObjectTypeUniqueKey() string {
	if x != nil {
		return x.ObjectTypeUniqueKey
	}
	return ""
}

func (x *RpcObjectCreateRequest) GetWithChat() bool {
	if x != nil {
		return x.WithChat
	}
	return false
}

func (x *RpcObjectCreateRequest) GetCreateTypeWidgetIfMissing() bool {
	if x != nil {
		return x.CreateTypeWidgetIfMissing
	}
	return false
}

type RpcObjectCreateResponse struct {
	state         protoimpl.MessageState        `protogen:"open.v1"`
	Error         *RpcObjectCreateResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	ObjectId      string                        `protobuf:"bytes,3,opt,name=objectId,proto3" json:"objectId,omitempty"`
	Event         *ResponseEvent                `protobuf:"bytes,4,opt,name=event,proto3" json:"event,omitempty"`
	Details       *structpb.Struct              `protobuf:"bytes,5,opt,name=details,proto3" json:"details,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectCreateResponse) Reset() {
	*x = RpcObjectCreateResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[335]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectCreateResponse) ProtoMessage() {}

func (x *RpcObjectCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[335]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectCreateResponse.ProtoReflect.Descriptor instead.
func (*RpcObjectCreateResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 3, 1}
}

func (x *RpcObjectCreateResponse) GetError() *RpcObjectCreateResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcObjectCreateResponse) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

func (x *RpcObjectCreateResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

func (x *RpcObjectCreateResponse) GetDetails() *structpb.Struct {
	if x != nil {
		return x.Details
	}
	return nil
}

type RpcObjectCreateResponseError struct {
	state         protoimpl.MessageState           `protogen:"open.v1"`
	Code          RpcObjectCreateResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcObjectCreateResponseErrorCode" json:"code,omitempty"`
	Description   string                           `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectCreateResponseError) Reset() {
	*x = RpcObjectCreateResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[336]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectCreateResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectCreateResponseError) ProtoMessage() {}

func (x *RpcObjectCreateResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[336]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectCreateResponseError.ProtoReflect.Descriptor instead.
func (*RpcObjectCreateResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 3, 1, 0}
}

func (x *RpcObjectCreateResponseError) GetCode() RpcObjectCreateResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcObjectCreateResponseError_NULL
}

func (x *RpcObjectCreateResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcObjectCreateBookmarkRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Details       *structpb.Struct       `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
	SpaceId       string                 `protobuf:"bytes,2,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	WithChat      bool                   `protobuf:"varint,3,opt,name=withChat,proto3" json:"withChat,omitempty"`
	TemplateId    string                 `protobuf:"bytes,4,opt,name=templateId,proto3" json:"templateId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectCreateBookmarkRequest) Reset() {
	*x = RpcObjectCreateBookmarkRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[337]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectCreateBookmarkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectCreateBookmarkRequest) ProtoMessage() {}

func (x *RpcObjectCreateBookmarkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[337]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectCreateBookmarkRequest.ProtoReflect.Descriptor instead.
func (*RpcObjectCreateBookmarkRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 4, 0}
}

func (x *RpcObjectCreateBookmarkRequest) GetDetails() *structpb.Struct {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *RpcObjectCreateBookmarkRequest) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *RpcObjectCreateBookmarkRequest) GetWithChat() bool {
	if x != nil {
		return x.WithChat
	}
	return false
}

func (x *RpcObjectCreateBookmarkRequest) GetTemplateId() string {
	if x != nil {
		return x.TemplateId
	}
	return ""
}

type RpcObjectCreateBookmarkResponse struct {
	state         protoimpl.MessageState                `protogen:"open.v1"`
	Error         *RpcObjectCreateBookmarkResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	ObjectId      string                                `protobuf:"bytes,2,opt,name=objectId,proto3" json:"objectId,omitempty"`
	Details       *structpb.Struct                      `protobuf:"bytes,3,opt,name=details,proto3" json:"details,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectCreateBookmarkResponse) Reset() {
	*x = RpcObjectCreateBookmarkResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[338]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectCreateBookmarkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectCreateBookmarkResponse) ProtoMessage() {}

func (x *RpcObjectCreateBookmarkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[338]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectCreateBookmarkResponse.ProtoReflect.Descriptor instead.
func (*RpcObjectCreateBookmarkResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 4, 1}
}

func (x *RpcObjectCreateBookmarkResponse) GetError() *RpcObjectCreateBookmarkResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcObjectCreateBookmarkResponse) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

func (x *RpcObjectCreateBookmarkResponse) GetDetails() *structpb.Struct {
	if x != nil {
		return x.Details
	}
	return nil
}

type RpcObjectCreateBookmarkResponseError struct {
	state         protoimpl.MessageState                   `protogen:"open.v1"`
	Code          RpcObjectCreateBookmarkResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcObjectCreateBookmarkResponseErrorCode" json:"code,omitempty"`
	Description   string                                   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectCreateBookmarkResponseError) Reset() {
	*x = RpcObjectCreateBookmarkResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[339]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectCreateBookmarkResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectCreateBookmarkResponseError) ProtoMessage() {}

func (x *RpcObjectCreateBookmarkResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[339]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectCreateBookmarkResponseError.ProtoReflect.Descriptor instead.
func (*RpcObjectCreateBookmarkResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 4, 1, 0}
}

func (x *RpcObjectCreateBookmarkResponseError) GetCode() RpcObjectCreateBookmarkResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcObjectCreateBookmarkResponseError_NULL
}

func (x *RpcObjectCreateBookmarkResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcObjectCreateRelationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Details       *structpb.Struct       `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
	SpaceId       string                 `protobuf:"bytes,2,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectCreateRelationRequest) Reset() {
	*x = RpcObjectCreateRelationRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[340]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectCreateRelationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectCreateRelationRequest) ProtoMessage() {}

func (x *RpcObjectCreateRelationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[340]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectCreateRelationRequest.ProtoReflect.Descriptor instead.
func (*RpcObjectCreateRelationRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 5, 0}
}

func (x *RpcObjectCreateRelationRequest) GetDetails() *structpb.Struct {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *RpcObjectCreateRelationRequest) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

type RpcObjectCreateRelationResponse struct {
	state         protoimpl.MessageState                `protogen:"open.v1"`
	Error         *RpcObjectCreateRelationResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	ObjectId      string                                `protobuf:"bytes,2,opt,name=objectId,proto3" json:"objectId,omitempty"`
	Key           string                                `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	Details       *structpb.Struct                      `protobuf:"bytes,4,opt,name=details,proto3" json:"details,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectCreateRelationResponse) Reset() {
	*x = RpcObjectCreateRelationResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[341]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectCreateRelationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectCreateRelationResponse) ProtoMessage() {}

func (x *RpcObjectCreateRelationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[341]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectCreateRelationResponse.ProtoReflect.Descriptor instead.
func (*RpcObjectCreateRelationResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 5, 1}
}

func (x *RpcObjectCreateRelationResponse) GetError() *RpcObjectCreateRelationResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcObjectCreateRelationResponse) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

func (x *RpcObjectCreateRelationResponse) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *RpcObjectCreateRelationResponse) GetDetails() *structpb.Struct {
	if x != nil {
		return x.Details
	}
	return nil
}

type RpcObjectCreateRelationResponseError struct {
	state         protoimpl.MessageState                   `protogen:"open.v1"`
	Code          RpcObjectCreateRelationResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcObjectCreateRelationResponseErrorCode" json:"code,omitempty"`
	Description   string                                   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectCreateRelationResponseError) Reset() {
	*x = RpcObjectCreateRelationResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[342]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectCreateRelationResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectCreateRelationResponseError) ProtoMessage() {}

func (x *RpcObjectCreateRelationResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[342]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectCreateRelationResponseError.ProtoReflect.Descriptor instead.
func (*RpcObjectCreateRelationResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 5, 1, 0}
}

func (x *RpcObjectCreateRelationResponseError) GetCode() RpcObjectCreateRelationResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcObjectCreateRelationResponseError_NULL
}

func (x *RpcObjectCreateRelationResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcObjectCreateRelationOptionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Details       *structpb.Struct       `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
	SpaceId       string                 `protobuf:"bytes,2,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectCreateRelationOptionRequest) Reset() {
	*x = RpcObjectCreateRelationOptionRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[343]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectCreateRelationOptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectCreateRelationOptionRequest) ProtoMessage() {}

func (x *RpcObjectCreateRelationOptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[343]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectCreateRelationOptionRequest.ProtoReflect.Descriptor instead.
func (*RpcObjectCreateRelationOptionRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 6, 0}
}

func (x *RpcObjectCreateRelationOptionRequest) GetDetails() *structpb.Struct {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *RpcObjectCreateRelationOptionRequest) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

type RpcObjectCreateRelationOptionResponse struct {
	state         protoimpl.MessageState                      `protogen:"open.v1"`
	Error         *RpcObjectCreateRelationOptionResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	ObjectId      string                                      `protobuf:"bytes,2,opt,name=objectId,proto3" json:"objectId,omitempty"`
	Details       *structpb.Struct                            `protobuf:"bytes,3,opt,name=details,proto3" json:"details,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectCreateRelationOptionResponse) Reset() {
	*x = RpcObjectCreateRelationOptionResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[344]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectCreateRelationOptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectCreateRelationOptionResponse) ProtoMessage() {}

func (x *RpcObjectCreateRelationOptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[344]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectCreateRelationOptionResponse.ProtoReflect.Descriptor instead.
func (*RpcObjectCreateRelationOptionResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 6, 1}
}

func (x *RpcObjectCreateRelationOptionResponse) GetError() *RpcObjectCreateRelationOptionResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcObjectCreateRelationOptionResponse) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

func (x *RpcObjectCreateRelationOptionResponse) GetDetails() *structpb.Struct {
	if x != nil {
		return x.Details
	}
	return nil
}

type RpcObjectCreateRelationOptionResponseError struct {
	state         protoimpl.MessageState                         `protogen:"open.v1"`
	Code          RpcObjectCreateRelationOptionResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcObjectCreateRelationOptionResponseErrorCode" json:"code,omitempty"`
	Description   string                                         `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectCreateRelationOptionResponseError) Reset() {
	*x = RpcObjectCreateRelationOptionResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[345]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectCreateRelationOptionResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectCreateRelationOptionResponseError) ProtoMessage() {}

func (x *RpcObjectCreateRelationOptionResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[345]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectCreateRelationOptionResponseError.ProtoReflect.Descriptor instead.
func (*RpcObjectCreateRelationOptionResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 6, 1, 0}
}

func (x *RpcObjectCreateRelationOptionResponseError) GetCode() RpcObjectCreateRelationOptionResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcObjectCreateRelationOptionResponseError_NULL
}

func (x *RpcObjectCreateRelationOptionResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcObjectCreateSetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Source        []string               `protobuf:"bytes,1,rep,name=source,proto3" json:"source,omitempty"`
	Details       *structpb.Struct       `protobuf:"bytes,2,opt,name=details,proto3" json:"details,omitempty"`       // if omitted the name of page will be the same with object type
	TemplateId    string                 `protobuf:"bytes,3,opt,name=templateId,proto3" json:"templateId,omitempty"` // optional template id for creating from template
	InternalFlags []*model.InternalFlag  `protobuf:"bytes,4,rep,name=internalFlags,proto3" json:"internalFlags,omitempty"`
	SpaceId       string                 `protobuf:"bytes,5,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	WithChat      bool                   `protobuf:"varint,6,opt,name=withChat,proto3" json:"withChat,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectCreateSetRequest) Reset() {
	*x = RpcObjectCreateSetRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[346]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectCreateSetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectCreateSetRequest) ProtoMessage() {}

func (x *RpcObjectCreateSetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[346]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectCreateSetRequest.ProtoReflect.Descriptor instead.
func (*RpcObjectCreateSetRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 7, 0}
}

func (x *RpcObjectCreateSetRequest) GetSource() []string {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *RpcObjectCreateSetRequest) GetDetails() *structpb.Struct {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *RpcObjectCreateSetRequest) GetTemplateId() string {
	if x != nil {
		return x.TemplateId
	}
	return ""
}

func (x *RpcObjectCreateSetRequest) GetInternalFlags() []*model.InternalFlag {
	if x != nil {
		return x.InternalFlags
	}
	return nil
}

func (x *RpcObjectCreateSetRequest) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *RpcObjectCreateSetRequest) GetWithChat() bool {
	if x != nil {
		return x.WithChat
	}
	return false
}

type RpcObjectCreateSetResponse struct {
	state         protoimpl.MessageState           `protogen:"open.v1"`
	Error         *RpcObjectCreateSetResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	ObjectId      string                           `protobuf:"bytes,3,opt,name=objectId,proto3" json:"objectId,omitempty"`
	Event         *ResponseEvent                   `protobuf:"bytes,4,opt,name=event,proto3" json:"event,omitempty"`
	Details       *structpb.Struct                 `protobuf:"bytes,5,opt,name=details,proto3" json:"details,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectCreateSetResponse) Reset() {
	*x = RpcObjectCreateSetResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[347]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectCreateSetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectCreateSetResponse) ProtoMessage() {}

func (x *RpcObjectCreateSetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[347]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectCreateSetResponse.ProtoReflect.Descriptor instead.
func (*RpcObjectCreateSetResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 7, 1}
}

func (x *RpcObjectCreateSetResponse) GetError() *RpcObjectCreateSetResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcObjectCreateSetResponse) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

func (x *RpcObjectCreateSetResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

func (x *RpcObjectCreateSetResponse) GetDetails() *structpb.Struct {
	if x != nil {
		return x.Details
	}
	return nil
}

type RpcObjectCreateSetResponseError struct {
	state         protoimpl.MessageState              `protogen:"open.v1"`
	Code          RpcObjectCreateSetResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcObjectCreateSetResponseErrorCode" json:"code,omitempty"`
	Description   string                              `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectCreateSetResponseError) Reset() {
	*x = RpcObjectCreateSetResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[348]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectCreateSetResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectCreateSetResponseError) ProtoMessage() {}

func (x *RpcObjectCreateSetResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[348]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectCreateSetResponseError.ProtoReflect.Descriptor instead.
func (*RpcObjectCreateSetResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 7, 1, 0}
}

func (x *RpcObjectCreateSetResponseError) GetCode() RpcObjectCreateSetResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcObjectCreateSetResponseError_NULL
}

func (x *RpcObjectCreateSetResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcObjectCreateObjectTypeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Details       *structpb.Struct       `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
	InternalFlags []*model.InternalFlag  `protobuf:"bytes,2,rep,name=internalFlags,proto3" json:"internalFlags,omitempty"`
	SpaceId       string                 `protobuf:"bytes,3,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectCreateObjectTypeRequest) Reset() {
	*x = RpcObjectCreateObjectTypeRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[349]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectCreateObjectTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectCreateObjectTypeRequest) ProtoMessage() {}

func (x *RpcObjectCreateObjectTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[349]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectCreateObjectTypeRequest.ProtoReflect.Descriptor instead.
func (*RpcObjectCreateObjectTypeRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 8, 0}
}

func (x *RpcObjectCreateObjectTypeRequest) GetDetails() *structpb.Struct {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *RpcObjectCreateObjectTypeRequest) GetInternalFlags() []*model.InternalFlag {
	if x != nil {
		return x.InternalFlags
	}
	return nil
}

func (x *RpcObjectCreateObjectTypeRequest) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

type RpcObjectCreateObjectTypeResponse struct {
	state         protoimpl.MessageState                  `protogen:"open.v1"`
	Error         *RpcObjectCreateObjectTypeResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Details       *structpb.Struct                        `protobuf:"bytes,2,opt,name=details,proto3" json:"details,omitempty"`
	ObjectId      string                                  `protobuf:"bytes,3,opt,name=objectId,proto3" json:"objectId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectCreateObjectTypeResponse) Reset() {
	*x = RpcObjectCreateObjectTypeResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[350]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectCreateObjectTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectCreateObjectTypeResponse) ProtoMessage() {}

func (x *RpcObjectCreateObjectTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[350]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectCreateObjectTypeResponse.ProtoReflect.Descriptor instead.
func (*RpcObjectCreateObjectTypeResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 8, 1}
}

func (x *RpcObjectCreateObjectTypeResponse) GetError() *RpcObjectCreateObjectTypeResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcObjectCreateObjectTypeResponse) GetDetails() *structpb.Struct {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *RpcObjectCreateObjectTypeResponse) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

type RpcObjectCreateObjectTypeResponseError struct {
	state         protoimpl.MessageState                     `protogen:"open.v1"`
	Code          RpcObjectCreateObjectTypeResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcObjectCreateObjectTypeResponseErrorCode" json:"code,omitempty"`
	Description   string                                     `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectCreateObjectTypeResponseError) Reset() {
	*x = RpcObjectCreateObjectTypeResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[351]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectCreateObjectTypeResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectCreateObjectTypeResponseError) ProtoMessage() {}

func (x *RpcObjectCreateObjectTypeResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[351]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectCreateObjectTypeResponseError.ProtoReflect.Descriptor instead.
func (*RpcObjectCreateObjectTypeResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 8, 1, 0}
}

func (x *RpcObjectCreateObjectTypeResponseError) GetCode() RpcObjectCreateObjectTypeResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcObjectCreateObjectTypeResponseError_NULL
}

func (x *RpcObjectCreateObjectTypeResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcObjectCreateFromUrlRequest struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	SpaceId             string                 `protobuf:"bytes,1,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	ObjectTypeUniqueKey string                 `protobuf:"bytes,2,opt,name=objectTypeUniqueKey,proto3" json:"objectTypeUniqueKey,omitempty"`
	Url                 string                 `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	Details             *structpb.Struct       `protobuf:"bytes,4,opt,name=details,proto3" json:"details,omitempty"`
	AddPageContent      bool                   `protobuf:"varint,5,opt,name=addPageContent,proto3" json:"addPageContent,omitempty"`
	WithChat            bool                   `protobuf:"varint,6,opt,name=withChat,proto3" json:"withChat,omitempty"`
	TemplateId          string                 `protobuf:"bytes,7,opt,name=templateId,proto3" json:"templateId,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *RpcObjectCreateFromUrlRequest) Reset() {
	*x = RpcObjectCreateFromUrlRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[352]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectCreateFromUrlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectCreateFromUrlRequest) ProtoMessage() {}

func (x *RpcObjectCreateFromUrlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[352]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectCreateFromUrlRequest.ProtoReflect.Descriptor instead.
func (*RpcObjectCreateFromUrlRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 9, 0}
}

func (x *RpcObjectCreateFromUrlRequest) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *RpcObjectCreateFromUrlRequest) GetObjectTypeUniqueKey() string {
	if x != nil {
		return x.ObjectTypeUniqueKey
	}
	return ""
}

func (x *RpcObjectCreateFromUrlRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *RpcObjectCreateFromUrlRequest) GetDetails() *structpb.Struct {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *RpcObjectCreateFromUrlRequest) GetAddPageContent() bool {
	if x != nil {
		return x.AddPageContent
	}
	return false
}

func (x *RpcObjectCreateFromUrlRequest) GetWithChat() bool {
	if x != nil {
		return x.WithChat
	}
	return false
}

func (x *RpcObjectCreateFromUrlRequest) GetTemplateId() string {
	if x != nil {
		return x.TemplateId
	}
	return ""
}

type RpcObjectCreateFromUrlResponse struct {
	state         protoimpl.MessageState               `protogen:"open.v1"`
	Error         *RpcObjectCreateFromUrlResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	ObjectId      string                               `protobuf:"bytes,2,opt,name=objectId,proto3" json:"objectId,omitempty"`
	Details       *structpb.Struct                     `protobuf:"bytes,3,opt,name=details,proto3" json:"details,omitempty"`
	ChatId        string                               `protobuf:"bytes,4,opt,name=chatId,proto3" json:"chatId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectCreateFromUrlResponse) Reset() {
	*x = RpcObjectCreateFromUrlResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[353]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectCreateFromUrlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectCreateFromUrlResponse) ProtoMessage() {}

func (x *RpcObjectCreateFromUrlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[353]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectCreateFromUrlResponse.ProtoReflect.Descriptor instead.
func (*RpcObjectCreateFromUrlResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 9, 1}
}

func (x *RpcObjectCreateFromUrlResponse) GetError() *RpcObjectCreateFromUrlResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcObjectCreateFromUrlResponse) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

func (x *RpcObjectCreateFromUrlResponse) GetDetails() *structpb.Struct {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *RpcObjectCreateFromUrlResponse) GetChatId() string {
	if x != nil {
		return x.ChatId
	}
	return ""
}

type RpcObjectCreateFromUrlResponseError struct {
	state         protoimpl.MessageState                  `protogen:"open.v1"`
	Code          RpcObjectCreateFromUrlResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcObjectCreateFromUrlResponseErrorCode" json:"code,omitempty"`
	Description   string                                  `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectCreateFromUrlResponseError) Reset() {
	*x = RpcObjectCreateFromUrlResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[354]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectCreateFromUrlResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectCreateFromUrlResponseError) ProtoMessage() {}

func (x *RpcObjectCreateFromUrlResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[354]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectCreateFromUrlResponseError.ProtoReflect.Descriptor instead.
func (*RpcObjectCreateFromUrlResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 9, 1, 0}
}

func (x *RpcObjectCreateFromUrlResponseError) GetCode() RpcObjectCreateFromUrlResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcObjectCreateFromUrlResponseError_NULL
}

func (x *RpcObjectCreateFromUrlResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcObjectChatAddRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ObjectId      string                 `protobuf:"bytes,1,opt,name=objectId,proto3" json:"objectId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectChatAddRequest) Reset() {
	*x = RpcObjectChatAddRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[355]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectChatAddRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectChatAddRequest) ProtoMessage() {}

func (x *RpcObjectChatAddRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[355]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectChatAddRequest.ProtoReflect.Descriptor instead.
func (*RpcObjectChatAddRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 10, 0}
}

func (x *RpcObjectChatAddRequest) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

type RpcObjectChatAddResponse struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	Error         *RpcObjectChatAddResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	ChatId        string                         `protobuf:"bytes,2,opt,name=chatId,proto3" json:"chatId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectChatAddResponse) Reset() {
	*x = RpcObjectChatAddResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[356]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectChatAddResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectChatAddResponse) ProtoMessage() {}

func (x *RpcObjectChatAddResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[356]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectChatAddResponse.ProtoReflect.Descriptor instead.
func (*RpcObjectChatAddResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 10, 1}
}

func (x *RpcObjectChatAddResponse) GetError() *RpcObjectChatAddResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcObjectChatAddResponse) GetChatId() string {
	if x != nil {
		return x.ChatId
	}
	return ""
}

type RpcObjectChatAddResponseError struct {
	state         protoimpl.MessageState            `protogen:"open.v1"`
	Code          RpcObjectChatAddResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcObjectChatAddResponseErrorCode" json:"code,omitempty"`
	Description   string                            `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectChatAddResponseError) Reset() {
	*x = RpcObjectChatAddResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[357]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectChatAddResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectChatAddResponseError) ProtoMessage() {}

func (x *RpcObjectChatAddResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[357]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectChatAddResponseError.ProtoReflect.Descriptor instead.
func (*RpcObjectChatAddResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 10, 1, 0}
}

func (x *RpcObjectChatAddResponseError) GetCode() RpcObjectChatAddResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcObjectChatAddResponseError_NULL
}

func (x *RpcObjectChatAddResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcObjectBookmarkFetchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextId     string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	Url           string                 `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectBookmarkFetchRequest) Reset() {
	*x = RpcObjectBookmarkFetchRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[358]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectBookmarkFetchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectBookmarkFetchRequest) ProtoMessage() {}

func (x *RpcObjectBookmarkFetchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[358]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectBookmarkFetchRequest.ProtoReflect.Descriptor instead.
func (*RpcObjectBookmarkFetchRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 11, 0}
}

func (x *RpcObjectBookmarkFetchRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcObjectBookmarkFetchRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type RpcObjectBookmarkFetchResponse struct {
	state         protoimpl.MessageState               `protogen:"open.v1"`
	Error         *RpcObjectBookmarkFetchResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectBookmarkFetchResponse) Reset() {
	*x = RpcObjectBookmarkFetchResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[359]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectBookmarkFetchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectBookmarkFetchResponse) ProtoMessage() {}

func (x *RpcObjectBookmarkFetchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[359]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectBookmarkFetchResponse.ProtoReflect.Descriptor instead.
func (*RpcObjectBookmarkFetchResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 11, 1}
}

func (x *RpcObjectBookmarkFetchResponse) GetError() *RpcObjectBookmarkFetchResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

type RpcObjectBookmarkFetchResponseError struct {
	state         protoimpl.MessageState                  `protogen:"open.v1"`
	Code          RpcObjectBookmarkFetchResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcObjectBookmarkFetchResponseErrorCode" json:"code,omitempty"`
	Description   string                                  `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectBookmarkFetchResponseError) Reset() {
	*x = RpcObjectBookmarkFetchResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[360]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectBookmarkFetchResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectBookmarkFetchResponseError) ProtoMessage() {}

func (x *RpcObjectBookmarkFetchResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[360]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectBookmarkFetchResponseError.ProtoReflect.Descriptor instead.
func (*RpcObjectBookmarkFetchResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 11, 1, 0}
}

func (x *RpcObjectBookmarkFetchResponseError) GetCode() RpcObjectBookmarkFetchResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcObjectBookmarkFetchResponseError_NULL
}

func (x *RpcObjectBookmarkFetchResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcObjectToBookmarkRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextId     string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	Url           string                 `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectToBookmarkRequest) Reset() {
	*x = RpcObjectToBookmarkRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[361]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectToBookmarkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectToBookmarkRequest) ProtoMessage() {}

func (x *RpcObjectToBookmarkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[361]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectToBookmarkRequest.ProtoReflect.Descriptor instead.
func (*RpcObjectToBookmarkRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 12, 0}
}

func (x *RpcObjectToBookmarkRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcObjectToBookmarkRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type RpcObjectToBookmarkResponse struct {
	state         protoimpl.MessageState            `protogen:"open.v1"`
	Error         *RpcObjectToBookmarkResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	ObjectId      string                            `protobuf:"bytes,2,opt,name=objectId,proto3" json:"objectId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectToBookmarkResponse) Reset() {
	*x = RpcObjectToBookmarkResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[362]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectToBookmarkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectToBookmarkResponse) ProtoMessage() {}

func (x *RpcObjectToBookmarkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[362]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectToBookmarkResponse.ProtoReflect.Descriptor instead.
func (*RpcObjectToBookmarkResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 12, 1}
}

func (x *RpcObjectToBookmarkResponse) GetError() *RpcObjectToBookmarkResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcObjectToBookmarkResponse) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

type RpcObjectToBookmarkResponseError struct {
	state         protoimpl.MessageState               `protogen:"open.v1"`
	Code          RpcObjectToBookmarkResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcObjectToBookmarkResponseErrorCode" json:"code,omitempty"`
	Description   string                               `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectToBookmarkResponseError) Reset() {
	*x = RpcObjectToBookmarkResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[363]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectToBookmarkResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectToBookmarkResponseError) ProtoMessage() {}

func (x *RpcObjectToBookmarkResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[363]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectToBookmarkResponseError.ProtoReflect.Descriptor instead.
func (*RpcObjectToBookmarkResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 12, 1, 0}
}

func (x *RpcObjectToBookmarkResponseError) GetCode() RpcObjectToBookmarkResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcObjectToBookmarkResponseError_NULL
}

func (x *RpcObjectToBookmarkResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcObjectDuplicateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextId     string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectDuplicateRequest) Reset() {
	*x = RpcObjectDuplicateRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[364]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectDuplicateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectDuplicateRequest) ProtoMessage() {}

func (x *RpcObjectDuplicateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[364]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectDuplicateRequest.ProtoReflect.Descriptor instead.
func (*RpcObjectDuplicateRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 13, 0}
}

func (x *RpcObjectDuplicateRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

type RpcObjectDuplicateResponse struct {
	state protoimpl.MessageState           `protogen:"open.v1"`
	Error *RpcObjectDuplicateResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	// created template id
	Id            string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectDuplicateResponse) Reset() {
	*x = RpcObjectDuplicateResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[365]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectDuplicateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectDuplicateResponse) ProtoMessage() {}

func (x *RpcObjectDuplicateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[365]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectDuplicateResponse.ProtoReflect.Descriptor instead.
func (*RpcObjectDuplicateResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 13, 1}
}

func (x *RpcObjectDuplicateResponse) GetError() *RpcObjectDuplicateResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcObjectDuplicateResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type RpcObjectDuplicateResponseError struct {
	state         protoimpl.MessageState              `protogen:"open.v1"`
	Code          RpcObjectDuplicateResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcObjectDuplicateResponseErrorCode" json:"code,omitempty"`
	Description   string                              `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectDuplicateResponseError) Reset() {
	*x = RpcObjectDuplicateResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[366]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectDuplicateResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectDuplicateResponseError) ProtoMessage() {}

func (x *RpcObjectDuplicateResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[366]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectDuplicateResponseError.ProtoReflect.Descriptor instead.
func (*RpcObjectDuplicateResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 13, 1, 0}
}

func (x *RpcObjectDuplicateResponseError) GetCode() RpcObjectDuplicateResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcObjectDuplicateResponseError_NULL
}

func (x *RpcObjectDuplicateResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcObjectOpenBreadcrumbsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextId     string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"` // deprecated, GO-1926
	TraceId       string                 `protobuf:"bytes,2,opt,name=traceId,proto3" json:"traceId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectOpenBreadcrumbsRequest) Reset() {
	*x = RpcObjectOpenBreadcrumbsRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[367]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectOpenBreadcrumbsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectOpenBreadcrumbsRequest) ProtoMessage() {}

func (x *RpcObjectOpenBreadcrumbsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[367]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectOpenBreadcrumbsRequest.ProtoReflect.Descriptor instead.
func (*RpcObjectOpenBreadcrumbsRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 14, 0}
}

func (x *RpcObjectOpenBreadcrumbsRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcObjectOpenBreadcrumbsRequest) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

type RpcObjectOpenBreadcrumbsResponse struct {
	state         protoimpl.MessageState                 `protogen:"open.v1"`
	Error         *RpcObjectOpenBreadcrumbsResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	ObjectId      string                                 `protobuf:"bytes,2,opt,name=objectId,proto3" json:"objectId,omitempty"`
	Event         *ResponseEvent                         `protobuf:"bytes,3,opt,name=event,proto3" json:"event,omitempty"`
	ObjectView    *model.ObjectView                      `protobuf:"bytes,4,opt,name=objectView,proto3" json:"objectView,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectOpenBreadcrumbsResponse) Reset() {
	*x = RpcObjectOpenBreadcrumbsResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[368]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectOpenBreadcrumbsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectOpenBreadcrumbsResponse) ProtoMessage() {}

func (x *RpcObjectOpenBreadcrumbsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[368]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectOpenBreadcrumbsResponse.ProtoReflect.Descriptor instead.
func (*RpcObjectOpenBreadcrumbsResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 14, 1}
}

func (x *RpcObjectOpenBreadcrumbsResponse) GetError() *RpcObjectOpenBreadcrumbsResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcObjectOpenBreadcrumbsResponse) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

func (x *RpcObjectOpenBreadcrumbsResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

func (x *RpcObjectOpenBreadcrumbsResponse) GetObjectView() *model.ObjectView {
	if x != nil {
		return x.ObjectView
	}
	return nil
}

type RpcObjectOpenBreadcrumbsResponseError struct {
	state         protoimpl.MessageState                    `protogen:"open.v1"`
	Code          RpcObjectOpenBreadcrumbsResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcObjectOpenBreadcrumbsResponseErrorCode" json:"code,omitempty"`
	Description   string                                    `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectOpenBreadcrumbsResponseError) Reset() {
	*x = RpcObjectOpenBreadcrumbsResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[369]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectOpenBreadcrumbsResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectOpenBreadcrumbsResponseError) ProtoMessage() {}

func (x *RpcObjectOpenBreadcrumbsResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[369]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectOpenBreadcrumbsResponseError.ProtoReflect.Descriptor instead.
func (*RpcObjectOpenBreadcrumbsResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 14, 1, 0}
}

func (x *RpcObjectOpenBreadcrumbsResponseError) GetCode() RpcObjectOpenBreadcrumbsResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcObjectOpenBreadcrumbsResponseError_NULL
}

func (x *RpcObjectOpenBreadcrumbsResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcObjectSetBreadcrumbsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BreadcrumbsId string                 `protobuf:"bytes,1,opt,name=breadcrumbsId,proto3" json:"breadcrumbsId,omitempty"`
	Ids           []string               `protobuf:"bytes,2,rep,name=ids,proto3" json:"ids,omitempty"` // page ids
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectSetBreadcrumbsRequest) Reset() {
	*x = RpcObjectSetBreadcrumbsRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[370]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectSetBreadcrumbsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectSetBreadcrumbsRequest) ProtoMessage() {}

func (x *RpcObjectSetBreadcrumbsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[370]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectSetBreadcrumbsRequest.ProtoReflect.Descriptor instead.
func (*RpcObjectSetBreadcrumbsRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 15, 0}
}

func (x *RpcObjectSetBreadcrumbsRequest) GetBreadcrumbsId() string {
	if x != nil {
		return x.BreadcrumbsId
	}
	return ""
}

func (x *RpcObjectSetBreadcrumbsRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

type RpcObjectSetBreadcrumbsResponse struct {
	state         protoimpl.MessageState                `protogen:"open.v1"`
	Error         *RpcObjectSetBreadcrumbsResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent                        `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectSetBreadcrumbsResponse) Reset() {
	*x = RpcObjectSetBreadcrumbsResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[371]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectSetBreadcrumbsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectSetBreadcrumbsResponse) ProtoMessage() {}

func (x *RpcObjectSetBreadcrumbsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[371]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectSetBreadcrumbsResponse.ProtoReflect.Descriptor instead.
func (*RpcObjectSetBreadcrumbsResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 15, 1}
}

func (x *RpcObjectSetBreadcrumbsResponse) GetError() *RpcObjectSetBreadcrumbsResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcObjectSetBreadcrumbsResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcObjectSetBreadcrumbsResponseError struct {
	state         protoimpl.MessageState                   `protogen:"open.v1"`
	Code          RpcObjectSetBreadcrumbsResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcObjectSetBreadcrumbsResponseErrorCode" json:"code,omitempty"`
	Description   string                                   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectSetBreadcrumbsResponseError) Reset() {
	*x = RpcObjectSetBreadcrumbsResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[372]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectSetBreadcrumbsResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectSetBreadcrumbsResponseError) ProtoMessage() {}

func (x *RpcObjectSetBreadcrumbsResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[372]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectSetBreadcrumbsResponseError.ProtoReflect.Descriptor instead.
func (*RpcObjectSetBreadcrumbsResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 15, 1, 0}
}

func (x *RpcObjectSetBreadcrumbsResponseError) GetCode() RpcObjectSetBreadcrumbsResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcObjectSetBreadcrumbsResponseError_NULL
}

func (x *RpcObjectSetBreadcrumbsResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcObjectShareByLinkRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ObjectId      string                 `protobuf:"bytes,1,opt,name=objectId,proto3" json:"objectId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectShareByLinkRequest) Reset() {
	*x = RpcObjectShareByLinkRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[373]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectShareByLinkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectShareByLinkRequest) ProtoMessage() {}

func (x *RpcObjectShareByLinkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[373]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectShareByLinkRequest.ProtoReflect.Descriptor instead.
func (*RpcObjectShareByLinkRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 16, 0}
}

func (x *RpcObjectShareByLinkRequest) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

type RpcObjectShareByLinkResponse struct {
	state         protoimpl.MessageState             `protogen:"open.v1"`
	Link          string                             `protobuf:"bytes,1,opt,name=link,proto3" json:"link,omitempty"`
	Error         *RpcObjectShareByLinkResponseError `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectShareByLinkResponse) Reset() {
	*x = RpcObjectShareByLinkResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[374]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectShareByLinkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectShareByLinkResponse) ProtoMessage() {}

func (x *RpcObjectShareByLinkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[374]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectShareByLinkResponse.ProtoReflect.Descriptor instead.
func (*RpcObjectShareByLinkResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 16, 1}
}

func (x *RpcObjectShareByLinkResponse) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *RpcObjectShareByLinkResponse) GetError() *RpcObjectShareByLinkResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

type RpcObjectShareByLinkResponseError struct {
	state         protoimpl.MessageState                `protogen:"open.v1"`
	Code          RpcObjectShareByLinkResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcObjectShareByLinkResponseErrorCode" json:"code,omitempty"`
	Description   string                                `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectShareByLinkResponseError) Reset() {
	*x = RpcObjectShareByLinkResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[375]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectShareByLinkResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectShareByLinkResponseError) ProtoMessage() {}

func (x *RpcObjectShareByLinkResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[375]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectShareByLinkResponseError.ProtoReflect.Descriptor instead.
func (*RpcObjectShareByLinkResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 16, 1, 0}
}

func (x *RpcObjectShareByLinkResponseError) GetCode() RpcObjectShareByLinkResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcObjectShareByLinkResponseError_NULL
}

func (x *RpcObjectShareByLinkResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcObjectSearchRequest struct {
	state    protoimpl.MessageState              `protogen:"open.v1"`
	SpaceId  string                              `protobuf:"bytes,8,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	Filters  []*model.BlockContentDataviewFilter `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty"`
	Sorts    []*model.BlockContentDataviewSort   `protobuf:"bytes,2,rep,name=sorts,proto3" json:"sorts,omitempty"`
	FullText string                              `protobuf:"bytes,3,opt,name=fullText,proto3" json:"fullText,omitempty"`
	Offset   int32                               `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit    int32                               `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	// additional filter by objectTypes
	ObjectTypeFilter []string `protobuf:"bytes,6,rep,name=objectTypeFilter,proto3" json:"objectTypeFilter,omitempty"` // DEPRECATED, GO-1926
	// needed keys in details for return, when empty - will return all
	Keys          []string `protobuf:"bytes,7,rep,name=keys,proto3" json:"keys,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectSearchRequest) Reset() {
	*x = RpcObjectSearchRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[376]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectSearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectSearchRequest) ProtoMessage() {}

func (x *RpcObjectSearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[376]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectSearchRequest.ProtoReflect.Descriptor instead.
func (*RpcObjectSearchRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 17, 0}
}

func (x *RpcObjectSearchRequest) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *RpcObjectSearchRequest) GetFilters() []*model.BlockContentDataviewFilter {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *RpcObjectSearchRequest) GetSorts() []*model.BlockContentDataviewSort {
	if x != nil {
		return x.Sorts
	}
	return nil
}

func (x *RpcObjectSearchRequest) GetFullText() string {
	if x != nil {
		return x.FullText
	}
	return ""
}

func (x *RpcObjectSearchRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *RpcObjectSearchRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *RpcObjectSearchRequest) GetObjectTypeFilter() []string {
	if x != nil {
		return x.ObjectTypeFilter
	}
	return nil
}

func (x *RpcObjectSearchRequest) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

type RpcObjectSearchResponse struct {
	state         protoimpl.MessageState        `protogen:"open.v1"`
	Error         *RpcObjectSearchResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Records       []*structpb.Struct            `protobuf:"bytes,2,rep,name=records,proto3" json:"records,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectSearchResponse) Reset() {
	*x = RpcObjectSearchResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[377]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectSearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectSearchResponse) ProtoMessage() {}

func (x *RpcObjectSearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[377]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectSearchResponse.ProtoReflect.Descriptor instead.
func (*RpcObjectSearchResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 17, 1}
}

func (x *RpcObjectSearchResponse) GetError() *RpcObjectSearchResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcObjectSearchResponse) GetRecords() []*structpb.Struct {
	if x != nil {
		return x.Records
	}
	return nil
}

type RpcObjectSearchResponseError struct {
	state         protoimpl.MessageState           `protogen:"open.v1"`
	Code          RpcObjectSearchResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcObjectSearchResponseErrorCode" json:"code,omitempty"`
	Description   string                           `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectSearchResponseError) Reset() {
	*x = RpcObjectSearchResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[378]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectSearchResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectSearchResponseError) ProtoMessage() {}

func (x *RpcObjectSearchResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[378]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectSearchResponseError.ProtoReflect.Descriptor instead.
func (*RpcObjectSearchResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 17, 1, 0}
}

func (x *RpcObjectSearchResponseError) GetCode() RpcObjectSearchResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcObjectSearchResponseError_NULL
}

func (x *RpcObjectSearchResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcObjectSearchWithMetaRequest struct {
	state    protoimpl.MessageState              `protogen:"open.v1"`
	SpaceId  string                              `protobuf:"bytes,11,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	Filters  []*model.BlockContentDataviewFilter `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty"`
	Sorts    []*model.BlockContentDataviewSort   `protobuf:"bytes,2,rep,name=sorts,proto3" json:"sorts,omitempty"`
	FullText string                              `protobuf:"bytes,3,opt,name=fullText,proto3" json:"fullText,omitempty"`
	Offset   int32                               `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit    int32                               `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	// additional filter by objectTypes
	ObjectTypeFilter []string `protobuf:"bytes,6,rep,name=objectTypeFilter,proto3" json:"objectTypeFilter,omitempty"` // DEPRECATED, GO-1926
	// needed keys in details for return, when empty - will return all
	Keys                                []string `protobuf:"bytes,7,rep,name=keys,proto3" json:"keys,omitempty"`
	ReturnMeta                          bool     `protobuf:"varint,8,opt,name=returnMeta,proto3" json:"returnMeta,omitempty"`                                                    // add ResultMeta to each result
	ReturnMetaRelationDetails           bool     `protobuf:"varint,9,opt,name=returnMetaRelationDetails,proto3" json:"returnMetaRelationDetails,omitempty"`                      // add relation option details to meta
	ReturnHTMLHighlightsInsteadOfRanges bool     `protobuf:"varint,10,opt,name=returnHTMLHighlightsInsteadOfRanges,proto3" json:"returnHTMLHighlightsInsteadOfRanges,omitempty"` //DEPRECATED
	unknownFields                       protoimpl.UnknownFields
	sizeCache                           protoimpl.SizeCache
}

func (x *RpcObjectSearchWithMetaRequest) Reset() {
	*x = RpcObjectSearchWithMetaRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[379]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectSearchWithMetaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectSearchWithMetaRequest) ProtoMessage() {}

func (x *RpcObjectSearchWithMetaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[379]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectSearchWithMetaRequest.ProtoReflect.Descriptor instead.
func (*RpcObjectSearchWithMetaRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 18, 0}
}

func (x *RpcObjectSearchWithMetaRequest) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *RpcObjectSearchWithMetaRequest) GetFilters() []*model.BlockContentDataviewFilter {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *RpcObjectSearchWithMetaRequest) GetSorts() []*model.BlockContentDataviewSort {
	if x != nil {
		return x.Sorts
	}
	return nil
}

func (x *RpcObjectSearchWithMetaRequest) GetFullText() string {
	if x != nil {
		return x.FullText
	}
	return ""
}

func (x *RpcObjectSearchWithMetaRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *RpcObjectSearchWithMetaRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *RpcObjectSearchWithMetaRequest) GetObjectTypeFilter() []string {
	if x != nil {
		return x.ObjectTypeFilter
	}
	return nil
}

func (x *RpcObjectSearchWithMetaRequest) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *RpcObjectSearchWithMetaRequest) GetReturnMeta() bool {
	if x != nil {
		return x.ReturnMeta
	}
	return false
}

func (x *RpcObjectSearchWithMetaRequest) GetReturnMetaRelationDetails() bool {
	if x != nil {
		return x.ReturnMetaRelationDetails
	}
	return false
}

func (x *RpcObjectSearchWithMetaRequest) GetReturnHTMLHighlightsInsteadOfRanges() bool {
	if x != nil {
		return x.ReturnHTMLHighlightsInsteadOfRanges
	}
	return false
}

type RpcObjectSearchWithMetaResponse struct {
	state         protoimpl.MessageState                `protogen:"open.v1"`
	Error         *RpcObjectSearchWithMetaResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Results       []*model.SearchResult                 `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectSearchWithMetaResponse) Reset() {
	*x = RpcObjectSearchWithMetaResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[380]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectSearchWithMetaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectSearchWithMetaResponse) ProtoMessage() {}

func (x *RpcObjectSearchWithMetaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[380]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectSearchWithMetaResponse.ProtoReflect.Descriptor instead.
func (*RpcObjectSearchWithMetaResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 18, 1}
}

func (x *RpcObjectSearchWithMetaResponse) GetError() *RpcObjectSearchWithMetaResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcObjectSearchWithMetaResponse) GetResults() []*model.SearchResult {
	if x != nil {
		return x.Results
	}
	return nil
}

type RpcObjectSearchWithMetaResponseError struct {
	state         protoimpl.MessageState                   `protogen:"open.v1"`
	Code          RpcObjectSearchWithMetaResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcObjectSearchWithMetaResponseErrorCode" json:"code,omitempty"`
	Description   string                                   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectSearchWithMetaResponseError) Reset() {
	*x = RpcObjectSearchWithMetaResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[381]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectSearchWithMetaResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectSearchWithMetaResponseError) ProtoMessage() {}

func (x *RpcObjectSearchWithMetaResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[381]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectSearchWithMetaResponseError.ProtoReflect.Descriptor instead.
func (*RpcObjectSearchWithMetaResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 18, 1, 0}
}

func (x *RpcObjectSearchWithMetaResponseError) GetCode() RpcObjectSearchWithMetaResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcObjectSearchWithMetaResponseError_NULL
}

func (x *RpcObjectSearchWithMetaResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcObjectGraphRequest struct {
	state   protoimpl.MessageState              `protogen:"open.v1"`
	Filters []*model.BlockContentDataviewFilter `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty"`
	Limit   int32                               `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	// additional filter by objectTypes
	ObjectTypeFilter []string `protobuf:"bytes,3,rep,name=objectTypeFilter,proto3" json:"objectTypeFilter,omitempty"` // DEPRECATED, GO-1926
	Keys             []string `protobuf:"bytes,4,rep,name=keys,proto3" json:"keys,omitempty"`
	SpaceId          string   `protobuf:"bytes,5,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	CollectionId     string   `protobuf:"bytes,6,opt,name=collectionId,proto3" json:"collectionId,omitempty"`
	SetSource        []string `protobuf:"bytes,7,rep,name=setSource,proto3" json:"setSource,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *RpcObjectGraphRequest) Reset() {
	*x = RpcObjectGraphRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[382]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectGraphRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectGraphRequest) ProtoMessage() {}

func (x *RpcObjectGraphRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[382]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectGraphRequest.ProtoReflect.Descriptor instead.
func (*RpcObjectGraphRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 19, 0}
}

func (x *RpcObjectGraphRequest) GetFilters() []*model.BlockContentDataviewFilter {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *RpcObjectGraphRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *RpcObjectGraphRequest) GetObjectTypeFilter() []string {
	if x != nil {
		return x.ObjectTypeFilter
	}
	return nil
}

func (x *RpcObjectGraphRequest) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *RpcObjectGraphRequest) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *RpcObjectGraphRequest) GetCollectionId() string {
	if x != nil {
		return x.CollectionId
	}
	return ""
}

func (x *RpcObjectGraphRequest) GetSetSource() []string {
	if x != nil {
		return x.SetSource
	}
	return nil
}

type RpcObjectGraphEdge struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Source        string                 `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	Target        string                 `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Type          RpcObjectGraphEdgeType `protobuf:"varint,4,opt,name=type,proto3,enum=anytype.RpcObjectGraphEdgeType" json:"type,omitempty"`
	Description   string                 `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	IconImage     string                 `protobuf:"bytes,6,opt,name=iconImage,proto3" json:"iconImage,omitempty"`
	IconEmoji     string                 `protobuf:"bytes,7,opt,name=iconEmoji,proto3" json:"iconEmoji,omitempty"`
	Hidden        bool                   `protobuf:"varint,8,opt,name=hidden,proto3" json:"hidden,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectGraphEdge) Reset() {
	*x = RpcObjectGraphEdge{}
	mi := &file_pb_protos_commands_proto_msgTypes[383]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectGraphEdge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectGraphEdge) ProtoMessage() {}

func (x *RpcObjectGraphEdge) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[383]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectGraphEdge.ProtoReflect.Descriptor instead.
func (*RpcObjectGraphEdge) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 19, 1}
}

func (x *RpcObjectGraphEdge) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *RpcObjectGraphEdge) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *RpcObjectGraphEdge) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RpcObjectGraphEdge) GetType() RpcObjectGraphEdgeType {
	if x != nil {
		return x.Type
	}
	return RpcObjectGraphEdge_Link
}

func (x *RpcObjectGraphEdge) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *RpcObjectGraphEdge) GetIconImage() string {
	if x != nil {
		return x.IconImage
	}
	return ""
}

func (x *RpcObjectGraphEdge) GetIconEmoji() string {
	if x != nil {
		return x.IconEmoji
	}
	return ""
}

func (x *RpcObjectGraphEdge) GetHidden() bool {
	if x != nil {
		return x.Hidden
	}
	return false
}

type RpcObjectGraphResponse struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	Error         *RpcObjectGraphResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Nodes         []*structpb.Struct           `protobuf:"bytes,2,rep,name=nodes,proto3" json:"nodes,omitempty"`
	Edges         []*RpcObjectGraphEdge        `protobuf:"bytes,3,rep,name=edges,proto3" json:"edges,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectGraphResponse) Reset() {
	*x = RpcObjectGraphResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[384]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectGraphResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectGraphResponse) ProtoMessage() {}

func (x *RpcObjectGraphResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[384]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectGraphResponse.ProtoReflect.Descriptor instead.
func (*RpcObjectGraphResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 19, 2}
}

func (x *RpcObjectGraphResponse) GetError() *RpcObjectGraphResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcObjectGraphResponse) GetNodes() []*structpb.Struct {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *RpcObjectGraphResponse) GetEdges() []*RpcObjectGraphEdge {
	if x != nil {
		return x.Edges
	}
	return nil
}

type RpcObjectGraphResponseError struct {
	state         protoimpl.MessageState          `protogen:"open.v1"`
	Code          RpcObjectGraphResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcObjectGraphResponseErrorCode" json:"code,omitempty"`
	Description   string                          `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectGraphResponseError) Reset() {
	*x = RpcObjectGraphResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[385]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectGraphResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectGraphResponseError) ProtoMessage() {}

func (x *RpcObjectGraphResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[385]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectGraphResponseError.ProtoReflect.Descriptor instead.
func (*RpcObjectGraphResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 19, 2, 0}
}

func (x *RpcObjectGraphResponseError) GetCode() RpcObjectGraphResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcObjectGraphResponseError_NULL
}

func (x *RpcObjectGraphResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcObjectSearchSubscribeRequest struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	SpaceId string                 `protobuf:"bytes,15,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	// (optional) subscription identifier
	// client can provide some string or middleware will generate it automatically
	// if subId is already registered on middleware, the new query will replace previous subscription
	SubId string `protobuf:"bytes,1,opt,name=subId,proto3" json:"subId,omitempty"`
	// filters
	Filters []*model.BlockContentDataviewFilter `protobuf:"bytes,2,rep,name=filters,proto3" json:"filters,omitempty"`
	// sorts
	Sorts []*model.BlockContentDataviewSort `protobuf:"bytes,3,rep,name=sorts,proto3" json:"sorts,omitempty"`
	// results limit
	Limit int64 `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	// initial offset; middleware will find afterId
	Offset int64 `protobuf:"varint,6,opt,name=offset,proto3" json:"offset,omitempty"`
	// (required)  needed keys in details for return, for object fields mw will return (and subscribe) objects as dependent
	Keys []string `protobuf:"bytes,7,rep,name=keys,proto3" json:"keys,omitempty"`
	// (optional) pagination: middleware will return results after given id
	AfterId string `protobuf:"bytes,8,opt,name=afterId,proto3" json:"afterId,omitempty"`
	// (optional) pagination: middleware will return results before given id
	BeforeId string   `protobuf:"bytes,9,opt,name=beforeId,proto3" json:"beforeId,omitempty"`
	Source   []string `protobuf:"bytes,10,rep,name=source,proto3" json:"source,omitempty"`
	// disable dependent subscription
	NoDepSubscription bool   `protobuf:"varint,13,opt,name=noDepSubscription,proto3" json:"noDepSubscription,omitempty"`
	CollectionId      string `protobuf:"bytes,14,opt,name=collectionId,proto3" json:"collectionId,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *RpcObjectSearchSubscribeRequest) Reset() {
	*x = RpcObjectSearchSubscribeRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[386]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectSearchSubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectSearchSubscribeRequest) ProtoMessage() {}

func (x *RpcObjectSearchSubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[386]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectSearchSubscribeRequest.ProtoReflect.Descriptor instead.
func (*RpcObjectSearchSubscribeRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 20, 0}
}

func (x *RpcObjectSearchSubscribeRequest) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *RpcObjectSearchSubscribeRequest) GetSubId() string {
	if x != nil {
		return x.SubId
	}
	return ""
}

func (x *RpcObjectSearchSubscribeRequest) GetFilters() []*model.BlockContentDataviewFilter {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *RpcObjectSearchSubscribeRequest) GetSorts() []*model.BlockContentDataviewSort {
	if x != nil {
		return x.Sorts
	}
	return nil
}

func (x *RpcObjectSearchSubscribeRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *RpcObjectSearchSubscribeRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *RpcObjectSearchSubscribeRequest) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *RpcObjectSearchSubscribeRequest) GetAfterId() string {
	if x != nil {
		return x.AfterId
	}
	return ""
}

func (x *RpcObjectSearchSubscribeRequest) GetBeforeId() string {
	if x != nil {
		return x.BeforeId
	}
	return ""
}

func (x *RpcObjectSearchSubscribeRequest) GetSource() []string {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *RpcObjectSearchSubscribeRequest) GetNoDepSubscription() bool {
	if x != nil {
		return x.NoDepSubscription
	}
	return false
}

func (x *RpcObjectSearchSubscribeRequest) GetCollectionId() string {
	if x != nil {
		return x.CollectionId
	}
	return ""
}

type RpcObjectSearchSubscribeResponse struct {
	state         protoimpl.MessageState                 `protogen:"open.v1"`
	Error         *RpcObjectSearchSubscribeResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Records       []*structpb.Struct                     `protobuf:"bytes,2,rep,name=records,proto3" json:"records,omitempty"`
	Dependencies  []*structpb.Struct                     `protobuf:"bytes,3,rep,name=dependencies,proto3" json:"dependencies,omitempty"`
	SubId         string                                 `protobuf:"bytes,4,opt,name=subId,proto3" json:"subId,omitempty"`
	Counters      *EventObjectSubscriptionCounters       `protobuf:"bytes,5,opt,name=counters,proto3" json:"counters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectSearchSubscribeResponse) Reset() {
	*x = RpcObjectSearchSubscribeResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[387]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectSearchSubscribeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectSearchSubscribeResponse) ProtoMessage() {}

func (x *RpcObjectSearchSubscribeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[387]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectSearchSubscribeResponse.ProtoReflect.Descriptor instead.
func (*RpcObjectSearchSubscribeResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 20, 1}
}

func (x *RpcObjectSearchSubscribeResponse) GetError() *RpcObjectSearchSubscribeResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcObjectSearchSubscribeResponse) GetRecords() []*structpb.Struct {
	if x != nil {
		return x.Records
	}
	return nil
}

func (x *RpcObjectSearchSubscribeResponse) GetDependencies() []*structpb.Struct {
	if x != nil {
		return x.Dependencies
	}
	return nil
}

func (x *RpcObjectSearchSubscribeResponse) GetSubId() string {
	if x != nil {
		return x.SubId
	}
	return ""
}

func (x *RpcObjectSearchSubscribeResponse) GetCounters() *EventObjectSubscriptionCounters {
	if x != nil {
		return x.Counters
	}
	return nil
}

type RpcObjectSearchSubscribeResponseError struct {
	state         protoimpl.MessageState                    `protogen:"open.v1"`
	Code          RpcObjectSearchSubscribeResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcObjectSearchSubscribeResponseErrorCode" json:"code,omitempty"`
	Description   string                                    `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectSearchSubscribeResponseError) Reset() {
	*x = RpcObjectSearchSubscribeResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[388]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectSearchSubscribeResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectSearchSubscribeResponseError) ProtoMessage() {}

func (x *RpcObjectSearchSubscribeResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[388]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectSearchSubscribeResponseError.ProtoReflect.Descriptor instead.
func (*RpcObjectSearchSubscribeResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 20, 1, 0}
}

func (x *RpcObjectSearchSubscribeResponseError) GetCode() RpcObjectSearchSubscribeResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcObjectSearchSubscribeResponseError_NULL
}

func (x *RpcObjectSearchSubscribeResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcObjectCrossSpaceSearchSubscribeRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// (optional) subscription identifier
	// client can provide some string or middleware will generate it automatically
	// if subId is already registered on middleware, the new query will replace previous subscription
	SubId string `protobuf:"bytes,1,opt,name=subId,proto3" json:"subId,omitempty"`
	// filters
	Filters []*model.BlockContentDataviewFilter `protobuf:"bytes,2,rep,name=filters,proto3" json:"filters,omitempty"`
	// sorts
	Sorts []*model.BlockContentDataviewSort `protobuf:"bytes,3,rep,name=sorts,proto3" json:"sorts,omitempty"`
	// (required)  needed keys in details for return, for object fields mw will return (and subscribe) objects as dependent
	Keys   []string `protobuf:"bytes,7,rep,name=keys,proto3" json:"keys,omitempty"`
	Source []string `protobuf:"bytes,10,rep,name=source,proto3" json:"source,omitempty"`
	// disable dependent subscription
	NoDepSubscription bool   `protobuf:"varint,13,opt,name=noDepSubscription,proto3" json:"noDepSubscription,omitempty"`
	CollectionId      string `protobuf:"bytes,14,opt,name=collectionId,proto3" json:"collectionId,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *RpcObjectCrossSpaceSearchSubscribeRequest) Reset() {
	*x = RpcObjectCrossSpaceSearchSubscribeRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[389]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectCrossSpaceSearchSubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectCrossSpaceSearchSubscribeRequest) ProtoMessage() {}

func (x *RpcObjectCrossSpaceSearchSubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[389]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectCrossSpaceSearchSubscribeRequest.ProtoReflect.Descriptor instead.
func (*RpcObjectCrossSpaceSearchSubscribeRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 21, 0}
}

func (x *RpcObjectCrossSpaceSearchSubscribeRequest) GetSubId() string {
	if x != nil {
		return x.SubId
	}
	return ""
}

func (x *RpcObjectCrossSpaceSearchSubscribeRequest) GetFilters() []*model.BlockContentDataviewFilter {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *RpcObjectCrossSpaceSearchSubscribeRequest) GetSorts() []*model.BlockContentDataviewSort {
	if x != nil {
		return x.Sorts
	}
	return nil
}

func (x *RpcObjectCrossSpaceSearchSubscribeRequest) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *RpcObjectCrossSpaceSearchSubscribeRequest) GetSource() []string {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *RpcObjectCrossSpaceSearchSubscribeRequest) GetNoDepSubscription() bool {
	if x != nil {
		return x.NoDepSubscription
	}
	return false
}

func (x *RpcObjectCrossSpaceSearchSubscribeRequest) GetCollectionId() string {
	if x != nil {
		return x.CollectionId
	}
	return ""
}

type RpcObjectCrossSpaceSearchSubscribeResponse struct {
	state         protoimpl.MessageState                           `protogen:"open.v1"`
	Error         *RpcObjectCrossSpaceSearchSubscribeResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Records       []*structpb.Struct                               `protobuf:"bytes,2,rep,name=records,proto3" json:"records,omitempty"`
	Dependencies  []*structpb.Struct                               `protobuf:"bytes,3,rep,name=dependencies,proto3" json:"dependencies,omitempty"`
	SubId         string                                           `protobuf:"bytes,4,opt,name=subId,proto3" json:"subId,omitempty"`
	Counters      *EventObjectSubscriptionCounters                 `protobuf:"bytes,5,opt,name=counters,proto3" json:"counters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectCrossSpaceSearchSubscribeResponse) Reset() {
	*x = RpcObjectCrossSpaceSearchSubscribeResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[390]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectCrossSpaceSearchSubscribeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectCrossSpaceSearchSubscribeResponse) ProtoMessage() {}

func (x *RpcObjectCrossSpaceSearchSubscribeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[390]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectCrossSpaceSearchSubscribeResponse.ProtoReflect.Descriptor instead.
func (*RpcObjectCrossSpaceSearchSubscribeResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 21, 1}
}

func (x *RpcObjectCrossSpaceSearchSubscribeResponse) GetError() *RpcObjectCrossSpaceSearchSubscribeResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcObjectCrossSpaceSearchSubscribeResponse) GetRecords() []*structpb.Struct {
	if x != nil {
		return x.Records
	}
	return nil
}

func (x *RpcObjectCrossSpaceSearchSubscribeResponse) GetDependencies() []*structpb.Struct {
	if x != nil {
		return x.Dependencies
	}
	return nil
}

func (x *RpcObjectCrossSpaceSearchSubscribeResponse) GetSubId() string {
	if x != nil {
		return x.SubId
	}
	return ""
}

func (x *RpcObjectCrossSpaceSearchSubscribeResponse) GetCounters() *EventObjectSubscriptionCounters {
	if x != nil {
		return x.Counters
	}
	return nil
}

type RpcObjectCrossSpaceSearchSubscribeResponseError struct {
	state         protoimpl.MessageState                              `protogen:"open.v1"`
	Code          RpcObjectCrossSpaceSearchSubscribeResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcObjectCrossSpaceSearchSubscribeResponseErrorCode" json:"code,omitempty"`
	Description   string                                              `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectCrossSpaceSearchSubscribeResponseError) Reset() {
	*x = RpcObjectCrossSpaceSearchSubscribeResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[391]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectCrossSpaceSearchSubscribeResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectCrossSpaceSearchSubscribeResponseError) ProtoMessage() {}

func (x *RpcObjectCrossSpaceSearchSubscribeResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[391]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectCrossSpaceSearchSubscribeResponseError.ProtoReflect.Descriptor instead.
func (*RpcObjectCrossSpaceSearchSubscribeResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 21, 1, 0}
}

func (x *RpcObjectCrossSpaceSearchSubscribeResponseError) GetCode() RpcObjectCrossSpaceSearchSubscribeResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcObjectCrossSpaceSearchSubscribeResponseError_NULL
}

func (x *RpcObjectCrossSpaceSearchSubscribeResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcObjectCrossSpaceSearchUnsubscribeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SubId         string                 `protobuf:"bytes,1,opt,name=subId,proto3" json:"subId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectCrossSpaceSearchUnsubscribeRequest) Reset() {
	*x = RpcObjectCrossSpaceSearchUnsubscribeRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[392]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectCrossSpaceSearchUnsubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectCrossSpaceSearchUnsubscribeRequest) ProtoMessage() {}

func (x *RpcObjectCrossSpaceSearchUnsubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[392]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectCrossSpaceSearchUnsubscribeRequest.ProtoReflect.Descriptor instead.
func (*RpcObjectCrossSpaceSearchUnsubscribeRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 22, 0}
}

func (x *RpcObjectCrossSpaceSearchUnsubscribeRequest) GetSubId() string {
	if x != nil {
		return x.SubId
	}
	return ""
}

type RpcObjectCrossSpaceSearchUnsubscribeResponse struct {
	state         protoimpl.MessageState                             `protogen:"open.v1"`
	Error         *RpcObjectCrossSpaceSearchUnsubscribeResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectCrossSpaceSearchUnsubscribeResponse) Reset() {
	*x = RpcObjectCrossSpaceSearchUnsubscribeResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[393]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectCrossSpaceSearchUnsubscribeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectCrossSpaceSearchUnsubscribeResponse) ProtoMessage() {}

func (x *RpcObjectCrossSpaceSearchUnsubscribeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[393]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectCrossSpaceSearchUnsubscribeResponse.ProtoReflect.Descriptor instead.
func (*RpcObjectCrossSpaceSearchUnsubscribeResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 22, 1}
}

func (x *RpcObjectCrossSpaceSearchUnsubscribeResponse) GetError() *RpcObjectCrossSpaceSearchUnsubscribeResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

type RpcObjectCrossSpaceSearchUnsubscribeResponseError struct {
	state         protoimpl.MessageState                                `protogen:"open.v1"`
	Code          RpcObjectCrossSpaceSearchUnsubscribeResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcObjectCrossSpaceSearchUnsubscribeResponseErrorCode" json:"code,omitempty"`
	Description   string                                                `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectCrossSpaceSearchUnsubscribeResponseError) Reset() {
	*x = RpcObjectCrossSpaceSearchUnsubscribeResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[394]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectCrossSpaceSearchUnsubscribeResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectCrossSpaceSearchUnsubscribeResponseError) ProtoMessage() {}

func (x *RpcObjectCrossSpaceSearchUnsubscribeResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[394]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectCrossSpaceSearchUnsubscribeResponseError.ProtoReflect.Descriptor instead.
func (*RpcObjectCrossSpaceSearchUnsubscribeResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 22, 1, 0}
}

func (x *RpcObjectCrossSpaceSearchUnsubscribeResponseError) GetCode() RpcObjectCrossSpaceSearchUnsubscribeResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcObjectCrossSpaceSearchUnsubscribeResponseError_NULL
}

func (x *RpcObjectCrossSpaceSearchUnsubscribeResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcObjectGroupsSubscribeRequest struct {
	state         protoimpl.MessageState              `protogen:"open.v1"`
	SpaceId       string                              `protobuf:"bytes,6,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	SubId         string                              `protobuf:"bytes,1,opt,name=subId,proto3" json:"subId,omitempty"`
	RelationKey   string                              `protobuf:"bytes,2,opt,name=relationKey,proto3" json:"relationKey,omitempty"`
	Filters       []*model.BlockContentDataviewFilter `protobuf:"bytes,3,rep,name=filters,proto3" json:"filters,omitempty"`
	Source        []string                            `protobuf:"bytes,4,rep,name=source,proto3" json:"source,omitempty"`
	CollectionId  string                              `protobuf:"bytes,5,opt,name=collectionId,proto3" json:"collectionId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectGroupsSubscribeRequest) Reset() {
	*x = RpcObjectGroupsSubscribeRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[395]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectGroupsSubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectGroupsSubscribeRequest) ProtoMessage() {}

func (x *RpcObjectGroupsSubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[395]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectGroupsSubscribeRequest.ProtoReflect.Descriptor instead.
func (*RpcObjectGroupsSubscribeRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 23, 0}
}

func (x *RpcObjectGroupsSubscribeRequest) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *RpcObjectGroupsSubscribeRequest) GetSubId() string {
	if x != nil {
		return x.SubId
	}
	return ""
}

func (x *RpcObjectGroupsSubscribeRequest) GetRelationKey() string {
	if x != nil {
		return x.RelationKey
	}
	return ""
}

func (x *RpcObjectGroupsSubscribeRequest) GetFilters() []*model.BlockContentDataviewFilter {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *RpcObjectGroupsSubscribeRequest) GetSource() []string {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *RpcObjectGroupsSubscribeRequest) GetCollectionId() string {
	if x != nil {
		return x.CollectionId
	}
	return ""
}

type RpcObjectGroupsSubscribeResponse struct {
	state         protoimpl.MessageState                 `protogen:"open.v1"`
	Error         *RpcObjectGroupsSubscribeResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Groups        []*model.BlockContentDataviewGroup     `protobuf:"bytes,2,rep,name=groups,proto3" json:"groups,omitempty"`
	SubId         string                                 `protobuf:"bytes,3,opt,name=subId,proto3" json:"subId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectGroupsSubscribeResponse) Reset() {
	*x = RpcObjectGroupsSubscribeResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[396]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectGroupsSubscribeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectGroupsSubscribeResponse) ProtoMessage() {}

func (x *RpcObjectGroupsSubscribeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[396]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectGroupsSubscribeResponse.ProtoReflect.Descriptor instead.
func (*RpcObjectGroupsSubscribeResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 23, 1}
}

func (x *RpcObjectGroupsSubscribeResponse) GetError() *RpcObjectGroupsSubscribeResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcObjectGroupsSubscribeResponse) GetGroups() []*model.BlockContentDataviewGroup {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *RpcObjectGroupsSubscribeResponse) GetSubId() string {
	if x != nil {
		return x.SubId
	}
	return ""
}

type RpcObjectGroupsSubscribeResponseError struct {
	state         protoimpl.MessageState                    `protogen:"open.v1"`
	Code          RpcObjectGroupsSubscribeResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcObjectGroupsSubscribeResponseErrorCode" json:"code,omitempty"`
	Description   string                                    `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectGroupsSubscribeResponseError) Reset() {
	*x = RpcObjectGroupsSubscribeResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[397]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectGroupsSubscribeResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectGroupsSubscribeResponseError) ProtoMessage() {}

func (x *RpcObjectGroupsSubscribeResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[397]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectGroupsSubscribeResponseError.ProtoReflect.Descriptor instead.
func (*RpcObjectGroupsSubscribeResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 23, 1, 0}
}

func (x *RpcObjectGroupsSubscribeResponseError) GetCode() RpcObjectGroupsSubscribeResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcObjectGroupsSubscribeResponseError_NULL
}

func (x *RpcObjectGroupsSubscribeResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcObjectSubscribeIdsRequest struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	SpaceId string                 `protobuf:"bytes,13,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	// (optional) subscription identifier
	// client can provide some string or middleware will generate it automatically
	// if subId is already registered on middleware, the new query will replace previous subscription
	SubId string `protobuf:"bytes,1,opt,name=subId,proto3" json:"subId,omitempty"`
	// ids for subscribe
	Ids []string `protobuf:"bytes,2,rep,name=ids,proto3" json:"ids,omitempty"`
	// sorts
	// (required)  needed keys in details for return, for object fields mw will return (and subscribe) objects as dependent
	Keys []string `protobuf:"bytes,3,rep,name=keys,proto3" json:"keys,omitempty"`
	// disable dependent subscription
	NoDepSubscription bool `protobuf:"varint,12,opt,name=noDepSubscription,proto3" json:"noDepSubscription,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *RpcObjectSubscribeIdsRequest) Reset() {
	*x = RpcObjectSubscribeIdsRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[398]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectSubscribeIdsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectSubscribeIdsRequest) ProtoMessage() {}

func (x *RpcObjectSubscribeIdsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[398]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectSubscribeIdsRequest.ProtoReflect.Descriptor instead.
func (*RpcObjectSubscribeIdsRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 24, 0}
}

func (x *RpcObjectSubscribeIdsRequest) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *RpcObjectSubscribeIdsRequest) GetSubId() string {
	if x != nil {
		return x.SubId
	}
	return ""
}

func (x *RpcObjectSubscribeIdsRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *RpcObjectSubscribeIdsRequest) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *RpcObjectSubscribeIdsRequest) GetNoDepSubscription() bool {
	if x != nil {
		return x.NoDepSubscription
	}
	return false
}

type RpcObjectSubscribeIdsResponse struct {
	state         protoimpl.MessageState              `protogen:"open.v1"`
	Error         *RpcObjectSubscribeIdsResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Records       []*structpb.Struct                  `protobuf:"bytes,2,rep,name=records,proto3" json:"records,omitempty"`
	Dependencies  []*structpb.Struct                  `protobuf:"bytes,3,rep,name=dependencies,proto3" json:"dependencies,omitempty"`
	SubId         string                              `protobuf:"bytes,4,opt,name=subId,proto3" json:"subId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectSubscribeIdsResponse) Reset() {
	*x = RpcObjectSubscribeIdsResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[399]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectSubscribeIdsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectSubscribeIdsResponse) ProtoMessage() {}

func (x *RpcObjectSubscribeIdsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[399]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectSubscribeIdsResponse.ProtoReflect.Descriptor instead.
func (*RpcObjectSubscribeIdsResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 24, 1}
}

func (x *RpcObjectSubscribeIdsResponse) GetError() *RpcObjectSubscribeIdsResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcObjectSubscribeIdsResponse) GetRecords() []*structpb.Struct {
	if x != nil {
		return x.Records
	}
	return nil
}

func (x *RpcObjectSubscribeIdsResponse) GetDependencies() []*structpb.Struct {
	if x != nil {
		return x.Dependencies
	}
	return nil
}

func (x *RpcObjectSubscribeIdsResponse) GetSubId() string {
	if x != nil {
		return x.SubId
	}
	return ""
}

type RpcObjectSubscribeIdsResponseError struct {
	state         protoimpl.MessageState                 `protogen:"open.v1"`
	Code          RpcObjectSubscribeIdsResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcObjectSubscribeIdsResponseErrorCode" json:"code,omitempty"`
	Description   string                                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectSubscribeIdsResponseError) Reset() {
	*x = RpcObjectSubscribeIdsResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[400]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectSubscribeIdsResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectSubscribeIdsResponseError) ProtoMessage() {}

func (x *RpcObjectSubscribeIdsResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[400]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectSubscribeIdsResponseError.ProtoReflect.Descriptor instead.
func (*RpcObjectSubscribeIdsResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 24, 1, 0}
}

func (x *RpcObjectSubscribeIdsResponseError) GetCode() RpcObjectSubscribeIdsResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcObjectSubscribeIdsResponseError_NULL
}

func (x *RpcObjectSubscribeIdsResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcObjectSearchUnsubscribeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SubIds        []string               `protobuf:"bytes,1,rep,name=subIds,proto3" json:"subIds,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectSearchUnsubscribeRequest) Reset() {
	*x = RpcObjectSearchUnsubscribeRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[401]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectSearchUnsubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectSearchUnsubscribeRequest) ProtoMessage() {}

func (x *RpcObjectSearchUnsubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[401]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectSearchUnsubscribeRequest.ProtoReflect.Descriptor instead.
func (*RpcObjectSearchUnsubscribeRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 25, 0}
}

func (x *RpcObjectSearchUnsubscribeRequest) GetSubIds() []string {
	if x != nil {
		return x.SubIds
	}
	return nil
}

type RpcObjectSearchUnsubscribeResponse struct {
	state         protoimpl.MessageState                   `protogen:"open.v1"`
	Error         *RpcObjectSearchUnsubscribeResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectSearchUnsubscribeResponse) Reset() {
	*x = RpcObjectSearchUnsubscribeResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[402]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectSearchUnsubscribeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectSearchUnsubscribeResponse) ProtoMessage() {}

func (x *RpcObjectSearchUnsubscribeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[402]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectSearchUnsubscribeResponse.ProtoReflect.Descriptor instead.
func (*RpcObjectSearchUnsubscribeResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 25, 1}
}

func (x *RpcObjectSearchUnsubscribeResponse) GetError() *RpcObjectSearchUnsubscribeResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

type RpcObjectSearchUnsubscribeResponseError struct {
	state         protoimpl.MessageState                      `protogen:"open.v1"`
	Code          RpcObjectSearchUnsubscribeResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcObjectSearchUnsubscribeResponseErrorCode" json:"code,omitempty"`
	Description   string                                      `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectSearchUnsubscribeResponseError) Reset() {
	*x = RpcObjectSearchUnsubscribeResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[403]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectSearchUnsubscribeResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectSearchUnsubscribeResponseError) ProtoMessage() {}

func (x *RpcObjectSearchUnsubscribeResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[403]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectSearchUnsubscribeResponseError.ProtoReflect.Descriptor instead.
func (*RpcObjectSearchUnsubscribeResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 25, 1, 0}
}

func (x *RpcObjectSearchUnsubscribeResponseError) GetCode() RpcObjectSearchUnsubscribeResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcObjectSearchUnsubscribeResponseError_NULL
}

func (x *RpcObjectSearchUnsubscribeResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcObjectSetLayoutRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextId     string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	Layout        model.ObjectTypeLayout `protobuf:"varint,3,opt,name=layout,proto3,enum=anytype.model.ObjectTypeLayout" json:"layout,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectSetLayoutRequest) Reset() {
	*x = RpcObjectSetLayoutRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[404]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectSetLayoutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectSetLayoutRequest) ProtoMessage() {}

func (x *RpcObjectSetLayoutRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[404]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectSetLayoutRequest.ProtoReflect.Descriptor instead.
func (*RpcObjectSetLayoutRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 26, 0}
}

func (x *RpcObjectSetLayoutRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcObjectSetLayoutRequest) GetLayout() model.ObjectTypeLayout {
	if x != nil {
		return x.Layout
	}
	return model.ObjectTypeLayout(0)
}

type RpcObjectSetLayoutResponse struct {
	state         protoimpl.MessageState           `protogen:"open.v1"`
	Error         *RpcObjectSetLayoutResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent                   `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectSetLayoutResponse) Reset() {
	*x = RpcObjectSetLayoutResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[405]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectSetLayoutResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectSetLayoutResponse) ProtoMessage() {}

func (x *RpcObjectSetLayoutResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[405]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectSetLayoutResponse.ProtoReflect.Descriptor instead.
func (*RpcObjectSetLayoutResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 26, 1}
}

func (x *RpcObjectSetLayoutResponse) GetError() *RpcObjectSetLayoutResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcObjectSetLayoutResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcObjectSetLayoutResponseError struct {
	state         protoimpl.MessageState              `protogen:"open.v1"`
	Code          RpcObjectSetLayoutResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcObjectSetLayoutResponseErrorCode" json:"code,omitempty"`
	Description   string                              `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectSetLayoutResponseError) Reset() {
	*x = RpcObjectSetLayoutResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[406]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectSetLayoutResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectSetLayoutResponseError) ProtoMessage() {}

func (x *RpcObjectSetLayoutResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[406]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectSetLayoutResponseError.ProtoReflect.Descriptor instead.
func (*RpcObjectSetLayoutResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 26, 1, 0}
}

func (x *RpcObjectSetLayoutResponseError) GetCode() RpcObjectSetLayoutResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcObjectSetLayoutResponseError_NULL
}

func (x *RpcObjectSetLayoutResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcObjectSetIsFavoriteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextId     string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	IsFavorite    bool                   `protobuf:"varint,2,opt,name=isFavorite,proto3" json:"isFavorite,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectSetIsFavoriteRequest) Reset() {
	*x = RpcObjectSetIsFavoriteRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[407]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectSetIsFavoriteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectSetIsFavoriteRequest) ProtoMessage() {}

func (x *RpcObjectSetIsFavoriteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[407]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectSetIsFavoriteRequest.ProtoReflect.Descriptor instead.
func (*RpcObjectSetIsFavoriteRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 27, 0}
}

func (x *RpcObjectSetIsFavoriteRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcObjectSetIsFavoriteRequest) GetIsFavorite() bool {
	if x != nil {
		return x.IsFavorite
	}
	return false
}

type RpcObjectSetIsFavoriteResponse struct {
	state         protoimpl.MessageState               `protogen:"open.v1"`
	Error         *RpcObjectSetIsFavoriteResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent                       `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectSetIsFavoriteResponse) Reset() {
	*x = RpcObjectSetIsFavoriteResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[408]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectSetIsFavoriteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectSetIsFavoriteResponse) ProtoMessage() {}

func (x *RpcObjectSetIsFavoriteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[408]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectSetIsFavoriteResponse.ProtoReflect.Descriptor instead.
func (*RpcObjectSetIsFavoriteResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 27, 1}
}

func (x *RpcObjectSetIsFavoriteResponse) GetError() *RpcObjectSetIsFavoriteResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcObjectSetIsFavoriteResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcObjectSetIsFavoriteResponseError struct {
	state         protoimpl.MessageState                  `protogen:"open.v1"`
	Code          RpcObjectSetIsFavoriteResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcObjectSetIsFavoriteResponseErrorCode" json:"code,omitempty"`
	Description   string                                  `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectSetIsFavoriteResponseError) Reset() {
	*x = RpcObjectSetIsFavoriteResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[409]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectSetIsFavoriteResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectSetIsFavoriteResponseError) ProtoMessage() {}

func (x *RpcObjectSetIsFavoriteResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[409]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectSetIsFavoriteResponseError.ProtoReflect.Descriptor instead.
func (*RpcObjectSetIsFavoriteResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 27, 1, 0}
}

func (x *RpcObjectSetIsFavoriteResponseError) GetCode() RpcObjectSetIsFavoriteResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcObjectSetIsFavoriteResponseError_NULL
}

func (x *RpcObjectSetIsFavoriteResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcObjectSetIsArchivedRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextId     string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	IsArchived    bool                   `protobuf:"varint,2,opt,name=isArchived,proto3" json:"isArchived,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectSetIsArchivedRequest) Reset() {
	*x = RpcObjectSetIsArchivedRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[410]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectSetIsArchivedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectSetIsArchivedRequest) ProtoMessage() {}

func (x *RpcObjectSetIsArchivedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[410]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectSetIsArchivedRequest.ProtoReflect.Descriptor instead.
func (*RpcObjectSetIsArchivedRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 28, 0}
}

func (x *RpcObjectSetIsArchivedRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcObjectSetIsArchivedRequest) GetIsArchived() bool {
	if x != nil {
		return x.IsArchived
	}
	return false
}

type RpcObjectSetIsArchivedResponse struct {
	state         protoimpl.MessageState               `protogen:"open.v1"`
	Error         *RpcObjectSetIsArchivedResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectSetIsArchivedResponse) Reset() {
	*x = RpcObjectSetIsArchivedResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[411]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectSetIsArchivedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectSetIsArchivedResponse) ProtoMessage() {}

func (x *RpcObjectSetIsArchivedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[411]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectSetIsArchivedResponse.ProtoReflect.Descriptor instead.
func (*RpcObjectSetIsArchivedResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 28, 1}
}

func (x *RpcObjectSetIsArchivedResponse) GetError() *RpcObjectSetIsArchivedResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

type RpcObjectSetIsArchivedResponseError struct {
	state         protoimpl.MessageState                  `protogen:"open.v1"`
	Code          RpcObjectSetIsArchivedResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcObjectSetIsArchivedResponseErrorCode" json:"code,omitempty"`
	Description   string                                  `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectSetIsArchivedResponseError) Reset() {
	*x = RpcObjectSetIsArchivedResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[412]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectSetIsArchivedResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectSetIsArchivedResponseError) ProtoMessage() {}

func (x *RpcObjectSetIsArchivedResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[412]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectSetIsArchivedResponseError.ProtoReflect.Descriptor instead.
func (*RpcObjectSetIsArchivedResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 28, 1, 0}
}

func (x *RpcObjectSetIsArchivedResponseError) GetCode() RpcObjectSetIsArchivedResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcObjectSetIsArchivedResponseError_NULL
}

func (x *RpcObjectSetIsArchivedResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcObjectSetSourceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextId     string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	Source        []string               `protobuf:"bytes,2,rep,name=source,proto3" json:"source,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectSetSourceRequest) Reset() {
	*x = RpcObjectSetSourceRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[413]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectSetSourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectSetSourceRequest) ProtoMessage() {}

func (x *RpcObjectSetSourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[413]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectSetSourceRequest.ProtoReflect.Descriptor instead.
func (*RpcObjectSetSourceRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 29, 0}
}

func (x *RpcObjectSetSourceRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcObjectSetSourceRequest) GetSource() []string {
	if x != nil {
		return x.Source
	}
	return nil
}

type RpcObjectSetSourceResponse struct {
	state         protoimpl.MessageState           `protogen:"open.v1"`
	Error         *RpcObjectSetSourceResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent                   `protobuf:"bytes,4,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectSetSourceResponse) Reset() {
	*x = RpcObjectSetSourceResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[414]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectSetSourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectSetSourceResponse) ProtoMessage() {}

func (x *RpcObjectSetSourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[414]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectSetSourceResponse.ProtoReflect.Descriptor instead.
func (*RpcObjectSetSourceResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 29, 1}
}

func (x *RpcObjectSetSourceResponse) GetError() *RpcObjectSetSourceResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcObjectSetSourceResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcObjectSetSourceResponseError struct {
	state         protoimpl.MessageState              `protogen:"open.v1"`
	Code          RpcObjectSetSourceResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcObjectSetSourceResponseErrorCode" json:"code,omitempty"`
	Description   string                              `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectSetSourceResponseError) Reset() {
	*x = RpcObjectSetSourceResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[415]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectSetSourceResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectSetSourceResponseError) ProtoMessage() {}

func (x *RpcObjectSetSourceResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[415]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectSetSourceResponseError.ProtoReflect.Descriptor instead.
func (*RpcObjectSetSourceResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 29, 1, 0}
}

func (x *RpcObjectSetSourceResponseError) GetCode() RpcObjectSetSourceResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcObjectSetSourceResponseError_NULL
}

func (x *RpcObjectSetSourceResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcObjectWorkspaceSetDashboardRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextId     string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	ObjectId      string                 `protobuf:"bytes,2,opt,name=objectId,proto3" json:"objectId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectWorkspaceSetDashboardRequest) Reset() {
	*x = RpcObjectWorkspaceSetDashboardRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[416]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectWorkspaceSetDashboardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectWorkspaceSetDashboardRequest) ProtoMessage() {}

func (x *RpcObjectWorkspaceSetDashboardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[416]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectWorkspaceSetDashboardRequest.ProtoReflect.Descriptor instead.
func (*RpcObjectWorkspaceSetDashboardRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 30, 0}
}

func (x *RpcObjectWorkspaceSetDashboardRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcObjectWorkspaceSetDashboardRequest) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

type RpcObjectWorkspaceSetDashboardResponse struct {
	state         protoimpl.MessageState                       `protogen:"open.v1"`
	Error         *RpcObjectWorkspaceSetDashboardResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent                               `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	ObjectId      string                                       `protobuf:"bytes,3,opt,name=objectId,proto3" json:"objectId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectWorkspaceSetDashboardResponse) Reset() {
	*x = RpcObjectWorkspaceSetDashboardResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[417]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectWorkspaceSetDashboardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectWorkspaceSetDashboardResponse) ProtoMessage() {}

func (x *RpcObjectWorkspaceSetDashboardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[417]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectWorkspaceSetDashboardResponse.ProtoReflect.Descriptor instead.
func (*RpcObjectWorkspaceSetDashboardResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 30, 1}
}

func (x *RpcObjectWorkspaceSetDashboardResponse) GetError() *RpcObjectWorkspaceSetDashboardResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcObjectWorkspaceSetDashboardResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

func (x *RpcObjectWorkspaceSetDashboardResponse) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

type RpcObjectWorkspaceSetDashboardResponseError struct {
	state         protoimpl.MessageState                          `protogen:"open.v1"`
	Code          RpcObjectWorkspaceSetDashboardResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcObjectWorkspaceSetDashboardResponseErrorCode" json:"code,omitempty"`
	Description   string                                          `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectWorkspaceSetDashboardResponseError) Reset() {
	*x = RpcObjectWorkspaceSetDashboardResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[418]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectWorkspaceSetDashboardResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectWorkspaceSetDashboardResponseError) ProtoMessage() {}

func (x *RpcObjectWorkspaceSetDashboardResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[418]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectWorkspaceSetDashboardResponseError.ProtoReflect.Descriptor instead.
func (*RpcObjectWorkspaceSetDashboardResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 30, 1, 0}
}

func (x *RpcObjectWorkspaceSetDashboardResponseError) GetCode() RpcObjectWorkspaceSetDashboardResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcObjectWorkspaceSetDashboardResponseError_NULL
}

func (x *RpcObjectWorkspaceSetDashboardResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcObjectSetObjectTypeRequest struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	ContextId           string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	ObjectTypeUniqueKey string                 `protobuf:"bytes,3,opt,name=objectTypeUniqueKey,proto3" json:"objectTypeUniqueKey,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *RpcObjectSetObjectTypeRequest) Reset() {
	*x = RpcObjectSetObjectTypeRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[419]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectSetObjectTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectSetObjectTypeRequest) ProtoMessage() {}

func (x *RpcObjectSetObjectTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[419]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectSetObjectTypeRequest.ProtoReflect.Descriptor instead.
func (*RpcObjectSetObjectTypeRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 31, 0}
}

func (x *RpcObjectSetObjectTypeRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcObjectSetObjectTypeRequest) GetObjectTypeUniqueKey() string {
	if x != nil {
		return x.ObjectTypeUniqueKey
	}
	return ""
}

type RpcObjectSetObjectTypeResponse struct {
	state         protoimpl.MessageState               `protogen:"open.v1"`
	Error         *RpcObjectSetObjectTypeResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent                       `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectSetObjectTypeResponse) Reset() {
	*x = RpcObjectSetObjectTypeResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[420]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectSetObjectTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectSetObjectTypeResponse) ProtoMessage() {}

func (x *RpcObjectSetObjectTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[420]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectSetObjectTypeResponse.ProtoReflect.Descriptor instead.
func (*RpcObjectSetObjectTypeResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 31, 1}
}

func (x *RpcObjectSetObjectTypeResponse) GetError() *RpcObjectSetObjectTypeResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcObjectSetObjectTypeResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcObjectSetObjectTypeResponseError struct {
	state         protoimpl.MessageState                  `protogen:"open.v1"`
	Code          RpcObjectSetObjectTypeResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcObjectSetObjectTypeResponseErrorCode" json:"code,omitempty"`
	Description   string                                  `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectSetObjectTypeResponseError) Reset() {
	*x = RpcObjectSetObjectTypeResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[421]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectSetObjectTypeResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectSetObjectTypeResponseError) ProtoMessage() {}

func (x *RpcObjectSetObjectTypeResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[421]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectSetObjectTypeResponseError.ProtoReflect.Descriptor instead.
func (*RpcObjectSetObjectTypeResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 31, 1, 0}
}

func (x *RpcObjectSetObjectTypeResponseError) GetCode() RpcObjectSetObjectTypeResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcObjectSetObjectTypeResponseError_NULL
}

func (x *RpcObjectSetObjectTypeResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcObjectSetInternalFlagsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextId     string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	InternalFlags []*model.InternalFlag  `protobuf:"bytes,7,rep,name=internalFlags,proto3" json:"internalFlags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectSetInternalFlagsRequest) Reset() {
	*x = RpcObjectSetInternalFlagsRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[422]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectSetInternalFlagsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectSetInternalFlagsRequest) ProtoMessage() {}

func (x *RpcObjectSetInternalFlagsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[422]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectSetInternalFlagsRequest.ProtoReflect.Descriptor instead.
func (*RpcObjectSetInternalFlagsRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 32, 0}
}

func (x *RpcObjectSetInternalFlagsRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcObjectSetInternalFlagsRequest) GetInternalFlags() []*model.InternalFlag {
	if x != nil {
		return x.InternalFlags
	}
	return nil
}

type RpcObjectSetInternalFlagsResponse struct {
	state         protoimpl.MessageState                  `protogen:"open.v1"`
	Error         *RpcObjectSetInternalFlagsResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent                          `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectSetInternalFlagsResponse) Reset() {
	*x = RpcObjectSetInternalFlagsResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[423]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectSetInternalFlagsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectSetInternalFlagsResponse) ProtoMessage() {}

func (x *RpcObjectSetInternalFlagsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[423]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectSetInternalFlagsResponse.ProtoReflect.Descriptor instead.
func (*RpcObjectSetInternalFlagsResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 32, 1}
}

func (x *RpcObjectSetInternalFlagsResponse) GetError() *RpcObjectSetInternalFlagsResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcObjectSetInternalFlagsResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcObjectSetInternalFlagsResponseError struct {
	state         protoimpl.MessageState                     `protogen:"open.v1"`
	Code          RpcObjectSetInternalFlagsResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcObjectSetInternalFlagsResponseErrorCode" json:"code,omitempty"`
	Description   string                                     `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectSetInternalFlagsResponseError) Reset() {
	*x = RpcObjectSetInternalFlagsResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[424]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectSetInternalFlagsResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectSetInternalFlagsResponseError) ProtoMessage() {}

func (x *RpcObjectSetInternalFlagsResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[424]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectSetInternalFlagsResponseError.ProtoReflect.Descriptor instead.
func (*RpcObjectSetInternalFlagsResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 32, 1, 0}
}

func (x *RpcObjectSetInternalFlagsResponseError) GetCode() RpcObjectSetInternalFlagsResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcObjectSetInternalFlagsResponseError_NULL
}

func (x *RpcObjectSetInternalFlagsResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcObjectSetDetailsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextId     string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	Details       []*model.Detail        `protobuf:"bytes,2,rep,name=details,proto3" json:"details,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectSetDetailsRequest) Reset() {
	*x = RpcObjectSetDetailsRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[425]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectSetDetailsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectSetDetailsRequest) ProtoMessage() {}

func (x *RpcObjectSetDetailsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[425]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectSetDetailsRequest.ProtoReflect.Descriptor instead.
func (*RpcObjectSetDetailsRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 33, 0}
}

func (x *RpcObjectSetDetailsRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcObjectSetDetailsRequest) GetDetails() []*model.Detail {
	if x != nil {
		return x.Details
	}
	return nil
}

type RpcObjectSetDetailsResponse struct {
	state         protoimpl.MessageState            `protogen:"open.v1"`
	Error         *RpcObjectSetDetailsResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent                    `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectSetDetailsResponse) Reset() {
	*x = RpcObjectSetDetailsResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[426]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectSetDetailsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectSetDetailsResponse) ProtoMessage() {}

func (x *RpcObjectSetDetailsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[426]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectSetDetailsResponse.ProtoReflect.Descriptor instead.
func (*RpcObjectSetDetailsResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 33, 1}
}

func (x *RpcObjectSetDetailsResponse) GetError() *RpcObjectSetDetailsResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcObjectSetDetailsResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcObjectSetDetailsResponseError struct {
	state         protoimpl.MessageState               `protogen:"open.v1"`
	Code          RpcObjectSetDetailsResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcObjectSetDetailsResponseErrorCode" json:"code,omitempty"`
	Description   string                               `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectSetDetailsResponseError) Reset() {
	*x = RpcObjectSetDetailsResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[427]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectSetDetailsResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectSetDetailsResponseError) ProtoMessage() {}

func (x *RpcObjectSetDetailsResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[427]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectSetDetailsResponseError.ProtoReflect.Descriptor instead.
func (*RpcObjectSetDetailsResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 33, 1, 0}
}

func (x *RpcObjectSetDetailsResponseError) GetCode() RpcObjectSetDetailsResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcObjectSetDetailsResponseError_NULL
}

func (x *RpcObjectSetDetailsResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcObjectToSetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextId     string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	Source        []string               `protobuf:"bytes,2,rep,name=source,proto3" json:"source,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectToSetRequest) Reset() {
	*x = RpcObjectToSetRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[428]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectToSetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectToSetRequest) ProtoMessage() {}

func (x *RpcObjectToSetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[428]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectToSetRequest.ProtoReflect.Descriptor instead.
func (*RpcObjectToSetRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 34, 0}
}

func (x *RpcObjectToSetRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcObjectToSetRequest) GetSource() []string {
	if x != nil {
		return x.Source
	}
	return nil
}

type RpcObjectToSetResponse struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	Error         *RpcObjectToSetResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectToSetResponse) Reset() {
	*x = RpcObjectToSetResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[429]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectToSetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectToSetResponse) ProtoMessage() {}

func (x *RpcObjectToSetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[429]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectToSetResponse.ProtoReflect.Descriptor instead.
func (*RpcObjectToSetResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 34, 1}
}

func (x *RpcObjectToSetResponse) GetError() *RpcObjectToSetResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

type RpcObjectToSetResponseError struct {
	state         protoimpl.MessageState          `protogen:"open.v1"`
	Code          RpcObjectToSetResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcObjectToSetResponseErrorCode" json:"code,omitempty"`
	Description   string                          `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectToSetResponseError) Reset() {
	*x = RpcObjectToSetResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[430]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectToSetResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectToSetResponseError) ProtoMessage() {}

func (x *RpcObjectToSetResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[430]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectToSetResponseError.ProtoReflect.Descriptor instead.
func (*RpcObjectToSetResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 34, 1, 0}
}

func (x *RpcObjectToSetResponseError) GetCode() RpcObjectToSetResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcObjectToSetResponseError_NULL
}

func (x *RpcObjectToSetResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcObjectToCollectionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextId     string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectToCollectionRequest) Reset() {
	*x = RpcObjectToCollectionRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[431]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectToCollectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectToCollectionRequest) ProtoMessage() {}

func (x *RpcObjectToCollectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[431]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectToCollectionRequest.ProtoReflect.Descriptor instead.
func (*RpcObjectToCollectionRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 35, 0}
}

func (x *RpcObjectToCollectionRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

type RpcObjectToCollectionResponse struct {
	state         protoimpl.MessageState              `protogen:"open.v1"`
	Error         *RpcObjectToCollectionResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectToCollectionResponse) Reset() {
	*x = RpcObjectToCollectionResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[432]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectToCollectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectToCollectionResponse) ProtoMessage() {}

func (x *RpcObjectToCollectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[432]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectToCollectionResponse.ProtoReflect.Descriptor instead.
func (*RpcObjectToCollectionResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 35, 1}
}

func (x *RpcObjectToCollectionResponse) GetError() *RpcObjectToCollectionResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

type RpcObjectToCollectionResponseError struct {
	state         protoimpl.MessageState                 `protogen:"open.v1"`
	Code          RpcObjectToCollectionResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcObjectToCollectionResponseErrorCode" json:"code,omitempty"`
	Description   string                                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectToCollectionResponseError) Reset() {
	*x = RpcObjectToCollectionResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[433]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectToCollectionResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectToCollectionResponseError) ProtoMessage() {}

func (x *RpcObjectToCollectionResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[433]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectToCollectionResponseError.ProtoReflect.Descriptor instead.
func (*RpcObjectToCollectionResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 35, 1, 0}
}

func (x *RpcObjectToCollectionResponseError) GetCode() RpcObjectToCollectionResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcObjectToCollectionResponseError_NULL
}

func (x *RpcObjectToCollectionResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcObjectUndoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextId     string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"` // id of the context object
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectUndoRequest) Reset() {
	*x = RpcObjectUndoRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[434]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectUndoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectUndoRequest) ProtoMessage() {}

func (x *RpcObjectUndoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[434]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectUndoRequest.ProtoReflect.Descriptor instead.
func (*RpcObjectUndoRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 37, 0}
}

func (x *RpcObjectUndoRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

type RpcObjectUndoResponse struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	Error         *RpcObjectUndoResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent              `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	Counters      *RpcObjectUndoRedoCounter   `protobuf:"bytes,3,opt,name=counters,proto3" json:"counters,omitempty"`
	BlockId       string                      `protobuf:"bytes,4,opt,name=blockId,proto3" json:"blockId,omitempty"`
	Range         *model.Range                `protobuf:"bytes,5,opt,name=range,proto3" json:"range,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectUndoResponse) Reset() {
	*x = RpcObjectUndoResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[435]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectUndoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectUndoResponse) ProtoMessage() {}

func (x *RpcObjectUndoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[435]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectUndoResponse.ProtoReflect.Descriptor instead.
func (*RpcObjectUndoResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 37, 1}
}

func (x *RpcObjectUndoResponse) GetError() *RpcObjectUndoResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcObjectUndoResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

func (x *RpcObjectUndoResponse) GetCounters() *RpcObjectUndoRedoCounter {
	if x != nil {
		return x.Counters
	}
	return nil
}

func (x *RpcObjectUndoResponse) GetBlockId() string {
	if x != nil {
		return x.BlockId
	}
	return ""
}

func (x *RpcObjectUndoResponse) GetRange() *model.Range {
	if x != nil {
		return x.Range
	}
	return nil
}

type RpcObjectUndoResponseError struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	Code          RpcObjectUndoResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcObjectUndoResponseErrorCode" json:"code,omitempty"`
	Description   string                         `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectUndoResponseError) Reset() {
	*x = RpcObjectUndoResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[436]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectUndoResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectUndoResponseError) ProtoMessage() {}

func (x *RpcObjectUndoResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[436]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectUndoResponseError.ProtoReflect.Descriptor instead.
func (*RpcObjectUndoResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 37, 1, 0}
}

func (x *RpcObjectUndoResponseError) GetCode() RpcObjectUndoResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcObjectUndoResponseError_NULL
}

func (x *RpcObjectUndoResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcObjectRedoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextId     string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"` // id of the context object
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectRedoRequest) Reset() {
	*x = RpcObjectRedoRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[437]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectRedoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectRedoRequest) ProtoMessage() {}

func (x *RpcObjectRedoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[437]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectRedoRequest.ProtoReflect.Descriptor instead.
func (*RpcObjectRedoRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 38, 0}
}

func (x *RpcObjectRedoRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

type RpcObjectRedoResponse struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	Error         *RpcObjectRedoResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent              `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	Counters      *RpcObjectUndoRedoCounter   `protobuf:"bytes,3,opt,name=counters,proto3" json:"counters,omitempty"`
	BlockId       string                      `protobuf:"bytes,4,opt,name=blockId,proto3" json:"blockId,omitempty"`
	Range         *model.Range                `protobuf:"bytes,5,opt,name=range,proto3" json:"range,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectRedoResponse) Reset() {
	*x = RpcObjectRedoResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[438]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectRedoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectRedoResponse) ProtoMessage() {}

func (x *RpcObjectRedoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[438]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectRedoResponse.ProtoReflect.Descriptor instead.
func (*RpcObjectRedoResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 38, 1}
}

func (x *RpcObjectRedoResponse) GetError() *RpcObjectRedoResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcObjectRedoResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

func (x *RpcObjectRedoResponse) GetCounters() *RpcObjectUndoRedoCounter {
	if x != nil {
		return x.Counters
	}
	return nil
}

func (x *RpcObjectRedoResponse) GetBlockId() string {
	if x != nil {
		return x.BlockId
	}
	return ""
}

func (x *RpcObjectRedoResponse) GetRange() *model.Range {
	if x != nil {
		return x.Range
	}
	return nil
}

type RpcObjectRedoResponseError struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	Code          RpcObjectRedoResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcObjectRedoResponseErrorCode" json:"code,omitempty"`
	Description   string                         `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectRedoResponseError) Reset() {
	*x = RpcObjectRedoResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[439]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectRedoResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectRedoResponseError) ProtoMessage() {}

func (x *RpcObjectRedoResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[439]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectRedoResponseError.ProtoReflect.Descriptor instead.
func (*RpcObjectRedoResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 38, 1, 0}
}

func (x *RpcObjectRedoResponseError) GetCode() RpcObjectRedoResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcObjectRedoResponseError_NULL
}

func (x *RpcObjectRedoResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcObjectListDuplicateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ObjectIds     []string               `protobuf:"bytes,1,rep,name=objectIds,proto3" json:"objectIds,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectListDuplicateRequest) Reset() {
	*x = RpcObjectListDuplicateRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[440]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectListDuplicateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectListDuplicateRequest) ProtoMessage() {}

func (x *RpcObjectListDuplicateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[440]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectListDuplicateRequest.ProtoReflect.Descriptor instead.
func (*RpcObjectListDuplicateRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 39, 0}
}

func (x *RpcObjectListDuplicateRequest) GetObjectIds() []string {
	if x != nil {
		return x.ObjectIds
	}
	return nil
}

type RpcObjectListDuplicateResponse struct {
	state         protoimpl.MessageState               `protogen:"open.v1"`
	Error         *RpcObjectListDuplicateResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Ids           []string                             `protobuf:"bytes,2,rep,name=ids,proto3" json:"ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectListDuplicateResponse) Reset() {
	*x = RpcObjectListDuplicateResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[441]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectListDuplicateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectListDuplicateResponse) ProtoMessage() {}

func (x *RpcObjectListDuplicateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[441]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectListDuplicateResponse.ProtoReflect.Descriptor instead.
func (*RpcObjectListDuplicateResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 39, 1}
}

func (x *RpcObjectListDuplicateResponse) GetError() *RpcObjectListDuplicateResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcObjectListDuplicateResponse) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

type RpcObjectListDuplicateResponseError struct {
	state         protoimpl.MessageState                  `protogen:"open.v1"`
	Code          RpcObjectListDuplicateResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcObjectListDuplicateResponseErrorCode" json:"code,omitempty"`
	Description   string                                  `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectListDuplicateResponseError) Reset() {
	*x = RpcObjectListDuplicateResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[442]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectListDuplicateResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectListDuplicateResponseError) ProtoMessage() {}

func (x *RpcObjectListDuplicateResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[442]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectListDuplicateResponseError.ProtoReflect.Descriptor instead.
func (*RpcObjectListDuplicateResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 39, 1, 0}
}

func (x *RpcObjectListDuplicateResponseError) GetCode() RpcObjectListDuplicateResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcObjectListDuplicateResponseError_NULL
}

func (x *RpcObjectListDuplicateResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// Deletes the object, keys from the local store and unsubscribe from remote changes. Also offloads all orphan files
type RpcObjectListDeleteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ObjectIds     []string               `protobuf:"bytes,1,rep,name=objectIds,proto3" json:"objectIds,omitempty"` // objects to remove
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectListDeleteRequest) Reset() {
	*x = RpcObjectListDeleteRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[443]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectListDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectListDeleteRequest) ProtoMessage() {}

func (x *RpcObjectListDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[443]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectListDeleteRequest.ProtoReflect.Descriptor instead.
func (*RpcObjectListDeleteRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 40, 0}
}

func (x *RpcObjectListDeleteRequest) GetObjectIds() []string {
	if x != nil {
		return x.ObjectIds
	}
	return nil
}

type RpcObjectListDeleteResponse struct {
	state         protoimpl.MessageState            `protogen:"open.v1"`
	Error         *RpcObjectListDeleteResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent                    `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectListDeleteResponse) Reset() {
	*x = RpcObjectListDeleteResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[444]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectListDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectListDeleteResponse) ProtoMessage() {}

func (x *RpcObjectListDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[444]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectListDeleteResponse.ProtoReflect.Descriptor instead.
func (*RpcObjectListDeleteResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 40, 1}
}

func (x *RpcObjectListDeleteResponse) GetError() *RpcObjectListDeleteResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcObjectListDeleteResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcObjectListDeleteResponseError struct {
	state         protoimpl.MessageState               `protogen:"open.v1"`
	Code          RpcObjectListDeleteResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcObjectListDeleteResponseErrorCode" json:"code,omitempty"`
	Description   string                               `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectListDeleteResponseError) Reset() {
	*x = RpcObjectListDeleteResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[445]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectListDeleteResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectListDeleteResponseError) ProtoMessage() {}

func (x *RpcObjectListDeleteResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[445]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectListDeleteResponseError.ProtoReflect.Descriptor instead.
func (*RpcObjectListDeleteResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 40, 1, 0}
}

func (x *RpcObjectListDeleteResponseError) GetCode() RpcObjectListDeleteResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcObjectListDeleteResponseError_NULL
}

func (x *RpcObjectListDeleteResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcObjectListSetIsArchivedRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ObjectIds     []string               `protobuf:"bytes,1,rep,name=objectIds,proto3" json:"objectIds,omitempty"`
	IsArchived    bool                   `protobuf:"varint,2,opt,name=isArchived,proto3" json:"isArchived,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectListSetIsArchivedRequest) Reset() {
	*x = RpcObjectListSetIsArchivedRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[446]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectListSetIsArchivedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectListSetIsArchivedRequest) ProtoMessage() {}

func (x *RpcObjectListSetIsArchivedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[446]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectListSetIsArchivedRequest.ProtoReflect.Descriptor instead.
func (*RpcObjectListSetIsArchivedRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 41, 0}
}

func (x *RpcObjectListSetIsArchivedRequest) GetObjectIds() []string {
	if x != nil {
		return x.ObjectIds
	}
	return nil
}

func (x *RpcObjectListSetIsArchivedRequest) GetIsArchived() bool {
	if x != nil {
		return x.IsArchived
	}
	return false
}

type RpcObjectListSetIsArchivedResponse struct {
	state         protoimpl.MessageState                   `protogen:"open.v1"`
	Error         *RpcObjectListSetIsArchivedResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectListSetIsArchivedResponse) Reset() {
	*x = RpcObjectListSetIsArchivedResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[447]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectListSetIsArchivedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectListSetIsArchivedResponse) ProtoMessage() {}

func (x *RpcObjectListSetIsArchivedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[447]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectListSetIsArchivedResponse.ProtoReflect.Descriptor instead.
func (*RpcObjectListSetIsArchivedResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 41, 1}
}

func (x *RpcObjectListSetIsArchivedResponse) GetError() *RpcObjectListSetIsArchivedResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

type RpcObjectListSetIsArchivedResponseError struct {
	state         protoimpl.MessageState                      `protogen:"open.v1"`
	Code          RpcObjectListSetIsArchivedResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcObjectListSetIsArchivedResponseErrorCode" json:"code,omitempty"`
	Description   string                                      `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectListSetIsArchivedResponseError) Reset() {
	*x = RpcObjectListSetIsArchivedResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[448]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectListSetIsArchivedResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectListSetIsArchivedResponseError) ProtoMessage() {}

func (x *RpcObjectListSetIsArchivedResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[448]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectListSetIsArchivedResponseError.ProtoReflect.Descriptor instead.
func (*RpcObjectListSetIsArchivedResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 41, 1, 0}
}

func (x *RpcObjectListSetIsArchivedResponseError) GetCode() RpcObjectListSetIsArchivedResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcObjectListSetIsArchivedResponseError_NULL
}

func (x *RpcObjectListSetIsArchivedResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcObjectListSetIsFavoriteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ObjectIds     []string               `protobuf:"bytes,1,rep,name=objectIds,proto3" json:"objectIds,omitempty"`
	IsFavorite    bool                   `protobuf:"varint,2,opt,name=isFavorite,proto3" json:"isFavorite,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectListSetIsFavoriteRequest) Reset() {
	*x = RpcObjectListSetIsFavoriteRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[449]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectListSetIsFavoriteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectListSetIsFavoriteRequest) ProtoMessage() {}

func (x *RpcObjectListSetIsFavoriteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[449]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectListSetIsFavoriteRequest.ProtoReflect.Descriptor instead.
func (*RpcObjectListSetIsFavoriteRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 42, 0}
}

func (x *RpcObjectListSetIsFavoriteRequest) GetObjectIds() []string {
	if x != nil {
		return x.ObjectIds
	}
	return nil
}

func (x *RpcObjectListSetIsFavoriteRequest) GetIsFavorite() bool {
	if x != nil {
		return x.IsFavorite
	}
	return false
}

type RpcObjectListSetIsFavoriteResponse struct {
	state         protoimpl.MessageState                   `protogen:"open.v1"`
	Error         *RpcObjectListSetIsFavoriteResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectListSetIsFavoriteResponse) Reset() {
	*x = RpcObjectListSetIsFavoriteResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[450]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectListSetIsFavoriteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectListSetIsFavoriteResponse) ProtoMessage() {}

func (x *RpcObjectListSetIsFavoriteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[450]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectListSetIsFavoriteResponse.ProtoReflect.Descriptor instead.
func (*RpcObjectListSetIsFavoriteResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 42, 1}
}

func (x *RpcObjectListSetIsFavoriteResponse) GetError() *RpcObjectListSetIsFavoriteResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

type RpcObjectListSetIsFavoriteResponseError struct {
	state         protoimpl.MessageState                      `protogen:"open.v1"`
	Code          RpcObjectListSetIsFavoriteResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcObjectListSetIsFavoriteResponseErrorCode" json:"code,omitempty"`
	Description   string                                      `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectListSetIsFavoriteResponseError) Reset() {
	*x = RpcObjectListSetIsFavoriteResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[451]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectListSetIsFavoriteResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectListSetIsFavoriteResponseError) ProtoMessage() {}

func (x *RpcObjectListSetIsFavoriteResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[451]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectListSetIsFavoriteResponseError.ProtoReflect.Descriptor instead.
func (*RpcObjectListSetIsFavoriteResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 42, 1, 0}
}

func (x *RpcObjectListSetIsFavoriteResponseError) GetCode() RpcObjectListSetIsFavoriteResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcObjectListSetIsFavoriteResponseError_NULL
}

func (x *RpcObjectListSetIsFavoriteResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcObjectListSetObjectTypeRequest struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	ObjectIds           []string               `protobuf:"bytes,1,rep,name=objectIds,proto3" json:"objectIds,omitempty"`
	ObjectTypeUniqueKey string                 `protobuf:"bytes,2,opt,name=objectTypeUniqueKey,proto3" json:"objectTypeUniqueKey,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *RpcObjectListSetObjectTypeRequest) Reset() {
	*x = RpcObjectListSetObjectTypeRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[452]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectListSetObjectTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectListSetObjectTypeRequest) ProtoMessage() {}

func (x *RpcObjectListSetObjectTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[452]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectListSetObjectTypeRequest.ProtoReflect.Descriptor instead.
func (*RpcObjectListSetObjectTypeRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 43, 0}
}

func (x *RpcObjectListSetObjectTypeRequest) GetObjectIds() []string {
	if x != nil {
		return x.ObjectIds
	}
	return nil
}

func (x *RpcObjectListSetObjectTypeRequest) GetObjectTypeUniqueKey() string {
	if x != nil {
		return x.ObjectTypeUniqueKey
	}
	return ""
}

type RpcObjectListSetObjectTypeResponse struct {
	state         protoimpl.MessageState                   `protogen:"open.v1"`
	Error         *RpcObjectListSetObjectTypeResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent                           `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectListSetObjectTypeResponse) Reset() {
	*x = RpcObjectListSetObjectTypeResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[453]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectListSetObjectTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectListSetObjectTypeResponse) ProtoMessage() {}

func (x *RpcObjectListSetObjectTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[453]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectListSetObjectTypeResponse.ProtoReflect.Descriptor instead.
func (*RpcObjectListSetObjectTypeResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 43, 1}
}

func (x *RpcObjectListSetObjectTypeResponse) GetError() *RpcObjectListSetObjectTypeResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcObjectListSetObjectTypeResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcObjectListSetObjectTypeResponseError struct {
	state         protoimpl.MessageState                      `protogen:"open.v1"`
	Code          RpcObjectListSetObjectTypeResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcObjectListSetObjectTypeResponseErrorCode" json:"code,omitempty"`
	Description   string                                      `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectListSetObjectTypeResponseError) Reset() {
	*x = RpcObjectListSetObjectTypeResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[454]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectListSetObjectTypeResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectListSetObjectTypeResponseError) ProtoMessage() {}

func (x *RpcObjectListSetObjectTypeResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[454]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectListSetObjectTypeResponseError.ProtoReflect.Descriptor instead.
func (*RpcObjectListSetObjectTypeResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 43, 1, 0}
}

func (x *RpcObjectListSetObjectTypeResponseError) GetCode() RpcObjectListSetObjectTypeResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcObjectListSetObjectTypeResponseError_NULL
}

func (x *RpcObjectListSetObjectTypeResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcObjectListSetDetailsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ObjectIds     []string               `protobuf:"bytes,1,rep,name=objectIds,proto3" json:"objectIds,omitempty"`
	Details       []*model.Detail        `protobuf:"bytes,2,rep,name=details,proto3" json:"details,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectListSetDetailsRequest) Reset() {
	*x = RpcObjectListSetDetailsRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[455]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectListSetDetailsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectListSetDetailsRequest) ProtoMessage() {}

func (x *RpcObjectListSetDetailsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[455]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectListSetDetailsRequest.ProtoReflect.Descriptor instead.
func (*RpcObjectListSetDetailsRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 44, 0}
}

func (x *RpcObjectListSetDetailsRequest) GetObjectIds() []string {
	if x != nil {
		return x.ObjectIds
	}
	return nil
}

func (x *RpcObjectListSetDetailsRequest) GetDetails() []*model.Detail {
	if x != nil {
		return x.Details
	}
	return nil
}

type RpcObjectListSetDetailsResponse struct {
	state         protoimpl.MessageState                `protogen:"open.v1"`
	Error         *RpcObjectListSetDetailsResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent                        `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectListSetDetailsResponse) Reset() {
	*x = RpcObjectListSetDetailsResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[456]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectListSetDetailsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectListSetDetailsResponse) ProtoMessage() {}

func (x *RpcObjectListSetDetailsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[456]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectListSetDetailsResponse.ProtoReflect.Descriptor instead.
func (*RpcObjectListSetDetailsResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 44, 1}
}

func (x *RpcObjectListSetDetailsResponse) GetError() *RpcObjectListSetDetailsResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcObjectListSetDetailsResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcObjectListSetDetailsResponseError struct {
	state         protoimpl.MessageState                   `protogen:"open.v1"`
	Code          RpcObjectListSetDetailsResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcObjectListSetDetailsResponseErrorCode" json:"code,omitempty"`
	Description   string                                   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectListSetDetailsResponseError) Reset() {
	*x = RpcObjectListSetDetailsResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[457]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectListSetDetailsResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectListSetDetailsResponseError) ProtoMessage() {}

func (x *RpcObjectListSetDetailsResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[457]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectListSetDetailsResponseError.ProtoReflect.Descriptor instead.
func (*RpcObjectListSetDetailsResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 44, 1, 0}
}

func (x *RpcObjectListSetDetailsResponseError) GetCode() RpcObjectListSetDetailsResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcObjectListSetDetailsResponseError_NULL
}

func (x *RpcObjectListSetDetailsResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcObjectListModifyDetailValuesRequest struct {
	state         protoimpl.MessageState                             `protogen:"open.v1"`
	ObjectIds     []string                                           `protobuf:"bytes,1,rep,name=objectIds,proto3" json:"objectIds,omitempty"`
	Operations    []*RpcObjectListModifyDetailValuesRequestOperation `protobuf:"bytes,2,rep,name=operations,proto3" json:"operations,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectListModifyDetailValuesRequest) Reset() {
	*x = RpcObjectListModifyDetailValuesRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[458]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectListModifyDetailValuesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectListModifyDetailValuesRequest) ProtoMessage() {}

func (x *RpcObjectListModifyDetailValuesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[458]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectListModifyDetailValuesRequest.ProtoReflect.Descriptor instead.
func (*RpcObjectListModifyDetailValuesRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 45, 0}
}

func (x *RpcObjectListModifyDetailValuesRequest) GetObjectIds() []string {
	if x != nil {
		return x.ObjectIds
	}
	return nil
}

func (x *RpcObjectListModifyDetailValuesRequest) GetOperations() []*RpcObjectListModifyDetailValuesRequestOperation {
	if x != nil {
		return x.Operations
	}
	return nil
}

type RpcObjectListModifyDetailValuesResponse struct {
	state         protoimpl.MessageState                        `protogen:"open.v1"`
	Error         *RpcObjectListModifyDetailValuesResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectListModifyDetailValuesResponse) Reset() {
	*x = RpcObjectListModifyDetailValuesResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[459]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectListModifyDetailValuesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectListModifyDetailValuesResponse) ProtoMessage() {}

func (x *RpcObjectListModifyDetailValuesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[459]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectListModifyDetailValuesResponse.ProtoReflect.Descriptor instead.
func (*RpcObjectListModifyDetailValuesResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 45, 1}
}

func (x *RpcObjectListModifyDetailValuesResponse) GetError() *RpcObjectListModifyDetailValuesResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

type RpcObjectListModifyDetailValuesRequestOperation struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RelationKey   string                 `protobuf:"bytes,1,opt,name=relationKey,proto3" json:"relationKey,omitempty"`
	Add           *structpb.Value        `protobuf:"bytes,2,opt,name=add,proto3" json:"add,omitempty"`
	Set           *structpb.Value        `protobuf:"bytes,3,opt,name=set,proto3" json:"set,omitempty"`
	Remove        *structpb.Value        `protobuf:"bytes,4,opt,name=remove,proto3" json:"remove,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectListModifyDetailValuesRequestOperation) Reset() {
	*x = RpcObjectListModifyDetailValuesRequestOperation{}
	mi := &file_pb_protos_commands_proto_msgTypes[460]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectListModifyDetailValuesRequestOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectListModifyDetailValuesRequestOperation) ProtoMessage() {}

func (x *RpcObjectListModifyDetailValuesRequestOperation) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[460]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectListModifyDetailValuesRequestOperation.ProtoReflect.Descriptor instead.
func (*RpcObjectListModifyDetailValuesRequestOperation) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 45, 0, 0}
}

func (x *RpcObjectListModifyDetailValuesRequestOperation) GetRelationKey() string {
	if x != nil {
		return x.RelationKey
	}
	return ""
}

func (x *RpcObjectListModifyDetailValuesRequestOperation) GetAdd() *structpb.Value {
	if x != nil {
		return x.Add
	}
	return nil
}

func (x *RpcObjectListModifyDetailValuesRequestOperation) GetSet() *structpb.Value {
	if x != nil {
		return x.Set
	}
	return nil
}

func (x *RpcObjectListModifyDetailValuesRequestOperation) GetRemove() *structpb.Value {
	if x != nil {
		return x.Remove
	}
	return nil
}

type RpcObjectListModifyDetailValuesResponseError struct {
	state         protoimpl.MessageState                           `protogen:"open.v1"`
	Code          RpcObjectListModifyDetailValuesResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcObjectListModifyDetailValuesResponseErrorCode" json:"code,omitempty"`
	Description   string                                           `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectListModifyDetailValuesResponseError) Reset() {
	*x = RpcObjectListModifyDetailValuesResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[461]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectListModifyDetailValuesResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectListModifyDetailValuesResponseError) ProtoMessage() {}

func (x *RpcObjectListModifyDetailValuesResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[461]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectListModifyDetailValuesResponseError.ProtoReflect.Descriptor instead.
func (*RpcObjectListModifyDetailValuesResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 45, 1, 0}
}

func (x *RpcObjectListModifyDetailValuesResponseError) GetCode() RpcObjectListModifyDetailValuesResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcObjectListModifyDetailValuesResponseError_NULL
}

func (x *RpcObjectListModifyDetailValuesResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcObjectApplyTemplateRequest struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	ContextId string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	// id of template
	TemplateId    string `protobuf:"bytes,2,opt,name=templateId,proto3" json:"templateId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectApplyTemplateRequest) Reset() {
	*x = RpcObjectApplyTemplateRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[462]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectApplyTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectApplyTemplateRequest) ProtoMessage() {}

func (x *RpcObjectApplyTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[462]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectApplyTemplateRequest.ProtoReflect.Descriptor instead.
func (*RpcObjectApplyTemplateRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 46, 0}
}

func (x *RpcObjectApplyTemplateRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcObjectApplyTemplateRequest) GetTemplateId() string {
	if x != nil {
		return x.TemplateId
	}
	return ""
}

type RpcObjectApplyTemplateResponse struct {
	state         protoimpl.MessageState               `protogen:"open.v1"`
	Error         *RpcObjectApplyTemplateResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectApplyTemplateResponse) Reset() {
	*x = RpcObjectApplyTemplateResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[463]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectApplyTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectApplyTemplateResponse) ProtoMessage() {}

func (x *RpcObjectApplyTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[463]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectApplyTemplateResponse.ProtoReflect.Descriptor instead.
func (*RpcObjectApplyTemplateResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 46, 1}
}

func (x *RpcObjectApplyTemplateResponse) GetError() *RpcObjectApplyTemplateResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

type RpcObjectApplyTemplateResponseError struct {
	state         protoimpl.MessageState                  `protogen:"open.v1"`
	Code          RpcObjectApplyTemplateResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcObjectApplyTemplateResponseErrorCode" json:"code,omitempty"`
	Description   string                                  `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectApplyTemplateResponseError) Reset() {
	*x = RpcObjectApplyTemplateResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[464]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectApplyTemplateResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectApplyTemplateResponseError) ProtoMessage() {}

func (x *RpcObjectApplyTemplateResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[464]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectApplyTemplateResponseError.ProtoReflect.Descriptor instead.
func (*RpcObjectApplyTemplateResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 46, 1, 0}
}

func (x *RpcObjectApplyTemplateResponseError) GetCode() RpcObjectApplyTemplateResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcObjectApplyTemplateResponseError_NULL
}

func (x *RpcObjectApplyTemplateResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcObjectListExportRequest struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	SpaceId string                 `protobuf:"bytes,10,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	// the path where export files will place
	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	// ids of documents for export, when empty - will export all available docs
	ObjectIds []string `protobuf:"bytes,2,rep,name=objectIds,proto3" json:"objectIds,omitempty"`
	// export format
	Format model.ExportFormat `protobuf:"varint,3,opt,name=format,proto3,enum=anytype.model.ExportFormat" json:"format,omitempty"`
	// save as zip file
	Zip bool `protobuf:"varint,4,opt,name=zip,proto3" json:"zip,omitempty"`
	// include all nested
	IncludeNested bool `protobuf:"varint,5,opt,name=includeNested,proto3" json:"includeNested,omitempty"`
	// include all files
	IncludeFiles bool `protobuf:"varint,6,opt,name=includeFiles,proto3" json:"includeFiles,omitempty"`
	// for protobuf export
	IsJson bool `protobuf:"varint,7,opt,name=isJson,proto3" json:"isJson,omitempty"`
	// for migration
	IncludeArchived bool `protobuf:"varint,9,opt,name=includeArchived,proto3" json:"includeArchived,omitempty"`
	// for integrations like raycast and web publishing
	NoProgress        bool                             `protobuf:"varint,11,opt,name=noProgress,proto3" json:"noProgress,omitempty"`
	LinksStateFilters *RpcObjectListExportStateFilters `protobuf:"bytes,12,opt,name=linksStateFilters,proto3" json:"linksStateFilters,omitempty"`
	IncludeBacklinks  bool                             `protobuf:"varint,13,opt,name=includeBacklinks,proto3" json:"includeBacklinks,omitempty"`
	IncludeSpace      bool                             `protobuf:"varint,14,opt,name=includeSpace,proto3" json:"includeSpace,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *RpcObjectListExportRequest) Reset() {
	*x = RpcObjectListExportRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[465]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectListExportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectListExportRequest) ProtoMessage() {}

func (x *RpcObjectListExportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[465]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectListExportRequest.ProtoReflect.Descriptor instead.
func (*RpcObjectListExportRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 47, 0}
}

func (x *RpcObjectListExportRequest) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *RpcObjectListExportRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *RpcObjectListExportRequest) GetObjectIds() []string {
	if x != nil {
		return x.ObjectIds
	}
	return nil
}

func (x *RpcObjectListExportRequest) GetFormat() model.ExportFormat {
	if x != nil {
		return x.Format
	}
	return model.ExportFormat(0)
}

func (x *RpcObjectListExportRequest) GetZip() bool {
	if x != nil {
		return x.Zip
	}
	return false
}

func (x *RpcObjectListExportRequest) GetIncludeNested() bool {
	if x != nil {
		return x.IncludeNested
	}
	return false
}

func (x *RpcObjectListExportRequest) GetIncludeFiles() bool {
	if x != nil {
		return x.IncludeFiles
	}
	return false
}

func (x *RpcObjectListExportRequest) GetIsJson() bool {
	if x != nil {
		return x.IsJson
	}
	return false
}

func (x *RpcObjectListExportRequest) GetIncludeArchived() bool {
	if x != nil {
		return x.IncludeArchived
	}
	return false
}

func (x *RpcObjectListExportRequest) GetNoProgress() bool {
	if x != nil {
		return x.NoProgress
	}
	return false
}

func (x *RpcObjectListExportRequest) GetLinksStateFilters() *RpcObjectListExportStateFilters {
	if x != nil {
		return x.LinksStateFilters
	}
	return nil
}

func (x *RpcObjectListExportRequest) GetIncludeBacklinks() bool {
	if x != nil {
		return x.IncludeBacklinks
	}
	return false
}

func (x *RpcObjectListExportRequest) GetIncludeSpace() bool {
	if x != nil {
		return x.IncludeSpace
	}
	return false
}

type RpcObjectListExportStateFilters struct {
	state              protoimpl.MessageState                   `protogen:"open.v1"`
	RelationsWhiteList []*RpcObjectListExportRelationsWhiteList `protobuf:"bytes,1,rep,name=relationsWhiteList,proto3" json:"relationsWhiteList,omitempty"`
	RemoveBlocks       bool                                     `protobuf:"varint,2,opt,name=removeBlocks,proto3" json:"removeBlocks,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *RpcObjectListExportStateFilters) Reset() {
	*x = RpcObjectListExportStateFilters{}
	mi := &file_pb_protos_commands_proto_msgTypes[466]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectListExportStateFilters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectListExportStateFilters) ProtoMessage() {}

func (x *RpcObjectListExportStateFilters) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[466]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectListExportStateFilters.ProtoReflect.Descriptor instead.
func (*RpcObjectListExportStateFilters) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 47, 1}
}

func (x *RpcObjectListExportStateFilters) GetRelationsWhiteList() []*RpcObjectListExportRelationsWhiteList {
	if x != nil {
		return x.RelationsWhiteList
	}
	return nil
}

func (x *RpcObjectListExportStateFilters) GetRemoveBlocks() bool {
	if x != nil {
		return x.RemoveBlocks
	}
	return false
}

type RpcObjectListExportRelationsWhiteList struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Layout           model.ObjectTypeLayout `protobuf:"varint,1,opt,name=layout,proto3,enum=anytype.model.ObjectTypeLayout" json:"layout,omitempty"`
	AllowedRelations []string               `protobuf:"bytes,2,rep,name=allowedRelations,proto3" json:"allowedRelations,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *RpcObjectListExportRelationsWhiteList) Reset() {
	*x = RpcObjectListExportRelationsWhiteList{}
	mi := &file_pb_protos_commands_proto_msgTypes[467]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectListExportRelationsWhiteList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectListExportRelationsWhiteList) ProtoMessage() {}

func (x *RpcObjectListExportRelationsWhiteList) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[467]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectListExportRelationsWhiteList.ProtoReflect.Descriptor instead.
func (*RpcObjectListExportRelationsWhiteList) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 47, 2}
}

func (x *RpcObjectListExportRelationsWhiteList) GetLayout() model.ObjectTypeLayout {
	if x != nil {
		return x.Layout
	}
	return model.ObjectTypeLayout(0)
}

func (x *RpcObjectListExportRelationsWhiteList) GetAllowedRelations() []string {
	if x != nil {
		return x.AllowedRelations
	}
	return nil
}

type RpcObjectListExportResponse struct {
	state         protoimpl.MessageState            `protogen:"open.v1"`
	Error         *RpcObjectListExportResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Path          string                            `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Succeed       int32                             `protobuf:"varint,4,opt,name=succeed,proto3" json:"succeed,omitempty"`
	Event         *ResponseEvent                    `protobuf:"bytes,3,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectListExportResponse) Reset() {
	*x = RpcObjectListExportResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[468]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectListExportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectListExportResponse) ProtoMessage() {}

func (x *RpcObjectListExportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[468]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectListExportResponse.ProtoReflect.Descriptor instead.
func (*RpcObjectListExportResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 47, 3}
}

func (x *RpcObjectListExportResponse) GetError() *RpcObjectListExportResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcObjectListExportResponse) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *RpcObjectListExportResponse) GetSucceed() int32 {
	if x != nil {
		return x.Succeed
	}
	return 0
}

func (x *RpcObjectListExportResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcObjectListExportResponseError struct {
	state         protoimpl.MessageState               `protogen:"open.v1"`
	Code          RpcObjectListExportResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcObjectListExportResponseErrorCode" json:"code,omitempty"`
	Description   string                               `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectListExportResponseError) Reset() {
	*x = RpcObjectListExportResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[469]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectListExportResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectListExportResponseError) ProtoMessage() {}

func (x *RpcObjectListExportResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[469]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectListExportResponseError.ProtoReflect.Descriptor instead.
func (*RpcObjectListExportResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 47, 3, 0}
}

func (x *RpcObjectListExportResponseError) GetCode() RpcObjectListExportResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcObjectListExportResponseError_NULL
}

func (x *RpcObjectListExportResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcObjectImportRequest struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	SpaceId string                 `protobuf:"bytes,14,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	// Types that are valid to be assigned to Params:
	//
	//	*RpcObjectImportRequestParamsOfNotionParams
	//	*RpcObjectImportRequestParamsOfBookmarksParams
	//	*RpcObjectImportRequestParamsOfMarkdownParams
	//	*RpcObjectImportRequestParamsOfHtmlParams
	//	*RpcObjectImportRequestParamsOfTxtParams
	//	*RpcObjectImportRequestParamsOfPbParams
	//	*RpcObjectImportRequestParamsOfCsvParams
	Params                IsRpcObjectImportRequestParams    `protobuf_oneof:"params"`
	Snapshots             []*RpcObjectImportRequestSnapshot `protobuf:"bytes,8,rep,name=snapshots,proto3" json:"snapshots,omitempty"` // optional, for external developers usage
	UpdateExistingObjects bool                              `protobuf:"varint,9,opt,name=updateExistingObjects,proto3" json:"updateExistingObjects,omitempty"`
	Type                  model.ImportType                  `protobuf:"varint,10,opt,name=type,proto3,enum=anytype.model.ImportType" json:"type,omitempty"`
	Mode                  RpcObjectImportRequestMode        `protobuf:"varint,11,opt,name=mode,proto3,enum=anytype.RpcObjectImportRequestMode" json:"mode,omitempty"`
	NoProgress            bool                              `protobuf:"varint,12,opt,name=noProgress,proto3" json:"noProgress,omitempty"`
	IsMigration           bool                              `protobuf:"varint,13,opt,name=isMigration,proto3" json:"isMigration,omitempty"`
	IsNewSpace            bool                              `protobuf:"varint,15,opt,name=isNewSpace,proto3" json:"isNewSpace,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *RpcObjectImportRequest) Reset() {
	*x = RpcObjectImportRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[470]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectImportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectImportRequest) ProtoMessage() {}

func (x *RpcObjectImportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[470]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectImportRequest.ProtoReflect.Descriptor instead.
func (*RpcObjectImportRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 48, 0}
}

func (x *RpcObjectImportRequest) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *RpcObjectImportRequest) GetParams() IsRpcObjectImportRequestParams {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *RpcObjectImportRequest) GetNotionParams() *RpcObjectImportRequestNotionParams {
	if x != nil {
		if x, ok := x.Params.(*RpcObjectImportRequestParamsOfNotionParams); ok {
			return x.NotionParams
		}
	}
	return nil
}

func (x *RpcObjectImportRequest) GetBookmarksParams() *RpcObjectImportRequestBookmarksParams {
	if x != nil {
		if x, ok := x.Params.(*RpcObjectImportRequestParamsOfBookmarksParams); ok {
			return x.BookmarksParams
		}
	}
	return nil
}

func (x *RpcObjectImportRequest) GetMarkdownParams() *RpcObjectImportRequestMarkdownParams {
	if x != nil {
		if x, ok := x.Params.(*RpcObjectImportRequestParamsOfMarkdownParams); ok {
			return x.MarkdownParams
		}
	}
	return nil
}

func (x *RpcObjectImportRequest) GetHtmlParams() *RpcObjectImportRequestHtmlParams {
	if x != nil {
		if x, ok := x.Params.(*RpcObjectImportRequestParamsOfHtmlParams); ok {
			return x.HtmlParams
		}
	}
	return nil
}

func (x *RpcObjectImportRequest) GetTxtParams() *RpcObjectImportRequestTxtParams {
	if x != nil {
		if x, ok := x.Params.(*RpcObjectImportRequestParamsOfTxtParams); ok {
			return x.TxtParams
		}
	}
	return nil
}

func (x *RpcObjectImportRequest) GetPbParams() *RpcObjectImportRequestPbParams {
	if x != nil {
		if x, ok := x.Params.(*RpcObjectImportRequestParamsOfPbParams); ok {
			return x.PbParams
		}
	}
	return nil
}

func (x *RpcObjectImportRequest) GetCsvParams() *RpcObjectImportRequestCsvParams {
	if x != nil {
		if x, ok := x.Params.(*RpcObjectImportRequestParamsOfCsvParams); ok {
			return x.CsvParams
		}
	}
	return nil
}

func (x *RpcObjectImportRequest) GetSnapshots() []*RpcObjectImportRequestSnapshot {
	if x != nil {
		return x.Snapshots
	}
	return nil
}

func (x *RpcObjectImportRequest) GetUpdateExistingObjects() bool {
	if x != nil {
		return x.UpdateExistingObjects
	}
	return false
}

func (x *RpcObjectImportRequest) GetType() model.ImportType {
	if x != nil {
		return x.Type
	}
	return model.ImportType(0)
}

func (x *RpcObjectImportRequest) GetMode() RpcObjectImportRequestMode {
	if x != nil {
		return x.Mode
	}
	return RpcObjectImportRequest_ALL_OR_NOTHING
}

func (x *RpcObjectImportRequest) GetNoProgress() bool {
	if x != nil {
		return x.NoProgress
	}
	return false
}

func (x *RpcObjectImportRequest) GetIsMigration() bool {
	if x != nil {
		return x.IsMigration
	}
	return false
}

func (x *RpcObjectImportRequest) GetIsNewSpace() bool {
	if x != nil {
		return x.IsNewSpace
	}
	return false
}

type IsRpcObjectImportRequestParams interface {
	IsRpcObjectImportRequestParams()
}

type RpcObjectImportRequestParamsOfNotionParams struct {
	NotionParams *RpcObjectImportRequestNotionParams `protobuf:"bytes,1,opt,name=notionParams,proto3,oneof" json:"notionParams,omitempty"`
}

type RpcObjectImportRequestParamsOfBookmarksParams struct {
	BookmarksParams *RpcObjectImportRequestBookmarksParams `protobuf:"bytes,2,opt,name=bookmarksParams,proto3,oneof" json:"bookmarksParams,omitempty"` //for internal use
}

type RpcObjectImportRequestParamsOfMarkdownParams struct {
	MarkdownParams *RpcObjectImportRequestMarkdownParams `protobuf:"bytes,3,opt,name=markdownParams,proto3,oneof" json:"markdownParams,omitempty"`
}

type RpcObjectImportRequestParamsOfHtmlParams struct {
	HtmlParams *RpcObjectImportRequestHtmlParams `protobuf:"bytes,4,opt,name=htmlParams,proto3,oneof" json:"htmlParams,omitempty"`
}

type RpcObjectImportRequestParamsOfTxtParams struct {
	TxtParams *RpcObjectImportRequestTxtParams `protobuf:"bytes,5,opt,name=txtParams,proto3,oneof" json:"txtParams,omitempty"`
}

type RpcObjectImportRequestParamsOfPbParams struct {
	PbParams *RpcObjectImportRequestPbParams `protobuf:"bytes,6,opt,name=pbParams,proto3,oneof" json:"pbParams,omitempty"`
}

type RpcObjectImportRequestParamsOfCsvParams struct {
	CsvParams *RpcObjectImportRequestCsvParams `protobuf:"bytes,7,opt,name=csvParams,proto3,oneof" json:"csvParams,omitempty"`
}

func (*RpcObjectImportRequestParamsOfNotionParams) IsRpcObjectImportRequestParams() {}

func (*RpcObjectImportRequestParamsOfBookmarksParams) IsRpcObjectImportRequestParams() {}

func (*RpcObjectImportRequestParamsOfMarkdownParams) IsRpcObjectImportRequestParams() {}

func (*RpcObjectImportRequestParamsOfHtmlParams) IsRpcObjectImportRequestParams() {}

func (*RpcObjectImportRequestParamsOfTxtParams) IsRpcObjectImportRequestParams() {}

func (*RpcObjectImportRequestParamsOfPbParams) IsRpcObjectImportRequestParams() {}

func (*RpcObjectImportRequestParamsOfCsvParams) IsRpcObjectImportRequestParams() {}

type RpcObjectImportResponse struct {
	state         protoimpl.MessageState        `protogen:"open.v1"`
	Error         *RpcObjectImportResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`                // deprecated
	CollectionId  string                        `protobuf:"bytes,2,opt,name=collectionId,proto3" json:"collectionId,omitempty"`  // deprecated
	ObjectsCount  int64                         `protobuf:"varint,3,opt,name=objectsCount,proto3" json:"objectsCount,omitempty"` // deprecated
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectImportResponse) Reset() {
	*x = RpcObjectImportResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[471]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectImportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectImportResponse) ProtoMessage() {}

func (x *RpcObjectImportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[471]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectImportResponse.ProtoReflect.Descriptor instead.
func (*RpcObjectImportResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 48, 1}
}

func (x *RpcObjectImportResponse) GetError() *RpcObjectImportResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcObjectImportResponse) GetCollectionId() string {
	if x != nil {
		return x.CollectionId
	}
	return ""
}

func (x *RpcObjectImportResponse) GetObjectsCount() int64 {
	if x != nil {
		return x.ObjectsCount
	}
	return 0
}

type RpcObjectImportNotion struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectImportNotion) Reset() {
	*x = RpcObjectImportNotion{}
	mi := &file_pb_protos_commands_proto_msgTypes[472]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectImportNotion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectImportNotion) ProtoMessage() {}

func (x *RpcObjectImportNotion) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[472]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectImportNotion.ProtoReflect.Descriptor instead.
func (*RpcObjectImportNotion) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 48, 2}
}

type RpcObjectImportRequestNotionParams struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ApiKey        string                 `protobuf:"bytes,1,opt,name=apiKey,proto3" json:"apiKey,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectImportRequestNotionParams) Reset() {
	*x = RpcObjectImportRequestNotionParams{}
	mi := &file_pb_protos_commands_proto_msgTypes[473]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectImportRequestNotionParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectImportRequestNotionParams) ProtoMessage() {}

func (x *RpcObjectImportRequestNotionParams) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[473]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectImportRequestNotionParams.ProtoReflect.Descriptor instead.
func (*RpcObjectImportRequestNotionParams) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 48, 0, 0}
}

func (x *RpcObjectImportRequestNotionParams) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

type RpcObjectImportRequestMarkdownParams struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          []string               `protobuf:"bytes,1,rep,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectImportRequestMarkdownParams) Reset() {
	*x = RpcObjectImportRequestMarkdownParams{}
	mi := &file_pb_protos_commands_proto_msgTypes[474]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectImportRequestMarkdownParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectImportRequestMarkdownParams) ProtoMessage() {}

func (x *RpcObjectImportRequestMarkdownParams) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[474]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectImportRequestMarkdownParams.ProtoReflect.Descriptor instead.
func (*RpcObjectImportRequestMarkdownParams) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 48, 0, 1}
}

func (x *RpcObjectImportRequestMarkdownParams) GetPath() []string {
	if x != nil {
		return x.Path
	}
	return nil
}

type RpcObjectImportRequestBookmarksParams struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Url           string                 `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectImportRequestBookmarksParams) Reset() {
	*x = RpcObjectImportRequestBookmarksParams{}
	mi := &file_pb_protos_commands_proto_msgTypes[475]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectImportRequestBookmarksParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectImportRequestBookmarksParams) ProtoMessage() {}

func (x *RpcObjectImportRequestBookmarksParams) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[475]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectImportRequestBookmarksParams.ProtoReflect.Descriptor instead.
func (*RpcObjectImportRequestBookmarksParams) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 48, 0, 2}
}

func (x *RpcObjectImportRequestBookmarksParams) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type RpcObjectImportRequestHtmlParams struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          []string               `protobuf:"bytes,1,rep,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectImportRequestHtmlParams) Reset() {
	*x = RpcObjectImportRequestHtmlParams{}
	mi := &file_pb_protos_commands_proto_msgTypes[476]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectImportRequestHtmlParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectImportRequestHtmlParams) ProtoMessage() {}

func (x *RpcObjectImportRequestHtmlParams) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[476]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectImportRequestHtmlParams.ProtoReflect.Descriptor instead.
func (*RpcObjectImportRequestHtmlParams) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 48, 0, 3}
}

func (x *RpcObjectImportRequestHtmlParams) GetPath() []string {
	if x != nil {
		return x.Path
	}
	return nil
}

type RpcObjectImportRequestTxtParams struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          []string               `protobuf:"bytes,1,rep,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectImportRequestTxtParams) Reset() {
	*x = RpcObjectImportRequestTxtParams{}
	mi := &file_pb_protos_commands_proto_msgTypes[477]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectImportRequestTxtParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectImportRequestTxtParams) ProtoMessage() {}

func (x *RpcObjectImportRequestTxtParams) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[477]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectImportRequestTxtParams.ProtoReflect.Descriptor instead.
func (*RpcObjectImportRequestTxtParams) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 48, 0, 4}
}

func (x *RpcObjectImportRequestTxtParams) GetPath() []string {
	if x != nil {
		return x.Path
	}
	return nil
}

type RpcObjectImportRequestPbParams struct {
	state           protoimpl.MessageState             `protogen:"open.v1"`
	Path            []string                           `protobuf:"bytes,1,rep,name=path,proto3" json:"path,omitempty"`
	NoCollection    bool                               `protobuf:"varint,2,opt,name=noCollection,proto3" json:"noCollection,omitempty"`
	CollectionTitle string                             `protobuf:"bytes,3,opt,name=collectionTitle,proto3" json:"collectionTitle,omitempty"`
	ImportType      RpcObjectImportRequestPbParamsType `protobuf:"varint,4,opt,name=importType,proto3,enum=anytype.RpcObjectImportRequestPbParamsType" json:"importType,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *RpcObjectImportRequestPbParams) Reset() {
	*x = RpcObjectImportRequestPbParams{}
	mi := &file_pb_protos_commands_proto_msgTypes[478]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectImportRequestPbParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectImportRequestPbParams) ProtoMessage() {}

func (x *RpcObjectImportRequestPbParams) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[478]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectImportRequestPbParams.ProtoReflect.Descriptor instead.
func (*RpcObjectImportRequestPbParams) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 48, 0, 5}
}

func (x *RpcObjectImportRequestPbParams) GetPath() []string {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *RpcObjectImportRequestPbParams) GetNoCollection() bool {
	if x != nil {
		return x.NoCollection
	}
	return false
}

func (x *RpcObjectImportRequestPbParams) GetCollectionTitle() string {
	if x != nil {
		return x.CollectionTitle
	}
	return ""
}

func (x *RpcObjectImportRequestPbParams) GetImportType() RpcObjectImportRequestPbParamsType {
	if x != nil {
		return x.ImportType
	}
	return RpcObjectImportRequestPbParams_SPACE
}

type RpcObjectImportRequestCsvParams struct {
	state                   protoimpl.MessageState              `protogen:"open.v1"`
	Path                    []string                            `protobuf:"bytes,1,rep,name=path,proto3" json:"path,omitempty"`
	Mode                    RpcObjectImportRequestCsvParamsMode `protobuf:"varint,2,opt,name=mode,proto3,enum=anytype.RpcObjectImportRequestCsvParamsMode" json:"mode,omitempty"`
	UseFirstRowForRelations bool                                `protobuf:"varint,3,opt,name=useFirstRowForRelations,proto3" json:"useFirstRowForRelations,omitempty"`
	Delimiter               string                              `protobuf:"bytes,4,opt,name=delimiter,proto3" json:"delimiter,omitempty"`
	TransposeRowsAndColumns bool                                `protobuf:"varint,5,opt,name=transposeRowsAndColumns,proto3" json:"transposeRowsAndColumns,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *RpcObjectImportRequestCsvParams) Reset() {
	*x = RpcObjectImportRequestCsvParams{}
	mi := &file_pb_protos_commands_proto_msgTypes[479]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectImportRequestCsvParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectImportRequestCsvParams) ProtoMessage() {}

func (x *RpcObjectImportRequestCsvParams) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[479]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectImportRequestCsvParams.ProtoReflect.Descriptor instead.
func (*RpcObjectImportRequestCsvParams) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 48, 0, 6}
}

func (x *RpcObjectImportRequestCsvParams) GetPath() []string {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *RpcObjectImportRequestCsvParams) GetMode() RpcObjectImportRequestCsvParamsMode {
	if x != nil {
		return x.Mode
	}
	return RpcObjectImportRequestCsvParams_COLLECTION
}

func (x *RpcObjectImportRequestCsvParams) GetUseFirstRowForRelations() bool {
	if x != nil {
		return x.UseFirstRowForRelations
	}
	return false
}

func (x *RpcObjectImportRequestCsvParams) GetDelimiter() string {
	if x != nil {
		return x.Delimiter
	}
	return ""
}

func (x *RpcObjectImportRequestCsvParams) GetTransposeRowsAndColumns() bool {
	if x != nil {
		return x.TransposeRowsAndColumns
	}
	return false
}

type RpcObjectImportRequestSnapshot struct {
	state         protoimpl.MessageState        `protogen:"open.v1"`
	Id            string                        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Snapshot      *model.SmartBlockSnapshotBase `protobuf:"bytes,2,opt,name=snapshot,proto3" json:"snapshot,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectImportRequestSnapshot) Reset() {
	*x = RpcObjectImportRequestSnapshot{}
	mi := &file_pb_protos_commands_proto_msgTypes[480]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectImportRequestSnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectImportRequestSnapshot) ProtoMessage() {}

func (x *RpcObjectImportRequestSnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[480]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectImportRequestSnapshot.ProtoReflect.Descriptor instead.
func (*RpcObjectImportRequestSnapshot) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 48, 0, 7}
}

func (x *RpcObjectImportRequestSnapshot) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RpcObjectImportRequestSnapshot) GetSnapshot() *model.SmartBlockSnapshotBase {
	if x != nil {
		return x.Snapshot
	}
	return nil
}

type RpcObjectImportResponseError struct {
	state         protoimpl.MessageState           `protogen:"open.v1"`
	Code          RpcObjectImportResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcObjectImportResponseErrorCode" json:"code,omitempty"`
	Description   string                           `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectImportResponseError) Reset() {
	*x = RpcObjectImportResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[481]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectImportResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectImportResponseError) ProtoMessage() {}

func (x *RpcObjectImportResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[481]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectImportResponseError.ProtoReflect.Descriptor instead.
func (*RpcObjectImportResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 48, 1, 0}
}

func (x *RpcObjectImportResponseError) GetCode() RpcObjectImportResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcObjectImportResponseError_NULL
}

func (x *RpcObjectImportResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcObjectImportNotionValidateToken struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectImportNotionValidateToken) Reset() {
	*x = RpcObjectImportNotionValidateToken{}
	mi := &file_pb_protos_commands_proto_msgTypes[482]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectImportNotionValidateToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectImportNotionValidateToken) ProtoMessage() {}

func (x *RpcObjectImportNotionValidateToken) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[482]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectImportNotionValidateToken.ProtoReflect.Descriptor instead.
func (*RpcObjectImportNotionValidateToken) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 48, 2, 0}
}

type RpcObjectImportNotionValidateTokenRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Token         string                 `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectImportNotionValidateTokenRequest) Reset() {
	*x = RpcObjectImportNotionValidateTokenRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[483]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectImportNotionValidateTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectImportNotionValidateTokenRequest) ProtoMessage() {}

func (x *RpcObjectImportNotionValidateTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[483]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectImportNotionValidateTokenRequest.ProtoReflect.Descriptor instead.
func (*RpcObjectImportNotionValidateTokenRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 48, 2, 0, 0}
}

func (x *RpcObjectImportNotionValidateTokenRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type RpcObjectImportNotionValidateTokenResponse struct {
	state         protoimpl.MessageState                           `protogen:"open.v1"`
	Error         *RpcObjectImportNotionValidateTokenResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectImportNotionValidateTokenResponse) Reset() {
	*x = RpcObjectImportNotionValidateTokenResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[484]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectImportNotionValidateTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectImportNotionValidateTokenResponse) ProtoMessage() {}

func (x *RpcObjectImportNotionValidateTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[484]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectImportNotionValidateTokenResponse.ProtoReflect.Descriptor instead.
func (*RpcObjectImportNotionValidateTokenResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 48, 2, 0, 1}
}

func (x *RpcObjectImportNotionValidateTokenResponse) GetError() *RpcObjectImportNotionValidateTokenResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

type RpcObjectImportNotionValidateTokenResponseError struct {
	state         protoimpl.MessageState                              `protogen:"open.v1"`
	Code          RpcObjectImportNotionValidateTokenResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcObjectImportNotionValidateTokenResponseErrorCode" json:"code,omitempty"`
	Description   string                                              `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectImportNotionValidateTokenResponseError) Reset() {
	*x = RpcObjectImportNotionValidateTokenResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[485]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectImportNotionValidateTokenResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectImportNotionValidateTokenResponseError) ProtoMessage() {}

func (x *RpcObjectImportNotionValidateTokenResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[485]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectImportNotionValidateTokenResponseError.ProtoReflect.Descriptor instead.
func (*RpcObjectImportNotionValidateTokenResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 48, 2, 0, 1, 0}
}

func (x *RpcObjectImportNotionValidateTokenResponseError) GetCode() RpcObjectImportNotionValidateTokenResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcObjectImportNotionValidateTokenResponseError_NULL
}

func (x *RpcObjectImportNotionValidateTokenResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcObjectImportListRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectImportListRequest) Reset() {
	*x = RpcObjectImportListRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[486]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectImportListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectImportListRequest) ProtoMessage() {}

func (x *RpcObjectImportListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[486]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectImportListRequest.ProtoReflect.Descriptor instead.
func (*RpcObjectImportListRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 49, 0}
}

type RpcObjectImportListResponse struct {
	state         protoimpl.MessageState               `protogen:"open.v1"`
	Error         *RpcObjectImportListResponseError    `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Response      []*RpcObjectImportListImportResponse `protobuf:"bytes,2,rep,name=response,proto3" json:"response,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectImportListResponse) Reset() {
	*x = RpcObjectImportListResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[487]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectImportListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectImportListResponse) ProtoMessage() {}

func (x *RpcObjectImportListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[487]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectImportListResponse.ProtoReflect.Descriptor instead.
func (*RpcObjectImportListResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 49, 1}
}

func (x *RpcObjectImportListResponse) GetError() *RpcObjectImportListResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcObjectImportListResponse) GetResponse() []*RpcObjectImportListImportResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

type RpcObjectImportListImportResponse struct {
	state         protoimpl.MessageState                `protogen:"open.v1"`
	Type          RpcObjectImportListImportResponseType `protobuf:"varint,1,opt,name=type,proto3,enum=anytype.RpcObjectImportListImportResponseType" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectImportListImportResponse) Reset() {
	*x = RpcObjectImportListImportResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[488]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectImportListImportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectImportListImportResponse) ProtoMessage() {}

func (x *RpcObjectImportListImportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[488]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectImportListImportResponse.ProtoReflect.Descriptor instead.
func (*RpcObjectImportListImportResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 49, 2}
}

func (x *RpcObjectImportListImportResponse) GetType() RpcObjectImportListImportResponseType {
	if x != nil {
		return x.Type
	}
	return RpcObjectImportListImportResponse_Notion
}

type RpcObjectImportListResponseError struct {
	state         protoimpl.MessageState               `protogen:"open.v1"`
	Code          RpcObjectImportListResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcObjectImportListResponseErrorCode" json:"code,omitempty"`
	Description   string                               `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectImportListResponseError) Reset() {
	*x = RpcObjectImportListResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[489]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectImportListResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectImportListResponseError) ProtoMessage() {}

func (x *RpcObjectImportListResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[489]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectImportListResponseError.ProtoReflect.Descriptor instead.
func (*RpcObjectImportListResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 49, 1, 0}
}

func (x *RpcObjectImportListResponseError) GetCode() RpcObjectImportListResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcObjectImportListResponseError_NULL
}

func (x *RpcObjectImportListResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcObjectImportUseCaseRequest struct {
	state         protoimpl.MessageState               `protogen:"open.v1"`
	SpaceId       string                               `protobuf:"bytes,2,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	UseCase       RpcObjectImportUseCaseRequestUseCase `protobuf:"varint,1,opt,name=useCase,proto3,enum=anytype.RpcObjectImportUseCaseRequestUseCase" json:"useCase,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectImportUseCaseRequest) Reset() {
	*x = RpcObjectImportUseCaseRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[490]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectImportUseCaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectImportUseCaseRequest) ProtoMessage() {}

func (x *RpcObjectImportUseCaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[490]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectImportUseCaseRequest.ProtoReflect.Descriptor instead.
func (*RpcObjectImportUseCaseRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 50, 0}
}

func (x *RpcObjectImportUseCaseRequest) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *RpcObjectImportUseCaseRequest) GetUseCase() RpcObjectImportUseCaseRequestUseCase {
	if x != nil {
		return x.UseCase
	}
	return RpcObjectImportUseCaseRequest_NONE
}

type RpcObjectImportUseCaseResponse struct {
	state         protoimpl.MessageState               `protogen:"open.v1"`
	Error         *RpcObjectImportUseCaseResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent                       `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectImportUseCaseResponse) Reset() {
	*x = RpcObjectImportUseCaseResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[491]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectImportUseCaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectImportUseCaseResponse) ProtoMessage() {}

func (x *RpcObjectImportUseCaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[491]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectImportUseCaseResponse.ProtoReflect.Descriptor instead.
func (*RpcObjectImportUseCaseResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 50, 1}
}

func (x *RpcObjectImportUseCaseResponse) GetError() *RpcObjectImportUseCaseResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcObjectImportUseCaseResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcObjectImportUseCaseResponseError struct {
	state         protoimpl.MessageState                  `protogen:"open.v1"`
	Code          RpcObjectImportUseCaseResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcObjectImportUseCaseResponseErrorCode" json:"code,omitempty"`
	Description   string                                  `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectImportUseCaseResponseError) Reset() {
	*x = RpcObjectImportUseCaseResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[492]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectImportUseCaseResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectImportUseCaseResponseError) ProtoMessage() {}

func (x *RpcObjectImportUseCaseResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[492]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectImportUseCaseResponseError.ProtoReflect.Descriptor instead.
func (*RpcObjectImportUseCaseResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 50, 1, 0}
}

func (x *RpcObjectImportUseCaseResponseError) GetCode() RpcObjectImportUseCaseResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcObjectImportUseCaseResponseError_NULL
}

func (x *RpcObjectImportUseCaseResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcObjectImportExperienceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SpaceId       string                 `protobuf:"bytes,1,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	Url           string                 `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	Title         string                 `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	IsNewSpace    bool                   `protobuf:"varint,4,opt,name=isNewSpace,proto3" json:"isNewSpace,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectImportExperienceRequest) Reset() {
	*x = RpcObjectImportExperienceRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[493]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectImportExperienceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectImportExperienceRequest) ProtoMessage() {}

func (x *RpcObjectImportExperienceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[493]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectImportExperienceRequest.ProtoReflect.Descriptor instead.
func (*RpcObjectImportExperienceRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 51, 0}
}

func (x *RpcObjectImportExperienceRequest) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *RpcObjectImportExperienceRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *RpcObjectImportExperienceRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *RpcObjectImportExperienceRequest) GetIsNewSpace() bool {
	if x != nil {
		return x.IsNewSpace
	}
	return false
}

type RpcObjectImportExperienceResponse struct {
	state         protoimpl.MessageState                  `protogen:"open.v1"`
	Error         *RpcObjectImportExperienceResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent                          `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectImportExperienceResponse) Reset() {
	*x = RpcObjectImportExperienceResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[494]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectImportExperienceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectImportExperienceResponse) ProtoMessage() {}

func (x *RpcObjectImportExperienceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[494]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectImportExperienceResponse.ProtoReflect.Descriptor instead.
func (*RpcObjectImportExperienceResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 51, 1}
}

func (x *RpcObjectImportExperienceResponse) GetError() *RpcObjectImportExperienceResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcObjectImportExperienceResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcObjectImportExperienceResponseError struct {
	state         protoimpl.MessageState                     `protogen:"open.v1"`
	Code          RpcObjectImportExperienceResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcObjectImportExperienceResponseErrorCode" json:"code,omitempty"`
	Description   string                                     `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectImportExperienceResponseError) Reset() {
	*x = RpcObjectImportExperienceResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[495]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectImportExperienceResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectImportExperienceResponseError) ProtoMessage() {}

func (x *RpcObjectImportExperienceResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[495]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectImportExperienceResponseError.ProtoReflect.Descriptor instead.
func (*RpcObjectImportExperienceResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 51, 1, 0}
}

func (x *RpcObjectImportExperienceResponseError) GetCode() RpcObjectImportExperienceResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcObjectImportExperienceResponseError_NULL
}

func (x *RpcObjectImportExperienceResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcObjectDateByTimestampRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SpaceId       string                 `protobuf:"bytes,1,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	Timestamp     int64                  `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectDateByTimestampRequest) Reset() {
	*x = RpcObjectDateByTimestampRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[496]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectDateByTimestampRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectDateByTimestampRequest) ProtoMessage() {}

func (x *RpcObjectDateByTimestampRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[496]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectDateByTimestampRequest.ProtoReflect.Descriptor instead.
func (*RpcObjectDateByTimestampRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 52, 0}
}

func (x *RpcObjectDateByTimestampRequest) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *RpcObjectDateByTimestampRequest) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type RpcObjectDateByTimestampResponse struct {
	state         protoimpl.MessageState                 `protogen:"open.v1"`
	Error         *RpcObjectDateByTimestampResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Details       *structpb.Struct                       `protobuf:"bytes,2,opt,name=details,proto3" json:"details,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectDateByTimestampResponse) Reset() {
	*x = RpcObjectDateByTimestampResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[497]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectDateByTimestampResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectDateByTimestampResponse) ProtoMessage() {}

func (x *RpcObjectDateByTimestampResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[497]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectDateByTimestampResponse.ProtoReflect.Descriptor instead.
func (*RpcObjectDateByTimestampResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 52, 1}
}

func (x *RpcObjectDateByTimestampResponse) GetError() *RpcObjectDateByTimestampResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcObjectDateByTimestampResponse) GetDetails() *structpb.Struct {
	if x != nil {
		return x.Details
	}
	return nil
}

type RpcObjectDateByTimestampResponseError struct {
	state         protoimpl.MessageState                    `protogen:"open.v1"`
	Code          RpcObjectDateByTimestampResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcObjectDateByTimestampResponseErrorCode" json:"code,omitempty"`
	Description   string                                    `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectDateByTimestampResponseError) Reset() {
	*x = RpcObjectDateByTimestampResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[498]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectDateByTimestampResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectDateByTimestampResponseError) ProtoMessage() {}

func (x *RpcObjectDateByTimestampResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[498]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectDateByTimestampResponseError.ProtoReflect.Descriptor instead.
func (*RpcObjectDateByTimestampResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 6, 52, 1, 0}
}

func (x *RpcObjectDateByTimestampResponseError) GetCode() RpcObjectDateByTimestampResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcObjectDateByTimestampResponseError_NULL
}

func (x *RpcObjectDateByTimestampResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcObjectCollectionAdd struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectCollectionAdd) Reset() {
	*x = RpcObjectCollectionAdd{}
	mi := &file_pb_protos_commands_proto_msgTypes[499]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectCollectionAdd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectCollectionAdd) ProtoMessage() {}

func (x *RpcObjectCollectionAdd) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[499]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectCollectionAdd.ProtoReflect.Descriptor instead.
func (*RpcObjectCollectionAdd) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 7, 0}
}

type RpcObjectCollectionRemove struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectCollectionRemove) Reset() {
	*x = RpcObjectCollectionRemove{}
	mi := &file_pb_protos_commands_proto_msgTypes[500]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectCollectionRemove) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectCollectionRemove) ProtoMessage() {}

func (x *RpcObjectCollectionRemove) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[500]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectCollectionRemove.ProtoReflect.Descriptor instead.
func (*RpcObjectCollectionRemove) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 7, 1}
}

type RpcObjectCollectionSort struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectCollectionSort) Reset() {
	*x = RpcObjectCollectionSort{}
	mi := &file_pb_protos_commands_proto_msgTypes[501]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectCollectionSort) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectCollectionSort) ProtoMessage() {}

func (x *RpcObjectCollectionSort) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[501]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectCollectionSort.ProtoReflect.Descriptor instead.
func (*RpcObjectCollectionSort) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 7, 2}
}

type RpcObjectCollectionAddRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextId     string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	AfterId       string                 `protobuf:"bytes,2,opt,name=afterId,proto3" json:"afterId,omitempty"`
	ObjectIds     []string               `protobuf:"bytes,3,rep,name=objectIds,proto3" json:"objectIds,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectCollectionAddRequest) Reset() {
	*x = RpcObjectCollectionAddRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[502]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectCollectionAddRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectCollectionAddRequest) ProtoMessage() {}

func (x *RpcObjectCollectionAddRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[502]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectCollectionAddRequest.ProtoReflect.Descriptor instead.
func (*RpcObjectCollectionAddRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 7, 0, 0}
}

func (x *RpcObjectCollectionAddRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcObjectCollectionAddRequest) GetAfterId() string {
	if x != nil {
		return x.AfterId
	}
	return ""
}

func (x *RpcObjectCollectionAddRequest) GetObjectIds() []string {
	if x != nil {
		return x.ObjectIds
	}
	return nil
}

type RpcObjectCollectionAddResponse struct {
	state         protoimpl.MessageState               `protogen:"open.v1"`
	Error         *RpcObjectCollectionAddResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent                       `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectCollectionAddResponse) Reset() {
	*x = RpcObjectCollectionAddResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[503]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectCollectionAddResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectCollectionAddResponse) ProtoMessage() {}

func (x *RpcObjectCollectionAddResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[503]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectCollectionAddResponse.ProtoReflect.Descriptor instead.
func (*RpcObjectCollectionAddResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 7, 0, 1}
}

func (x *RpcObjectCollectionAddResponse) GetError() *RpcObjectCollectionAddResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcObjectCollectionAddResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcObjectCollectionAddResponseError struct {
	state         protoimpl.MessageState                  `protogen:"open.v1"`
	Code          RpcObjectCollectionAddResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcObjectCollectionAddResponseErrorCode" json:"code,omitempty"`
	Description   string                                  `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectCollectionAddResponseError) Reset() {
	*x = RpcObjectCollectionAddResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[504]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectCollectionAddResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectCollectionAddResponseError) ProtoMessage() {}

func (x *RpcObjectCollectionAddResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[504]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectCollectionAddResponseError.ProtoReflect.Descriptor instead.
func (*RpcObjectCollectionAddResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 7, 0, 1, 0}
}

func (x *RpcObjectCollectionAddResponseError) GetCode() RpcObjectCollectionAddResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcObjectCollectionAddResponseError_NULL
}

func (x *RpcObjectCollectionAddResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcObjectCollectionRemoveRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextId     string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	ObjectIds     []string               `protobuf:"bytes,2,rep,name=objectIds,proto3" json:"objectIds,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectCollectionRemoveRequest) Reset() {
	*x = RpcObjectCollectionRemoveRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[505]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectCollectionRemoveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectCollectionRemoveRequest) ProtoMessage() {}

func (x *RpcObjectCollectionRemoveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[505]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectCollectionRemoveRequest.ProtoReflect.Descriptor instead.
func (*RpcObjectCollectionRemoveRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 7, 1, 0}
}

func (x *RpcObjectCollectionRemoveRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcObjectCollectionRemoveRequest) GetObjectIds() []string {
	if x != nil {
		return x.ObjectIds
	}
	return nil
}

type RpcObjectCollectionRemoveResponse struct {
	state         protoimpl.MessageState                  `protogen:"open.v1"`
	Error         *RpcObjectCollectionRemoveResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent                          `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectCollectionRemoveResponse) Reset() {
	*x = RpcObjectCollectionRemoveResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[506]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectCollectionRemoveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectCollectionRemoveResponse) ProtoMessage() {}

func (x *RpcObjectCollectionRemoveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[506]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectCollectionRemoveResponse.ProtoReflect.Descriptor instead.
func (*RpcObjectCollectionRemoveResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 7, 1, 1}
}

func (x *RpcObjectCollectionRemoveResponse) GetError() *RpcObjectCollectionRemoveResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcObjectCollectionRemoveResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcObjectCollectionRemoveResponseError struct {
	state         protoimpl.MessageState                     `protogen:"open.v1"`
	Code          RpcObjectCollectionRemoveResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcObjectCollectionRemoveResponseErrorCode" json:"code,omitempty"`
	Description   string                                     `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectCollectionRemoveResponseError) Reset() {
	*x = RpcObjectCollectionRemoveResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[507]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectCollectionRemoveResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectCollectionRemoveResponseError) ProtoMessage() {}

func (x *RpcObjectCollectionRemoveResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[507]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectCollectionRemoveResponseError.ProtoReflect.Descriptor instead.
func (*RpcObjectCollectionRemoveResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 7, 1, 1, 0}
}

func (x *RpcObjectCollectionRemoveResponseError) GetCode() RpcObjectCollectionRemoveResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcObjectCollectionRemoveResponseError_NULL
}

func (x *RpcObjectCollectionRemoveResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcObjectCollectionSortRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextId     string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	ObjectIds     []string               `protobuf:"bytes,2,rep,name=objectIds,proto3" json:"objectIds,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectCollectionSortRequest) Reset() {
	*x = RpcObjectCollectionSortRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[508]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectCollectionSortRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectCollectionSortRequest) ProtoMessage() {}

func (x *RpcObjectCollectionSortRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[508]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectCollectionSortRequest.ProtoReflect.Descriptor instead.
func (*RpcObjectCollectionSortRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 7, 2, 0}
}

func (x *RpcObjectCollectionSortRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcObjectCollectionSortRequest) GetObjectIds() []string {
	if x != nil {
		return x.ObjectIds
	}
	return nil
}

type RpcObjectCollectionSortResponse struct {
	state         protoimpl.MessageState                `protogen:"open.v1"`
	Error         *RpcObjectCollectionSortResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent                        `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectCollectionSortResponse) Reset() {
	*x = RpcObjectCollectionSortResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[509]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectCollectionSortResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectCollectionSortResponse) ProtoMessage() {}

func (x *RpcObjectCollectionSortResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[509]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectCollectionSortResponse.ProtoReflect.Descriptor instead.
func (*RpcObjectCollectionSortResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 7, 2, 1}
}

func (x *RpcObjectCollectionSortResponse) GetError() *RpcObjectCollectionSortResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcObjectCollectionSortResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcObjectCollectionSortResponseError struct {
	state         protoimpl.MessageState                   `protogen:"open.v1"`
	Code          RpcObjectCollectionSortResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcObjectCollectionSortResponseErrorCode" json:"code,omitempty"`
	Description   string                                   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectCollectionSortResponseError) Reset() {
	*x = RpcObjectCollectionSortResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[510]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectCollectionSortResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectCollectionSortResponseError) ProtoMessage() {}

func (x *RpcObjectCollectionSortResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[510]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectCollectionSortResponseError.ProtoReflect.Descriptor instead.
func (*RpcObjectCollectionSortResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 7, 2, 1, 0}
}

func (x *RpcObjectCollectionSortResponseError) GetCode() RpcObjectCollectionSortResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcObjectCollectionSortResponseError_NULL
}

func (x *RpcObjectCollectionSortResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcObjectRelationAdd struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectRelationAdd) Reset() {
	*x = RpcObjectRelationAdd{}
	mi := &file_pb_protos_commands_proto_msgTypes[511]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectRelationAdd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectRelationAdd) ProtoMessage() {}

func (x *RpcObjectRelationAdd) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[511]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectRelationAdd.ProtoReflect.Descriptor instead.
func (*RpcObjectRelationAdd) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 8, 0}
}

type RpcObjectRelationDelete struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectRelationDelete) Reset() {
	*x = RpcObjectRelationDelete{}
	mi := &file_pb_protos_commands_proto_msgTypes[512]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectRelationDelete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectRelationDelete) ProtoMessage() {}

func (x *RpcObjectRelationDelete) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[512]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectRelationDelete.ProtoReflect.Descriptor instead.
func (*RpcObjectRelationDelete) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 8, 1}
}

type RpcObjectRelationListAvailable struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectRelationListAvailable) Reset() {
	*x = RpcObjectRelationListAvailable{}
	mi := &file_pb_protos_commands_proto_msgTypes[513]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectRelationListAvailable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectRelationListAvailable) ProtoMessage() {}

func (x *RpcObjectRelationListAvailable) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[513]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectRelationListAvailable.ProtoReflect.Descriptor instead.
func (*RpcObjectRelationListAvailable) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 8, 2}
}

type RpcObjectRelationAddFeatured struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectRelationAddFeatured) Reset() {
	*x = RpcObjectRelationAddFeatured{}
	mi := &file_pb_protos_commands_proto_msgTypes[514]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectRelationAddFeatured) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectRelationAddFeatured) ProtoMessage() {}

func (x *RpcObjectRelationAddFeatured) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[514]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectRelationAddFeatured.ProtoReflect.Descriptor instead.
func (*RpcObjectRelationAddFeatured) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 8, 3}
}

type RpcObjectRelationRemoveFeatured struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectRelationRemoveFeatured) Reset() {
	*x = RpcObjectRelationRemoveFeatured{}
	mi := &file_pb_protos_commands_proto_msgTypes[515]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectRelationRemoveFeatured) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectRelationRemoveFeatured) ProtoMessage() {}

func (x *RpcObjectRelationRemoveFeatured) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[515]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectRelationRemoveFeatured.ProtoReflect.Descriptor instead.
func (*RpcObjectRelationRemoveFeatured) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 8, 4}
}

type RpcObjectRelationAddRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextId     string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	RelationKeys  []string               `protobuf:"bytes,2,rep,name=relationKeys,proto3" json:"relationKeys,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectRelationAddRequest) Reset() {
	*x = RpcObjectRelationAddRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[516]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectRelationAddRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectRelationAddRequest) ProtoMessage() {}

func (x *RpcObjectRelationAddRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[516]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectRelationAddRequest.ProtoReflect.Descriptor instead.
func (*RpcObjectRelationAddRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 8, 0, 0}
}

func (x *RpcObjectRelationAddRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcObjectRelationAddRequest) GetRelationKeys() []string {
	if x != nil {
		return x.RelationKeys
	}
	return nil
}

type RpcObjectRelationAddResponse struct {
	state         protoimpl.MessageState             `protogen:"open.v1"`
	Error         *RpcObjectRelationAddResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent                     `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectRelationAddResponse) Reset() {
	*x = RpcObjectRelationAddResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[517]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectRelationAddResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectRelationAddResponse) ProtoMessage() {}

func (x *RpcObjectRelationAddResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[517]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectRelationAddResponse.ProtoReflect.Descriptor instead.
func (*RpcObjectRelationAddResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 8, 0, 1}
}

func (x *RpcObjectRelationAddResponse) GetError() *RpcObjectRelationAddResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcObjectRelationAddResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcObjectRelationAddResponseError struct {
	state         protoimpl.MessageState                `protogen:"open.v1"`
	Code          RpcObjectRelationAddResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcObjectRelationAddResponseErrorCode" json:"code,omitempty"`
	Description   string                                `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectRelationAddResponseError) Reset() {
	*x = RpcObjectRelationAddResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[518]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectRelationAddResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectRelationAddResponseError) ProtoMessage() {}

func (x *RpcObjectRelationAddResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[518]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectRelationAddResponseError.ProtoReflect.Descriptor instead.
func (*RpcObjectRelationAddResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 8, 0, 1, 0}
}

func (x *RpcObjectRelationAddResponseError) GetCode() RpcObjectRelationAddResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcObjectRelationAddResponseError_NULL
}

func (x *RpcObjectRelationAddResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcObjectRelationDeleteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextId     string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	RelationKeys  []string               `protobuf:"bytes,2,rep,name=relationKeys,proto3" json:"relationKeys,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectRelationDeleteRequest) Reset() {
	*x = RpcObjectRelationDeleteRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[519]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectRelationDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectRelationDeleteRequest) ProtoMessage() {}

func (x *RpcObjectRelationDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[519]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectRelationDeleteRequest.ProtoReflect.Descriptor instead.
func (*RpcObjectRelationDeleteRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 8, 1, 0}
}

func (x *RpcObjectRelationDeleteRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcObjectRelationDeleteRequest) GetRelationKeys() []string {
	if x != nil {
		return x.RelationKeys
	}
	return nil
}

type RpcObjectRelationDeleteResponse struct {
	state         protoimpl.MessageState                `protogen:"open.v1"`
	Error         *RpcObjectRelationDeleteResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent                        `protobuf:"bytes,3,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectRelationDeleteResponse) Reset() {
	*x = RpcObjectRelationDeleteResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[520]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectRelationDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectRelationDeleteResponse) ProtoMessage() {}

func (x *RpcObjectRelationDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[520]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectRelationDeleteResponse.ProtoReflect.Descriptor instead.
func (*RpcObjectRelationDeleteResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 8, 1, 1}
}

func (x *RpcObjectRelationDeleteResponse) GetError() *RpcObjectRelationDeleteResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcObjectRelationDeleteResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcObjectRelationDeleteResponseError struct {
	state         protoimpl.MessageState                   `protogen:"open.v1"`
	Code          RpcObjectRelationDeleteResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcObjectRelationDeleteResponseErrorCode" json:"code,omitempty"`
	Description   string                                   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectRelationDeleteResponseError) Reset() {
	*x = RpcObjectRelationDeleteResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[521]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectRelationDeleteResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectRelationDeleteResponseError) ProtoMessage() {}

func (x *RpcObjectRelationDeleteResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[521]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectRelationDeleteResponseError.ProtoReflect.Descriptor instead.
func (*RpcObjectRelationDeleteResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 8, 1, 1, 0}
}

func (x *RpcObjectRelationDeleteResponseError) GetCode() RpcObjectRelationDeleteResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcObjectRelationDeleteResponseError_NULL
}

func (x *RpcObjectRelationDeleteResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcObjectRelationListAvailableRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextId     string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectRelationListAvailableRequest) Reset() {
	*x = RpcObjectRelationListAvailableRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[522]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectRelationListAvailableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectRelationListAvailableRequest) ProtoMessage() {}

func (x *RpcObjectRelationListAvailableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[522]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectRelationListAvailableRequest.ProtoReflect.Descriptor instead.
func (*RpcObjectRelationListAvailableRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 8, 2, 0}
}

func (x *RpcObjectRelationListAvailableRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

type RpcObjectRelationListAvailableResponse struct {
	state         protoimpl.MessageState                       `protogen:"open.v1"`
	Error         *RpcObjectRelationListAvailableResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Relations     []*model.Relation                            `protobuf:"bytes,2,rep,name=relations,proto3" json:"relations,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectRelationListAvailableResponse) Reset() {
	*x = RpcObjectRelationListAvailableResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[523]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectRelationListAvailableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectRelationListAvailableResponse) ProtoMessage() {}

func (x *RpcObjectRelationListAvailableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[523]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectRelationListAvailableResponse.ProtoReflect.Descriptor instead.
func (*RpcObjectRelationListAvailableResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 8, 2, 1}
}

func (x *RpcObjectRelationListAvailableResponse) GetError() *RpcObjectRelationListAvailableResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcObjectRelationListAvailableResponse) GetRelations() []*model.Relation {
	if x != nil {
		return x.Relations
	}
	return nil
}

type RpcObjectRelationListAvailableResponseError struct {
	state         protoimpl.MessageState                          `protogen:"open.v1"`
	Code          RpcObjectRelationListAvailableResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcObjectRelationListAvailableResponseErrorCode" json:"code,omitempty"`
	Description   string                                          `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectRelationListAvailableResponseError) Reset() {
	*x = RpcObjectRelationListAvailableResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[524]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectRelationListAvailableResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectRelationListAvailableResponseError) ProtoMessage() {}

func (x *RpcObjectRelationListAvailableResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[524]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectRelationListAvailableResponseError.ProtoReflect.Descriptor instead.
func (*RpcObjectRelationListAvailableResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 8, 2, 1, 0}
}

func (x *RpcObjectRelationListAvailableResponseError) GetCode() RpcObjectRelationListAvailableResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcObjectRelationListAvailableResponseError_NULL
}

func (x *RpcObjectRelationListAvailableResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcObjectRelationAddFeaturedRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextId     string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	Relations     []string               `protobuf:"bytes,2,rep,name=relations,proto3" json:"relations,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectRelationAddFeaturedRequest) Reset() {
	*x = RpcObjectRelationAddFeaturedRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[525]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectRelationAddFeaturedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectRelationAddFeaturedRequest) ProtoMessage() {}

func (x *RpcObjectRelationAddFeaturedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[525]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectRelationAddFeaturedRequest.ProtoReflect.Descriptor instead.
func (*RpcObjectRelationAddFeaturedRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 8, 3, 0}
}

func (x *RpcObjectRelationAddFeaturedRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcObjectRelationAddFeaturedRequest) GetRelations() []string {
	if x != nil {
		return x.Relations
	}
	return nil
}

type RpcObjectRelationAddFeaturedResponse struct {
	state         protoimpl.MessageState                     `protogen:"open.v1"`
	Error         *RpcObjectRelationAddFeaturedResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent                             `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectRelationAddFeaturedResponse) Reset() {
	*x = RpcObjectRelationAddFeaturedResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[526]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectRelationAddFeaturedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectRelationAddFeaturedResponse) ProtoMessage() {}

func (x *RpcObjectRelationAddFeaturedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[526]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectRelationAddFeaturedResponse.ProtoReflect.Descriptor instead.
func (*RpcObjectRelationAddFeaturedResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 8, 3, 1}
}

func (x *RpcObjectRelationAddFeaturedResponse) GetError() *RpcObjectRelationAddFeaturedResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcObjectRelationAddFeaturedResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcObjectRelationAddFeaturedResponseError struct {
	state         protoimpl.MessageState                        `protogen:"open.v1"`
	Code          RpcObjectRelationAddFeaturedResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcObjectRelationAddFeaturedResponseErrorCode" json:"code,omitempty"`
	Description   string                                        `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectRelationAddFeaturedResponseError) Reset() {
	*x = RpcObjectRelationAddFeaturedResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[527]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectRelationAddFeaturedResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectRelationAddFeaturedResponseError) ProtoMessage() {}

func (x *RpcObjectRelationAddFeaturedResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[527]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectRelationAddFeaturedResponseError.ProtoReflect.Descriptor instead.
func (*RpcObjectRelationAddFeaturedResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 8, 3, 1, 0}
}

func (x *RpcObjectRelationAddFeaturedResponseError) GetCode() RpcObjectRelationAddFeaturedResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcObjectRelationAddFeaturedResponseError_NULL
}

func (x *RpcObjectRelationAddFeaturedResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcObjectRelationRemoveFeaturedRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextId     string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	Relations     []string               `protobuf:"bytes,2,rep,name=relations,proto3" json:"relations,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectRelationRemoveFeaturedRequest) Reset() {
	*x = RpcObjectRelationRemoveFeaturedRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[528]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectRelationRemoveFeaturedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectRelationRemoveFeaturedRequest) ProtoMessage() {}

func (x *RpcObjectRelationRemoveFeaturedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[528]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectRelationRemoveFeaturedRequest.ProtoReflect.Descriptor instead.
func (*RpcObjectRelationRemoveFeaturedRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 8, 4, 0}
}

func (x *RpcObjectRelationRemoveFeaturedRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcObjectRelationRemoveFeaturedRequest) GetRelations() []string {
	if x != nil {
		return x.Relations
	}
	return nil
}

type RpcObjectRelationRemoveFeaturedResponse struct {
	state         protoimpl.MessageState                        `protogen:"open.v1"`
	Error         *RpcObjectRelationRemoveFeaturedResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent                                `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectRelationRemoveFeaturedResponse) Reset() {
	*x = RpcObjectRelationRemoveFeaturedResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[529]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectRelationRemoveFeaturedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectRelationRemoveFeaturedResponse) ProtoMessage() {}

func (x *RpcObjectRelationRemoveFeaturedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[529]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectRelationRemoveFeaturedResponse.ProtoReflect.Descriptor instead.
func (*RpcObjectRelationRemoveFeaturedResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 8, 4, 1}
}

func (x *RpcObjectRelationRemoveFeaturedResponse) GetError() *RpcObjectRelationRemoveFeaturedResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcObjectRelationRemoveFeaturedResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcObjectRelationRemoveFeaturedResponseError struct {
	state         protoimpl.MessageState                           `protogen:"open.v1"`
	Code          RpcObjectRelationRemoveFeaturedResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcObjectRelationRemoveFeaturedResponseErrorCode" json:"code,omitempty"`
	Description   string                                           `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectRelationRemoveFeaturedResponseError) Reset() {
	*x = RpcObjectRelationRemoveFeaturedResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[530]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectRelationRemoveFeaturedResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectRelationRemoveFeaturedResponseError) ProtoMessage() {}

func (x *RpcObjectRelationRemoveFeaturedResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[530]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectRelationRemoveFeaturedResponseError.ProtoReflect.Descriptor instead.
func (*RpcObjectRelationRemoveFeaturedResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 8, 4, 1, 0}
}

func (x *RpcObjectRelationRemoveFeaturedResponseError) GetCode() RpcObjectRelationRemoveFeaturedResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcObjectRelationRemoveFeaturedResponseError_NULL
}

func (x *RpcObjectRelationRemoveFeaturedResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcObjectTypeRelation struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectTypeRelation) Reset() {
	*x = RpcObjectTypeRelation{}
	mi := &file_pb_protos_commands_proto_msgTypes[531]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectTypeRelation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectTypeRelation) ProtoMessage() {}

func (x *RpcObjectTypeRelation) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[531]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectTypeRelation.ProtoReflect.Descriptor instead.
func (*RpcObjectTypeRelation) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 9, 0}
}

type RpcObjectTypeRecommended struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectTypeRecommended) Reset() {
	*x = RpcObjectTypeRecommended{}
	mi := &file_pb_protos_commands_proto_msgTypes[532]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectTypeRecommended) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectTypeRecommended) ProtoMessage() {}

func (x *RpcObjectTypeRecommended) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[532]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectTypeRecommended.ProtoReflect.Descriptor instead.
func (*RpcObjectTypeRecommended) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 9, 1}
}

type RpcObjectTypeListConflictingRelations struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectTypeListConflictingRelations) Reset() {
	*x = RpcObjectTypeListConflictingRelations{}
	mi := &file_pb_protos_commands_proto_msgTypes[533]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectTypeListConflictingRelations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectTypeListConflictingRelations) ProtoMessage() {}

func (x *RpcObjectTypeListConflictingRelations) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[533]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectTypeListConflictingRelations.ProtoReflect.Descriptor instead.
func (*RpcObjectTypeListConflictingRelations) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 9, 2}
}

type RpcObjectTypeRelationAdd struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectTypeRelationAdd) Reset() {
	*x = RpcObjectTypeRelationAdd{}
	mi := &file_pb_protos_commands_proto_msgTypes[534]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectTypeRelationAdd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectTypeRelationAdd) ProtoMessage() {}

func (x *RpcObjectTypeRelationAdd) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[534]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectTypeRelationAdd.ProtoReflect.Descriptor instead.
func (*RpcObjectTypeRelationAdd) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 9, 0, 0}
}

type RpcObjectTypeRelationRemove struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectTypeRelationRemove) Reset() {
	*x = RpcObjectTypeRelationRemove{}
	mi := &file_pb_protos_commands_proto_msgTypes[535]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectTypeRelationRemove) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectTypeRelationRemove) ProtoMessage() {}

func (x *RpcObjectTypeRelationRemove) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[535]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectTypeRelationRemove.ProtoReflect.Descriptor instead.
func (*RpcObjectTypeRelationRemove) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 9, 0, 1}
}

type RpcObjectTypeRelationAddRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ObjectTypeUrl string                 `protobuf:"bytes,1,opt,name=objectTypeUrl,proto3" json:"objectTypeUrl,omitempty"`
	RelationKeys  []string               `protobuf:"bytes,2,rep,name=relationKeys,proto3" json:"relationKeys,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectTypeRelationAddRequest) Reset() {
	*x = RpcObjectTypeRelationAddRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[536]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectTypeRelationAddRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectTypeRelationAddRequest) ProtoMessage() {}

func (x *RpcObjectTypeRelationAddRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[536]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectTypeRelationAddRequest.ProtoReflect.Descriptor instead.
func (*RpcObjectTypeRelationAddRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 9, 0, 0, 0}
}

func (x *RpcObjectTypeRelationAddRequest) GetObjectTypeUrl() string {
	if x != nil {
		return x.ObjectTypeUrl
	}
	return ""
}

func (x *RpcObjectTypeRelationAddRequest) GetRelationKeys() []string {
	if x != nil {
		return x.RelationKeys
	}
	return nil
}

type RpcObjectTypeRelationAddResponse struct {
	state         protoimpl.MessageState                 `protogen:"open.v1"`
	Error         *RpcObjectTypeRelationAddResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Relations     []*model.Relation                      `protobuf:"bytes,2,rep,name=relations,proto3" json:"relations,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectTypeRelationAddResponse) Reset() {
	*x = RpcObjectTypeRelationAddResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[537]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectTypeRelationAddResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectTypeRelationAddResponse) ProtoMessage() {}

func (x *RpcObjectTypeRelationAddResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[537]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectTypeRelationAddResponse.ProtoReflect.Descriptor instead.
func (*RpcObjectTypeRelationAddResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 9, 0, 0, 1}
}

func (x *RpcObjectTypeRelationAddResponse) GetError() *RpcObjectTypeRelationAddResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcObjectTypeRelationAddResponse) GetRelations() []*model.Relation {
	if x != nil {
		return x.Relations
	}
	return nil
}

type RpcObjectTypeRelationAddResponseError struct {
	state         protoimpl.MessageState                    `protogen:"open.v1"`
	Code          RpcObjectTypeRelationAddResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcObjectTypeRelationAddResponseErrorCode" json:"code,omitempty"`
	Description   string                                    `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectTypeRelationAddResponseError) Reset() {
	*x = RpcObjectTypeRelationAddResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[538]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectTypeRelationAddResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectTypeRelationAddResponseError) ProtoMessage() {}

func (x *RpcObjectTypeRelationAddResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[538]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectTypeRelationAddResponseError.ProtoReflect.Descriptor instead.
func (*RpcObjectTypeRelationAddResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 9, 0, 0, 1, 0}
}

func (x *RpcObjectTypeRelationAddResponseError) GetCode() RpcObjectTypeRelationAddResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcObjectTypeRelationAddResponseError_NULL
}

func (x *RpcObjectTypeRelationAddResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcObjectTypeRelationRemoveRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ObjectTypeUrl string                 `protobuf:"bytes,1,opt,name=objectTypeUrl,proto3" json:"objectTypeUrl,omitempty"`
	RelationKeys  []string               `protobuf:"bytes,2,rep,name=relationKeys,proto3" json:"relationKeys,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectTypeRelationRemoveRequest) Reset() {
	*x = RpcObjectTypeRelationRemoveRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[539]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectTypeRelationRemoveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectTypeRelationRemoveRequest) ProtoMessage() {}

func (x *RpcObjectTypeRelationRemoveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[539]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectTypeRelationRemoveRequest.ProtoReflect.Descriptor instead.
func (*RpcObjectTypeRelationRemoveRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 9, 0, 1, 0}
}

func (x *RpcObjectTypeRelationRemoveRequest) GetObjectTypeUrl() string {
	if x != nil {
		return x.ObjectTypeUrl
	}
	return ""
}

func (x *RpcObjectTypeRelationRemoveRequest) GetRelationKeys() []string {
	if x != nil {
		return x.RelationKeys
	}
	return nil
}

type RpcObjectTypeRelationRemoveResponse struct {
	state         protoimpl.MessageState                    `protogen:"open.v1"`
	Error         *RpcObjectTypeRelationRemoveResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectTypeRelationRemoveResponse) Reset() {
	*x = RpcObjectTypeRelationRemoveResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[540]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectTypeRelationRemoveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectTypeRelationRemoveResponse) ProtoMessage() {}

func (x *RpcObjectTypeRelationRemoveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[540]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectTypeRelationRemoveResponse.ProtoReflect.Descriptor instead.
func (*RpcObjectTypeRelationRemoveResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 9, 0, 1, 1}
}

func (x *RpcObjectTypeRelationRemoveResponse) GetError() *RpcObjectTypeRelationRemoveResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

type RpcObjectTypeRelationRemoveResponseError struct {
	state         protoimpl.MessageState                       `protogen:"open.v1"`
	Code          RpcObjectTypeRelationRemoveResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcObjectTypeRelationRemoveResponseErrorCode" json:"code,omitempty"`
	Description   string                                       `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectTypeRelationRemoveResponseError) Reset() {
	*x = RpcObjectTypeRelationRemoveResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[541]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectTypeRelationRemoveResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectTypeRelationRemoveResponseError) ProtoMessage() {}

func (x *RpcObjectTypeRelationRemoveResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[541]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectTypeRelationRemoveResponseError.ProtoReflect.Descriptor instead.
func (*RpcObjectTypeRelationRemoveResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 9, 0, 1, 1, 0}
}

func (x *RpcObjectTypeRelationRemoveResponseError) GetCode() RpcObjectTypeRelationRemoveResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcObjectTypeRelationRemoveResponseError_NULL
}

func (x *RpcObjectTypeRelationRemoveResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcObjectTypeRecommendedRelationsSet struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectTypeRecommendedRelationsSet) Reset() {
	*x = RpcObjectTypeRecommendedRelationsSet{}
	mi := &file_pb_protos_commands_proto_msgTypes[542]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectTypeRecommendedRelationsSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectTypeRecommendedRelationsSet) ProtoMessage() {}

func (x *RpcObjectTypeRecommendedRelationsSet) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[542]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectTypeRecommendedRelationsSet.ProtoReflect.Descriptor instead.
func (*RpcObjectTypeRecommendedRelationsSet) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 9, 1, 0}
}

type RpcObjectTypeRecommendedFeaturedRelationsSet struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectTypeRecommendedFeaturedRelationsSet) Reset() {
	*x = RpcObjectTypeRecommendedFeaturedRelationsSet{}
	mi := &file_pb_protos_commands_proto_msgTypes[543]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectTypeRecommendedFeaturedRelationsSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectTypeRecommendedFeaturedRelationsSet) ProtoMessage() {}

func (x *RpcObjectTypeRecommendedFeaturedRelationsSet) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[543]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectTypeRecommendedFeaturedRelationsSet.ProtoReflect.Descriptor instead.
func (*RpcObjectTypeRecommendedFeaturedRelationsSet) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 9, 1, 1}
}

type RpcObjectTypeRecommendedRelationsSetRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	TypeObjectId      string                 `protobuf:"bytes,1,opt,name=typeObjectId,proto3" json:"typeObjectId,omitempty"`
	RelationObjectIds []string               `protobuf:"bytes,2,rep,name=relationObjectIds,proto3" json:"relationObjectIds,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *RpcObjectTypeRecommendedRelationsSetRequest) Reset() {
	*x = RpcObjectTypeRecommendedRelationsSetRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[544]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectTypeRecommendedRelationsSetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectTypeRecommendedRelationsSetRequest) ProtoMessage() {}

func (x *RpcObjectTypeRecommendedRelationsSetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[544]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectTypeRecommendedRelationsSetRequest.ProtoReflect.Descriptor instead.
func (*RpcObjectTypeRecommendedRelationsSetRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 9, 1, 0, 0}
}

func (x *RpcObjectTypeRecommendedRelationsSetRequest) GetTypeObjectId() string {
	if x != nil {
		return x.TypeObjectId
	}
	return ""
}

func (x *RpcObjectTypeRecommendedRelationsSetRequest) GetRelationObjectIds() []string {
	if x != nil {
		return x.RelationObjectIds
	}
	return nil
}

type RpcObjectTypeRecommendedRelationsSetResponse struct {
	state         protoimpl.MessageState                             `protogen:"open.v1"`
	Error         *RpcObjectTypeRecommendedRelationsSetResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectTypeRecommendedRelationsSetResponse) Reset() {
	*x = RpcObjectTypeRecommendedRelationsSetResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[545]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectTypeRecommendedRelationsSetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectTypeRecommendedRelationsSetResponse) ProtoMessage() {}

func (x *RpcObjectTypeRecommendedRelationsSetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[545]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectTypeRecommendedRelationsSetResponse.ProtoReflect.Descriptor instead.
func (*RpcObjectTypeRecommendedRelationsSetResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 9, 1, 0, 1}
}

func (x *RpcObjectTypeRecommendedRelationsSetResponse) GetError() *RpcObjectTypeRecommendedRelationsSetResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

type RpcObjectTypeRecommendedRelationsSetResponseError struct {
	state         protoimpl.MessageState                                `protogen:"open.v1"`
	Code          RpcObjectTypeRecommendedRelationsSetResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcObjectTypeRecommendedRelationsSetResponseErrorCode" json:"code,omitempty"`
	Description   string                                                `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectTypeRecommendedRelationsSetResponseError) Reset() {
	*x = RpcObjectTypeRecommendedRelationsSetResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[546]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectTypeRecommendedRelationsSetResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectTypeRecommendedRelationsSetResponseError) ProtoMessage() {}

func (x *RpcObjectTypeRecommendedRelationsSetResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[546]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectTypeRecommendedRelationsSetResponseError.ProtoReflect.Descriptor instead.
func (*RpcObjectTypeRecommendedRelationsSetResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 9, 1, 0, 1, 0}
}

func (x *RpcObjectTypeRecommendedRelationsSetResponseError) GetCode() RpcObjectTypeRecommendedRelationsSetResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcObjectTypeRecommendedRelationsSetResponseError_NULL
}

func (x *RpcObjectTypeRecommendedRelationsSetResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcObjectTypeRecommendedFeaturedRelationsSetRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	TypeObjectId      string                 `protobuf:"bytes,1,opt,name=typeObjectId,proto3" json:"typeObjectId,omitempty"`
	RelationObjectIds []string               `protobuf:"bytes,2,rep,name=relationObjectIds,proto3" json:"relationObjectIds,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *RpcObjectTypeRecommendedFeaturedRelationsSetRequest) Reset() {
	*x = RpcObjectTypeRecommendedFeaturedRelationsSetRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[547]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectTypeRecommendedFeaturedRelationsSetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectTypeRecommendedFeaturedRelationsSetRequest) ProtoMessage() {}

func (x *RpcObjectTypeRecommendedFeaturedRelationsSetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[547]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectTypeRecommendedFeaturedRelationsSetRequest.ProtoReflect.Descriptor instead.
func (*RpcObjectTypeRecommendedFeaturedRelationsSetRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 9, 1, 1, 0}
}

func (x *RpcObjectTypeRecommendedFeaturedRelationsSetRequest) GetTypeObjectId() string {
	if x != nil {
		return x.TypeObjectId
	}
	return ""
}

func (x *RpcObjectTypeRecommendedFeaturedRelationsSetRequest) GetRelationObjectIds() []string {
	if x != nil {
		return x.RelationObjectIds
	}
	return nil
}

type RpcObjectTypeRecommendedFeaturedRelationsSetResponse struct {
	state         protoimpl.MessageState                                     `protogen:"open.v1"`
	Error         *RpcObjectTypeRecommendedFeaturedRelationsSetResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectTypeRecommendedFeaturedRelationsSetResponse) Reset() {
	*x = RpcObjectTypeRecommendedFeaturedRelationsSetResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[548]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectTypeRecommendedFeaturedRelationsSetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectTypeRecommendedFeaturedRelationsSetResponse) ProtoMessage() {}

func (x *RpcObjectTypeRecommendedFeaturedRelationsSetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[548]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectTypeRecommendedFeaturedRelationsSetResponse.ProtoReflect.Descriptor instead.
func (*RpcObjectTypeRecommendedFeaturedRelationsSetResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 9, 1, 1, 1}
}

func (x *RpcObjectTypeRecommendedFeaturedRelationsSetResponse) GetError() *RpcObjectTypeRecommendedFeaturedRelationsSetResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

type RpcObjectTypeRecommendedFeaturedRelationsSetResponseError struct {
	state         protoimpl.MessageState                                        `protogen:"open.v1"`
	Code          RpcObjectTypeRecommendedFeaturedRelationsSetResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcObjectTypeRecommendedFeaturedRelationsSetResponseErrorCode" json:"code,omitempty"`
	Description   string                                                        `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectTypeRecommendedFeaturedRelationsSetResponseError) Reset() {
	*x = RpcObjectTypeRecommendedFeaturedRelationsSetResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[549]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectTypeRecommendedFeaturedRelationsSetResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectTypeRecommendedFeaturedRelationsSetResponseError) ProtoMessage() {}

func (x *RpcObjectTypeRecommendedFeaturedRelationsSetResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[549]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectTypeRecommendedFeaturedRelationsSetResponseError.ProtoReflect.Descriptor instead.
func (*RpcObjectTypeRecommendedFeaturedRelationsSetResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 9, 1, 1, 1, 0}
}

func (x *RpcObjectTypeRecommendedFeaturedRelationsSetResponseError) GetCode() RpcObjectTypeRecommendedFeaturedRelationsSetResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcObjectTypeRecommendedFeaturedRelationsSetResponseError_NULL
}

func (x *RpcObjectTypeRecommendedFeaturedRelationsSetResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcObjectTypeListConflictingRelationsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SpaceId       string                 `protobuf:"bytes,1,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	TypeObjectId  string                 `protobuf:"bytes,2,opt,name=typeObjectId,proto3" json:"typeObjectId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectTypeListConflictingRelationsRequest) Reset() {
	*x = RpcObjectTypeListConflictingRelationsRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[550]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectTypeListConflictingRelationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectTypeListConflictingRelationsRequest) ProtoMessage() {}

func (x *RpcObjectTypeListConflictingRelationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[550]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectTypeListConflictingRelationsRequest.ProtoReflect.Descriptor instead.
func (*RpcObjectTypeListConflictingRelationsRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 9, 2, 0}
}

func (x *RpcObjectTypeListConflictingRelationsRequest) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *RpcObjectTypeListConflictingRelationsRequest) GetTypeObjectId() string {
	if x != nil {
		return x.TypeObjectId
	}
	return ""
}

type RpcObjectTypeListConflictingRelationsResponse struct {
	state         protoimpl.MessageState                              `protogen:"open.v1"`
	Error         *RpcObjectTypeListConflictingRelationsResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	RelationIds   []string                                            `protobuf:"bytes,2,rep,name=relationIds,proto3" json:"relationIds,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectTypeListConflictingRelationsResponse) Reset() {
	*x = RpcObjectTypeListConflictingRelationsResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[551]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectTypeListConflictingRelationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectTypeListConflictingRelationsResponse) ProtoMessage() {}

func (x *RpcObjectTypeListConflictingRelationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[551]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectTypeListConflictingRelationsResponse.ProtoReflect.Descriptor instead.
func (*RpcObjectTypeListConflictingRelationsResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 9, 2, 1}
}

func (x *RpcObjectTypeListConflictingRelationsResponse) GetError() *RpcObjectTypeListConflictingRelationsResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcObjectTypeListConflictingRelationsResponse) GetRelationIds() []string {
	if x != nil {
		return x.RelationIds
	}
	return nil
}

type RpcObjectTypeListConflictingRelationsResponseError struct {
	state         protoimpl.MessageState                                 `protogen:"open.v1"`
	Code          RpcObjectTypeListConflictingRelationsResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcObjectTypeListConflictingRelationsResponseErrorCode" json:"code,omitempty"`
	Description   string                                                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcObjectTypeListConflictingRelationsResponseError) Reset() {
	*x = RpcObjectTypeListConflictingRelationsResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[552]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcObjectTypeListConflictingRelationsResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcObjectTypeListConflictingRelationsResponseError) ProtoMessage() {}

func (x *RpcObjectTypeListConflictingRelationsResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[552]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcObjectTypeListConflictingRelationsResponseError.ProtoReflect.Descriptor instead.
func (*RpcObjectTypeListConflictingRelationsResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 9, 2, 1, 0}
}

func (x *RpcObjectTypeListConflictingRelationsResponseError) GetCode() RpcObjectTypeListConflictingRelationsResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcObjectTypeListConflictingRelationsResponseError_NULL
}

func (x *RpcObjectTypeListConflictingRelationsResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcRelationListRemoveOption struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcRelationListRemoveOption) Reset() {
	*x = RpcRelationListRemoveOption{}
	mi := &file_pb_protos_commands_proto_msgTypes[553]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcRelationListRemoveOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcRelationListRemoveOption) ProtoMessage() {}

func (x *RpcRelationListRemoveOption) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[553]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcRelationListRemoveOption.ProtoReflect.Descriptor instead.
func (*RpcRelationListRemoveOption) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 10, 0}
}

type RpcRelationOptions struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcRelationOptions) Reset() {
	*x = RpcRelationOptions{}
	mi := &file_pb_protos_commands_proto_msgTypes[554]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcRelationOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcRelationOptions) ProtoMessage() {}

func (x *RpcRelationOptions) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[554]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcRelationOptions.ProtoReflect.Descriptor instead.
func (*RpcRelationOptions) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 10, 1}
}

type RpcRelationListWithValue struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcRelationListWithValue) Reset() {
	*x = RpcRelationListWithValue{}
	mi := &file_pb_protos_commands_proto_msgTypes[555]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcRelationListWithValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcRelationListWithValue) ProtoMessage() {}

func (x *RpcRelationListWithValue) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[555]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcRelationListWithValue.ProtoReflect.Descriptor instead.
func (*RpcRelationListWithValue) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 10, 2}
}

type RpcRelationListRemoveOptionRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	OptionIds      []string               `protobuf:"bytes,1,rep,name=optionIds,proto3" json:"optionIds,omitempty"`
	CheckInObjects bool                   `protobuf:"varint,2,opt,name=checkInObjects,proto3" json:"checkInObjects,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RpcRelationListRemoveOptionRequest) Reset() {
	*x = RpcRelationListRemoveOptionRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[556]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcRelationListRemoveOptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcRelationListRemoveOptionRequest) ProtoMessage() {}

func (x *RpcRelationListRemoveOptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[556]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcRelationListRemoveOptionRequest.ProtoReflect.Descriptor instead.
func (*RpcRelationListRemoveOptionRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 10, 0, 0}
}

func (x *RpcRelationListRemoveOptionRequest) GetOptionIds() []string {
	if x != nil {
		return x.OptionIds
	}
	return nil
}

func (x *RpcRelationListRemoveOptionRequest) GetCheckInObjects() bool {
	if x != nil {
		return x.CheckInObjects
	}
	return false
}

type RpcRelationListRemoveOptionResponse struct {
	state         protoimpl.MessageState                    `protogen:"open.v1"`
	Error         *RpcRelationListRemoveOptionResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcRelationListRemoveOptionResponse) Reset() {
	*x = RpcRelationListRemoveOptionResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[557]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcRelationListRemoveOptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcRelationListRemoveOptionResponse) ProtoMessage() {}

func (x *RpcRelationListRemoveOptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[557]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcRelationListRemoveOptionResponse.ProtoReflect.Descriptor instead.
func (*RpcRelationListRemoveOptionResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 10, 0, 1}
}

func (x *RpcRelationListRemoveOptionResponse) GetError() *RpcRelationListRemoveOptionResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

type RpcRelationListRemoveOptionResponseError struct {
	state         protoimpl.MessageState                       `protogen:"open.v1"`
	Code          RpcRelationListRemoveOptionResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcRelationListRemoveOptionResponseErrorCode" json:"code,omitempty"`
	Description   string                                       `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcRelationListRemoveOptionResponseError) Reset() {
	*x = RpcRelationListRemoveOptionResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[558]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcRelationListRemoveOptionResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcRelationListRemoveOptionResponseError) ProtoMessage() {}

func (x *RpcRelationListRemoveOptionResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[558]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcRelationListRemoveOptionResponseError.ProtoReflect.Descriptor instead.
func (*RpcRelationListRemoveOptionResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 10, 0, 1, 0}
}

func (x *RpcRelationListRemoveOptionResponseError) GetCode() RpcRelationListRemoveOptionResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcRelationListRemoveOptionResponseError_NULL
}

func (x *RpcRelationListRemoveOptionResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcRelationOptionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RelationKey   string                 `protobuf:"bytes,1,opt,name=relationKey,proto3" json:"relationKey,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcRelationOptionsRequest) Reset() {
	*x = RpcRelationOptionsRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[559]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcRelationOptionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcRelationOptionsRequest) ProtoMessage() {}

func (x *RpcRelationOptionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[559]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcRelationOptionsRequest.ProtoReflect.Descriptor instead.
func (*RpcRelationOptionsRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 10, 1, 0}
}

func (x *RpcRelationOptionsRequest) GetRelationKey() string {
	if x != nil {
		return x.RelationKey
	}
	return ""
}

type RpcRelationOptionsResponse struct {
	state         protoimpl.MessageState           `protogen:"open.v1"`
	Error         *RpcRelationOptionsResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Options       *model.RelationOptions           `protobuf:"bytes,2,opt,name=options,proto3" json:"options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcRelationOptionsResponse) Reset() {
	*x = RpcRelationOptionsResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[560]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcRelationOptionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcRelationOptionsResponse) ProtoMessage() {}

func (x *RpcRelationOptionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[560]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcRelationOptionsResponse.ProtoReflect.Descriptor instead.
func (*RpcRelationOptionsResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 10, 1, 1}
}

func (x *RpcRelationOptionsResponse) GetError() *RpcRelationOptionsResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcRelationOptionsResponse) GetOptions() *model.RelationOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

type RpcRelationOptionsResponseError struct {
	state         protoimpl.MessageState              `protogen:"open.v1"`
	Code          RpcRelationOptionsResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcRelationOptionsResponseErrorCode" json:"code,omitempty"`
	Description   string                              `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcRelationOptionsResponseError) Reset() {
	*x = RpcRelationOptionsResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[561]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcRelationOptionsResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcRelationOptionsResponseError) ProtoMessage() {}

func (x *RpcRelationOptionsResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[561]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcRelationOptionsResponseError.ProtoReflect.Descriptor instead.
func (*RpcRelationOptionsResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 10, 1, 1, 0}
}

func (x *RpcRelationOptionsResponseError) GetCode() RpcRelationOptionsResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcRelationOptionsResponseError_NULL
}

func (x *RpcRelationOptionsResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcRelationListWithValueRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SpaceId       string                 `protobuf:"bytes,1,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	Value         *structpb.Value        `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcRelationListWithValueRequest) Reset() {
	*x = RpcRelationListWithValueRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[562]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcRelationListWithValueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcRelationListWithValueRequest) ProtoMessage() {}

func (x *RpcRelationListWithValueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[562]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcRelationListWithValueRequest.ProtoReflect.Descriptor instead.
func (*RpcRelationListWithValueRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 10, 2, 0}
}

func (x *RpcRelationListWithValueRequest) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *RpcRelationListWithValueRequest) GetValue() *structpb.Value {
	if x != nil {
		return x.Value
	}
	return nil
}

type RpcRelationListWithValueResponse struct {
	state         protoimpl.MessageState                          `protogen:"open.v1"`
	Error         *RpcRelationListWithValueResponseError          `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	List          []*RpcRelationListWithValueResponseResponseItem `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcRelationListWithValueResponse) Reset() {
	*x = RpcRelationListWithValueResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[563]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcRelationListWithValueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcRelationListWithValueResponse) ProtoMessage() {}

func (x *RpcRelationListWithValueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[563]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcRelationListWithValueResponse.ProtoReflect.Descriptor instead.
func (*RpcRelationListWithValueResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 10, 2, 1}
}

func (x *RpcRelationListWithValueResponse) GetError() *RpcRelationListWithValueResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcRelationListWithValueResponse) GetList() []*RpcRelationListWithValueResponseResponseItem {
	if x != nil {
		return x.List
	}
	return nil
}

type RpcRelationListWithValueResponseResponseItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RelationKey   string                 `protobuf:"bytes,1,opt,name=relationKey,proto3" json:"relationKey,omitempty"`
	Counter       int64                  `protobuf:"varint,2,opt,name=counter,proto3" json:"counter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcRelationListWithValueResponseResponseItem) Reset() {
	*x = RpcRelationListWithValueResponseResponseItem{}
	mi := &file_pb_protos_commands_proto_msgTypes[564]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcRelationListWithValueResponseResponseItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcRelationListWithValueResponseResponseItem) ProtoMessage() {}

func (x *RpcRelationListWithValueResponseResponseItem) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[564]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcRelationListWithValueResponseResponseItem.ProtoReflect.Descriptor instead.
func (*RpcRelationListWithValueResponseResponseItem) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 10, 2, 1, 0}
}

func (x *RpcRelationListWithValueResponseResponseItem) GetRelationKey() string {
	if x != nil {
		return x.RelationKey
	}
	return ""
}

func (x *RpcRelationListWithValueResponseResponseItem) GetCounter() int64 {
	if x != nil {
		return x.Counter
	}
	return 0
}

type RpcRelationListWithValueResponseError struct {
	state         protoimpl.MessageState                    `protogen:"open.v1"`
	Code          RpcRelationListWithValueResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcRelationListWithValueResponseErrorCode" json:"code,omitempty"`
	Description   string                                    `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcRelationListWithValueResponseError) Reset() {
	*x = RpcRelationListWithValueResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[565]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcRelationListWithValueResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcRelationListWithValueResponseError) ProtoMessage() {}

func (x *RpcRelationListWithValueResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[565]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcRelationListWithValueResponseError.ProtoReflect.Descriptor instead.
func (*RpcRelationListWithValueResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 10, 2, 1, 1}
}

func (x *RpcRelationListWithValueResponseError) GetCode() RpcRelationListWithValueResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcRelationListWithValueResponseError_NULL
}

func (x *RpcRelationListWithValueResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcHistoryVersion struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PreviousIds   []string               `protobuf:"bytes,2,rep,name=previousIds,proto3" json:"previousIds,omitempty"`
	AuthorId      string                 `protobuf:"bytes,3,opt,name=authorId,proto3" json:"authorId,omitempty"`
	AuthorName    string                 `protobuf:"bytes,4,opt,name=authorName,proto3" json:"authorName,omitempty"`
	Time          int64                  `protobuf:"varint,5,opt,name=time,proto3" json:"time,omitempty"`
	GroupId       int64                  `protobuf:"varint,6,opt,name=groupId,proto3" json:"groupId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcHistoryVersion) Reset() {
	*x = RpcHistoryVersion{}
	mi := &file_pb_protos_commands_proto_msgTypes[566]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcHistoryVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcHistoryVersion) ProtoMessage() {}

func (x *RpcHistoryVersion) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[566]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcHistoryVersion.ProtoReflect.Descriptor instead.
func (*RpcHistoryVersion) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 11, 0}
}

func (x *RpcHistoryVersion) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RpcHistoryVersion) GetPreviousIds() []string {
	if x != nil {
		return x.PreviousIds
	}
	return nil
}

func (x *RpcHistoryVersion) GetAuthorId() string {
	if x != nil {
		return x.AuthorId
	}
	return ""
}

func (x *RpcHistoryVersion) GetAuthorName() string {
	if x != nil {
		return x.AuthorName
	}
	return ""
}

func (x *RpcHistoryVersion) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *RpcHistoryVersion) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

// returns list of versions (changes)
type RpcHistoryGetVersions struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcHistoryGetVersions) Reset() {
	*x = RpcHistoryGetVersions{}
	mi := &file_pb_protos_commands_proto_msgTypes[567]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcHistoryGetVersions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcHistoryGetVersions) ProtoMessage() {}

func (x *RpcHistoryGetVersions) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[567]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcHistoryGetVersions.ProtoReflect.Descriptor instead.
func (*RpcHistoryGetVersions) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 11, 1}
}

// returns blockShow event for given version
type RpcHistoryShowVersion struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcHistoryShowVersion) Reset() {
	*x = RpcHistoryShowVersion{}
	mi := &file_pb_protos_commands_proto_msgTypes[568]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcHistoryShowVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcHistoryShowVersion) ProtoMessage() {}

func (x *RpcHistoryShowVersion) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[568]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcHistoryShowVersion.ProtoReflect.Descriptor instead.
func (*RpcHistoryShowVersion) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 11, 2}
}

type RpcHistorySetVersion struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcHistorySetVersion) Reset() {
	*x = RpcHistorySetVersion{}
	mi := &file_pb_protos_commands_proto_msgTypes[569]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcHistorySetVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcHistorySetVersion) ProtoMessage() {}

func (x *RpcHistorySetVersion) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[569]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcHistorySetVersion.ProtoReflect.Descriptor instead.
func (*RpcHistorySetVersion) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 11, 3}
}

type RpcHistoryDiffVersions struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcHistoryDiffVersions) Reset() {
	*x = RpcHistoryDiffVersions{}
	mi := &file_pb_protos_commands_proto_msgTypes[570]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcHistoryDiffVersions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcHistoryDiffVersions) ProtoMessage() {}

func (x *RpcHistoryDiffVersions) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[570]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcHistoryDiffVersions.ProtoReflect.Descriptor instead.
func (*RpcHistoryDiffVersions) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 11, 4}
}

type RpcHistoryGetVersionsRequest struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	ObjectId string                 `protobuf:"bytes,1,opt,name=objectId,proto3" json:"objectId,omitempty"`
	// when indicated, results will include versions before given id
	LastVersionId string `protobuf:"bytes,2,opt,name=lastVersionId,proto3" json:"lastVersionId,omitempty"`
	// desired count of versions
	Limit             int32 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	NotIncludeVersion bool  `protobuf:"varint,4,opt,name=notIncludeVersion,proto3" json:"notIncludeVersion,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *RpcHistoryGetVersionsRequest) Reset() {
	*x = RpcHistoryGetVersionsRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[571]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcHistoryGetVersionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcHistoryGetVersionsRequest) ProtoMessage() {}

func (x *RpcHistoryGetVersionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[571]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcHistoryGetVersionsRequest.ProtoReflect.Descriptor instead.
func (*RpcHistoryGetVersionsRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 11, 1, 0}
}

func (x *RpcHistoryGetVersionsRequest) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

func (x *RpcHistoryGetVersionsRequest) GetLastVersionId() string {
	if x != nil {
		return x.LastVersionId
	}
	return ""
}

func (x *RpcHistoryGetVersionsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *RpcHistoryGetVersionsRequest) GetNotIncludeVersion() bool {
	if x != nil {
		return x.NotIncludeVersion
	}
	return false
}

type RpcHistoryGetVersionsResponse struct {
	state         protoimpl.MessageState              `protogen:"open.v1"`
	Error         *RpcHistoryGetVersionsResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Versions      []*RpcHistoryVersion                `protobuf:"bytes,2,rep,name=versions,proto3" json:"versions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcHistoryGetVersionsResponse) Reset() {
	*x = RpcHistoryGetVersionsResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[572]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcHistoryGetVersionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcHistoryGetVersionsResponse) ProtoMessage() {}

func (x *RpcHistoryGetVersionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[572]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcHistoryGetVersionsResponse.ProtoReflect.Descriptor instead.
func (*RpcHistoryGetVersionsResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 11, 1, 1}
}

func (x *RpcHistoryGetVersionsResponse) GetError() *RpcHistoryGetVersionsResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcHistoryGetVersionsResponse) GetVersions() []*RpcHistoryVersion {
	if x != nil {
		return x.Versions
	}
	return nil
}

type RpcHistoryGetVersionsResponseError struct {
	state         protoimpl.MessageState                 `protogen:"open.v1"`
	Code          RpcHistoryGetVersionsResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcHistoryGetVersionsResponseErrorCode" json:"code,omitempty"`
	Description   string                                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcHistoryGetVersionsResponseError) Reset() {
	*x = RpcHistoryGetVersionsResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[573]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcHistoryGetVersionsResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcHistoryGetVersionsResponseError) ProtoMessage() {}

func (x *RpcHistoryGetVersionsResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[573]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcHistoryGetVersionsResponseError.ProtoReflect.Descriptor instead.
func (*RpcHistoryGetVersionsResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 11, 1, 1, 0}
}

func (x *RpcHistoryGetVersionsResponseError) GetCode() RpcHistoryGetVersionsResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcHistoryGetVersionsResponseError_NULL
}

func (x *RpcHistoryGetVersionsResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcHistoryShowVersionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ObjectId      string                 `protobuf:"bytes,1,opt,name=objectId,proto3" json:"objectId,omitempty"`
	VersionId     string                 `protobuf:"bytes,2,opt,name=versionId,proto3" json:"versionId,omitempty"`
	TraceId       string                 `protobuf:"bytes,3,opt,name=traceId,proto3" json:"traceId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcHistoryShowVersionRequest) Reset() {
	*x = RpcHistoryShowVersionRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[574]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcHistoryShowVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcHistoryShowVersionRequest) ProtoMessage() {}

func (x *RpcHistoryShowVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[574]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcHistoryShowVersionRequest.ProtoReflect.Descriptor instead.
func (*RpcHistoryShowVersionRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 11, 2, 0}
}

func (x *RpcHistoryShowVersionRequest) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

func (x *RpcHistoryShowVersionRequest) GetVersionId() string {
	if x != nil {
		return x.VersionId
	}
	return ""
}

func (x *RpcHistoryShowVersionRequest) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

type RpcHistoryShowVersionResponse struct {
	state         protoimpl.MessageState              `protogen:"open.v1"`
	Error         *RpcHistoryShowVersionResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	ObjectView    *model.ObjectView                   `protobuf:"bytes,2,opt,name=objectView,proto3" json:"objectView,omitempty"`
	Version       *RpcHistoryVersion                  `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	TraceId       string                              `protobuf:"bytes,4,opt,name=traceId,proto3" json:"traceId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcHistoryShowVersionResponse) Reset() {
	*x = RpcHistoryShowVersionResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[575]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcHistoryShowVersionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcHistoryShowVersionResponse) ProtoMessage() {}

func (x *RpcHistoryShowVersionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[575]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcHistoryShowVersionResponse.ProtoReflect.Descriptor instead.
func (*RpcHistoryShowVersionResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 11, 2, 1}
}

func (x *RpcHistoryShowVersionResponse) GetError() *RpcHistoryShowVersionResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcHistoryShowVersionResponse) GetObjectView() *model.ObjectView {
	if x != nil {
		return x.ObjectView
	}
	return nil
}

func (x *RpcHistoryShowVersionResponse) GetVersion() *RpcHistoryVersion {
	if x != nil {
		return x.Version
	}
	return nil
}

func (x *RpcHistoryShowVersionResponse) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

type RpcHistoryShowVersionResponseError struct {
	state         protoimpl.MessageState                 `protogen:"open.v1"`
	Code          RpcHistoryShowVersionResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcHistoryShowVersionResponseErrorCode" json:"code,omitempty"`
	Description   string                                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcHistoryShowVersionResponseError) Reset() {
	*x = RpcHistoryShowVersionResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[576]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcHistoryShowVersionResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcHistoryShowVersionResponseError) ProtoMessage() {}

func (x *RpcHistoryShowVersionResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[576]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcHistoryShowVersionResponseError.ProtoReflect.Descriptor instead.
func (*RpcHistoryShowVersionResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 11, 2, 1, 0}
}

func (x *RpcHistoryShowVersionResponseError) GetCode() RpcHistoryShowVersionResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcHistoryShowVersionResponseError_NULL
}

func (x *RpcHistoryShowVersionResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcHistorySetVersionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ObjectId      string                 `protobuf:"bytes,1,opt,name=objectId,proto3" json:"objectId,omitempty"`
	VersionId     string                 `protobuf:"bytes,2,opt,name=versionId,proto3" json:"versionId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcHistorySetVersionRequest) Reset() {
	*x = RpcHistorySetVersionRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[577]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcHistorySetVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcHistorySetVersionRequest) ProtoMessage() {}

func (x *RpcHistorySetVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[577]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcHistorySetVersionRequest.ProtoReflect.Descriptor instead.
func (*RpcHistorySetVersionRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 11, 3, 0}
}

func (x *RpcHistorySetVersionRequest) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

func (x *RpcHistorySetVersionRequest) GetVersionId() string {
	if x != nil {
		return x.VersionId
	}
	return ""
}

type RpcHistorySetVersionResponse struct {
	state         protoimpl.MessageState             `protogen:"open.v1"`
	Error         *RpcHistorySetVersionResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcHistorySetVersionResponse) Reset() {
	*x = RpcHistorySetVersionResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[578]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcHistorySetVersionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcHistorySetVersionResponse) ProtoMessage() {}

func (x *RpcHistorySetVersionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[578]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcHistorySetVersionResponse.ProtoReflect.Descriptor instead.
func (*RpcHistorySetVersionResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 11, 3, 1}
}

func (x *RpcHistorySetVersionResponse) GetError() *RpcHistorySetVersionResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

type RpcHistorySetVersionResponseError struct {
	state         protoimpl.MessageState                `protogen:"open.v1"`
	Code          RpcHistorySetVersionResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcHistorySetVersionResponseErrorCode" json:"code,omitempty"`
	Description   string                                `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcHistorySetVersionResponseError) Reset() {
	*x = RpcHistorySetVersionResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[579]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcHistorySetVersionResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcHistorySetVersionResponseError) ProtoMessage() {}

func (x *RpcHistorySetVersionResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[579]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcHistorySetVersionResponseError.ProtoReflect.Descriptor instead.
func (*RpcHistorySetVersionResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 11, 3, 1, 0}
}

func (x *RpcHistorySetVersionResponseError) GetCode() RpcHistorySetVersionResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcHistorySetVersionResponseError_NULL
}

func (x *RpcHistorySetVersionResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcHistoryDiffVersionsRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ObjectId        string                 `protobuf:"bytes,1,opt,name=objectId,proto3" json:"objectId,omitempty"`
	SpaceId         string                 `protobuf:"bytes,2,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	CurrentVersion  string                 `protobuf:"bytes,3,opt,name=currentVersion,proto3" json:"currentVersion,omitempty"`
	PreviousVersion string                 `protobuf:"bytes,4,opt,name=previousVersion,proto3" json:"previousVersion,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *RpcHistoryDiffVersionsRequest) Reset() {
	*x = RpcHistoryDiffVersionsRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[580]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcHistoryDiffVersionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcHistoryDiffVersionsRequest) ProtoMessage() {}

func (x *RpcHistoryDiffVersionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[580]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcHistoryDiffVersionsRequest.ProtoReflect.Descriptor instead.
func (*RpcHistoryDiffVersionsRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 11, 4, 0}
}

func (x *RpcHistoryDiffVersionsRequest) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

func (x *RpcHistoryDiffVersionsRequest) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *RpcHistoryDiffVersionsRequest) GetCurrentVersion() string {
	if x != nil {
		return x.CurrentVersion
	}
	return ""
}

func (x *RpcHistoryDiffVersionsRequest) GetPreviousVersion() string {
	if x != nil {
		return x.PreviousVersion
	}
	return ""
}

type RpcHistoryDiffVersionsResponse struct {
	state         protoimpl.MessageState               `protogen:"open.v1"`
	Error         *RpcHistoryDiffVersionsResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	HistoryEvents []*EventMessage                      `protobuf:"bytes,2,rep,name=historyEvents,proto3" json:"historyEvents,omitempty"`
	ObjectView    *model.ObjectView                    `protobuf:"bytes,3,opt,name=objectView,proto3" json:"objectView,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcHistoryDiffVersionsResponse) Reset() {
	*x = RpcHistoryDiffVersionsResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[581]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcHistoryDiffVersionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcHistoryDiffVersionsResponse) ProtoMessage() {}

func (x *RpcHistoryDiffVersionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[581]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcHistoryDiffVersionsResponse.ProtoReflect.Descriptor instead.
func (*RpcHistoryDiffVersionsResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 11, 4, 1}
}

func (x *RpcHistoryDiffVersionsResponse) GetError() *RpcHistoryDiffVersionsResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcHistoryDiffVersionsResponse) GetHistoryEvents() []*EventMessage {
	if x != nil {
		return x.HistoryEvents
	}
	return nil
}

func (x *RpcHistoryDiffVersionsResponse) GetObjectView() *model.ObjectView {
	if x != nil {
		return x.ObjectView
	}
	return nil
}

type RpcHistoryDiffVersionsResponseError struct {
	state         protoimpl.MessageState                  `protogen:"open.v1"`
	Code          RpcHistoryDiffVersionsResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcHistoryDiffVersionsResponseErrorCode" json:"code,omitempty"`
	Description   string                                  `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcHistoryDiffVersionsResponseError) Reset() {
	*x = RpcHistoryDiffVersionsResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[582]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcHistoryDiffVersionsResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcHistoryDiffVersionsResponseError) ProtoMessage() {}

func (x *RpcHistoryDiffVersionsResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[582]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcHistoryDiffVersionsResponseError.ProtoReflect.Descriptor instead.
func (*RpcHistoryDiffVersionsResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 11, 4, 1, 0}
}

func (x *RpcHistoryDiffVersionsResponseError) GetCode() RpcHistoryDiffVersionsResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcHistoryDiffVersionsResponseError_NULL
}

func (x *RpcHistoryDiffVersionsResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcFileReconcile struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcFileReconcile) Reset() {
	*x = RpcFileReconcile{}
	mi := &file_pb_protos_commands_proto_msgTypes[583]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcFileReconcile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcFileReconcile) ProtoMessage() {}

func (x *RpcFileReconcile) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[583]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcFileReconcile.ProtoReflect.Descriptor instead.
func (*RpcFileReconcile) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 12, 0}
}

type RpcFileOffload struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcFileOffload) Reset() {
	*x = RpcFileOffload{}
	mi := &file_pb_protos_commands_proto_msgTypes[584]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcFileOffload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcFileOffload) ProtoMessage() {}

func (x *RpcFileOffload) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[584]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcFileOffload.ProtoReflect.Descriptor instead.
func (*RpcFileOffload) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 12, 1}
}

type RpcFileSpaceOffload struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcFileSpaceOffload) Reset() {
	*x = RpcFileSpaceOffload{}
	mi := &file_pb_protos_commands_proto_msgTypes[585]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcFileSpaceOffload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcFileSpaceOffload) ProtoMessage() {}

func (x *RpcFileSpaceOffload) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[585]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcFileSpaceOffload.ProtoReflect.Descriptor instead.
func (*RpcFileSpaceOffload) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 12, 2}
}

type RpcFileListOffload struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcFileListOffload) Reset() {
	*x = RpcFileListOffload{}
	mi := &file_pb_protos_commands_proto_msgTypes[586]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcFileListOffload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcFileListOffload) ProtoMessage() {}

func (x *RpcFileListOffload) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[586]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcFileListOffload.ProtoReflect.Descriptor instead.
func (*RpcFileListOffload) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 12, 3}
}

type RpcFileUpload struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcFileUpload) Reset() {
	*x = RpcFileUpload{}
	mi := &file_pb_protos_commands_proto_msgTypes[587]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcFileUpload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcFileUpload) ProtoMessage() {}

func (x *RpcFileUpload) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[587]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcFileUpload.ProtoReflect.Descriptor instead.
func (*RpcFileUpload) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 12, 4}
}

type RpcFileDownload struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcFileDownload) Reset() {
	*x = RpcFileDownload{}
	mi := &file_pb_protos_commands_proto_msgTypes[588]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcFileDownload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcFileDownload) ProtoMessage() {}

func (x *RpcFileDownload) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[588]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcFileDownload.ProtoReflect.Descriptor instead.
func (*RpcFileDownload) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 12, 5}
}

type RpcFileDrop struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcFileDrop) Reset() {
	*x = RpcFileDrop{}
	mi := &file_pb_protos_commands_proto_msgTypes[589]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcFileDrop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcFileDrop) ProtoMessage() {}

func (x *RpcFileDrop) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[589]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcFileDrop.ProtoReflect.Descriptor instead.
func (*RpcFileDrop) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 12, 6}
}

type RpcFileSpaceUsage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcFileSpaceUsage) Reset() {
	*x = RpcFileSpaceUsage{}
	mi := &file_pb_protos_commands_proto_msgTypes[590]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcFileSpaceUsage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcFileSpaceUsage) ProtoMessage() {}

func (x *RpcFileSpaceUsage) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[590]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcFileSpaceUsage.ProtoReflect.Descriptor instead.
func (*RpcFileSpaceUsage) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 12, 7}
}

type RpcFileNodeUsage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcFileNodeUsage) Reset() {
	*x = RpcFileNodeUsage{}
	mi := &file_pb_protos_commands_proto_msgTypes[591]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcFileNodeUsage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcFileNodeUsage) ProtoMessage() {}

func (x *RpcFileNodeUsage) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[591]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcFileNodeUsage.ProtoReflect.Descriptor instead.
func (*RpcFileNodeUsage) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 12, 8}
}

type RpcFileReconcileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcFileReconcileRequest) Reset() {
	*x = RpcFileReconcileRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[592]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcFileReconcileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcFileReconcileRequest) ProtoMessage() {}

func (x *RpcFileReconcileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[592]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcFileReconcileRequest.ProtoReflect.Descriptor instead.
func (*RpcFileReconcileRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 12, 0, 0}
}

type RpcFileReconcileResponse struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	Error         *RpcFileReconcileResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcFileReconcileResponse) Reset() {
	*x = RpcFileReconcileResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[593]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcFileReconcileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcFileReconcileResponse) ProtoMessage() {}

func (x *RpcFileReconcileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[593]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcFileReconcileResponse.ProtoReflect.Descriptor instead.
func (*RpcFileReconcileResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 12, 0, 1}
}

func (x *RpcFileReconcileResponse) GetError() *RpcFileReconcileResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

type RpcFileReconcileResponseError struct {
	state         protoimpl.MessageState            `protogen:"open.v1"`
	Code          RpcFileReconcileResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcFileReconcileResponseErrorCode" json:"code,omitempty"`
	Description   string                            `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcFileReconcileResponseError) Reset() {
	*x = RpcFileReconcileResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[594]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcFileReconcileResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcFileReconcileResponseError) ProtoMessage() {}

func (x *RpcFileReconcileResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[594]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcFileReconcileResponseError.ProtoReflect.Descriptor instead.
func (*RpcFileReconcileResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 12, 0, 1, 0}
}

func (x *RpcFileReconcileResponseError) GetCode() RpcFileReconcileResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcFileReconcileResponseError_NULL
}

func (x *RpcFileReconcileResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcFileOffloadRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Id               string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	IncludeNotPinned bool                   `protobuf:"varint,2,opt,name=includeNotPinned,proto3" json:"includeNotPinned,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *RpcFileOffloadRequest) Reset() {
	*x = RpcFileOffloadRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[595]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcFileOffloadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcFileOffloadRequest) ProtoMessage() {}

func (x *RpcFileOffloadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[595]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcFileOffloadRequest.ProtoReflect.Descriptor instead.
func (*RpcFileOffloadRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 12, 1, 0}
}

func (x *RpcFileOffloadRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RpcFileOffloadRequest) GetIncludeNotPinned() bool {
	if x != nil {
		return x.IncludeNotPinned
	}
	return false
}

type RpcFileOffloadResponse struct {
	state          protoimpl.MessageState       `protogen:"open.v1"`
	Error          *RpcFileOffloadResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	BytesOffloaded uint64                       `protobuf:"varint,2,opt,name=bytesOffloaded,proto3" json:"bytesOffloaded,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RpcFileOffloadResponse) Reset() {
	*x = RpcFileOffloadResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[596]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcFileOffloadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcFileOffloadResponse) ProtoMessage() {}

func (x *RpcFileOffloadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[596]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcFileOffloadResponse.ProtoReflect.Descriptor instead.
func (*RpcFileOffloadResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 12, 1, 1}
}

func (x *RpcFileOffloadResponse) GetError() *RpcFileOffloadResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcFileOffloadResponse) GetBytesOffloaded() uint64 {
	if x != nil {
		return x.BytesOffloaded
	}
	return 0
}

type RpcFileOffloadResponseError struct {
	state         protoimpl.MessageState          `protogen:"open.v1"`
	Code          RpcFileOffloadResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcFileOffloadResponseErrorCode" json:"code,omitempty"`
	Description   string                          `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcFileOffloadResponseError) Reset() {
	*x = RpcFileOffloadResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[597]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcFileOffloadResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcFileOffloadResponseError) ProtoMessage() {}

func (x *RpcFileOffloadResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[597]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcFileOffloadResponseError.ProtoReflect.Descriptor instead.
func (*RpcFileOffloadResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 12, 1, 1, 0}
}

func (x *RpcFileOffloadResponseError) GetCode() RpcFileOffloadResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcFileOffloadResponseError_NULL
}

func (x *RpcFileOffloadResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcFileSpaceOffloadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SpaceId       string                 `protobuf:"bytes,1,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcFileSpaceOffloadRequest) Reset() {
	*x = RpcFileSpaceOffloadRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[598]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcFileSpaceOffloadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcFileSpaceOffloadRequest) ProtoMessage() {}

func (x *RpcFileSpaceOffloadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[598]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcFileSpaceOffloadRequest.ProtoReflect.Descriptor instead.
func (*RpcFileSpaceOffloadRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 12, 2, 0}
}

func (x *RpcFileSpaceOffloadRequest) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

type RpcFileSpaceOffloadResponse struct {
	state          protoimpl.MessageState            `protogen:"open.v1"`
	Error          *RpcFileSpaceOffloadResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	FilesOffloaded int32                             `protobuf:"varint,2,opt,name=filesOffloaded,proto3" json:"filesOffloaded,omitempty"`
	BytesOffloaded uint64                            `protobuf:"varint,3,opt,name=bytesOffloaded,proto3" json:"bytesOffloaded,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RpcFileSpaceOffloadResponse) Reset() {
	*x = RpcFileSpaceOffloadResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[599]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcFileSpaceOffloadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcFileSpaceOffloadResponse) ProtoMessage() {}

func (x *RpcFileSpaceOffloadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[599]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcFileSpaceOffloadResponse.ProtoReflect.Descriptor instead.
func (*RpcFileSpaceOffloadResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 12, 2, 1}
}

func (x *RpcFileSpaceOffloadResponse) GetError() *RpcFileSpaceOffloadResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcFileSpaceOffloadResponse) GetFilesOffloaded() int32 {
	if x != nil {
		return x.FilesOffloaded
	}
	return 0
}

func (x *RpcFileSpaceOffloadResponse) GetBytesOffloaded() uint64 {
	if x != nil {
		return x.BytesOffloaded
	}
	return 0
}

type RpcFileSpaceOffloadResponseError struct {
	state         protoimpl.MessageState               `protogen:"open.v1"`
	Code          RpcFileSpaceOffloadResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcFileSpaceOffloadResponseErrorCode" json:"code,omitempty"`
	Description   string                               `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcFileSpaceOffloadResponseError) Reset() {
	*x = RpcFileSpaceOffloadResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[600]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcFileSpaceOffloadResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcFileSpaceOffloadResponseError) ProtoMessage() {}

func (x *RpcFileSpaceOffloadResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[600]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcFileSpaceOffloadResponseError.ProtoReflect.Descriptor instead.
func (*RpcFileSpaceOffloadResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 12, 2, 1, 0}
}

func (x *RpcFileSpaceOffloadResponseError) GetCode() RpcFileSpaceOffloadResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcFileSpaceOffloadResponseError_NULL
}

func (x *RpcFileSpaceOffloadResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcFileListOffloadRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	OnlyIds          []string               `protobuf:"bytes,1,rep,name=onlyIds,proto3" json:"onlyIds,omitempty"`                    // empty means all
	IncludeNotPinned bool                   `protobuf:"varint,2,opt,name=includeNotPinned,proto3" json:"includeNotPinned,omitempty"` // false mean not-yet-pinned files will be not
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *RpcFileListOffloadRequest) Reset() {
	*x = RpcFileListOffloadRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[601]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcFileListOffloadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcFileListOffloadRequest) ProtoMessage() {}

func (x *RpcFileListOffloadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[601]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcFileListOffloadRequest.ProtoReflect.Descriptor instead.
func (*RpcFileListOffloadRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 12, 3, 0}
}

func (x *RpcFileListOffloadRequest) GetOnlyIds() []string {
	if x != nil {
		return x.OnlyIds
	}
	return nil
}

func (x *RpcFileListOffloadRequest) GetIncludeNotPinned() bool {
	if x != nil {
		return x.IncludeNotPinned
	}
	return false
}

type RpcFileListOffloadResponse struct {
	state          protoimpl.MessageState           `protogen:"open.v1"`
	Error          *RpcFileListOffloadResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	FilesOffloaded int32                            `protobuf:"varint,2,opt,name=filesOffloaded,proto3" json:"filesOffloaded,omitempty"`
	BytesOffloaded uint64                           `protobuf:"varint,3,opt,name=bytesOffloaded,proto3" json:"bytesOffloaded,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RpcFileListOffloadResponse) Reset() {
	*x = RpcFileListOffloadResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[602]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcFileListOffloadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcFileListOffloadResponse) ProtoMessage() {}

func (x *RpcFileListOffloadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[602]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcFileListOffloadResponse.ProtoReflect.Descriptor instead.
func (*RpcFileListOffloadResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 12, 3, 1}
}

func (x *RpcFileListOffloadResponse) GetError() *RpcFileListOffloadResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcFileListOffloadResponse) GetFilesOffloaded() int32 {
	if x != nil {
		return x.FilesOffloaded
	}
	return 0
}

func (x *RpcFileListOffloadResponse) GetBytesOffloaded() uint64 {
	if x != nil {
		return x.BytesOffloaded
	}
	return 0
}

type RpcFileListOffloadResponseError struct {
	state         protoimpl.MessageState              `protogen:"open.v1"`
	Code          RpcFileListOffloadResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcFileListOffloadResponseErrorCode" json:"code,omitempty"`
	Description   string                              `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcFileListOffloadResponseError) Reset() {
	*x = RpcFileListOffloadResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[603]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcFileListOffloadResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcFileListOffloadResponseError) ProtoMessage() {}

func (x *RpcFileListOffloadResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[603]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcFileListOffloadResponseError.ProtoReflect.Descriptor instead.
func (*RpcFileListOffloadResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 12, 3, 1, 0}
}

func (x *RpcFileListOffloadResponseError) GetCode() RpcFileListOffloadResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcFileListOffloadResponseError_NULL
}

func (x *RpcFileListOffloadResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcFileUploadRequest struct {
	state                     protoimpl.MessageState      `protogen:"open.v1"`
	SpaceId                   string                      `protobuf:"bytes,6,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	Url                       string                      `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	LocalPath                 string                      `protobuf:"bytes,2,opt,name=localPath,proto3" json:"localPath,omitempty"`
	Type                      model.BlockContentFileType  `protobuf:"varint,3,opt,name=type,proto3,enum=anytype.model.BlockContentFileType" json:"type,omitempty"`
	DisableEncryption         bool                        `protobuf:"varint,4,opt,name=disableEncryption,proto3" json:"disableEncryption,omitempty"` // deprecated, has no affect, GO-1926
	Style                     model.BlockContentFileStyle `protobuf:"varint,5,opt,name=style,proto3,enum=anytype.model.BlockContentFileStyle" json:"style,omitempty"`
	Details                   *structpb.Struct            `protobuf:"bytes,7,opt,name=details,proto3" json:"details,omitempty"` // additional details for file object
	Origin                    model.ObjectOrigin          `protobuf:"varint,8,opt,name=origin,proto3,enum=anytype.model.ObjectOrigin" json:"origin,omitempty"`
	ImageKind                 model.ImageKind             `protobuf:"varint,9,opt,name=imageKind,proto3,enum=anytype.model.ImageKind" json:"imageKind,omitempty"`
	CreateTypeWidgetIfMissing bool                        `protobuf:"varint,10,opt,name=createTypeWidgetIfMissing,proto3" json:"createTypeWidgetIfMissing,omitempty"` // experimental flag to auto-create type widget if missing
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *RpcFileUploadRequest) Reset() {
	*x = RpcFileUploadRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[604]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcFileUploadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcFileUploadRequest) ProtoMessage() {}

func (x *RpcFileUploadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[604]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcFileUploadRequest.ProtoReflect.Descriptor instead.
func (*RpcFileUploadRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 12, 4, 0}
}

func (x *RpcFileUploadRequest) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *RpcFileUploadRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *RpcFileUploadRequest) GetLocalPath() string {
	if x != nil {
		return x.LocalPath
	}
	return ""
}

func (x *RpcFileUploadRequest) GetType() model.BlockContentFileType {
	if x != nil {
		return x.Type
	}
	return model.BlockContentFileType(0)
}

func (x *RpcFileUploadRequest) GetDisableEncryption() bool {
	if x != nil {
		return x.DisableEncryption
	}
	return false
}

func (x *RpcFileUploadRequest) GetStyle() model.BlockContentFileStyle {
	if x != nil {
		return x.Style
	}
	return model.BlockContentFileStyle(0)
}

func (x *RpcFileUploadRequest) GetDetails() *structpb.Struct {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *RpcFileUploadRequest) GetOrigin() model.ObjectOrigin {
	if x != nil {
		return x.Origin
	}
	return model.ObjectOrigin(0)
}

func (x *RpcFileUploadRequest) GetImageKind() model.ImageKind {
	if x != nil {
		return x.ImageKind
	}
	return model.ImageKind(0)
}

func (x *RpcFileUploadRequest) GetCreateTypeWidgetIfMissing() bool {
	if x != nil {
		return x.CreateTypeWidgetIfMissing
	}
	return false
}

type RpcFileUploadResponse struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	Error         *RpcFileUploadResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	ObjectId      string                      `protobuf:"bytes,2,opt,name=objectId,proto3" json:"objectId,omitempty"`
	Details       *structpb.Struct            `protobuf:"bytes,3,opt,name=details,proto3" json:"details,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcFileUploadResponse) Reset() {
	*x = RpcFileUploadResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[605]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcFileUploadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcFileUploadResponse) ProtoMessage() {}

func (x *RpcFileUploadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[605]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcFileUploadResponse.ProtoReflect.Descriptor instead.
func (*RpcFileUploadResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 12, 4, 1}
}

func (x *RpcFileUploadResponse) GetError() *RpcFileUploadResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcFileUploadResponse) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

func (x *RpcFileUploadResponse) GetDetails() *structpb.Struct {
	if x != nil {
		return x.Details
	}
	return nil
}

type RpcFileUploadResponseError struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	Code          RpcFileUploadResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcFileUploadResponseErrorCode" json:"code,omitempty"`
	Description   string                         `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcFileUploadResponseError) Reset() {
	*x = RpcFileUploadResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[606]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcFileUploadResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcFileUploadResponseError) ProtoMessage() {}

func (x *RpcFileUploadResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[606]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcFileUploadResponseError.ProtoReflect.Descriptor instead.
func (*RpcFileUploadResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 12, 4, 1, 0}
}

func (x *RpcFileUploadResponseError) GetCode() RpcFileUploadResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcFileUploadResponseError_NULL
}

func (x *RpcFileUploadResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcFileDownloadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ObjectId      string                 `protobuf:"bytes,1,opt,name=objectId,proto3" json:"objectId,omitempty"`
	Path          string                 `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"` // path to save file. Temp directory is used if empty
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcFileDownloadRequest) Reset() {
	*x = RpcFileDownloadRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[607]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcFileDownloadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcFileDownloadRequest) ProtoMessage() {}

func (x *RpcFileDownloadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[607]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcFileDownloadRequest.ProtoReflect.Descriptor instead.
func (*RpcFileDownloadRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 12, 5, 0}
}

func (x *RpcFileDownloadRequest) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

func (x *RpcFileDownloadRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type RpcFileDownloadResponse struct {
	state         protoimpl.MessageState        `protogen:"open.v1"`
	Error         *RpcFileDownloadResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	LocalPath     string                        `protobuf:"bytes,2,opt,name=localPath,proto3" json:"localPath,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcFileDownloadResponse) Reset() {
	*x = RpcFileDownloadResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[608]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcFileDownloadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcFileDownloadResponse) ProtoMessage() {}

func (x *RpcFileDownloadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[608]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcFileDownloadResponse.ProtoReflect.Descriptor instead.
func (*RpcFileDownloadResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 12, 5, 1}
}

func (x *RpcFileDownloadResponse) GetError() *RpcFileDownloadResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcFileDownloadResponse) GetLocalPath() string {
	if x != nil {
		return x.LocalPath
	}
	return ""
}

type RpcFileDownloadResponseError struct {
	state         protoimpl.MessageState           `protogen:"open.v1"`
	Code          RpcFileDownloadResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcFileDownloadResponseErrorCode" json:"code,omitempty"`
	Description   string                           `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcFileDownloadResponseError) Reset() {
	*x = RpcFileDownloadResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[609]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcFileDownloadResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcFileDownloadResponseError) ProtoMessage() {}

func (x *RpcFileDownloadResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[609]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcFileDownloadResponseError.ProtoReflect.Descriptor instead.
func (*RpcFileDownloadResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 12, 5, 1, 0}
}

func (x *RpcFileDownloadResponseError) GetCode() RpcFileDownloadResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcFileDownloadResponseError_NULL
}

func (x *RpcFileDownloadResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcFileDropRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ContextId      string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	DropTargetId   string                 `protobuf:"bytes,2,opt,name=dropTargetId,proto3" json:"dropTargetId,omitempty"`                           // id of the simple block to insert considering position
	Position       model.BlockPosition    `protobuf:"varint,3,opt,name=position,proto3,enum=anytype.model.BlockPosition" json:"position,omitempty"` // position relatively to the dropTargetId simple block
	LocalFilePaths []string               `protobuf:"bytes,4,rep,name=localFilePaths,proto3" json:"localFilePaths,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RpcFileDropRequest) Reset() {
	*x = RpcFileDropRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[610]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcFileDropRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcFileDropRequest) ProtoMessage() {}

func (x *RpcFileDropRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[610]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcFileDropRequest.ProtoReflect.Descriptor instead.
func (*RpcFileDropRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 12, 6, 0}
}

func (x *RpcFileDropRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcFileDropRequest) GetDropTargetId() string {
	if x != nil {
		return x.DropTargetId
	}
	return ""
}

func (x *RpcFileDropRequest) GetPosition() model.BlockPosition {
	if x != nil {
		return x.Position
	}
	return model.BlockPosition(0)
}

func (x *RpcFileDropRequest) GetLocalFilePaths() []string {
	if x != nil {
		return x.LocalFilePaths
	}
	return nil
}

type RpcFileDropResponse struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Error         *RpcFileDropResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent            `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcFileDropResponse) Reset() {
	*x = RpcFileDropResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[611]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcFileDropResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcFileDropResponse) ProtoMessage() {}

func (x *RpcFileDropResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[611]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcFileDropResponse.ProtoReflect.Descriptor instead.
func (*RpcFileDropResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 12, 6, 1}
}

func (x *RpcFileDropResponse) GetError() *RpcFileDropResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcFileDropResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcFileDropResponseError struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	Code          RpcFileDropResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcFileDropResponseErrorCode" json:"code,omitempty"`
	Description   string                       `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcFileDropResponseError) Reset() {
	*x = RpcFileDropResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[612]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcFileDropResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcFileDropResponseError) ProtoMessage() {}

func (x *RpcFileDropResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[612]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcFileDropResponseError.ProtoReflect.Descriptor instead.
func (*RpcFileDropResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 12, 6, 1, 0}
}

func (x *RpcFileDropResponseError) GetCode() RpcFileDropResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcFileDropResponseError_NULL
}

func (x *RpcFileDropResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcFileSpaceUsageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SpaceId       string                 `protobuf:"bytes,1,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcFileSpaceUsageRequest) Reset() {
	*x = RpcFileSpaceUsageRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[613]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcFileSpaceUsageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcFileSpaceUsageRequest) ProtoMessage() {}

func (x *RpcFileSpaceUsageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[613]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcFileSpaceUsageRequest.ProtoReflect.Descriptor instead.
func (*RpcFileSpaceUsageRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 12, 7, 0}
}

func (x *RpcFileSpaceUsageRequest) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

type RpcFileSpaceUsageResponse struct {
	state         protoimpl.MessageState          `protogen:"open.v1"`
	Error         *RpcFileSpaceUsageResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Usage         *RpcFileSpaceUsageResponseUsage `protobuf:"bytes,2,opt,name=usage,proto3" json:"usage,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcFileSpaceUsageResponse) Reset() {
	*x = RpcFileSpaceUsageResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[614]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcFileSpaceUsageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcFileSpaceUsageResponse) ProtoMessage() {}

func (x *RpcFileSpaceUsageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[614]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcFileSpaceUsageResponse.ProtoReflect.Descriptor instead.
func (*RpcFileSpaceUsageResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 12, 7, 1}
}

func (x *RpcFileSpaceUsageResponse) GetError() *RpcFileSpaceUsageResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcFileSpaceUsageResponse) GetUsage() *RpcFileSpaceUsageResponseUsage {
	if x != nil {
		return x.Usage
	}
	return nil
}

type RpcFileSpaceUsageResponseUsage struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	FilesCount      uint64                 `protobuf:"varint,1,opt,name=filesCount,proto3" json:"filesCount,omitempty"`
	CidsCount       uint64                 `protobuf:"varint,2,opt,name=cidsCount,proto3" json:"cidsCount,omitempty"`
	BytesUsage      uint64                 `protobuf:"varint,3,opt,name=bytesUsage,proto3" json:"bytesUsage,omitempty"`
	BytesLeft       uint64                 `protobuf:"varint,4,opt,name=bytesLeft,proto3" json:"bytesLeft,omitempty"`
	BytesLimit      uint64                 `protobuf:"varint,5,opt,name=bytesLimit,proto3" json:"bytesLimit,omitempty"`
	LocalBytesUsage uint64                 `protobuf:"varint,6,opt,name=localBytesUsage,proto3" json:"localBytesUsage,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *RpcFileSpaceUsageResponseUsage) Reset() {
	*x = RpcFileSpaceUsageResponseUsage{}
	mi := &file_pb_protos_commands_proto_msgTypes[615]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcFileSpaceUsageResponseUsage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcFileSpaceUsageResponseUsage) ProtoMessage() {}

func (x *RpcFileSpaceUsageResponseUsage) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[615]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcFileSpaceUsageResponseUsage.ProtoReflect.Descriptor instead.
func (*RpcFileSpaceUsageResponseUsage) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 12, 7, 1, 0}
}

func (x *RpcFileSpaceUsageResponseUsage) GetFilesCount() uint64 {
	if x != nil {
		return x.FilesCount
	}
	return 0
}

func (x *RpcFileSpaceUsageResponseUsage) GetCidsCount() uint64 {
	if x != nil {
		return x.CidsCount
	}
	return 0
}

func (x *RpcFileSpaceUsageResponseUsage) GetBytesUsage() uint64 {
	if x != nil {
		return x.BytesUsage
	}
	return 0
}

func (x *RpcFileSpaceUsageResponseUsage) GetBytesLeft() uint64 {
	if x != nil {
		return x.BytesLeft
	}
	return 0
}

func (x *RpcFileSpaceUsageResponseUsage) GetBytesLimit() uint64 {
	if x != nil {
		return x.BytesLimit
	}
	return 0
}

func (x *RpcFileSpaceUsageResponseUsage) GetLocalBytesUsage() uint64 {
	if x != nil {
		return x.LocalBytesUsage
	}
	return 0
}

type RpcFileSpaceUsageResponseError struct {
	state         protoimpl.MessageState             `protogen:"open.v1"`
	Code          RpcFileSpaceUsageResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcFileSpaceUsageResponseErrorCode" json:"code,omitempty"`
	Description   string                             `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcFileSpaceUsageResponseError) Reset() {
	*x = RpcFileSpaceUsageResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[616]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcFileSpaceUsageResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcFileSpaceUsageResponseError) ProtoMessage() {}

func (x *RpcFileSpaceUsageResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[616]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcFileSpaceUsageResponseError.ProtoReflect.Descriptor instead.
func (*RpcFileSpaceUsageResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 12, 7, 1, 1}
}

func (x *RpcFileSpaceUsageResponseError) GetCode() RpcFileSpaceUsageResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcFileSpaceUsageResponseError_NULL
}

func (x *RpcFileSpaceUsageResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcFileNodeUsageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcFileNodeUsageRequest) Reset() {
	*x = RpcFileNodeUsageRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[617]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcFileNodeUsageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcFileNodeUsageRequest) ProtoMessage() {}

func (x *RpcFileNodeUsageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[617]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcFileNodeUsageRequest.ProtoReflect.Descriptor instead.
func (*RpcFileNodeUsageRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 12, 8, 0}
}

type RpcFileNodeUsageResponse struct {
	state         protoimpl.MessageState           `protogen:"open.v1"`
	Error         *RpcFileNodeUsageResponseError   `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Usage         *RpcFileNodeUsageResponseUsage   `protobuf:"bytes,2,opt,name=usage,proto3" json:"usage,omitempty"`
	Spaces        []*RpcFileNodeUsageResponseSpace `protobuf:"bytes,3,rep,name=spaces,proto3" json:"spaces,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcFileNodeUsageResponse) Reset() {
	*x = RpcFileNodeUsageResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[618]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcFileNodeUsageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcFileNodeUsageResponse) ProtoMessage() {}

func (x *RpcFileNodeUsageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[618]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcFileNodeUsageResponse.ProtoReflect.Descriptor instead.
func (*RpcFileNodeUsageResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 12, 8, 1}
}

func (x *RpcFileNodeUsageResponse) GetError() *RpcFileNodeUsageResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcFileNodeUsageResponse) GetUsage() *RpcFileNodeUsageResponseUsage {
	if x != nil {
		return x.Usage
	}
	return nil
}

func (x *RpcFileNodeUsageResponse) GetSpaces() []*RpcFileNodeUsageResponseSpace {
	if x != nil {
		return x.Spaces
	}
	return nil
}

type RpcFileNodeUsageResponseUsage struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	FilesCount      uint64                 `protobuf:"varint,1,opt,name=filesCount,proto3" json:"filesCount,omitempty"`
	CidsCount       uint64                 `protobuf:"varint,2,opt,name=cidsCount,proto3" json:"cidsCount,omitempty"`
	BytesUsage      uint64                 `protobuf:"varint,3,opt,name=bytesUsage,proto3" json:"bytesUsage,omitempty"`
	BytesLeft       uint64                 `protobuf:"varint,4,opt,name=bytesLeft,proto3" json:"bytesLeft,omitempty"`
	BytesLimit      uint64                 `protobuf:"varint,5,opt,name=bytesLimit,proto3" json:"bytesLimit,omitempty"`
	LocalBytesUsage uint64                 `protobuf:"varint,6,opt,name=localBytesUsage,proto3" json:"localBytesUsage,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *RpcFileNodeUsageResponseUsage) Reset() {
	*x = RpcFileNodeUsageResponseUsage{}
	mi := &file_pb_protos_commands_proto_msgTypes[619]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcFileNodeUsageResponseUsage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcFileNodeUsageResponseUsage) ProtoMessage() {}

func (x *RpcFileNodeUsageResponseUsage) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[619]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcFileNodeUsageResponseUsage.ProtoReflect.Descriptor instead.
func (*RpcFileNodeUsageResponseUsage) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 12, 8, 1, 0}
}

func (x *RpcFileNodeUsageResponseUsage) GetFilesCount() uint64 {
	if x != nil {
		return x.FilesCount
	}
	return 0
}

func (x *RpcFileNodeUsageResponseUsage) GetCidsCount() uint64 {
	if x != nil {
		return x.CidsCount
	}
	return 0
}

func (x *RpcFileNodeUsageResponseUsage) GetBytesUsage() uint64 {
	if x != nil {
		return x.BytesUsage
	}
	return 0
}

func (x *RpcFileNodeUsageResponseUsage) GetBytesLeft() uint64 {
	if x != nil {
		return x.BytesLeft
	}
	return 0
}

func (x *RpcFileNodeUsageResponseUsage) GetBytesLimit() uint64 {
	if x != nil {
		return x.BytesLimit
	}
	return 0
}

func (x *RpcFileNodeUsageResponseUsage) GetLocalBytesUsage() uint64 {
	if x != nil {
		return x.LocalBytesUsage
	}
	return 0
}

type RpcFileNodeUsageResponseSpace struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SpaceId       string                 `protobuf:"bytes,1,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	FilesCount    uint64                 `protobuf:"varint,2,opt,name=filesCount,proto3" json:"filesCount,omitempty"`
	CidsCount     uint64                 `protobuf:"varint,3,opt,name=cidsCount,proto3" json:"cidsCount,omitempty"`
	BytesUsage    uint64                 `protobuf:"varint,4,opt,name=bytesUsage,proto3" json:"bytesUsage,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcFileNodeUsageResponseSpace) Reset() {
	*x = RpcFileNodeUsageResponseSpace{}
	mi := &file_pb_protos_commands_proto_msgTypes[620]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcFileNodeUsageResponseSpace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcFileNodeUsageResponseSpace) ProtoMessage() {}

func (x *RpcFileNodeUsageResponseSpace) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[620]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcFileNodeUsageResponseSpace.ProtoReflect.Descriptor instead.
func (*RpcFileNodeUsageResponseSpace) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 12, 8, 1, 1}
}

func (x *RpcFileNodeUsageResponseSpace) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *RpcFileNodeUsageResponseSpace) GetFilesCount() uint64 {
	if x != nil {
		return x.FilesCount
	}
	return 0
}

func (x *RpcFileNodeUsageResponseSpace) GetCidsCount() uint64 {
	if x != nil {
		return x.CidsCount
	}
	return 0
}

func (x *RpcFileNodeUsageResponseSpace) GetBytesUsage() uint64 {
	if x != nil {
		return x.BytesUsage
	}
	return 0
}

type RpcFileNodeUsageResponseError struct {
	state         protoimpl.MessageState            `protogen:"open.v1"`
	Code          RpcFileNodeUsageResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcFileNodeUsageResponseErrorCode" json:"code,omitempty"`
	Description   string                            `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcFileNodeUsageResponseError) Reset() {
	*x = RpcFileNodeUsageResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[621]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcFileNodeUsageResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcFileNodeUsageResponseError) ProtoMessage() {}

func (x *RpcFileNodeUsageResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[621]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcFileNodeUsageResponseError.ProtoReflect.Descriptor instead.
func (*RpcFileNodeUsageResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 12, 8, 1, 2}
}

func (x *RpcFileNodeUsageResponseError) GetCode() RpcFileNodeUsageResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcFileNodeUsageResponseError_NULL
}

func (x *RpcFileNodeUsageResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcNavigationListObjects struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcNavigationListObjects) Reset() {
	*x = RpcNavigationListObjects{}
	mi := &file_pb_protos_commands_proto_msgTypes[622]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcNavigationListObjects) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcNavigationListObjects) ProtoMessage() {}

func (x *RpcNavigationListObjects) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[622]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcNavigationListObjects.ProtoReflect.Descriptor instead.
func (*RpcNavigationListObjects) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 13, 0}
}

// Get the info for page alongside with info for all inbound and outbound links from/to this page
type RpcNavigationGetObjectInfoWithLinks struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcNavigationGetObjectInfoWithLinks) Reset() {
	*x = RpcNavigationGetObjectInfoWithLinks{}
	mi := &file_pb_protos_commands_proto_msgTypes[623]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcNavigationGetObjectInfoWithLinks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcNavigationGetObjectInfoWithLinks) ProtoMessage() {}

func (x *RpcNavigationGetObjectInfoWithLinks) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[623]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcNavigationGetObjectInfoWithLinks.ProtoReflect.Descriptor instead.
func (*RpcNavigationGetObjectInfoWithLinks) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 13, 1}
}

type RpcNavigationListObjectsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Context       RpcNavigationContext   `protobuf:"varint,1,opt,name=context,proto3,enum=anytype.RpcNavigationContext" json:"context,omitempty"`
	FullText      string                 `protobuf:"bytes,2,opt,name=fullText,proto3" json:"fullText,omitempty"`
	Limit         int32                  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int32                  `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcNavigationListObjectsRequest) Reset() {
	*x = RpcNavigationListObjectsRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[624]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcNavigationListObjectsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcNavigationListObjectsRequest) ProtoMessage() {}

func (x *RpcNavigationListObjectsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[624]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcNavigationListObjectsRequest.ProtoReflect.Descriptor instead.
func (*RpcNavigationListObjectsRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 13, 0, 0}
}

func (x *RpcNavigationListObjectsRequest) GetContext() RpcNavigationContext {
	if x != nil {
		return x.Context
	}
	return RpcNavigation_Navigation
}

func (x *RpcNavigationListObjectsRequest) GetFullText() string {
	if x != nil {
		return x.FullText
	}
	return ""
}

func (x *RpcNavigationListObjectsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *RpcNavigationListObjectsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type RpcNavigationListObjectsResponse struct {
	state         protoimpl.MessageState                 `protogen:"open.v1"`
	Error         *RpcNavigationListObjectsResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Objects       []*model.ObjectInfo                    `protobuf:"bytes,2,rep,name=objects,proto3" json:"objects,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcNavigationListObjectsResponse) Reset() {
	*x = RpcNavigationListObjectsResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[625]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcNavigationListObjectsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcNavigationListObjectsResponse) ProtoMessage() {}

func (x *RpcNavigationListObjectsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[625]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcNavigationListObjectsResponse.ProtoReflect.Descriptor instead.
func (*RpcNavigationListObjectsResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 13, 0, 1}
}

func (x *RpcNavigationListObjectsResponse) GetError() *RpcNavigationListObjectsResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcNavigationListObjectsResponse) GetObjects() []*model.ObjectInfo {
	if x != nil {
		return x.Objects
	}
	return nil
}

type RpcNavigationListObjectsResponseError struct {
	state         protoimpl.MessageState                    `protogen:"open.v1"`
	Code          RpcNavigationListObjectsResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcNavigationListObjectsResponseErrorCode" json:"code,omitempty"`
	Description   string                                    `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcNavigationListObjectsResponseError) Reset() {
	*x = RpcNavigationListObjectsResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[626]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcNavigationListObjectsResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcNavigationListObjectsResponseError) ProtoMessage() {}

func (x *RpcNavigationListObjectsResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[626]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcNavigationListObjectsResponseError.ProtoReflect.Descriptor instead.
func (*RpcNavigationListObjectsResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 13, 0, 1, 0}
}

func (x *RpcNavigationListObjectsResponseError) GetCode() RpcNavigationListObjectsResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcNavigationListObjectsResponseError_NULL
}

func (x *RpcNavigationListObjectsResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcNavigationGetObjectInfoWithLinksRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ObjectId      string                 `protobuf:"bytes,1,opt,name=objectId,proto3" json:"objectId,omitempty"`
	Context       RpcNavigationContext   `protobuf:"varint,2,opt,name=context,proto3,enum=anytype.RpcNavigationContext" json:"context,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcNavigationGetObjectInfoWithLinksRequest) Reset() {
	*x = RpcNavigationGetObjectInfoWithLinksRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[627]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcNavigationGetObjectInfoWithLinksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcNavigationGetObjectInfoWithLinksRequest) ProtoMessage() {}

func (x *RpcNavigationGetObjectInfoWithLinksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[627]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcNavigationGetObjectInfoWithLinksRequest.ProtoReflect.Descriptor instead.
func (*RpcNavigationGetObjectInfoWithLinksRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 13, 1, 0}
}

func (x *RpcNavigationGetObjectInfoWithLinksRequest) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

func (x *RpcNavigationGetObjectInfoWithLinksRequest) GetContext() RpcNavigationContext {
	if x != nil {
		return x.Context
	}
	return RpcNavigation_Navigation
}

type RpcNavigationGetObjectInfoWithLinksResponse struct {
	state         protoimpl.MessageState                            `protogen:"open.v1"`
	Error         *RpcNavigationGetObjectInfoWithLinksResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Object        *model.ObjectInfoWithLinks                        `protobuf:"bytes,2,opt,name=object,proto3" json:"object,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcNavigationGetObjectInfoWithLinksResponse) Reset() {
	*x = RpcNavigationGetObjectInfoWithLinksResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[628]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcNavigationGetObjectInfoWithLinksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcNavigationGetObjectInfoWithLinksResponse) ProtoMessage() {}

func (x *RpcNavigationGetObjectInfoWithLinksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[628]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcNavigationGetObjectInfoWithLinksResponse.ProtoReflect.Descriptor instead.
func (*RpcNavigationGetObjectInfoWithLinksResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 13, 1, 1}
}

func (x *RpcNavigationGetObjectInfoWithLinksResponse) GetError() *RpcNavigationGetObjectInfoWithLinksResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcNavigationGetObjectInfoWithLinksResponse) GetObject() *model.ObjectInfoWithLinks {
	if x != nil {
		return x.Object
	}
	return nil
}

type RpcNavigationGetObjectInfoWithLinksResponseError struct {
	state         protoimpl.MessageState                               `protogen:"open.v1"`
	Code          RpcNavigationGetObjectInfoWithLinksResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcNavigationGetObjectInfoWithLinksResponseErrorCode" json:"code,omitempty"`
	Description   string                                               `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcNavigationGetObjectInfoWithLinksResponseError) Reset() {
	*x = RpcNavigationGetObjectInfoWithLinksResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[629]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcNavigationGetObjectInfoWithLinksResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcNavigationGetObjectInfoWithLinksResponseError) ProtoMessage() {}

func (x *RpcNavigationGetObjectInfoWithLinksResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[629]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcNavigationGetObjectInfoWithLinksResponseError.ProtoReflect.Descriptor instead.
func (*RpcNavigationGetObjectInfoWithLinksResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 13, 1, 1, 0}
}

func (x *RpcNavigationGetObjectInfoWithLinksResponseError) GetCode() RpcNavigationGetObjectInfoWithLinksResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcNavigationGetObjectInfoWithLinksResponseError_NULL
}

func (x *RpcNavigationGetObjectInfoWithLinksResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcTemplateCreateFromObject struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcTemplateCreateFromObject) Reset() {
	*x = RpcTemplateCreateFromObject{}
	mi := &file_pb_protos_commands_proto_msgTypes[630]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcTemplateCreateFromObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcTemplateCreateFromObject) ProtoMessage() {}

func (x *RpcTemplateCreateFromObject) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[630]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcTemplateCreateFromObject.ProtoReflect.Descriptor instead.
func (*RpcTemplateCreateFromObject) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 14, 0}
}

type RpcTemplateClone struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcTemplateClone) Reset() {
	*x = RpcTemplateClone{}
	mi := &file_pb_protos_commands_proto_msgTypes[631]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcTemplateClone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcTemplateClone) ProtoMessage() {}

func (x *RpcTemplateClone) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[631]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcTemplateClone.ProtoReflect.Descriptor instead.
func (*RpcTemplateClone) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 14, 1}
}

type RpcTemplateExportAll struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcTemplateExportAll) Reset() {
	*x = RpcTemplateExportAll{}
	mi := &file_pb_protos_commands_proto_msgTypes[632]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcTemplateExportAll) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcTemplateExportAll) ProtoMessage() {}

func (x *RpcTemplateExportAll) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[632]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcTemplateExportAll.ProtoReflect.Descriptor instead.
func (*RpcTemplateExportAll) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 14, 2}
}

type RpcTemplateCreateFromObjectRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// id of block for making them template
	ContextId     string `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcTemplateCreateFromObjectRequest) Reset() {
	*x = RpcTemplateCreateFromObjectRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[633]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcTemplateCreateFromObjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcTemplateCreateFromObjectRequest) ProtoMessage() {}

func (x *RpcTemplateCreateFromObjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[633]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcTemplateCreateFromObjectRequest.ProtoReflect.Descriptor instead.
func (*RpcTemplateCreateFromObjectRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 14, 0, 0}
}

func (x *RpcTemplateCreateFromObjectRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

type RpcTemplateCreateFromObjectResponse struct {
	state protoimpl.MessageState                    `protogen:"open.v1"`
	Error *RpcTemplateCreateFromObjectResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	// created template id
	Id            string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcTemplateCreateFromObjectResponse) Reset() {
	*x = RpcTemplateCreateFromObjectResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[634]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcTemplateCreateFromObjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcTemplateCreateFromObjectResponse) ProtoMessage() {}

func (x *RpcTemplateCreateFromObjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[634]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcTemplateCreateFromObjectResponse.ProtoReflect.Descriptor instead.
func (*RpcTemplateCreateFromObjectResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 14, 0, 1}
}

func (x *RpcTemplateCreateFromObjectResponse) GetError() *RpcTemplateCreateFromObjectResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcTemplateCreateFromObjectResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type RpcTemplateCreateFromObjectResponseError struct {
	state         protoimpl.MessageState                       `protogen:"open.v1"`
	Code          RpcTemplateCreateFromObjectResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcTemplateCreateFromObjectResponseErrorCode" json:"code,omitempty"`
	Description   string                                       `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcTemplateCreateFromObjectResponseError) Reset() {
	*x = RpcTemplateCreateFromObjectResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[635]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcTemplateCreateFromObjectResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcTemplateCreateFromObjectResponseError) ProtoMessage() {}

func (x *RpcTemplateCreateFromObjectResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[635]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcTemplateCreateFromObjectResponseError.ProtoReflect.Descriptor instead.
func (*RpcTemplateCreateFromObjectResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 14, 0, 1, 0}
}

func (x *RpcTemplateCreateFromObjectResponseError) GetCode() RpcTemplateCreateFromObjectResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcTemplateCreateFromObjectResponseError_NULL
}

func (x *RpcTemplateCreateFromObjectResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcTemplateCloneRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// id of template block for cloning
	ContextId     string `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	SpaceId       string `protobuf:"bytes,2,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcTemplateCloneRequest) Reset() {
	*x = RpcTemplateCloneRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[636]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcTemplateCloneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcTemplateCloneRequest) ProtoMessage() {}

func (x *RpcTemplateCloneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[636]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcTemplateCloneRequest.ProtoReflect.Descriptor instead.
func (*RpcTemplateCloneRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 14, 1, 0}
}

func (x *RpcTemplateCloneRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcTemplateCloneRequest) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

type RpcTemplateCloneResponse struct {
	state protoimpl.MessageState         `protogen:"open.v1"`
	Error *RpcTemplateCloneResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	// created template id
	Id            string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcTemplateCloneResponse) Reset() {
	*x = RpcTemplateCloneResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[637]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcTemplateCloneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcTemplateCloneResponse) ProtoMessage() {}

func (x *RpcTemplateCloneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[637]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcTemplateCloneResponse.ProtoReflect.Descriptor instead.
func (*RpcTemplateCloneResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 14, 1, 1}
}

func (x *RpcTemplateCloneResponse) GetError() *RpcTemplateCloneResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcTemplateCloneResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type RpcTemplateCloneResponseError struct {
	state         protoimpl.MessageState            `protogen:"open.v1"`
	Code          RpcTemplateCloneResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcTemplateCloneResponseErrorCode" json:"code,omitempty"`
	Description   string                            `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcTemplateCloneResponseError) Reset() {
	*x = RpcTemplateCloneResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[638]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcTemplateCloneResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcTemplateCloneResponseError) ProtoMessage() {}

func (x *RpcTemplateCloneResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[638]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcTemplateCloneResponseError.ProtoReflect.Descriptor instead.
func (*RpcTemplateCloneResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 14, 1, 1, 0}
}

func (x *RpcTemplateCloneResponseError) GetCode() RpcTemplateCloneResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcTemplateCloneResponseError_NULL
}

func (x *RpcTemplateCloneResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcTemplateExportAllRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// the path where export files will place
	Path          string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcTemplateExportAllRequest) Reset() {
	*x = RpcTemplateExportAllRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[639]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcTemplateExportAllRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcTemplateExportAllRequest) ProtoMessage() {}

func (x *RpcTemplateExportAllRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[639]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcTemplateExportAllRequest.ProtoReflect.Descriptor instead.
func (*RpcTemplateExportAllRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 14, 2, 0}
}

func (x *RpcTemplateExportAllRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type RpcTemplateExportAllResponse struct {
	state         protoimpl.MessageState             `protogen:"open.v1"`
	Error         *RpcTemplateExportAllResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Path          string                             `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Event         *ResponseEvent                     `protobuf:"bytes,3,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcTemplateExportAllResponse) Reset() {
	*x = RpcTemplateExportAllResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[640]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcTemplateExportAllResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcTemplateExportAllResponse) ProtoMessage() {}

func (x *RpcTemplateExportAllResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[640]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcTemplateExportAllResponse.ProtoReflect.Descriptor instead.
func (*RpcTemplateExportAllResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 14, 2, 1}
}

func (x *RpcTemplateExportAllResponse) GetError() *RpcTemplateExportAllResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcTemplateExportAllResponse) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *RpcTemplateExportAllResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcTemplateExportAllResponseError struct {
	state         protoimpl.MessageState                `protogen:"open.v1"`
	Code          RpcTemplateExportAllResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcTemplateExportAllResponseErrorCode" json:"code,omitempty"`
	Description   string                                `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcTemplateExportAllResponseError) Reset() {
	*x = RpcTemplateExportAllResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[641]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcTemplateExportAllResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcTemplateExportAllResponseError) ProtoMessage() {}

func (x *RpcTemplateExportAllResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[641]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcTemplateExportAllResponseError.ProtoReflect.Descriptor instead.
func (*RpcTemplateExportAllResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 14, 2, 1, 0}
}

func (x *RpcTemplateExportAllResponseError) GetCode() RpcTemplateExportAllResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcTemplateExportAllResponseError_NULL
}

func (x *RpcTemplateExportAllResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcLinkPreviewRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Url           string                 `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcLinkPreviewRequest) Reset() {
	*x = RpcLinkPreviewRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[642]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcLinkPreviewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcLinkPreviewRequest) ProtoMessage() {}

func (x *RpcLinkPreviewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[642]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcLinkPreviewRequest.ProtoReflect.Descriptor instead.
func (*RpcLinkPreviewRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 15, 0}
}

func (x *RpcLinkPreviewRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type RpcLinkPreviewResponse struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	Error         *RpcLinkPreviewResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	LinkPreview   *model.LinkPreview           `protobuf:"bytes,2,opt,name=linkPreview,proto3" json:"linkPreview,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcLinkPreviewResponse) Reset() {
	*x = RpcLinkPreviewResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[643]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcLinkPreviewResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcLinkPreviewResponse) ProtoMessage() {}

func (x *RpcLinkPreviewResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[643]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcLinkPreviewResponse.ProtoReflect.Descriptor instead.
func (*RpcLinkPreviewResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 15, 1}
}

func (x *RpcLinkPreviewResponse) GetError() *RpcLinkPreviewResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcLinkPreviewResponse) GetLinkPreview() *model.LinkPreview {
	if x != nil {
		return x.LinkPreview
	}
	return nil
}

type RpcLinkPreviewResponseError struct {
	state         protoimpl.MessageState          `protogen:"open.v1"`
	Code          RpcLinkPreviewResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcLinkPreviewResponseErrorCode" json:"code,omitempty"`
	Description   string                          `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcLinkPreviewResponseError) Reset() {
	*x = RpcLinkPreviewResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[644]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcLinkPreviewResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcLinkPreviewResponseError) ProtoMessage() {}

func (x *RpcLinkPreviewResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[644]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcLinkPreviewResponseError.ProtoReflect.Descriptor instead.
func (*RpcLinkPreviewResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 15, 1, 0}
}

func (x *RpcLinkPreviewResponseError) GetCode() RpcLinkPreviewResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcLinkPreviewResponseError_NULL
}

func (x *RpcLinkPreviewResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcUnsplashSearch struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcUnsplashSearch) Reset() {
	*x = RpcUnsplashSearch{}
	mi := &file_pb_protos_commands_proto_msgTypes[645]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcUnsplashSearch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcUnsplashSearch) ProtoMessage() {}

func (x *RpcUnsplashSearch) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[645]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcUnsplashSearch.ProtoReflect.Descriptor instead.
func (*RpcUnsplashSearch) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 16, 0}
}

type RpcUnsplashDownload struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcUnsplashDownload) Reset() {
	*x = RpcUnsplashDownload{}
	mi := &file_pb_protos_commands_proto_msgTypes[646]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcUnsplashDownload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcUnsplashDownload) ProtoMessage() {}

func (x *RpcUnsplashDownload) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[646]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcUnsplashDownload.ProtoReflect.Descriptor instead.
func (*RpcUnsplashDownload) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 16, 1}
}

type RpcUnsplashSearchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Query         string                 `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`  // empty means random images
	Limit         int32                  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"` // may be omitted if the request was cached previously with another limit
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcUnsplashSearchRequest) Reset() {
	*x = RpcUnsplashSearchRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[647]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcUnsplashSearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcUnsplashSearchRequest) ProtoMessage() {}

func (x *RpcUnsplashSearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[647]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcUnsplashSearchRequest.ProtoReflect.Descriptor instead.
func (*RpcUnsplashSearchRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 16, 0, 0}
}

func (x *RpcUnsplashSearchRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *RpcUnsplashSearchRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type RpcUnsplashSearchResponse struct {
	state         protoimpl.MessageState              `protogen:"open.v1"`
	Error         *RpcUnsplashSearchResponseError     `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Pictures      []*RpcUnsplashSearchResponsePicture `protobuf:"bytes,2,rep,name=pictures,proto3" json:"pictures,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcUnsplashSearchResponse) Reset() {
	*x = RpcUnsplashSearchResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[648]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcUnsplashSearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcUnsplashSearchResponse) ProtoMessage() {}

func (x *RpcUnsplashSearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[648]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcUnsplashSearchResponse.ProtoReflect.Descriptor instead.
func (*RpcUnsplashSearchResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 16, 0, 1}
}

func (x *RpcUnsplashSearchResponse) GetError() *RpcUnsplashSearchResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcUnsplashSearchResponse) GetPictures() []*RpcUnsplashSearchResponsePicture {
	if x != nil {
		return x.Pictures
	}
	return nil
}

type RpcUnsplashSearchResponsePicture struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Url           string                 `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	Artist        string                 `protobuf:"bytes,3,opt,name=artist,proto3" json:"artist,omitempty"`
	ArtistUrl     string                 `protobuf:"bytes,4,opt,name=artistUrl,proto3" json:"artistUrl,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcUnsplashSearchResponsePicture) Reset() {
	*x = RpcUnsplashSearchResponsePicture{}
	mi := &file_pb_protos_commands_proto_msgTypes[649]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcUnsplashSearchResponsePicture) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcUnsplashSearchResponsePicture) ProtoMessage() {}

func (x *RpcUnsplashSearchResponsePicture) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[649]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcUnsplashSearchResponsePicture.ProtoReflect.Descriptor instead.
func (*RpcUnsplashSearchResponsePicture) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 16, 0, 1, 0}
}

func (x *RpcUnsplashSearchResponsePicture) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RpcUnsplashSearchResponsePicture) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *RpcUnsplashSearchResponsePicture) GetArtist() string {
	if x != nil {
		return x.Artist
	}
	return ""
}

func (x *RpcUnsplashSearchResponsePicture) GetArtistUrl() string {
	if x != nil {
		return x.ArtistUrl
	}
	return ""
}

type RpcUnsplashSearchResponseError struct {
	state         protoimpl.MessageState             `protogen:"open.v1"`
	Code          RpcUnsplashSearchResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcUnsplashSearchResponseErrorCode" json:"code,omitempty"`
	Description   string                             `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcUnsplashSearchResponseError) Reset() {
	*x = RpcUnsplashSearchResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[650]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcUnsplashSearchResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcUnsplashSearchResponseError) ProtoMessage() {}

func (x *RpcUnsplashSearchResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[650]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcUnsplashSearchResponseError.ProtoReflect.Descriptor instead.
func (*RpcUnsplashSearchResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 16, 0, 1, 1}
}

func (x *RpcUnsplashSearchResponseError) GetCode() RpcUnsplashSearchResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcUnsplashSearchResponseError_NULL
}

func (x *RpcUnsplashSearchResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcUnsplashDownloadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PictureId     string                 `protobuf:"bytes,1,opt,name=pictureId,proto3" json:"pictureId,omitempty"`
	SpaceId       string                 `protobuf:"bytes,2,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	ImageKind     model.ImageKind        `protobuf:"varint,3,opt,name=imageKind,proto3,enum=anytype.model.ImageKind" json:"imageKind,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcUnsplashDownloadRequest) Reset() {
	*x = RpcUnsplashDownloadRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[651]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcUnsplashDownloadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcUnsplashDownloadRequest) ProtoMessage() {}

func (x *RpcUnsplashDownloadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[651]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcUnsplashDownloadRequest.ProtoReflect.Descriptor instead.
func (*RpcUnsplashDownloadRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 16, 1, 0}
}

func (x *RpcUnsplashDownloadRequest) GetPictureId() string {
	if x != nil {
		return x.PictureId
	}
	return ""
}

func (x *RpcUnsplashDownloadRequest) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *RpcUnsplashDownloadRequest) GetImageKind() model.ImageKind {
	if x != nil {
		return x.ImageKind
	}
	return model.ImageKind(0)
}

type RpcUnsplashDownloadResponse struct {
	state         protoimpl.MessageState            `protogen:"open.v1"`
	Error         *RpcUnsplashDownloadResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	ObjectId      string                            `protobuf:"bytes,2,opt,name=objectId,proto3" json:"objectId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcUnsplashDownloadResponse) Reset() {
	*x = RpcUnsplashDownloadResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[652]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcUnsplashDownloadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcUnsplashDownloadResponse) ProtoMessage() {}

func (x *RpcUnsplashDownloadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[652]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcUnsplashDownloadResponse.ProtoReflect.Descriptor instead.
func (*RpcUnsplashDownloadResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 16, 1, 1}
}

func (x *RpcUnsplashDownloadResponse) GetError() *RpcUnsplashDownloadResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcUnsplashDownloadResponse) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

type RpcUnsplashDownloadResponseError struct {
	state         protoimpl.MessageState               `protogen:"open.v1"`
	Code          RpcUnsplashDownloadResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcUnsplashDownloadResponseErrorCode" json:"code,omitempty"`
	Description   string                               `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcUnsplashDownloadResponseError) Reset() {
	*x = RpcUnsplashDownloadResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[653]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcUnsplashDownloadResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcUnsplashDownloadResponseError) ProtoMessage() {}

func (x *RpcUnsplashDownloadResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[653]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcUnsplashDownloadResponseError.ProtoReflect.Descriptor instead.
func (*RpcUnsplashDownloadResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 16, 1, 1, 0}
}

func (x *RpcUnsplashDownloadResponseError) GetCode() RpcUnsplashDownloadResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcUnsplashDownloadResponseError_NULL
}

func (x *RpcUnsplashDownloadResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcGalleryDownloadManifest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcGalleryDownloadManifest) Reset() {
	*x = RpcGalleryDownloadManifest{}
	mi := &file_pb_protos_commands_proto_msgTypes[654]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcGalleryDownloadManifest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcGalleryDownloadManifest) ProtoMessage() {}

func (x *RpcGalleryDownloadManifest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[654]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcGalleryDownloadManifest.ProtoReflect.Descriptor instead.
func (*RpcGalleryDownloadManifest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 17, 0}
}

type RpcGalleryDownloadIndex struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcGalleryDownloadIndex) Reset() {
	*x = RpcGalleryDownloadIndex{}
	mi := &file_pb_protos_commands_proto_msgTypes[655]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcGalleryDownloadIndex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcGalleryDownloadIndex) ProtoMessage() {}

func (x *RpcGalleryDownloadIndex) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[655]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcGalleryDownloadIndex.ProtoReflect.Descriptor instead.
func (*RpcGalleryDownloadIndex) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 17, 1}
}

type RpcGalleryDownloadManifestRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Url           string                 `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcGalleryDownloadManifestRequest) Reset() {
	*x = RpcGalleryDownloadManifestRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[656]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcGalleryDownloadManifestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcGalleryDownloadManifestRequest) ProtoMessage() {}

func (x *RpcGalleryDownloadManifestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[656]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcGalleryDownloadManifestRequest.ProtoReflect.Descriptor instead.
func (*RpcGalleryDownloadManifestRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 17, 0, 0}
}

func (x *RpcGalleryDownloadManifestRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type RpcGalleryDownloadManifestResponse struct {
	state         protoimpl.MessageState                   `protogen:"open.v1"`
	Error         *RpcGalleryDownloadManifestResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Info          *model.ManifestInfo                      `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcGalleryDownloadManifestResponse) Reset() {
	*x = RpcGalleryDownloadManifestResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[657]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcGalleryDownloadManifestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcGalleryDownloadManifestResponse) ProtoMessage() {}

func (x *RpcGalleryDownloadManifestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[657]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcGalleryDownloadManifestResponse.ProtoReflect.Descriptor instead.
func (*RpcGalleryDownloadManifestResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 17, 0, 1}
}

func (x *RpcGalleryDownloadManifestResponse) GetError() *RpcGalleryDownloadManifestResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcGalleryDownloadManifestResponse) GetInfo() *model.ManifestInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type RpcGalleryDownloadManifestResponseError struct {
	state         protoimpl.MessageState                      `protogen:"open.v1"`
	Code          RpcGalleryDownloadManifestResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcGalleryDownloadManifestResponseErrorCode" json:"code,omitempty"`
	Description   string                                      `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcGalleryDownloadManifestResponseError) Reset() {
	*x = RpcGalleryDownloadManifestResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[658]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcGalleryDownloadManifestResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcGalleryDownloadManifestResponseError) ProtoMessage() {}

func (x *RpcGalleryDownloadManifestResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[658]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcGalleryDownloadManifestResponseError.ProtoReflect.Descriptor instead.
func (*RpcGalleryDownloadManifestResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 17, 0, 1, 0}
}

func (x *RpcGalleryDownloadManifestResponseError) GetCode() RpcGalleryDownloadManifestResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcGalleryDownloadManifestResponseError_NULL
}

func (x *RpcGalleryDownloadManifestResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcGalleryDownloadIndexRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcGalleryDownloadIndexRequest) Reset() {
	*x = RpcGalleryDownloadIndexRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[659]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcGalleryDownloadIndexRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcGalleryDownloadIndexRequest) ProtoMessage() {}

func (x *RpcGalleryDownloadIndexRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[659]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcGalleryDownloadIndexRequest.ProtoReflect.Descriptor instead.
func (*RpcGalleryDownloadIndexRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 17, 1, 0}
}

type RpcGalleryDownloadIndexResponse struct {
	state         protoimpl.MessageState                     `protogen:"open.v1"`
	Error         *RpcGalleryDownloadIndexResponseError      `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Categories    []*RpcGalleryDownloadIndexResponseCategory `protobuf:"bytes,2,rep,name=categories,proto3" json:"categories,omitempty"`
	Experiences   []*model.ManifestInfo                      `protobuf:"bytes,3,rep,name=experiences,proto3" json:"experiences,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcGalleryDownloadIndexResponse) Reset() {
	*x = RpcGalleryDownloadIndexResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[660]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcGalleryDownloadIndexResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcGalleryDownloadIndexResponse) ProtoMessage() {}

func (x *RpcGalleryDownloadIndexResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[660]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcGalleryDownloadIndexResponse.ProtoReflect.Descriptor instead.
func (*RpcGalleryDownloadIndexResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 17, 1, 1}
}

func (x *RpcGalleryDownloadIndexResponse) GetError() *RpcGalleryDownloadIndexResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcGalleryDownloadIndexResponse) GetCategories() []*RpcGalleryDownloadIndexResponseCategory {
	if x != nil {
		return x.Categories
	}
	return nil
}

func (x *RpcGalleryDownloadIndexResponse) GetExperiences() []*model.ManifestInfo {
	if x != nil {
		return x.Experiences
	}
	return nil
}

type RpcGalleryDownloadIndexResponseError struct {
	state         protoimpl.MessageState                   `protogen:"open.v1"`
	Code          RpcGalleryDownloadIndexResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcGalleryDownloadIndexResponseErrorCode" json:"code,omitempty"`
	Description   string                                   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcGalleryDownloadIndexResponseError) Reset() {
	*x = RpcGalleryDownloadIndexResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[661]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcGalleryDownloadIndexResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcGalleryDownloadIndexResponseError) ProtoMessage() {}

func (x *RpcGalleryDownloadIndexResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[661]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcGalleryDownloadIndexResponseError.ProtoReflect.Descriptor instead.
func (*RpcGalleryDownloadIndexResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 17, 1, 1, 0}
}

func (x *RpcGalleryDownloadIndexResponseError) GetCode() RpcGalleryDownloadIndexResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcGalleryDownloadIndexResponseError_NULL
}

func (x *RpcGalleryDownloadIndexResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcGalleryDownloadIndexResponseCategory struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Experiences   []string               `protobuf:"bytes,2,rep,name=experiences,proto3" json:"experiences,omitempty"`
	Icon          string                 `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcGalleryDownloadIndexResponseCategory) Reset() {
	*x = RpcGalleryDownloadIndexResponseCategory{}
	mi := &file_pb_protos_commands_proto_msgTypes[662]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcGalleryDownloadIndexResponseCategory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcGalleryDownloadIndexResponseCategory) ProtoMessage() {}

func (x *RpcGalleryDownloadIndexResponseCategory) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[662]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcGalleryDownloadIndexResponseCategory.ProtoReflect.Descriptor instead.
func (*RpcGalleryDownloadIndexResponseCategory) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 17, 1, 1, 1}
}

func (x *RpcGalleryDownloadIndexResponseCategory) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RpcGalleryDownloadIndexResponseCategory) GetExperiences() []string {
	if x != nil {
		return x.Experiences
	}
	return nil
}

func (x *RpcGalleryDownloadIndexResponseCategory) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

type RpcBlockReplace struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockReplace) Reset() {
	*x = RpcBlockReplace{}
	mi := &file_pb_protos_commands_proto_msgTypes[663]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockReplace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockReplace) ProtoMessage() {}

func (x *RpcBlockReplace) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[663]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockReplace.ProtoReflect.Descriptor instead.
func (*RpcBlockReplace) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 0}
}

type RpcBlockSplit struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockSplit) Reset() {
	*x = RpcBlockSplit{}
	mi := &file_pb_protos_commands_proto_msgTypes[664]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockSplit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockSplit) ProtoMessage() {}

func (x *RpcBlockSplit) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[664]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockSplit.ProtoReflect.Descriptor instead.
func (*RpcBlockSplit) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 1}
}

type RpcBlockMerge struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockMerge) Reset() {
	*x = RpcBlockMerge{}
	mi := &file_pb_protos_commands_proto_msgTypes[665]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockMerge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockMerge) ProtoMessage() {}

func (x *RpcBlockMerge) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[665]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockMerge.ProtoReflect.Descriptor instead.
func (*RpcBlockMerge) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 2}
}

type RpcBlockCopy struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockCopy) Reset() {
	*x = RpcBlockCopy{}
	mi := &file_pb_protos_commands_proto_msgTypes[666]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockCopy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockCopy) ProtoMessage() {}

func (x *RpcBlockCopy) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[666]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockCopy.ProtoReflect.Descriptor instead.
func (*RpcBlockCopy) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 3}
}

type RpcBlockPaste struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockPaste) Reset() {
	*x = RpcBlockPaste{}
	mi := &file_pb_protos_commands_proto_msgTypes[667]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockPaste) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockPaste) ProtoMessage() {}

func (x *RpcBlockPaste) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[667]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockPaste.ProtoReflect.Descriptor instead.
func (*RpcBlockPaste) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 4}
}

type RpcBlockCut struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockCut) Reset() {
	*x = RpcBlockCut{}
	mi := &file_pb_protos_commands_proto_msgTypes[668]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockCut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockCut) ProtoMessage() {}

func (x *RpcBlockCut) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[668]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockCut.ProtoReflect.Descriptor instead.
func (*RpcBlockCut) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 5}
}

type RpcBlockUpload struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockUpload) Reset() {
	*x = RpcBlockUpload{}
	mi := &file_pb_protos_commands_proto_msgTypes[669]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockUpload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockUpload) ProtoMessage() {}

func (x *RpcBlockUpload) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[669]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockUpload.ProtoReflect.Descriptor instead.
func (*RpcBlockUpload) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 6}
}

type RpcBlockDownload struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDownload) Reset() {
	*x = RpcBlockDownload{}
	mi := &file_pb_protos_commands_proto_msgTypes[670]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDownload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDownload) ProtoMessage() {}

func (x *RpcBlockDownload) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[670]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDownload.ProtoReflect.Descriptor instead.
func (*RpcBlockDownload) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 7}
}

// Create a Smart/Internal block. Request can contain a block with a content, or it can be an empty block with a specific block.content.
// **Example scenario**
// 1A. Create Page on a dashboard
//  1. Front -> MW: Rpc.Block.Create.Request(blockId:dashboard.id, position:bottom, block: emtpy block with page content and id = "")
//  2. Front -> MW: Rpc.Block.Close.Request(block: dashboard.id)
//  3. Front <- MW: Rpc.Block.Close.Response(err)
//  4. Front <- MW: Rpc.Block.Create.Response(page.id)
//  5. Front <- MW: Rpc.Block.Open.Response(err)
//  6. Front <- MW: Event.Block.Show(page)
//
// 1B. Create Page on a Page
//  1. Front -> MW: Rpc.Block.Create.Request(blockId:dashboard.id, position:bottom, block: emtpy block with page content and id = "")
//  2. Front <- MW: Rpc.Block.Create.Response(newPage.id)
//  3. Front <- MW: Event.Block.Show(newPage)
type RpcBlockCreate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockCreate) Reset() {
	*x = RpcBlockCreate{}
	mi := &file_pb_protos_commands_proto_msgTypes[671]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockCreate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockCreate) ProtoMessage() {}

func (x *RpcBlockCreate) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[671]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockCreate.ProtoReflect.Descriptor instead.
func (*RpcBlockCreate) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 8}
}

type RpcBlockCreateWidget struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockCreateWidget) Reset() {
	*x = RpcBlockCreateWidget{}
	mi := &file_pb_protos_commands_proto_msgTypes[672]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockCreateWidget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockCreateWidget) ProtoMessage() {}

func (x *RpcBlockCreateWidget) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[672]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockCreateWidget.ProtoReflect.Descriptor instead.
func (*RpcBlockCreateWidget) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 9}
}

// Remove blocks from the childrenIds of its parents
type RpcBlockListDelete struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockListDelete) Reset() {
	*x = RpcBlockListDelete{}
	mi := &file_pb_protos_commands_proto_msgTypes[673]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockListDelete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockListDelete) ProtoMessage() {}

func (x *RpcBlockListDelete) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[673]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockListDelete.ProtoReflect.Descriptor instead.
func (*RpcBlockListDelete) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 10}
}

type RpcBlockSetFields struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockSetFields) Reset() {
	*x = RpcBlockSetFields{}
	mi := &file_pb_protos_commands_proto_msgTypes[674]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockSetFields) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockSetFields) ProtoMessage() {}

func (x *RpcBlockSetFields) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[674]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockSetFields.ProtoReflect.Descriptor instead.
func (*RpcBlockSetFields) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 11}
}

type RpcBlockListSetAlign struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockListSetAlign) Reset() {
	*x = RpcBlockListSetAlign{}
	mi := &file_pb_protos_commands_proto_msgTypes[675]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockListSetAlign) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockListSetAlign) ProtoMessage() {}

func (x *RpcBlockListSetAlign) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[675]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockListSetAlign.ProtoReflect.Descriptor instead.
func (*RpcBlockListSetAlign) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 12}
}

type RpcBlockListSetVerticalAlign struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockListSetVerticalAlign) Reset() {
	*x = RpcBlockListSetVerticalAlign{}
	mi := &file_pb_protos_commands_proto_msgTypes[676]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockListSetVerticalAlign) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockListSetVerticalAlign) ProtoMessage() {}

func (x *RpcBlockListSetVerticalAlign) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[676]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockListSetVerticalAlign.ProtoReflect.Descriptor instead.
func (*RpcBlockListSetVerticalAlign) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 13}
}

type RpcBlockListSetFields struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockListSetFields) Reset() {
	*x = RpcBlockListSetFields{}
	mi := &file_pb_protos_commands_proto_msgTypes[677]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockListSetFields) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockListSetFields) ProtoMessage() {}

func (x *RpcBlockListSetFields) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[677]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockListSetFields.ProtoReflect.Descriptor instead.
func (*RpcBlockListSetFields) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 14}
}

// Makes blocks copy by given ids and paste it to shown place
type RpcBlockListDuplicate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockListDuplicate) Reset() {
	*x = RpcBlockListDuplicate{}
	mi := &file_pb_protos_commands_proto_msgTypes[678]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockListDuplicate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockListDuplicate) ProtoMessage() {}

func (x *RpcBlockListDuplicate) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[678]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockListDuplicate.ProtoReflect.Descriptor instead.
func (*RpcBlockListDuplicate) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 15}
}

type RpcBlockListUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockListUpdate) Reset() {
	*x = RpcBlockListUpdate{}
	mi := &file_pb_protos_commands_proto_msgTypes[679]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockListUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockListUpdate) ProtoMessage() {}

func (x *RpcBlockListUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[679]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockListUpdate.ProtoReflect.Descriptor instead.
func (*RpcBlockListUpdate) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 16}
}

type RpcBlockListConvertToObjects struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockListConvertToObjects) Reset() {
	*x = RpcBlockListConvertToObjects{}
	mi := &file_pb_protos_commands_proto_msgTypes[680]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockListConvertToObjects) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockListConvertToObjects) ProtoMessage() {}

func (x *RpcBlockListConvertToObjects) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[680]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockListConvertToObjects.ProtoReflect.Descriptor instead.
func (*RpcBlockListConvertToObjects) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 17}
}

type RpcBlockListMoveToExistingObject struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockListMoveToExistingObject) Reset() {
	*x = RpcBlockListMoveToExistingObject{}
	mi := &file_pb_protos_commands_proto_msgTypes[681]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockListMoveToExistingObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockListMoveToExistingObject) ProtoMessage() {}

func (x *RpcBlockListMoveToExistingObject) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[681]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockListMoveToExistingObject.ProtoReflect.Descriptor instead.
func (*RpcBlockListMoveToExistingObject) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 18}
}

type RpcBlockListMoveToNewObject struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockListMoveToNewObject) Reset() {
	*x = RpcBlockListMoveToNewObject{}
	mi := &file_pb_protos_commands_proto_msgTypes[682]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockListMoveToNewObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockListMoveToNewObject) ProtoMessage() {}

func (x *RpcBlockListMoveToNewObject) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[682]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockListMoveToNewObject.ProtoReflect.Descriptor instead.
func (*RpcBlockListMoveToNewObject) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 19}
}

type RpcBlockListTurnInto struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockListTurnInto) Reset() {
	*x = RpcBlockListTurnInto{}
	mi := &file_pb_protos_commands_proto_msgTypes[683]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockListTurnInto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockListTurnInto) ProtoMessage() {}

func (x *RpcBlockListTurnInto) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[683]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockListTurnInto.ProtoReflect.Descriptor instead.
func (*RpcBlockListTurnInto) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 20}
}

type RpcBlockListSetBackgroundColor struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockListSetBackgroundColor) Reset() {
	*x = RpcBlockListSetBackgroundColor{}
	mi := &file_pb_protos_commands_proto_msgTypes[684]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockListSetBackgroundColor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockListSetBackgroundColor) ProtoMessage() {}

func (x *RpcBlockListSetBackgroundColor) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[684]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockListSetBackgroundColor.ProtoReflect.Descriptor instead.
func (*RpcBlockListSetBackgroundColor) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 21}
}

type RpcBlockExport struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockExport) Reset() {
	*x = RpcBlockExport{}
	mi := &file_pb_protos_commands_proto_msgTypes[685]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockExport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockExport) ProtoMessage() {}

func (x *RpcBlockExport) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[685]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockExport.ProtoReflect.Descriptor instead.
func (*RpcBlockExport) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 22}
}

type RpcBlockSetCarriage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockSetCarriage) Reset() {
	*x = RpcBlockSetCarriage{}
	mi := &file_pb_protos_commands_proto_msgTypes[686]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockSetCarriage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockSetCarriage) ProtoMessage() {}

func (x *RpcBlockSetCarriage) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[686]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockSetCarriage.ProtoReflect.Descriptor instead.
func (*RpcBlockSetCarriage) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 23}
}

type RpcBlockPreview struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockPreview) Reset() {
	*x = RpcBlockPreview{}
	mi := &file_pb_protos_commands_proto_msgTypes[687]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockPreview) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockPreview) ProtoMessage() {}

func (x *RpcBlockPreview) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[687]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockPreview.ProtoReflect.Descriptor instead.
func (*RpcBlockPreview) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 24}
}

type RpcBlockReplaceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextId     string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	BlockId       string                 `protobuf:"bytes,2,opt,name=blockId,proto3" json:"blockId,omitempty"`
	Block         *model.Block           `protobuf:"bytes,3,opt,name=block,proto3" json:"block,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockReplaceRequest) Reset() {
	*x = RpcBlockReplaceRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[688]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockReplaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockReplaceRequest) ProtoMessage() {}

func (x *RpcBlockReplaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[688]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockReplaceRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockReplaceRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 0, 0}
}

func (x *RpcBlockReplaceRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockReplaceRequest) GetBlockId() string {
	if x != nil {
		return x.BlockId
	}
	return ""
}

func (x *RpcBlockReplaceRequest) GetBlock() *model.Block {
	if x != nil {
		return x.Block
	}
	return nil
}

type RpcBlockReplaceResponse struct {
	state         protoimpl.MessageState        `protogen:"open.v1"`
	Error         *RpcBlockReplaceResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	BlockId       string                        `protobuf:"bytes,2,opt,name=blockId,proto3" json:"blockId,omitempty"`
	Event         *ResponseEvent                `protobuf:"bytes,3,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockReplaceResponse) Reset() {
	*x = RpcBlockReplaceResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[689]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockReplaceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockReplaceResponse) ProtoMessage() {}

func (x *RpcBlockReplaceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[689]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockReplaceResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockReplaceResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 0, 1}
}

func (x *RpcBlockReplaceResponse) GetError() *RpcBlockReplaceResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcBlockReplaceResponse) GetBlockId() string {
	if x != nil {
		return x.BlockId
	}
	return ""
}

func (x *RpcBlockReplaceResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcBlockReplaceResponseError struct {
	state         protoimpl.MessageState           `protogen:"open.v1"`
	Code          RpcBlockReplaceResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockReplaceResponseErrorCode" json:"code,omitempty"`
	Description   string                           `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockReplaceResponseError) Reset() {
	*x = RpcBlockReplaceResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[690]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockReplaceResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockReplaceResponseError) ProtoMessage() {}

func (x *RpcBlockReplaceResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[690]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockReplaceResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockReplaceResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 0, 1, 0}
}

func (x *RpcBlockReplaceResponseError) GetCode() RpcBlockReplaceResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockReplaceResponseError_NULL
}

func (x *RpcBlockReplaceResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockSplitRequest struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	ContextId     string                      `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	BlockId       string                      `protobuf:"bytes,2,opt,name=blockId,proto3" json:"blockId,omitempty"`
	Range         *model.Range                `protobuf:"bytes,3,opt,name=range,proto3" json:"range,omitempty"`
	Style         model.BlockContentTextStyle `protobuf:"varint,4,opt,name=style,proto3,enum=anytype.model.BlockContentTextStyle" json:"style,omitempty"`
	Mode          RpcBlockSplitRequestMode    `protobuf:"varint,5,opt,name=mode,proto3,enum=anytype.RpcBlockSplitRequestMode" json:"mode,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockSplitRequest) Reset() {
	*x = RpcBlockSplitRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[691]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockSplitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockSplitRequest) ProtoMessage() {}

func (x *RpcBlockSplitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[691]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockSplitRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockSplitRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 1, 0}
}

func (x *RpcBlockSplitRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockSplitRequest) GetBlockId() string {
	if x != nil {
		return x.BlockId
	}
	return ""
}

func (x *RpcBlockSplitRequest) GetRange() *model.Range {
	if x != nil {
		return x.Range
	}
	return nil
}

func (x *RpcBlockSplitRequest) GetStyle() model.BlockContentTextStyle {
	if x != nil {
		return x.Style
	}
	return model.BlockContentTextStyle(0)
}

func (x *RpcBlockSplitRequest) GetMode() RpcBlockSplitRequestMode {
	if x != nil {
		return x.Mode
	}
	return RpcBlockSplitRequest_BOTTOM
}

type RpcBlockSplitResponse struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	Error         *RpcBlockSplitResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	BlockId       string                      `protobuf:"bytes,2,opt,name=blockId,proto3" json:"blockId,omitempty"`
	Event         *ResponseEvent              `protobuf:"bytes,3,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockSplitResponse) Reset() {
	*x = RpcBlockSplitResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[692]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockSplitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockSplitResponse) ProtoMessage() {}

func (x *RpcBlockSplitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[692]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockSplitResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockSplitResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 1, 1}
}

func (x *RpcBlockSplitResponse) GetError() *RpcBlockSplitResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcBlockSplitResponse) GetBlockId() string {
	if x != nil {
		return x.BlockId
	}
	return ""
}

func (x *RpcBlockSplitResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcBlockSplitResponseError struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	Code          RpcBlockSplitResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockSplitResponseErrorCode" json:"code,omitempty"`
	Description   string                         `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockSplitResponseError) Reset() {
	*x = RpcBlockSplitResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[693]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockSplitResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockSplitResponseError) ProtoMessage() {}

func (x *RpcBlockSplitResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[693]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockSplitResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockSplitResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 1, 1, 0}
}

func (x *RpcBlockSplitResponseError) GetCode() RpcBlockSplitResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockSplitResponseError_NULL
}

func (x *RpcBlockSplitResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockMergeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextId     string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	FirstBlockId  string                 `protobuf:"bytes,2,opt,name=firstBlockId,proto3" json:"firstBlockId,omitempty"`
	SecondBlockId string                 `protobuf:"bytes,3,opt,name=secondBlockId,proto3" json:"secondBlockId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockMergeRequest) Reset() {
	*x = RpcBlockMergeRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[694]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockMergeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockMergeRequest) ProtoMessage() {}

func (x *RpcBlockMergeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[694]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockMergeRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockMergeRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 2, 0}
}

func (x *RpcBlockMergeRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockMergeRequest) GetFirstBlockId() string {
	if x != nil {
		return x.FirstBlockId
	}
	return ""
}

func (x *RpcBlockMergeRequest) GetSecondBlockId() string {
	if x != nil {
		return x.SecondBlockId
	}
	return ""
}

type RpcBlockMergeResponse struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	Error         *RpcBlockMergeResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent              `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockMergeResponse) Reset() {
	*x = RpcBlockMergeResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[695]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockMergeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockMergeResponse) ProtoMessage() {}

func (x *RpcBlockMergeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[695]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockMergeResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockMergeResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 2, 1}
}

func (x *RpcBlockMergeResponse) GetError() *RpcBlockMergeResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcBlockMergeResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcBlockMergeResponseError struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	Code          RpcBlockMergeResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockMergeResponseErrorCode" json:"code,omitempty"`
	Description   string                         `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockMergeResponseError) Reset() {
	*x = RpcBlockMergeResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[696]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockMergeResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockMergeResponseError) ProtoMessage() {}

func (x *RpcBlockMergeResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[696]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockMergeResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockMergeResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 2, 1, 0}
}

func (x *RpcBlockMergeResponseError) GetCode() RpcBlockMergeResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockMergeResponseError_NULL
}

func (x *RpcBlockMergeResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockCopyRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	ContextId         string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	Blocks            []*model.Block         `protobuf:"bytes,2,rep,name=blocks,proto3" json:"blocks,omitempty"`
	SelectedTextRange *model.Range           `protobuf:"bytes,3,opt,name=selectedTextRange,proto3" json:"selectedTextRange,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *RpcBlockCopyRequest) Reset() {
	*x = RpcBlockCopyRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[697]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockCopyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockCopyRequest) ProtoMessage() {}

func (x *RpcBlockCopyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[697]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockCopyRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockCopyRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 3, 0}
}

func (x *RpcBlockCopyRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockCopyRequest) GetBlocks() []*model.Block {
	if x != nil {
		return x.Blocks
	}
	return nil
}

func (x *RpcBlockCopyRequest) GetSelectedTextRange() *model.Range {
	if x != nil {
		return x.SelectedTextRange
	}
	return nil
}

type RpcBlockCopyResponse struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	Error         *RpcBlockCopyResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	TextSlot      string                     `protobuf:"bytes,2,opt,name=textSlot,proto3" json:"textSlot,omitempty"`
	HtmlSlot      string                     `protobuf:"bytes,3,opt,name=htmlSlot,proto3" json:"htmlSlot,omitempty"`
	AnySlot       []*model.Block             `protobuf:"bytes,4,rep,name=anySlot,proto3" json:"anySlot,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockCopyResponse) Reset() {
	*x = RpcBlockCopyResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[698]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockCopyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockCopyResponse) ProtoMessage() {}

func (x *RpcBlockCopyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[698]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockCopyResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockCopyResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 3, 1}
}

func (x *RpcBlockCopyResponse) GetError() *RpcBlockCopyResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcBlockCopyResponse) GetTextSlot() string {
	if x != nil {
		return x.TextSlot
	}
	return ""
}

func (x *RpcBlockCopyResponse) GetHtmlSlot() string {
	if x != nil {
		return x.HtmlSlot
	}
	return ""
}

func (x *RpcBlockCopyResponse) GetAnySlot() []*model.Block {
	if x != nil {
		return x.AnySlot
	}
	return nil
}

type RpcBlockCopyResponseError struct {
	state         protoimpl.MessageState        `protogen:"open.v1"`
	Code          RpcBlockCopyResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockCopyResponseErrorCode" json:"code,omitempty"`
	Description   string                        `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockCopyResponseError) Reset() {
	*x = RpcBlockCopyResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[699]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockCopyResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockCopyResponseError) ProtoMessage() {}

func (x *RpcBlockCopyResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[699]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockCopyResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockCopyResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 3, 1, 0}
}

func (x *RpcBlockCopyResponseError) GetCode() RpcBlockCopyResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockCopyResponseError_NULL
}

func (x *RpcBlockCopyResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockPasteRequest struct {
	state             protoimpl.MessageState      `protogen:"open.v1"`
	ContextId         string                      `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	FocusedBlockId    string                      `protobuf:"bytes,2,opt,name=focusedBlockId,proto3" json:"focusedBlockId,omitempty"`
	SelectedTextRange *model.Range                `protobuf:"bytes,3,opt,name=selectedTextRange,proto3" json:"selectedTextRange,omitempty"`
	SelectedBlockIds  []string                    `protobuf:"bytes,4,rep,name=selectedBlockIds,proto3" json:"selectedBlockIds,omitempty"`
	IsPartOfBlock     bool                        `protobuf:"varint,5,opt,name=isPartOfBlock,proto3" json:"isPartOfBlock,omitempty"`
	TextSlot          string                      `protobuf:"bytes,6,opt,name=textSlot,proto3" json:"textSlot,omitempty"`
	HtmlSlot          string                      `protobuf:"bytes,7,opt,name=htmlSlot,proto3" json:"htmlSlot,omitempty"`
	AnySlot           []*model.Block              `protobuf:"bytes,8,rep,name=anySlot,proto3" json:"anySlot,omitempty"`
	FileSlot          []*RpcBlockPasteRequestFile `protobuf:"bytes,9,rep,name=fileSlot,proto3" json:"fileSlot,omitempty"`
	Url               string                      `protobuf:"bytes,10,opt,name=url,proto3" json:"url,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *RpcBlockPasteRequest) Reset() {
	*x = RpcBlockPasteRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[700]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockPasteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockPasteRequest) ProtoMessage() {}

func (x *RpcBlockPasteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[700]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockPasteRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockPasteRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 4, 0}
}

func (x *RpcBlockPasteRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockPasteRequest) GetFocusedBlockId() string {
	if x != nil {
		return x.FocusedBlockId
	}
	return ""
}

func (x *RpcBlockPasteRequest) GetSelectedTextRange() *model.Range {
	if x != nil {
		return x.SelectedTextRange
	}
	return nil
}

func (x *RpcBlockPasteRequest) GetSelectedBlockIds() []string {
	if x != nil {
		return x.SelectedBlockIds
	}
	return nil
}

func (x *RpcBlockPasteRequest) GetIsPartOfBlock() bool {
	if x != nil {
		return x.IsPartOfBlock
	}
	return false
}

func (x *RpcBlockPasteRequest) GetTextSlot() string {
	if x != nil {
		return x.TextSlot
	}
	return ""
}

func (x *RpcBlockPasteRequest) GetHtmlSlot() string {
	if x != nil {
		return x.HtmlSlot
	}
	return ""
}

func (x *RpcBlockPasteRequest) GetAnySlot() []*model.Block {
	if x != nil {
		return x.AnySlot
	}
	return nil
}

func (x *RpcBlockPasteRequest) GetFileSlot() []*RpcBlockPasteRequestFile {
	if x != nil {
		return x.FileSlot
	}
	return nil
}

func (x *RpcBlockPasteRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type RpcBlockPasteResponse struct {
	state            protoimpl.MessageState      `protogen:"open.v1"`
	Error            *RpcBlockPasteResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	BlockIds         []string                    `protobuf:"bytes,2,rep,name=blockIds,proto3" json:"blockIds,omitempty"`
	CaretPosition    int32                       `protobuf:"varint,3,opt,name=caretPosition,proto3" json:"caretPosition,omitempty"`
	IsSameBlockCaret bool                        `protobuf:"varint,4,opt,name=isSameBlockCaret,proto3" json:"isSameBlockCaret,omitempty"`
	Event            *ResponseEvent              `protobuf:"bytes,5,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *RpcBlockPasteResponse) Reset() {
	*x = RpcBlockPasteResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[701]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockPasteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockPasteResponse) ProtoMessage() {}

func (x *RpcBlockPasteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[701]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockPasteResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockPasteResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 4, 1}
}

func (x *RpcBlockPasteResponse) GetError() *RpcBlockPasteResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcBlockPasteResponse) GetBlockIds() []string {
	if x != nil {
		return x.BlockIds
	}
	return nil
}

func (x *RpcBlockPasteResponse) GetCaretPosition() int32 {
	if x != nil {
		return x.CaretPosition
	}
	return 0
}

func (x *RpcBlockPasteResponse) GetIsSameBlockCaret() bool {
	if x != nil {
		return x.IsSameBlockCaret
	}
	return false
}

func (x *RpcBlockPasteResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcBlockPasteRequestFile struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Data          []byte                 `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	LocalPath     string                 `protobuf:"bytes,3,opt,name=localPath,proto3" json:"localPath,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockPasteRequestFile) Reset() {
	*x = RpcBlockPasteRequestFile{}
	mi := &file_pb_protos_commands_proto_msgTypes[702]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockPasteRequestFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockPasteRequestFile) ProtoMessage() {}

func (x *RpcBlockPasteRequestFile) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[702]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockPasteRequestFile.ProtoReflect.Descriptor instead.
func (*RpcBlockPasteRequestFile) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 4, 0, 0}
}

func (x *RpcBlockPasteRequestFile) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RpcBlockPasteRequestFile) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *RpcBlockPasteRequestFile) GetLocalPath() string {
	if x != nil {
		return x.LocalPath
	}
	return ""
}

type RpcBlockPasteResponseError struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	Code          RpcBlockPasteResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockPasteResponseErrorCode" json:"code,omitempty"`
	Description   string                         `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockPasteResponseError) Reset() {
	*x = RpcBlockPasteResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[703]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockPasteResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockPasteResponseError) ProtoMessage() {}

func (x *RpcBlockPasteResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[703]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockPasteResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockPasteResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 4, 1, 0}
}

func (x *RpcBlockPasteResponseError) GetCode() RpcBlockPasteResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockPasteResponseError_NULL
}

func (x *RpcBlockPasteResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockCutRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	ContextId         string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	Blocks            []*model.Block         `protobuf:"bytes,2,rep,name=blocks,proto3" json:"blocks,omitempty"`
	SelectedTextRange *model.Range           `protobuf:"bytes,3,opt,name=selectedTextRange,proto3" json:"selectedTextRange,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *RpcBlockCutRequest) Reset() {
	*x = RpcBlockCutRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[704]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockCutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockCutRequest) ProtoMessage() {}

func (x *RpcBlockCutRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[704]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockCutRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockCutRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 5, 0}
}

func (x *RpcBlockCutRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockCutRequest) GetBlocks() []*model.Block {
	if x != nil {
		return x.Blocks
	}
	return nil
}

func (x *RpcBlockCutRequest) GetSelectedTextRange() *model.Range {
	if x != nil {
		return x.SelectedTextRange
	}
	return nil
}

type RpcBlockCutResponse struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Error         *RpcBlockCutResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	TextSlot      string                    `protobuf:"bytes,2,opt,name=textSlot,proto3" json:"textSlot,omitempty"`
	HtmlSlot      string                    `protobuf:"bytes,3,opt,name=htmlSlot,proto3" json:"htmlSlot,omitempty"`
	AnySlot       []*model.Block            `protobuf:"bytes,4,rep,name=anySlot,proto3" json:"anySlot,omitempty"`
	Event         *ResponseEvent            `protobuf:"bytes,5,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockCutResponse) Reset() {
	*x = RpcBlockCutResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[705]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockCutResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockCutResponse) ProtoMessage() {}

func (x *RpcBlockCutResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[705]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockCutResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockCutResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 5, 1}
}

func (x *RpcBlockCutResponse) GetError() *RpcBlockCutResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcBlockCutResponse) GetTextSlot() string {
	if x != nil {
		return x.TextSlot
	}
	return ""
}

func (x *RpcBlockCutResponse) GetHtmlSlot() string {
	if x != nil {
		return x.HtmlSlot
	}
	return ""
}

func (x *RpcBlockCutResponse) GetAnySlot() []*model.Block {
	if x != nil {
		return x.AnySlot
	}
	return nil
}

func (x *RpcBlockCutResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcBlockCutResponseError struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	Code          RpcBlockCutResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockCutResponseErrorCode" json:"code,omitempty"`
	Description   string                       `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockCutResponseError) Reset() {
	*x = RpcBlockCutResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[706]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockCutResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockCutResponseError) ProtoMessage() {}

func (x *RpcBlockCutResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[706]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockCutResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockCutResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 5, 1, 0}
}

func (x *RpcBlockCutResponseError) GetCode() RpcBlockCutResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockCutResponseError_NULL
}

func (x *RpcBlockCutResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockUploadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextId     string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	BlockId       string                 `protobuf:"bytes,2,opt,name=blockId,proto3" json:"blockId,omitempty"`
	FilePath      string                 `protobuf:"bytes,3,opt,name=filePath,proto3" json:"filePath,omitempty"`
	Url           string                 `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
	Bytes         []byte                 `protobuf:"bytes,5,opt,name=bytes,proto3" json:"bytes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockUploadRequest) Reset() {
	*x = RpcBlockUploadRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[707]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockUploadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockUploadRequest) ProtoMessage() {}

func (x *RpcBlockUploadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[707]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockUploadRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockUploadRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 6, 0}
}

func (x *RpcBlockUploadRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockUploadRequest) GetBlockId() string {
	if x != nil {
		return x.BlockId
	}
	return ""
}

func (x *RpcBlockUploadRequest) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *RpcBlockUploadRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *RpcBlockUploadRequest) GetBytes() []byte {
	if x != nil {
		return x.Bytes
	}
	return nil
}

type RpcBlockUploadResponse struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	Error         *RpcBlockUploadResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent               `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockUploadResponse) Reset() {
	*x = RpcBlockUploadResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[708]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockUploadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockUploadResponse) ProtoMessage() {}

func (x *RpcBlockUploadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[708]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockUploadResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockUploadResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 6, 1}
}

func (x *RpcBlockUploadResponse) GetError() *RpcBlockUploadResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcBlockUploadResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcBlockUploadResponseError struct {
	state         protoimpl.MessageState          `protogen:"open.v1"`
	Code          RpcBlockUploadResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockUploadResponseErrorCode" json:"code,omitempty"`
	Description   string                          `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockUploadResponseError) Reset() {
	*x = RpcBlockUploadResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[709]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockUploadResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockUploadResponseError) ProtoMessage() {}

func (x *RpcBlockUploadResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[709]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockUploadResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockUploadResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 6, 1, 0}
}

func (x *RpcBlockUploadResponseError) GetCode() RpcBlockUploadResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockUploadResponseError_NULL
}

func (x *RpcBlockUploadResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockDownloadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextId     string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	BlockId       string                 `protobuf:"bytes,2,opt,name=blockId,proto3" json:"blockId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDownloadRequest) Reset() {
	*x = RpcBlockDownloadRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[710]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDownloadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDownloadRequest) ProtoMessage() {}

func (x *RpcBlockDownloadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[710]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDownloadRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockDownloadRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 7, 0}
}

func (x *RpcBlockDownloadRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockDownloadRequest) GetBlockId() string {
	if x != nil {
		return x.BlockId
	}
	return ""
}

type RpcBlockDownloadResponse struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	Error         *RpcBlockDownloadResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent                 `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDownloadResponse) Reset() {
	*x = RpcBlockDownloadResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[711]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDownloadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDownloadResponse) ProtoMessage() {}

func (x *RpcBlockDownloadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[711]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDownloadResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockDownloadResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 7, 1}
}

func (x *RpcBlockDownloadResponse) GetError() *RpcBlockDownloadResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcBlockDownloadResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcBlockDownloadResponseError struct {
	state         protoimpl.MessageState            `protogen:"open.v1"`
	Code          RpcBlockDownloadResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockDownloadResponseErrorCode" json:"code,omitempty"`
	Description   string                            `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDownloadResponseError) Reset() {
	*x = RpcBlockDownloadResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[712]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDownloadResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDownloadResponseError) ProtoMessage() {}

func (x *RpcBlockDownloadResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[712]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDownloadResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockDownloadResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 7, 1, 0}
}

func (x *RpcBlockDownloadResponseError) GetCode() RpcBlockDownloadResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockDownloadResponseError_NULL
}

func (x *RpcBlockDownloadResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// common simple block command
type RpcBlockCreateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextId     string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"` // id of the context object
	TargetId      string                 `protobuf:"bytes,2,opt,name=targetId,proto3" json:"targetId,omitempty"`   // id of the closest block
	Block         *model.Block           `protobuf:"bytes,3,opt,name=block,proto3" json:"block,omitempty"`
	Position      model.BlockPosition    `protobuf:"varint,4,opt,name=position,proto3,enum=anytype.model.BlockPosition" json:"position,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockCreateRequest) Reset() {
	*x = RpcBlockCreateRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[713]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockCreateRequest) ProtoMessage() {}

func (x *RpcBlockCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[713]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockCreateRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockCreateRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 8, 0}
}

func (x *RpcBlockCreateRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockCreateRequest) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

func (x *RpcBlockCreateRequest) GetBlock() *model.Block {
	if x != nil {
		return x.Block
	}
	return nil
}

func (x *RpcBlockCreateRequest) GetPosition() model.BlockPosition {
	if x != nil {
		return x.Position
	}
	return model.BlockPosition(0)
}

type RpcBlockCreateResponse struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	Error         *RpcBlockCreateResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	BlockId       string                       `protobuf:"bytes,2,opt,name=blockId,proto3" json:"blockId,omitempty"`
	Event         *ResponseEvent               `protobuf:"bytes,3,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockCreateResponse) Reset() {
	*x = RpcBlockCreateResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[714]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockCreateResponse) ProtoMessage() {}

func (x *RpcBlockCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[714]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockCreateResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockCreateResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 8, 1}
}

func (x *RpcBlockCreateResponse) GetError() *RpcBlockCreateResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcBlockCreateResponse) GetBlockId() string {
	if x != nil {
		return x.BlockId
	}
	return ""
}

func (x *RpcBlockCreateResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcBlockCreateResponseError struct {
	state         protoimpl.MessageState          `protogen:"open.v1"`
	Code          RpcBlockCreateResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockCreateResponseErrorCode" json:"code,omitempty"`
	Description   string                          `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockCreateResponseError) Reset() {
	*x = RpcBlockCreateResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[715]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockCreateResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockCreateResponseError) ProtoMessage() {}

func (x *RpcBlockCreateResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[715]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockCreateResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockCreateResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 8, 1, 0}
}

func (x *RpcBlockCreateResponseError) GetCode() RpcBlockCreateResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockCreateResponseError_NULL
}

func (x *RpcBlockCreateResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockCreateWidgetRequest struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	ContextId     string                         `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"` // id of the context object
	TargetId      string                         `protobuf:"bytes,2,opt,name=targetId,proto3" json:"targetId,omitempty"`   // id of the closest block
	Block         *model.Block                   `protobuf:"bytes,3,opt,name=block,proto3" json:"block,omitempty"`
	Position      model.BlockPosition            `protobuf:"varint,4,opt,name=position,proto3,enum=anytype.model.BlockPosition" json:"position,omitempty"`
	WidgetLayout  model.BlockContentWidgetLayout `protobuf:"varint,5,opt,name=widgetLayout,proto3,enum=anytype.model.BlockContentWidgetLayout" json:"widgetLayout,omitempty"`
	ObjectLimit   int32                          `protobuf:"varint,6,opt,name=objectLimit,proto3" json:"objectLimit,omitempty"`
	ViewId        string                         `protobuf:"bytes,7,opt,name=viewId,proto3" json:"viewId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockCreateWidgetRequest) Reset() {
	*x = RpcBlockCreateWidgetRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[716]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockCreateWidgetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockCreateWidgetRequest) ProtoMessage() {}

func (x *RpcBlockCreateWidgetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[716]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockCreateWidgetRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockCreateWidgetRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 9, 0}
}

func (x *RpcBlockCreateWidgetRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockCreateWidgetRequest) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

func (x *RpcBlockCreateWidgetRequest) GetBlock() *model.Block {
	if x != nil {
		return x.Block
	}
	return nil
}

func (x *RpcBlockCreateWidgetRequest) GetPosition() model.BlockPosition {
	if x != nil {
		return x.Position
	}
	return model.BlockPosition(0)
}

func (x *RpcBlockCreateWidgetRequest) GetWidgetLayout() model.BlockContentWidgetLayout {
	if x != nil {
		return x.WidgetLayout
	}
	return model.BlockContentWidgetLayout(0)
}

func (x *RpcBlockCreateWidgetRequest) GetObjectLimit() int32 {
	if x != nil {
		return x.ObjectLimit
	}
	return 0
}

func (x *RpcBlockCreateWidgetRequest) GetViewId() string {
	if x != nil {
		return x.ViewId
	}
	return ""
}

type RpcBlockCreateWidgetResponse struct {
	state         protoimpl.MessageState             `protogen:"open.v1"`
	Error         *RpcBlockCreateWidgetResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	BlockId       string                             `protobuf:"bytes,2,opt,name=blockId,proto3" json:"blockId,omitempty"`
	Event         *ResponseEvent                     `protobuf:"bytes,3,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockCreateWidgetResponse) Reset() {
	*x = RpcBlockCreateWidgetResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[717]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockCreateWidgetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockCreateWidgetResponse) ProtoMessage() {}

func (x *RpcBlockCreateWidgetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[717]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockCreateWidgetResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockCreateWidgetResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 9, 1}
}

func (x *RpcBlockCreateWidgetResponse) GetError() *RpcBlockCreateWidgetResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcBlockCreateWidgetResponse) GetBlockId() string {
	if x != nil {
		return x.BlockId
	}
	return ""
}

func (x *RpcBlockCreateWidgetResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcBlockCreateWidgetResponseError struct {
	state         protoimpl.MessageState                `protogen:"open.v1"`
	Code          RpcBlockCreateWidgetResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockCreateWidgetResponseErrorCode" json:"code,omitempty"`
	Description   string                                `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockCreateWidgetResponseError) Reset() {
	*x = RpcBlockCreateWidgetResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[718]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockCreateWidgetResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockCreateWidgetResponseError) ProtoMessage() {}

func (x *RpcBlockCreateWidgetResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[718]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockCreateWidgetResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockCreateWidgetResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 9, 1, 0}
}

func (x *RpcBlockCreateWidgetResponseError) GetCode() RpcBlockCreateWidgetResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockCreateWidgetResponseError_NULL
}

func (x *RpcBlockCreateWidgetResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockListDeleteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextId     string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"` // id of the context object
	BlockIds      []string               `protobuf:"bytes,2,rep,name=blockIds,proto3" json:"blockIds,omitempty"`   // targets to remove
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockListDeleteRequest) Reset() {
	*x = RpcBlockListDeleteRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[719]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockListDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockListDeleteRequest) ProtoMessage() {}

func (x *RpcBlockListDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[719]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockListDeleteRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockListDeleteRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 10, 0}
}

func (x *RpcBlockListDeleteRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockListDeleteRequest) GetBlockIds() []string {
	if x != nil {
		return x.BlockIds
	}
	return nil
}

type RpcBlockListDeleteResponse struct {
	state         protoimpl.MessageState           `protogen:"open.v1"`
	Error         *RpcBlockListDeleteResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent                   `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockListDeleteResponse) Reset() {
	*x = RpcBlockListDeleteResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[720]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockListDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockListDeleteResponse) ProtoMessage() {}

func (x *RpcBlockListDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[720]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockListDeleteResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockListDeleteResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 10, 1}
}

func (x *RpcBlockListDeleteResponse) GetError() *RpcBlockListDeleteResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcBlockListDeleteResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcBlockListDeleteResponseError struct {
	state         protoimpl.MessageState              `protogen:"open.v1"`
	Code          RpcBlockListDeleteResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockListDeleteResponseErrorCode" json:"code,omitempty"`
	Description   string                              `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockListDeleteResponseError) Reset() {
	*x = RpcBlockListDeleteResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[721]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockListDeleteResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockListDeleteResponseError) ProtoMessage() {}

func (x *RpcBlockListDeleteResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[721]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockListDeleteResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockListDeleteResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 10, 1, 0}
}

func (x *RpcBlockListDeleteResponseError) GetCode() RpcBlockListDeleteResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockListDeleteResponseError_NULL
}

func (x *RpcBlockListDeleteResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockSetFieldsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextId     string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	BlockId       string                 `protobuf:"bytes,2,opt,name=blockId,proto3" json:"blockId,omitempty"`
	Fields        *structpb.Struct       `protobuf:"bytes,3,opt,name=fields,proto3" json:"fields,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockSetFieldsRequest) Reset() {
	*x = RpcBlockSetFieldsRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[722]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockSetFieldsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockSetFieldsRequest) ProtoMessage() {}

func (x *RpcBlockSetFieldsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[722]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockSetFieldsRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockSetFieldsRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 11, 0}
}

func (x *RpcBlockSetFieldsRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockSetFieldsRequest) GetBlockId() string {
	if x != nil {
		return x.BlockId
	}
	return ""
}

func (x *RpcBlockSetFieldsRequest) GetFields() *structpb.Struct {
	if x != nil {
		return x.Fields
	}
	return nil
}

type RpcBlockSetFieldsResponse struct {
	state         protoimpl.MessageState          `protogen:"open.v1"`
	Error         *RpcBlockSetFieldsResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent                  `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockSetFieldsResponse) Reset() {
	*x = RpcBlockSetFieldsResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[723]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockSetFieldsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockSetFieldsResponse) ProtoMessage() {}

func (x *RpcBlockSetFieldsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[723]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockSetFieldsResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockSetFieldsResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 11, 1}
}

func (x *RpcBlockSetFieldsResponse) GetError() *RpcBlockSetFieldsResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcBlockSetFieldsResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcBlockSetFieldsResponseError struct {
	state         protoimpl.MessageState             `protogen:"open.v1"`
	Code          RpcBlockSetFieldsResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockSetFieldsResponseErrorCode" json:"code,omitempty"`
	Description   string                             `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockSetFieldsResponseError) Reset() {
	*x = RpcBlockSetFieldsResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[724]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockSetFieldsResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockSetFieldsResponseError) ProtoMessage() {}

func (x *RpcBlockSetFieldsResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[724]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockSetFieldsResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockSetFieldsResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 11, 1, 0}
}

func (x *RpcBlockSetFieldsResponseError) GetCode() RpcBlockSetFieldsResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockSetFieldsResponseError_NULL
}

func (x *RpcBlockSetFieldsResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockListSetAlignRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextId     string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	BlockIds      []string               `protobuf:"bytes,2,rep,name=blockIds,proto3" json:"blockIds,omitempty"` // when empty - align will be applied as layoutAlign
	Align         model.BlockAlign       `protobuf:"varint,3,opt,name=align,proto3,enum=anytype.model.BlockAlign" json:"align,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockListSetAlignRequest) Reset() {
	*x = RpcBlockListSetAlignRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[725]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockListSetAlignRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockListSetAlignRequest) ProtoMessage() {}

func (x *RpcBlockListSetAlignRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[725]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockListSetAlignRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockListSetAlignRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 12, 0}
}

func (x *RpcBlockListSetAlignRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockListSetAlignRequest) GetBlockIds() []string {
	if x != nil {
		return x.BlockIds
	}
	return nil
}

func (x *RpcBlockListSetAlignRequest) GetAlign() model.BlockAlign {
	if x != nil {
		return x.Align
	}
	return model.BlockAlign(0)
}

type RpcBlockListSetAlignResponse struct {
	state         protoimpl.MessageState             `protogen:"open.v1"`
	Error         *RpcBlockListSetAlignResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent                     `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockListSetAlignResponse) Reset() {
	*x = RpcBlockListSetAlignResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[726]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockListSetAlignResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockListSetAlignResponse) ProtoMessage() {}

func (x *RpcBlockListSetAlignResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[726]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockListSetAlignResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockListSetAlignResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 12, 1}
}

func (x *RpcBlockListSetAlignResponse) GetError() *RpcBlockListSetAlignResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcBlockListSetAlignResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcBlockListSetAlignResponseError struct {
	state         protoimpl.MessageState                `protogen:"open.v1"`
	Code          RpcBlockListSetAlignResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockListSetAlignResponseErrorCode" json:"code,omitempty"`
	Description   string                                `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockListSetAlignResponseError) Reset() {
	*x = RpcBlockListSetAlignResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[727]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockListSetAlignResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockListSetAlignResponseError) ProtoMessage() {}

func (x *RpcBlockListSetAlignResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[727]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockListSetAlignResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockListSetAlignResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 12, 1, 0}
}

func (x *RpcBlockListSetAlignResponseError) GetCode() RpcBlockListSetAlignResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockListSetAlignResponseError_NULL
}

func (x *RpcBlockListSetAlignResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockListSetVerticalAlignRequest struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	ContextId     string                   `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"` // id of the context object
	BlockIds      []string                 `protobuf:"bytes,2,rep,name=blockIds,proto3" json:"blockIds,omitempty"`
	VerticalAlign model.BlockVerticalAlign `protobuf:"varint,3,opt,name=verticalAlign,proto3,enum=anytype.model.BlockVerticalAlign" json:"verticalAlign,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockListSetVerticalAlignRequest) Reset() {
	*x = RpcBlockListSetVerticalAlignRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[728]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockListSetVerticalAlignRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockListSetVerticalAlignRequest) ProtoMessage() {}

func (x *RpcBlockListSetVerticalAlignRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[728]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockListSetVerticalAlignRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockListSetVerticalAlignRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 13, 0}
}

func (x *RpcBlockListSetVerticalAlignRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockListSetVerticalAlignRequest) GetBlockIds() []string {
	if x != nil {
		return x.BlockIds
	}
	return nil
}

func (x *RpcBlockListSetVerticalAlignRequest) GetVerticalAlign() model.BlockVerticalAlign {
	if x != nil {
		return x.VerticalAlign
	}
	return model.BlockVerticalAlign(0)
}

type RpcBlockListSetVerticalAlignResponse struct {
	state         protoimpl.MessageState                     `protogen:"open.v1"`
	Error         *RpcBlockListSetVerticalAlignResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent                             `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockListSetVerticalAlignResponse) Reset() {
	*x = RpcBlockListSetVerticalAlignResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[729]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockListSetVerticalAlignResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockListSetVerticalAlignResponse) ProtoMessage() {}

func (x *RpcBlockListSetVerticalAlignResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[729]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockListSetVerticalAlignResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockListSetVerticalAlignResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 13, 1}
}

func (x *RpcBlockListSetVerticalAlignResponse) GetError() *RpcBlockListSetVerticalAlignResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcBlockListSetVerticalAlignResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcBlockListSetVerticalAlignResponseError struct {
	state         protoimpl.MessageState                        `protogen:"open.v1"`
	Code          RpcBlockListSetVerticalAlignResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockListSetVerticalAlignResponseErrorCode" json:"code,omitempty"`
	Description   string                                        `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockListSetVerticalAlignResponseError) Reset() {
	*x = RpcBlockListSetVerticalAlignResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[730]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockListSetVerticalAlignResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockListSetVerticalAlignResponseError) ProtoMessage() {}

func (x *RpcBlockListSetVerticalAlignResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[730]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockListSetVerticalAlignResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockListSetVerticalAlignResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 13, 1, 0}
}

func (x *RpcBlockListSetVerticalAlignResponseError) GetCode() RpcBlockListSetVerticalAlignResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockListSetVerticalAlignResponseError_NULL
}

func (x *RpcBlockListSetVerticalAlignResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockListSetFieldsRequest struct {
	state         protoimpl.MessageState                    `protogen:"open.v1"`
	ContextId     string                                    `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	BlockFields   []*RpcBlockListSetFieldsRequestBlockField `protobuf:"bytes,2,rep,name=blockFields,proto3" json:"blockFields,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockListSetFieldsRequest) Reset() {
	*x = RpcBlockListSetFieldsRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[731]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockListSetFieldsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockListSetFieldsRequest) ProtoMessage() {}

func (x *RpcBlockListSetFieldsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[731]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockListSetFieldsRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockListSetFieldsRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 14, 0}
}

func (x *RpcBlockListSetFieldsRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockListSetFieldsRequest) GetBlockFields() []*RpcBlockListSetFieldsRequestBlockField {
	if x != nil {
		return x.BlockFields
	}
	return nil
}

type RpcBlockListSetFieldsResponse struct {
	state         protoimpl.MessageState              `protogen:"open.v1"`
	Error         *RpcBlockListSetFieldsResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent                      `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockListSetFieldsResponse) Reset() {
	*x = RpcBlockListSetFieldsResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[732]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockListSetFieldsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockListSetFieldsResponse) ProtoMessage() {}

func (x *RpcBlockListSetFieldsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[732]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockListSetFieldsResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockListSetFieldsResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 14, 1}
}

func (x *RpcBlockListSetFieldsResponse) GetError() *RpcBlockListSetFieldsResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcBlockListSetFieldsResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcBlockListSetFieldsRequestBlockField struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BlockId       string                 `protobuf:"bytes,1,opt,name=blockId,proto3" json:"blockId,omitempty"`
	Fields        *structpb.Struct       `protobuf:"bytes,2,opt,name=fields,proto3" json:"fields,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockListSetFieldsRequestBlockField) Reset() {
	*x = RpcBlockListSetFieldsRequestBlockField{}
	mi := &file_pb_protos_commands_proto_msgTypes[733]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockListSetFieldsRequestBlockField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockListSetFieldsRequestBlockField) ProtoMessage() {}

func (x *RpcBlockListSetFieldsRequestBlockField) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[733]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockListSetFieldsRequestBlockField.ProtoReflect.Descriptor instead.
func (*RpcBlockListSetFieldsRequestBlockField) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 14, 0, 0}
}

func (x *RpcBlockListSetFieldsRequestBlockField) GetBlockId() string {
	if x != nil {
		return x.BlockId
	}
	return ""
}

func (x *RpcBlockListSetFieldsRequestBlockField) GetFields() *structpb.Struct {
	if x != nil {
		return x.Fields
	}
	return nil
}

type RpcBlockListSetFieldsResponseError struct {
	state         protoimpl.MessageState                 `protogen:"open.v1"`
	Code          RpcBlockListSetFieldsResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockListSetFieldsResponseErrorCode" json:"code,omitempty"`
	Description   string                                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockListSetFieldsResponseError) Reset() {
	*x = RpcBlockListSetFieldsResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[734]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockListSetFieldsResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockListSetFieldsResponseError) ProtoMessage() {}

func (x *RpcBlockListSetFieldsResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[734]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockListSetFieldsResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockListSetFieldsResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 14, 1, 0}
}

func (x *RpcBlockListSetFieldsResponseError) GetCode() RpcBlockListSetFieldsResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockListSetFieldsResponseError_NULL
}

func (x *RpcBlockListSetFieldsResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockListDuplicateRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ContextId       string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"` // id of the context object
	TargetId        string                 `protobuf:"bytes,2,opt,name=targetId,proto3" json:"targetId,omitempty"`   // id of the closest block
	BlockIds        []string               `protobuf:"bytes,3,rep,name=blockIds,proto3" json:"blockIds,omitempty"`   // id of block for duplicate
	Position        model.BlockPosition    `protobuf:"varint,4,opt,name=position,proto3,enum=anytype.model.BlockPosition" json:"position,omitempty"`
	TargetContextId string                 `protobuf:"bytes,5,opt,name=targetContextId,proto3" json:"targetContextId,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *RpcBlockListDuplicateRequest) Reset() {
	*x = RpcBlockListDuplicateRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[735]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockListDuplicateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockListDuplicateRequest) ProtoMessage() {}

func (x *RpcBlockListDuplicateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[735]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockListDuplicateRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockListDuplicateRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 15, 0}
}

func (x *RpcBlockListDuplicateRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockListDuplicateRequest) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

func (x *RpcBlockListDuplicateRequest) GetBlockIds() []string {
	if x != nil {
		return x.BlockIds
	}
	return nil
}

func (x *RpcBlockListDuplicateRequest) GetPosition() model.BlockPosition {
	if x != nil {
		return x.Position
	}
	return model.BlockPosition(0)
}

func (x *RpcBlockListDuplicateRequest) GetTargetContextId() string {
	if x != nil {
		return x.TargetContextId
	}
	return ""
}

type RpcBlockListDuplicateResponse struct {
	state         protoimpl.MessageState              `protogen:"open.v1"`
	Error         *RpcBlockListDuplicateResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	BlockIds      []string                            `protobuf:"bytes,2,rep,name=blockIds,proto3" json:"blockIds,omitempty"`
	Event         *ResponseEvent                      `protobuf:"bytes,3,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockListDuplicateResponse) Reset() {
	*x = RpcBlockListDuplicateResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[736]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockListDuplicateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockListDuplicateResponse) ProtoMessage() {}

func (x *RpcBlockListDuplicateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[736]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockListDuplicateResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockListDuplicateResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 15, 1}
}

func (x *RpcBlockListDuplicateResponse) GetError() *RpcBlockListDuplicateResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcBlockListDuplicateResponse) GetBlockIds() []string {
	if x != nil {
		return x.BlockIds
	}
	return nil
}

func (x *RpcBlockListDuplicateResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcBlockListDuplicateResponseError struct {
	state         protoimpl.MessageState                 `protogen:"open.v1"`
	Code          RpcBlockListDuplicateResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockListDuplicateResponseErrorCode" json:"code,omitempty"`
	Description   string                                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockListDuplicateResponseError) Reset() {
	*x = RpcBlockListDuplicateResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[737]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockListDuplicateResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockListDuplicateResponseError) ProtoMessage() {}

func (x *RpcBlockListDuplicateResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[737]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockListDuplicateResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockListDuplicateResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 15, 1, 0}
}

func (x *RpcBlockListDuplicateResponseError) GetCode() RpcBlockListDuplicateResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockListDuplicateResponseError_NULL
}

func (x *RpcBlockListDuplicateResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockListUpdateRequest struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	ContextId string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	BlockIds  []string               `protobuf:"bytes,2,rep,name=blockIds,proto3" json:"blockIds,omitempty"`
	// Types that are valid to be assigned to Field:
	//
	//	*RpcBlockListUpdateRequestFieldOfText
	//	*RpcBlockListUpdateRequestFieldOfBackgroundColor
	//	*RpcBlockListUpdateRequestFieldOfAlign
	//	*RpcBlockListUpdateRequestFieldOfFields
	//	*RpcBlockListUpdateRequestFieldOfDivStyle
	//	*RpcBlockListUpdateRequestFieldOfFileStyle
	Field         IsRpcBlockListUpdateRequestField `protobuf_oneof:"field"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockListUpdateRequest) Reset() {
	*x = RpcBlockListUpdateRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[738]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockListUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockListUpdateRequest) ProtoMessage() {}

func (x *RpcBlockListUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[738]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockListUpdateRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockListUpdateRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 16, 0}
}

func (x *RpcBlockListUpdateRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockListUpdateRequest) GetBlockIds() []string {
	if x != nil {
		return x.BlockIds
	}
	return nil
}

func (x *RpcBlockListUpdateRequest) GetField() IsRpcBlockListUpdateRequestField {
	if x != nil {
		return x.Field
	}
	return nil
}

func (x *RpcBlockListUpdateRequest) GetText() *RpcBlockListUpdateRequestText {
	if x != nil {
		if x, ok := x.Field.(*RpcBlockListUpdateRequestFieldOfText); ok {
			return x.Text
		}
	}
	return nil
}

func (x *RpcBlockListUpdateRequest) GetBackgroundColor() string {
	if x != nil {
		if x, ok := x.Field.(*RpcBlockListUpdateRequestFieldOfBackgroundColor); ok {
			return x.BackgroundColor
		}
	}
	return ""
}

func (x *RpcBlockListUpdateRequest) GetAlign() model.BlockAlign {
	if x != nil {
		if x, ok := x.Field.(*RpcBlockListUpdateRequestFieldOfAlign); ok {
			return x.Align
		}
	}
	return model.BlockAlign(0)
}

func (x *RpcBlockListUpdateRequest) GetFields() *structpb.Struct {
	if x != nil {
		if x, ok := x.Field.(*RpcBlockListUpdateRequestFieldOfFields); ok {
			return x.Fields
		}
	}
	return nil
}

func (x *RpcBlockListUpdateRequest) GetDivStyle() model.BlockContentDivStyle {
	if x != nil {
		if x, ok := x.Field.(*RpcBlockListUpdateRequestFieldOfDivStyle); ok {
			return x.DivStyle
		}
	}
	return model.BlockContentDivStyle(0)
}

func (x *RpcBlockListUpdateRequest) GetFileStyle() model.BlockContentFileStyle {
	if x != nil {
		if x, ok := x.Field.(*RpcBlockListUpdateRequestFieldOfFileStyle); ok {
			return x.FileStyle
		}
	}
	return model.BlockContentFileStyle(0)
}

type IsRpcBlockListUpdateRequestField interface {
	IsRpcBlockListUpdateRequestField()
}

type RpcBlockListUpdateRequestFieldOfText struct {
	Text *RpcBlockListUpdateRequestText `protobuf:"bytes,3,opt,name=text,proto3,oneof" json:"text,omitempty"`
}

type RpcBlockListUpdateRequestFieldOfBackgroundColor struct {
	BackgroundColor string `protobuf:"bytes,4,opt,name=backgroundColor,proto3,oneof" json:"backgroundColor,omitempty"`
}

type RpcBlockListUpdateRequestFieldOfAlign struct {
	Align model.BlockAlign `protobuf:"varint,5,opt,name=align,proto3,enum=anytype.model.BlockAlign,oneof" json:"align,omitempty"`
}

type RpcBlockListUpdateRequestFieldOfFields struct {
	Fields *structpb.Struct `protobuf:"bytes,6,opt,name=fields,proto3,oneof" json:"fields,omitempty"`
}

type RpcBlockListUpdateRequestFieldOfDivStyle struct {
	DivStyle model.BlockContentDivStyle `protobuf:"varint,7,opt,name=divStyle,proto3,enum=anytype.model.BlockContentDivStyle,oneof" json:"divStyle,omitempty"`
}

type RpcBlockListUpdateRequestFieldOfFileStyle struct {
	FileStyle model.BlockContentFileStyle `protobuf:"varint,8,opt,name=fileStyle,proto3,enum=anytype.model.BlockContentFileStyle,oneof" json:"fileStyle,omitempty"`
}

func (*RpcBlockListUpdateRequestFieldOfText) IsRpcBlockListUpdateRequestField() {}

func (*RpcBlockListUpdateRequestFieldOfBackgroundColor) IsRpcBlockListUpdateRequestField() {}

func (*RpcBlockListUpdateRequestFieldOfAlign) IsRpcBlockListUpdateRequestField() {}

func (*RpcBlockListUpdateRequestFieldOfFields) IsRpcBlockListUpdateRequestField() {}

func (*RpcBlockListUpdateRequestFieldOfDivStyle) IsRpcBlockListUpdateRequestField() {}

func (*RpcBlockListUpdateRequestFieldOfFileStyle) IsRpcBlockListUpdateRequestField() {}

type RpcBlockListUpdateRequestText struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Field:
	//
	//	*RpcBlockListUpdateRequestTextFieldOfStyle
	//	*RpcBlockListUpdateRequestTextFieldOfColor
	//	*RpcBlockListUpdateRequestTextFieldOfMark
	Field         IsRpcBlockListUpdateRequestTextField `protobuf_oneof:"field"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockListUpdateRequestText) Reset() {
	*x = RpcBlockListUpdateRequestText{}
	mi := &file_pb_protos_commands_proto_msgTypes[739]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockListUpdateRequestText) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockListUpdateRequestText) ProtoMessage() {}

func (x *RpcBlockListUpdateRequestText) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[739]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockListUpdateRequestText.ProtoReflect.Descriptor instead.
func (*RpcBlockListUpdateRequestText) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 16, 0, 0}
}

func (x *RpcBlockListUpdateRequestText) GetField() IsRpcBlockListUpdateRequestTextField {
	if x != nil {
		return x.Field
	}
	return nil
}

func (x *RpcBlockListUpdateRequestText) GetStyle() model.BlockContentTextStyle {
	if x != nil {
		if x, ok := x.Field.(*RpcBlockListUpdateRequestTextFieldOfStyle); ok {
			return x.Style
		}
	}
	return model.BlockContentTextStyle(0)
}

func (x *RpcBlockListUpdateRequestText) GetColor() string {
	if x != nil {
		if x, ok := x.Field.(*RpcBlockListUpdateRequestTextFieldOfColor); ok {
			return x.Color
		}
	}
	return ""
}

func (x *RpcBlockListUpdateRequestText) GetMark() *model.BlockContentTextMark {
	if x != nil {
		if x, ok := x.Field.(*RpcBlockListUpdateRequestTextFieldOfMark); ok {
			return x.Mark
		}
	}
	return nil
}

type IsRpcBlockListUpdateRequestTextField interface {
	IsRpcBlockListUpdateRequestTextField()
}

type RpcBlockListUpdateRequestTextFieldOfStyle struct {
	Style model.BlockContentTextStyle `protobuf:"varint,1,opt,name=style,proto3,enum=anytype.model.BlockContentTextStyle,oneof" json:"style,omitempty"`
}

type RpcBlockListUpdateRequestTextFieldOfColor struct {
	Color string `protobuf:"bytes,2,opt,name=color,proto3,oneof" json:"color,omitempty"`
}

type RpcBlockListUpdateRequestTextFieldOfMark struct {
	Mark *model.BlockContentTextMark `protobuf:"bytes,3,opt,name=mark,proto3,oneof" json:"mark,omitempty"`
}

func (*RpcBlockListUpdateRequestTextFieldOfStyle) IsRpcBlockListUpdateRequestTextField() {}

func (*RpcBlockListUpdateRequestTextFieldOfColor) IsRpcBlockListUpdateRequestTextField() {}

func (*RpcBlockListUpdateRequestTextFieldOfMark) IsRpcBlockListUpdateRequestTextField() {}

type RpcBlockListConvertToObjectsRequest struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	ContextId           string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	BlockIds            []string               `protobuf:"bytes,2,rep,name=blockIds,proto3" json:"blockIds,omitempty"`
	ObjectTypeUniqueKey string                 `protobuf:"bytes,3,opt,name=objectTypeUniqueKey,proto3" json:"objectTypeUniqueKey,omitempty"`
	TemplateId          string                 `protobuf:"bytes,4,opt,name=templateId,proto3" json:"templateId,omitempty"`
	Block               *model.Block           `protobuf:"bytes,5,opt,name=block,proto3" json:"block,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *RpcBlockListConvertToObjectsRequest) Reset() {
	*x = RpcBlockListConvertToObjectsRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[740]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockListConvertToObjectsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockListConvertToObjectsRequest) ProtoMessage() {}

func (x *RpcBlockListConvertToObjectsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[740]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockListConvertToObjectsRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockListConvertToObjectsRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 17, 0}
}

func (x *RpcBlockListConvertToObjectsRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockListConvertToObjectsRequest) GetBlockIds() []string {
	if x != nil {
		return x.BlockIds
	}
	return nil
}

func (x *RpcBlockListConvertToObjectsRequest) GetObjectTypeUniqueKey() string {
	if x != nil {
		return x.ObjectTypeUniqueKey
	}
	return ""
}

func (x *RpcBlockListConvertToObjectsRequest) GetTemplateId() string {
	if x != nil {
		return x.TemplateId
	}
	return ""
}

func (x *RpcBlockListConvertToObjectsRequest) GetBlock() *model.Block {
	if x != nil {
		return x.Block
	}
	return nil
}

type RpcBlockListConvertToObjectsResponse struct {
	state         protoimpl.MessageState                     `protogen:"open.v1"`
	Error         *RpcBlockListConvertToObjectsResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	LinkIds       []string                                   `protobuf:"bytes,2,rep,name=linkIds,proto3" json:"linkIds,omitempty"`
	Event         *ResponseEvent                             `protobuf:"bytes,3,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockListConvertToObjectsResponse) Reset() {
	*x = RpcBlockListConvertToObjectsResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[741]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockListConvertToObjectsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockListConvertToObjectsResponse) ProtoMessage() {}

func (x *RpcBlockListConvertToObjectsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[741]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockListConvertToObjectsResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockListConvertToObjectsResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 17, 1}
}

func (x *RpcBlockListConvertToObjectsResponse) GetError() *RpcBlockListConvertToObjectsResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcBlockListConvertToObjectsResponse) GetLinkIds() []string {
	if x != nil {
		return x.LinkIds
	}
	return nil
}

func (x *RpcBlockListConvertToObjectsResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcBlockListConvertToObjectsResponseError struct {
	state         protoimpl.MessageState                        `protogen:"open.v1"`
	Code          RpcBlockListConvertToObjectsResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockListConvertToObjectsResponseErrorCode" json:"code,omitempty"`
	Description   string                                        `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockListConvertToObjectsResponseError) Reset() {
	*x = RpcBlockListConvertToObjectsResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[742]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockListConvertToObjectsResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockListConvertToObjectsResponseError) ProtoMessage() {}

func (x *RpcBlockListConvertToObjectsResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[742]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockListConvertToObjectsResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockListConvertToObjectsResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 17, 1, 0}
}

func (x *RpcBlockListConvertToObjectsResponseError) GetCode() RpcBlockListConvertToObjectsResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockListConvertToObjectsResponseError_NULL
}

func (x *RpcBlockListConvertToObjectsResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockListMoveToExistingObjectRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ContextId       string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	BlockIds        []string               `protobuf:"bytes,2,rep,name=blockIds,proto3" json:"blockIds,omitempty"`
	TargetContextId string                 `protobuf:"bytes,3,opt,name=targetContextId,proto3" json:"targetContextId,omitempty"`
	DropTargetId    string                 `protobuf:"bytes,4,opt,name=dropTargetId,proto3" json:"dropTargetId,omitempty"`                           // id of the simple block to insert considering position
	Position        model.BlockPosition    `protobuf:"varint,5,opt,name=position,proto3,enum=anytype.model.BlockPosition" json:"position,omitempty"` // position relatively to the dropTargetId simple block
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *RpcBlockListMoveToExistingObjectRequest) Reset() {
	*x = RpcBlockListMoveToExistingObjectRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[743]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockListMoveToExistingObjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockListMoveToExistingObjectRequest) ProtoMessage() {}

func (x *RpcBlockListMoveToExistingObjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[743]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockListMoveToExistingObjectRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockListMoveToExistingObjectRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 18, 0}
}

func (x *RpcBlockListMoveToExistingObjectRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockListMoveToExistingObjectRequest) GetBlockIds() []string {
	if x != nil {
		return x.BlockIds
	}
	return nil
}

func (x *RpcBlockListMoveToExistingObjectRequest) GetTargetContextId() string {
	if x != nil {
		return x.TargetContextId
	}
	return ""
}

func (x *RpcBlockListMoveToExistingObjectRequest) GetDropTargetId() string {
	if x != nil {
		return x.DropTargetId
	}
	return ""
}

func (x *RpcBlockListMoveToExistingObjectRequest) GetPosition() model.BlockPosition {
	if x != nil {
		return x.Position
	}
	return model.BlockPosition(0)
}

type RpcBlockListMoveToExistingObjectResponse struct {
	state         protoimpl.MessageState                         `protogen:"open.v1"`
	Error         *RpcBlockListMoveToExistingObjectResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent                                 `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockListMoveToExistingObjectResponse) Reset() {
	*x = RpcBlockListMoveToExistingObjectResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[744]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockListMoveToExistingObjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockListMoveToExistingObjectResponse) ProtoMessage() {}

func (x *RpcBlockListMoveToExistingObjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[744]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockListMoveToExistingObjectResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockListMoveToExistingObjectResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 18, 1}
}

func (x *RpcBlockListMoveToExistingObjectResponse) GetError() *RpcBlockListMoveToExistingObjectResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcBlockListMoveToExistingObjectResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcBlockListMoveToExistingObjectResponseError struct {
	state         protoimpl.MessageState                            `protogen:"open.v1"`
	Code          RpcBlockListMoveToExistingObjectResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockListMoveToExistingObjectResponseErrorCode" json:"code,omitempty"`
	Description   string                                            `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockListMoveToExistingObjectResponseError) Reset() {
	*x = RpcBlockListMoveToExistingObjectResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[745]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockListMoveToExistingObjectResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockListMoveToExistingObjectResponseError) ProtoMessage() {}

func (x *RpcBlockListMoveToExistingObjectResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[745]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockListMoveToExistingObjectResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockListMoveToExistingObjectResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 18, 1, 0}
}

func (x *RpcBlockListMoveToExistingObjectResponseError) GetCode() RpcBlockListMoveToExistingObjectResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockListMoveToExistingObjectResponseError_NULL
}

func (x *RpcBlockListMoveToExistingObjectResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockListMoveToNewObjectRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextId     string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	BlockIds      []string               `protobuf:"bytes,2,rep,name=blockIds,proto3" json:"blockIds,omitempty"`
	Details       *structpb.Struct       `protobuf:"bytes,3,opt,name=details,proto3" json:"details,omitempty"`                                     // new object details
	DropTargetId  string                 `protobuf:"bytes,4,opt,name=dropTargetId,proto3" json:"dropTargetId,omitempty"`                           // id of the simple block to insert considering position
	Position      model.BlockPosition    `protobuf:"varint,5,opt,name=position,proto3,enum=anytype.model.BlockPosition" json:"position,omitempty"` // position relatively to the dropTargetId simple block
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockListMoveToNewObjectRequest) Reset() {
	*x = RpcBlockListMoveToNewObjectRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[746]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockListMoveToNewObjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockListMoveToNewObjectRequest) ProtoMessage() {}

func (x *RpcBlockListMoveToNewObjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[746]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockListMoveToNewObjectRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockListMoveToNewObjectRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 19, 0}
}

func (x *RpcBlockListMoveToNewObjectRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockListMoveToNewObjectRequest) GetBlockIds() []string {
	if x != nil {
		return x.BlockIds
	}
	return nil
}

func (x *RpcBlockListMoveToNewObjectRequest) GetDetails() *structpb.Struct {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *RpcBlockListMoveToNewObjectRequest) GetDropTargetId() string {
	if x != nil {
		return x.DropTargetId
	}
	return ""
}

func (x *RpcBlockListMoveToNewObjectRequest) GetPosition() model.BlockPosition {
	if x != nil {
		return x.Position
	}
	return model.BlockPosition(0)
}

type RpcBlockListMoveToNewObjectResponse struct {
	state         protoimpl.MessageState                    `protogen:"open.v1"`
	Error         *RpcBlockListMoveToNewObjectResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	LinkId        string                                    `protobuf:"bytes,2,opt,name=linkId,proto3" json:"linkId,omitempty"`
	Event         *ResponseEvent                            `protobuf:"bytes,3,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockListMoveToNewObjectResponse) Reset() {
	*x = RpcBlockListMoveToNewObjectResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[747]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockListMoveToNewObjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockListMoveToNewObjectResponse) ProtoMessage() {}

func (x *RpcBlockListMoveToNewObjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[747]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockListMoveToNewObjectResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockListMoveToNewObjectResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 19, 1}
}

func (x *RpcBlockListMoveToNewObjectResponse) GetError() *RpcBlockListMoveToNewObjectResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcBlockListMoveToNewObjectResponse) GetLinkId() string {
	if x != nil {
		return x.LinkId
	}
	return ""
}

func (x *RpcBlockListMoveToNewObjectResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcBlockListMoveToNewObjectResponseError struct {
	state         protoimpl.MessageState                       `protogen:"open.v1"`
	Code          RpcBlockListMoveToNewObjectResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockListMoveToNewObjectResponseErrorCode" json:"code,omitempty"`
	Description   string                                       `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockListMoveToNewObjectResponseError) Reset() {
	*x = RpcBlockListMoveToNewObjectResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[748]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockListMoveToNewObjectResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockListMoveToNewObjectResponseError) ProtoMessage() {}

func (x *RpcBlockListMoveToNewObjectResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[748]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockListMoveToNewObjectResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockListMoveToNewObjectResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 19, 1, 0}
}

func (x *RpcBlockListMoveToNewObjectResponseError) GetCode() RpcBlockListMoveToNewObjectResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockListMoveToNewObjectResponseError_NULL
}

func (x *RpcBlockListMoveToNewObjectResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockListTurnIntoRequest struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	ContextId     string                      `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	BlockIds      []string                    `protobuf:"bytes,2,rep,name=blockIds,proto3" json:"blockIds,omitempty"`
	Style         model.BlockContentTextStyle `protobuf:"varint,3,opt,name=style,proto3,enum=anytype.model.BlockContentTextStyle" json:"style,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockListTurnIntoRequest) Reset() {
	*x = RpcBlockListTurnIntoRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[749]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockListTurnIntoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockListTurnIntoRequest) ProtoMessage() {}

func (x *RpcBlockListTurnIntoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[749]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockListTurnIntoRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockListTurnIntoRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 20, 0}
}

func (x *RpcBlockListTurnIntoRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockListTurnIntoRequest) GetBlockIds() []string {
	if x != nil {
		return x.BlockIds
	}
	return nil
}

func (x *RpcBlockListTurnIntoRequest) GetStyle() model.BlockContentTextStyle {
	if x != nil {
		return x.Style
	}
	return model.BlockContentTextStyle(0)
}

type RpcBlockListTurnIntoResponse struct {
	state         protoimpl.MessageState             `protogen:"open.v1"`
	Error         *RpcBlockListTurnIntoResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent                     `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockListTurnIntoResponse) Reset() {
	*x = RpcBlockListTurnIntoResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[750]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockListTurnIntoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockListTurnIntoResponse) ProtoMessage() {}

func (x *RpcBlockListTurnIntoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[750]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockListTurnIntoResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockListTurnIntoResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 20, 1}
}

func (x *RpcBlockListTurnIntoResponse) GetError() *RpcBlockListTurnIntoResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcBlockListTurnIntoResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcBlockListTurnIntoResponseError struct {
	state         protoimpl.MessageState                `protogen:"open.v1"`
	Code          RpcBlockListTurnIntoResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockListTurnIntoResponseErrorCode" json:"code,omitempty"`
	Description   string                                `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockListTurnIntoResponseError) Reset() {
	*x = RpcBlockListTurnIntoResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[751]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockListTurnIntoResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockListTurnIntoResponseError) ProtoMessage() {}

func (x *RpcBlockListTurnIntoResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[751]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockListTurnIntoResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockListTurnIntoResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 20, 1, 0}
}

func (x *RpcBlockListTurnIntoResponseError) GetCode() RpcBlockListTurnIntoResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockListTurnIntoResponseError_NULL
}

func (x *RpcBlockListTurnIntoResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockListSetBackgroundColorRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextId     string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	BlockIds      []string               `protobuf:"bytes,2,rep,name=blockIds,proto3" json:"blockIds,omitempty"`
	Color         string                 `protobuf:"bytes,3,opt,name=color,proto3" json:"color,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockListSetBackgroundColorRequest) Reset() {
	*x = RpcBlockListSetBackgroundColorRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[752]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockListSetBackgroundColorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockListSetBackgroundColorRequest) ProtoMessage() {}

func (x *RpcBlockListSetBackgroundColorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[752]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockListSetBackgroundColorRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockListSetBackgroundColorRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 21, 0}
}

func (x *RpcBlockListSetBackgroundColorRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockListSetBackgroundColorRequest) GetBlockIds() []string {
	if x != nil {
		return x.BlockIds
	}
	return nil
}

func (x *RpcBlockListSetBackgroundColorRequest) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

type RpcBlockListSetBackgroundColorResponse struct {
	state         protoimpl.MessageState                       `protogen:"open.v1"`
	Error         *RpcBlockListSetBackgroundColorResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent                               `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockListSetBackgroundColorResponse) Reset() {
	*x = RpcBlockListSetBackgroundColorResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[753]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockListSetBackgroundColorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockListSetBackgroundColorResponse) ProtoMessage() {}

func (x *RpcBlockListSetBackgroundColorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[753]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockListSetBackgroundColorResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockListSetBackgroundColorResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 21, 1}
}

func (x *RpcBlockListSetBackgroundColorResponse) GetError() *RpcBlockListSetBackgroundColorResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcBlockListSetBackgroundColorResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcBlockListSetBackgroundColorResponseError struct {
	state         protoimpl.MessageState                          `protogen:"open.v1"`
	Code          RpcBlockListSetBackgroundColorResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockListSetBackgroundColorResponseErrorCode" json:"code,omitempty"`
	Description   string                                          `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockListSetBackgroundColorResponseError) Reset() {
	*x = RpcBlockListSetBackgroundColorResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[754]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockListSetBackgroundColorResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockListSetBackgroundColorResponseError) ProtoMessage() {}

func (x *RpcBlockListSetBackgroundColorResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[754]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockListSetBackgroundColorResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockListSetBackgroundColorResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 21, 1, 0}
}

func (x *RpcBlockListSetBackgroundColorResponseError) GetCode() RpcBlockListSetBackgroundColorResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockListSetBackgroundColorResponseError_NULL
}

func (x *RpcBlockListSetBackgroundColorResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockExportRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextId     string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	Blocks        []*model.Block         `protobuf:"bytes,2,rep,name=blocks,proto3" json:"blocks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockExportRequest) Reset() {
	*x = RpcBlockExportRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[755]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockExportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockExportRequest) ProtoMessage() {}

func (x *RpcBlockExportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[755]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockExportRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockExportRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 22, 0}
}

func (x *RpcBlockExportRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockExportRequest) GetBlocks() []*model.Block {
	if x != nil {
		return x.Blocks
	}
	return nil
}

type RpcBlockExportResponse struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	Error         *RpcBlockExportResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Path          string                       `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Event         *ResponseEvent               `protobuf:"bytes,3,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockExportResponse) Reset() {
	*x = RpcBlockExportResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[756]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockExportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockExportResponse) ProtoMessage() {}

func (x *RpcBlockExportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[756]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockExportResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockExportResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 22, 1}
}

func (x *RpcBlockExportResponse) GetError() *RpcBlockExportResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcBlockExportResponse) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *RpcBlockExportResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcBlockExportResponseError struct {
	state         protoimpl.MessageState          `protogen:"open.v1"`
	Code          RpcBlockExportResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockExportResponseErrorCode" json:"code,omitempty"`
	Description   string                          `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockExportResponseError) Reset() {
	*x = RpcBlockExportResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[757]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockExportResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockExportResponseError) ProtoMessage() {}

func (x *RpcBlockExportResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[757]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockExportResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockExportResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 22, 1, 0}
}

func (x *RpcBlockExportResponseError) GetCode() RpcBlockExportResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockExportResponseError_NULL
}

func (x *RpcBlockExportResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockSetCarriageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextId     string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	BlockId       string                 `protobuf:"bytes,2,opt,name=blockId,proto3" json:"blockId,omitempty"`
	Range         *model.Range           `protobuf:"bytes,3,opt,name=range,proto3" json:"range,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockSetCarriageRequest) Reset() {
	*x = RpcBlockSetCarriageRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[758]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockSetCarriageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockSetCarriageRequest) ProtoMessage() {}

func (x *RpcBlockSetCarriageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[758]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockSetCarriageRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockSetCarriageRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 23, 0}
}

func (x *RpcBlockSetCarriageRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockSetCarriageRequest) GetBlockId() string {
	if x != nil {
		return x.BlockId
	}
	return ""
}

func (x *RpcBlockSetCarriageRequest) GetRange() *model.Range {
	if x != nil {
		return x.Range
	}
	return nil
}

type RpcBlockSetCarriageResponse struct {
	state         protoimpl.MessageState            `protogen:"open.v1"`
	Error         *RpcBlockSetCarriageResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockSetCarriageResponse) Reset() {
	*x = RpcBlockSetCarriageResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[759]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockSetCarriageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockSetCarriageResponse) ProtoMessage() {}

func (x *RpcBlockSetCarriageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[759]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockSetCarriageResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockSetCarriageResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 23, 1}
}

func (x *RpcBlockSetCarriageResponse) GetError() *RpcBlockSetCarriageResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

type RpcBlockSetCarriageResponseError struct {
	state         protoimpl.MessageState               `protogen:"open.v1"`
	Code          RpcBlockSetCarriageResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockSetCarriageResponseErrorCode" json:"code,omitempty"`
	Description   string                               `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockSetCarriageResponseError) Reset() {
	*x = RpcBlockSetCarriageResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[760]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockSetCarriageResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockSetCarriageResponseError) ProtoMessage() {}

func (x *RpcBlockSetCarriageResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[760]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockSetCarriageResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockSetCarriageResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 23, 1, 0}
}

func (x *RpcBlockSetCarriageResponseError) GetCode() RpcBlockSetCarriageResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockSetCarriageResponseError_NULL
}

func (x *RpcBlockSetCarriageResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockPreviewRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Html          string                 `protobuf:"bytes,1,opt,name=html,proto3" json:"html,omitempty"`
	Url           string                 `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockPreviewRequest) Reset() {
	*x = RpcBlockPreviewRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[761]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockPreviewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockPreviewRequest) ProtoMessage() {}

func (x *RpcBlockPreviewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[761]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockPreviewRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockPreviewRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 24, 0}
}

func (x *RpcBlockPreviewRequest) GetHtml() string {
	if x != nil {
		return x.Html
	}
	return ""
}

func (x *RpcBlockPreviewRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type RpcBlockPreviewResponse struct {
	state         protoimpl.MessageState        `protogen:"open.v1"`
	Error         *RpcBlockPreviewResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Blocks        []*model.Block                `protobuf:"bytes,2,rep,name=blocks,proto3" json:"blocks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockPreviewResponse) Reset() {
	*x = RpcBlockPreviewResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[762]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockPreviewResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockPreviewResponse) ProtoMessage() {}

func (x *RpcBlockPreviewResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[762]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockPreviewResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockPreviewResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 24, 1}
}

func (x *RpcBlockPreviewResponse) GetError() *RpcBlockPreviewResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcBlockPreviewResponse) GetBlocks() []*model.Block {
	if x != nil {
		return x.Blocks
	}
	return nil
}

type RpcBlockPreviewResponseError struct {
	state         protoimpl.MessageState           `protogen:"open.v1"`
	Code          RpcBlockPreviewResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockPreviewResponseErrorCode" json:"code,omitempty"`
	Description   string                           `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockPreviewResponseError) Reset() {
	*x = RpcBlockPreviewResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[763]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockPreviewResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockPreviewResponseError) ProtoMessage() {}

func (x *RpcBlockPreviewResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[763]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockPreviewResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockPreviewResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 18, 24, 1, 0}
}

func (x *RpcBlockPreviewResponseError) GetCode() RpcBlockPreviewResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockPreviewResponseError_NULL
}

func (x *RpcBlockPreviewResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockLatexSetText struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockLatexSetText) Reset() {
	*x = RpcBlockLatexSetText{}
	mi := &file_pb_protos_commands_proto_msgTypes[764]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockLatexSetText) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockLatexSetText) ProtoMessage() {}

func (x *RpcBlockLatexSetText) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[764]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockLatexSetText.ProtoReflect.Descriptor instead.
func (*RpcBlockLatexSetText) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 19, 0}
}

type RpcBlockLatexSetProcessor struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockLatexSetProcessor) Reset() {
	*x = RpcBlockLatexSetProcessor{}
	mi := &file_pb_protos_commands_proto_msgTypes[765]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockLatexSetProcessor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockLatexSetProcessor) ProtoMessage() {}

func (x *RpcBlockLatexSetProcessor) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[765]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockLatexSetProcessor.ProtoReflect.Descriptor instead.
func (*RpcBlockLatexSetProcessor) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 19, 1}
}

type RpcBlockLatexSetTextRequest struct {
	state         protoimpl.MessageState           `protogen:"open.v1"`
	ContextId     string                           `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	BlockId       string                           `protobuf:"bytes,2,opt,name=blockId,proto3" json:"blockId,omitempty"`
	Text          string                           `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
	Processor     model.BlockContentLatexProcessor `protobuf:"varint,4,opt,name=processor,proto3,enum=anytype.model.BlockContentLatexProcessor" json:"processor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockLatexSetTextRequest) Reset() {
	*x = RpcBlockLatexSetTextRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[766]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockLatexSetTextRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockLatexSetTextRequest) ProtoMessage() {}

func (x *RpcBlockLatexSetTextRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[766]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockLatexSetTextRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockLatexSetTextRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 19, 0, 0}
}

func (x *RpcBlockLatexSetTextRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockLatexSetTextRequest) GetBlockId() string {
	if x != nil {
		return x.BlockId
	}
	return ""
}

func (x *RpcBlockLatexSetTextRequest) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *RpcBlockLatexSetTextRequest) GetProcessor() model.BlockContentLatexProcessor {
	if x != nil {
		return x.Processor
	}
	return model.BlockContentLatexProcessor(0)
}

type RpcBlockLatexSetTextResponse struct {
	state         protoimpl.MessageState             `protogen:"open.v1"`
	Error         *RpcBlockLatexSetTextResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent                     `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockLatexSetTextResponse) Reset() {
	*x = RpcBlockLatexSetTextResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[767]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockLatexSetTextResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockLatexSetTextResponse) ProtoMessage() {}

func (x *RpcBlockLatexSetTextResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[767]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockLatexSetTextResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockLatexSetTextResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 19, 0, 1}
}

func (x *RpcBlockLatexSetTextResponse) GetError() *RpcBlockLatexSetTextResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcBlockLatexSetTextResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcBlockLatexSetTextResponseError struct {
	state         protoimpl.MessageState                `protogen:"open.v1"`
	Code          RpcBlockLatexSetTextResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockLatexSetTextResponseErrorCode" json:"code,omitempty"`
	Description   string                                `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockLatexSetTextResponseError) Reset() {
	*x = RpcBlockLatexSetTextResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[768]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockLatexSetTextResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockLatexSetTextResponseError) ProtoMessage() {}

func (x *RpcBlockLatexSetTextResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[768]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockLatexSetTextResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockLatexSetTextResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 19, 0, 1, 0}
}

func (x *RpcBlockLatexSetTextResponseError) GetCode() RpcBlockLatexSetTextResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockLatexSetTextResponseError_NULL
}

func (x *RpcBlockLatexSetTextResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockLatexSetProcessorRequest struct {
	state         protoimpl.MessageState           `protogen:"open.v1"`
	ContextId     string                           `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	BlockId       string                           `protobuf:"bytes,2,opt,name=blockId,proto3" json:"blockId,omitempty"`
	Processor     model.BlockContentLatexProcessor `protobuf:"varint,3,opt,name=processor,proto3,enum=anytype.model.BlockContentLatexProcessor" json:"processor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockLatexSetProcessorRequest) Reset() {
	*x = RpcBlockLatexSetProcessorRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[769]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockLatexSetProcessorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockLatexSetProcessorRequest) ProtoMessage() {}

func (x *RpcBlockLatexSetProcessorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[769]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockLatexSetProcessorRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockLatexSetProcessorRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 19, 1, 0}
}

func (x *RpcBlockLatexSetProcessorRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockLatexSetProcessorRequest) GetBlockId() string {
	if x != nil {
		return x.BlockId
	}
	return ""
}

func (x *RpcBlockLatexSetProcessorRequest) GetProcessor() model.BlockContentLatexProcessor {
	if x != nil {
		return x.Processor
	}
	return model.BlockContentLatexProcessor(0)
}

type RpcBlockLatexSetProcessorResponse struct {
	state         protoimpl.MessageState                  `protogen:"open.v1"`
	Error         *RpcBlockLatexSetProcessorResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent                          `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockLatexSetProcessorResponse) Reset() {
	*x = RpcBlockLatexSetProcessorResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[770]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockLatexSetProcessorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockLatexSetProcessorResponse) ProtoMessage() {}

func (x *RpcBlockLatexSetProcessorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[770]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockLatexSetProcessorResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockLatexSetProcessorResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 19, 1, 1}
}

func (x *RpcBlockLatexSetProcessorResponse) GetError() *RpcBlockLatexSetProcessorResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcBlockLatexSetProcessorResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcBlockLatexSetProcessorResponseError struct {
	state         protoimpl.MessageState                     `protogen:"open.v1"`
	Code          RpcBlockLatexSetProcessorResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockLatexSetProcessorResponseErrorCode" json:"code,omitempty"`
	Description   string                                     `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockLatexSetProcessorResponseError) Reset() {
	*x = RpcBlockLatexSetProcessorResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[771]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockLatexSetProcessorResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockLatexSetProcessorResponseError) ProtoMessage() {}

func (x *RpcBlockLatexSetProcessorResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[771]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockLatexSetProcessorResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockLatexSetProcessorResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 19, 1, 1, 0}
}

func (x *RpcBlockLatexSetProcessorResponseError) GetCode() RpcBlockLatexSetProcessorResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockLatexSetProcessorResponseError_NULL
}

func (x *RpcBlockLatexSetProcessorResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockTextSetText struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTextSetText) Reset() {
	*x = RpcBlockTextSetText{}
	mi := &file_pb_protos_commands_proto_msgTypes[772]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTextSetText) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTextSetText) ProtoMessage() {}

func (x *RpcBlockTextSetText) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[772]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTextSetText.ProtoReflect.Descriptor instead.
func (*RpcBlockTextSetText) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 20, 0}
}

type RpcBlockTextSetColor struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTextSetColor) Reset() {
	*x = RpcBlockTextSetColor{}
	mi := &file_pb_protos_commands_proto_msgTypes[773]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTextSetColor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTextSetColor) ProtoMessage() {}

func (x *RpcBlockTextSetColor) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[773]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTextSetColor.ProtoReflect.Descriptor instead.
func (*RpcBlockTextSetColor) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 20, 1}
}

type RpcBlockTextSetMarks struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTextSetMarks) Reset() {
	*x = RpcBlockTextSetMarks{}
	mi := &file_pb_protos_commands_proto_msgTypes[774]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTextSetMarks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTextSetMarks) ProtoMessage() {}

func (x *RpcBlockTextSetMarks) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[774]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTextSetMarks.ProtoReflect.Descriptor instead.
func (*RpcBlockTextSetMarks) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 20, 2}
}

type RpcBlockTextSetStyle struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTextSetStyle) Reset() {
	*x = RpcBlockTextSetStyle{}
	mi := &file_pb_protos_commands_proto_msgTypes[775]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTextSetStyle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTextSetStyle) ProtoMessage() {}

func (x *RpcBlockTextSetStyle) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[775]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTextSetStyle.ProtoReflect.Descriptor instead.
func (*RpcBlockTextSetStyle) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 20, 3}
}

type RpcBlockTextSetChecked struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTextSetChecked) Reset() {
	*x = RpcBlockTextSetChecked{}
	mi := &file_pb_protos_commands_proto_msgTypes[776]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTextSetChecked) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTextSetChecked) ProtoMessage() {}

func (x *RpcBlockTextSetChecked) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[776]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTextSetChecked.ProtoReflect.Descriptor instead.
func (*RpcBlockTextSetChecked) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 20, 4}
}

type RpcBlockTextSetIcon struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTextSetIcon) Reset() {
	*x = RpcBlockTextSetIcon{}
	mi := &file_pb_protos_commands_proto_msgTypes[777]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTextSetIcon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTextSetIcon) ProtoMessage() {}

func (x *RpcBlockTextSetIcon) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[777]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTextSetIcon.ProtoReflect.Descriptor instead.
func (*RpcBlockTextSetIcon) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 20, 5}
}

type RpcBlockTextListSetStyle struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTextListSetStyle) Reset() {
	*x = RpcBlockTextListSetStyle{}
	mi := &file_pb_protos_commands_proto_msgTypes[778]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTextListSetStyle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTextListSetStyle) ProtoMessage() {}

func (x *RpcBlockTextListSetStyle) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[778]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTextListSetStyle.ProtoReflect.Descriptor instead.
func (*RpcBlockTextListSetStyle) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 20, 6}
}

type RpcBlockTextListSetColor struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTextListSetColor) Reset() {
	*x = RpcBlockTextListSetColor{}
	mi := &file_pb_protos_commands_proto_msgTypes[779]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTextListSetColor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTextListSetColor) ProtoMessage() {}

func (x *RpcBlockTextListSetColor) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[779]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTextListSetColor.ProtoReflect.Descriptor instead.
func (*RpcBlockTextListSetColor) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 20, 7}
}

type RpcBlockTextListSetMark struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTextListSetMark) Reset() {
	*x = RpcBlockTextListSetMark{}
	mi := &file_pb_protos_commands_proto_msgTypes[780]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTextListSetMark) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTextListSetMark) ProtoMessage() {}

func (x *RpcBlockTextListSetMark) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[780]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTextListSetMark.ProtoReflect.Descriptor instead.
func (*RpcBlockTextListSetMark) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 20, 8}
}

type RpcBlockTextListClearStyle struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTextListClearStyle) Reset() {
	*x = RpcBlockTextListClearStyle{}
	mi := &file_pb_protos_commands_proto_msgTypes[781]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTextListClearStyle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTextListClearStyle) ProtoMessage() {}

func (x *RpcBlockTextListClearStyle) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[781]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTextListClearStyle.ProtoReflect.Descriptor instead.
func (*RpcBlockTextListClearStyle) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 20, 9}
}

type RpcBlockTextListClearContent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTextListClearContent) Reset() {
	*x = RpcBlockTextListClearContent{}
	mi := &file_pb_protos_commands_proto_msgTypes[782]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTextListClearContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTextListClearContent) ProtoMessage() {}

func (x *RpcBlockTextListClearContent) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[782]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTextListClearContent.ProtoReflect.Descriptor instead.
func (*RpcBlockTextListClearContent) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 20, 10}
}

type RpcBlockTextSetTextRequest struct {
	state             protoimpl.MessageState       `protogen:"open.v1"`
	ContextId         string                       `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	BlockId           string                       `protobuf:"bytes,2,opt,name=blockId,proto3" json:"blockId,omitempty"`
	Text              string                       `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
	Marks             *model.BlockContentTextMarks `protobuf:"bytes,4,opt,name=marks,proto3" json:"marks,omitempty"`
	SelectedTextRange *model.Range                 `protobuf:"bytes,5,opt,name=selectedTextRange,proto3" json:"selectedTextRange,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *RpcBlockTextSetTextRequest) Reset() {
	*x = RpcBlockTextSetTextRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[783]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTextSetTextRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTextSetTextRequest) ProtoMessage() {}

func (x *RpcBlockTextSetTextRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[783]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTextSetTextRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockTextSetTextRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 20, 0, 0}
}

func (x *RpcBlockTextSetTextRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockTextSetTextRequest) GetBlockId() string {
	if x != nil {
		return x.BlockId
	}
	return ""
}

func (x *RpcBlockTextSetTextRequest) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *RpcBlockTextSetTextRequest) GetMarks() *model.BlockContentTextMarks {
	if x != nil {
		return x.Marks
	}
	return nil
}

func (x *RpcBlockTextSetTextRequest) GetSelectedTextRange() *model.Range {
	if x != nil {
		return x.SelectedTextRange
	}
	return nil
}

type RpcBlockTextSetTextResponse struct {
	state         protoimpl.MessageState            `protogen:"open.v1"`
	Error         *RpcBlockTextSetTextResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent                    `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTextSetTextResponse) Reset() {
	*x = RpcBlockTextSetTextResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[784]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTextSetTextResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTextSetTextResponse) ProtoMessage() {}

func (x *RpcBlockTextSetTextResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[784]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTextSetTextResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockTextSetTextResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 20, 0, 1}
}

func (x *RpcBlockTextSetTextResponse) GetError() *RpcBlockTextSetTextResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcBlockTextSetTextResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcBlockTextSetTextResponseError struct {
	state         protoimpl.MessageState               `protogen:"open.v1"`
	Code          RpcBlockTextSetTextResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockTextSetTextResponseErrorCode" json:"code,omitempty"`
	Description   string                               `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTextSetTextResponseError) Reset() {
	*x = RpcBlockTextSetTextResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[785]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTextSetTextResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTextSetTextResponseError) ProtoMessage() {}

func (x *RpcBlockTextSetTextResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[785]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTextSetTextResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockTextSetTextResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 20, 0, 1, 0}
}

func (x *RpcBlockTextSetTextResponseError) GetCode() RpcBlockTextSetTextResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockTextSetTextResponseError_NULL
}

func (x *RpcBlockTextSetTextResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockTextSetColorRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextId     string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	BlockId       string                 `protobuf:"bytes,2,opt,name=blockId,proto3" json:"blockId,omitempty"`
	Color         string                 `protobuf:"bytes,3,opt,name=color,proto3" json:"color,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTextSetColorRequest) Reset() {
	*x = RpcBlockTextSetColorRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[786]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTextSetColorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTextSetColorRequest) ProtoMessage() {}

func (x *RpcBlockTextSetColorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[786]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTextSetColorRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockTextSetColorRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 20, 1, 0}
}

func (x *RpcBlockTextSetColorRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockTextSetColorRequest) GetBlockId() string {
	if x != nil {
		return x.BlockId
	}
	return ""
}

func (x *RpcBlockTextSetColorRequest) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

type RpcBlockTextSetColorResponse struct {
	state         protoimpl.MessageState             `protogen:"open.v1"`
	Error         *RpcBlockTextSetColorResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent                     `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTextSetColorResponse) Reset() {
	*x = RpcBlockTextSetColorResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[787]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTextSetColorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTextSetColorResponse) ProtoMessage() {}

func (x *RpcBlockTextSetColorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[787]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTextSetColorResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockTextSetColorResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 20, 1, 1}
}

func (x *RpcBlockTextSetColorResponse) GetError() *RpcBlockTextSetColorResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcBlockTextSetColorResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcBlockTextSetColorResponseError struct {
	state         protoimpl.MessageState                `protogen:"open.v1"`
	Code          RpcBlockTextSetColorResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockTextSetColorResponseErrorCode" json:"code,omitempty"`
	Description   string                                `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTextSetColorResponseError) Reset() {
	*x = RpcBlockTextSetColorResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[788]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTextSetColorResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTextSetColorResponseError) ProtoMessage() {}

func (x *RpcBlockTextSetColorResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[788]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTextSetColorResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockTextSetColorResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 20, 1, 1, 0}
}

func (x *RpcBlockTextSetColorResponseError) GetCode() RpcBlockTextSetColorResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockTextSetColorResponseError_NULL
}

func (x *RpcBlockTextSetColorResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// Get marks list in the selected range in text block.
type RpcBlockTextSetMarksGet struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTextSetMarksGet) Reset() {
	*x = RpcBlockTextSetMarksGet{}
	mi := &file_pb_protos_commands_proto_msgTypes[789]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTextSetMarksGet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTextSetMarksGet) ProtoMessage() {}

func (x *RpcBlockTextSetMarksGet) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[789]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTextSetMarksGet.ProtoReflect.Descriptor instead.
func (*RpcBlockTextSetMarksGet) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 20, 2, 0}
}

type RpcBlockTextSetMarksGetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextId     string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	BlockId       string                 `protobuf:"bytes,2,opt,name=blockId,proto3" json:"blockId,omitempty"`
	Range         *model.Range           `protobuf:"bytes,3,opt,name=range,proto3" json:"range,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTextSetMarksGetRequest) Reset() {
	*x = RpcBlockTextSetMarksGetRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[790]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTextSetMarksGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTextSetMarksGetRequest) ProtoMessage() {}

func (x *RpcBlockTextSetMarksGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[790]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTextSetMarksGetRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockTextSetMarksGetRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 20, 2, 0, 0}
}

func (x *RpcBlockTextSetMarksGetRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockTextSetMarksGetRequest) GetBlockId() string {
	if x != nil {
		return x.BlockId
	}
	return ""
}

func (x *RpcBlockTextSetMarksGetRequest) GetRange() *model.Range {
	if x != nil {
		return x.Range
	}
	return nil
}

type RpcBlockTextSetMarksGetResponse struct {
	state         protoimpl.MessageState                `protogen:"open.v1"`
	Error         *RpcBlockTextSetMarksGetResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent                        `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTextSetMarksGetResponse) Reset() {
	*x = RpcBlockTextSetMarksGetResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[791]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTextSetMarksGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTextSetMarksGetResponse) ProtoMessage() {}

func (x *RpcBlockTextSetMarksGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[791]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTextSetMarksGetResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockTextSetMarksGetResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 20, 2, 0, 1}
}

func (x *RpcBlockTextSetMarksGetResponse) GetError() *RpcBlockTextSetMarksGetResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcBlockTextSetMarksGetResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcBlockTextSetMarksGetResponseError struct {
	state         protoimpl.MessageState                   `protogen:"open.v1"`
	Code          RpcBlockTextSetMarksGetResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockTextSetMarksGetResponseErrorCode" json:"code,omitempty"`
	Description   string                                   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTextSetMarksGetResponseError) Reset() {
	*x = RpcBlockTextSetMarksGetResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[792]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTextSetMarksGetResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTextSetMarksGetResponseError) ProtoMessage() {}

func (x *RpcBlockTextSetMarksGetResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[792]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTextSetMarksGetResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockTextSetMarksGetResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 20, 2, 0, 1, 0}
}

func (x *RpcBlockTextSetMarksGetResponseError) GetCode() RpcBlockTextSetMarksGetResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockTextSetMarksGetResponseError_NULL
}

func (x *RpcBlockTextSetMarksGetResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockTextSetStyleRequest struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	ContextId     string                      `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	BlockId       string                      `protobuf:"bytes,2,opt,name=blockId,proto3" json:"blockId,omitempty"`
	Style         model.BlockContentTextStyle `protobuf:"varint,3,opt,name=style,proto3,enum=anytype.model.BlockContentTextStyle" json:"style,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTextSetStyleRequest) Reset() {
	*x = RpcBlockTextSetStyleRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[793]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTextSetStyleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTextSetStyleRequest) ProtoMessage() {}

func (x *RpcBlockTextSetStyleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[793]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTextSetStyleRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockTextSetStyleRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 20, 3, 0}
}

func (x *RpcBlockTextSetStyleRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockTextSetStyleRequest) GetBlockId() string {
	if x != nil {
		return x.BlockId
	}
	return ""
}

func (x *RpcBlockTextSetStyleRequest) GetStyle() model.BlockContentTextStyle {
	if x != nil {
		return x.Style
	}
	return model.BlockContentTextStyle(0)
}

type RpcBlockTextSetStyleResponse struct {
	state         protoimpl.MessageState             `protogen:"open.v1"`
	Error         *RpcBlockTextSetStyleResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent                     `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTextSetStyleResponse) Reset() {
	*x = RpcBlockTextSetStyleResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[794]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTextSetStyleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTextSetStyleResponse) ProtoMessage() {}

func (x *RpcBlockTextSetStyleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[794]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTextSetStyleResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockTextSetStyleResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 20, 3, 1}
}

func (x *RpcBlockTextSetStyleResponse) GetError() *RpcBlockTextSetStyleResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcBlockTextSetStyleResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcBlockTextSetStyleResponseError struct {
	state         protoimpl.MessageState                `protogen:"open.v1"`
	Code          RpcBlockTextSetStyleResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockTextSetStyleResponseErrorCode" json:"code,omitempty"`
	Description   string                                `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTextSetStyleResponseError) Reset() {
	*x = RpcBlockTextSetStyleResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[795]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTextSetStyleResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTextSetStyleResponseError) ProtoMessage() {}

func (x *RpcBlockTextSetStyleResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[795]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTextSetStyleResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockTextSetStyleResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 20, 3, 1, 0}
}

func (x *RpcBlockTextSetStyleResponseError) GetCode() RpcBlockTextSetStyleResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockTextSetStyleResponseError_NULL
}

func (x *RpcBlockTextSetStyleResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockTextSetCheckedRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextId     string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	BlockId       string                 `protobuf:"bytes,2,opt,name=blockId,proto3" json:"blockId,omitempty"`
	Checked       bool                   `protobuf:"varint,3,opt,name=checked,proto3" json:"checked,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTextSetCheckedRequest) Reset() {
	*x = RpcBlockTextSetCheckedRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[796]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTextSetCheckedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTextSetCheckedRequest) ProtoMessage() {}

func (x *RpcBlockTextSetCheckedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[796]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTextSetCheckedRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockTextSetCheckedRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 20, 4, 0}
}

func (x *RpcBlockTextSetCheckedRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockTextSetCheckedRequest) GetBlockId() string {
	if x != nil {
		return x.BlockId
	}
	return ""
}

func (x *RpcBlockTextSetCheckedRequest) GetChecked() bool {
	if x != nil {
		return x.Checked
	}
	return false
}

type RpcBlockTextSetCheckedResponse struct {
	state         protoimpl.MessageState               `protogen:"open.v1"`
	Error         *RpcBlockTextSetCheckedResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent                       `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTextSetCheckedResponse) Reset() {
	*x = RpcBlockTextSetCheckedResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[797]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTextSetCheckedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTextSetCheckedResponse) ProtoMessage() {}

func (x *RpcBlockTextSetCheckedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[797]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTextSetCheckedResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockTextSetCheckedResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 20, 4, 1}
}

func (x *RpcBlockTextSetCheckedResponse) GetError() *RpcBlockTextSetCheckedResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcBlockTextSetCheckedResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcBlockTextSetCheckedResponseError struct {
	state         protoimpl.MessageState                  `protogen:"open.v1"`
	Code          RpcBlockTextSetCheckedResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockTextSetCheckedResponseErrorCode" json:"code,omitempty"`
	Description   string                                  `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTextSetCheckedResponseError) Reset() {
	*x = RpcBlockTextSetCheckedResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[798]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTextSetCheckedResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTextSetCheckedResponseError) ProtoMessage() {}

func (x *RpcBlockTextSetCheckedResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[798]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTextSetCheckedResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockTextSetCheckedResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 20, 4, 1, 0}
}

func (x *RpcBlockTextSetCheckedResponseError) GetCode() RpcBlockTextSetCheckedResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockTextSetCheckedResponseError_NULL
}

func (x *RpcBlockTextSetCheckedResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockTextSetIconRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextId     string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	BlockId       string                 `protobuf:"bytes,2,opt,name=blockId,proto3" json:"blockId,omitempty"`
	IconImage     string                 `protobuf:"bytes,3,opt,name=iconImage,proto3" json:"iconImage,omitempty"` // in case both image and emoji are set, image has a priority to show
	IconEmoji     string                 `protobuf:"bytes,5,opt,name=iconEmoji,proto3" json:"iconEmoji,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTextSetIconRequest) Reset() {
	*x = RpcBlockTextSetIconRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[799]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTextSetIconRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTextSetIconRequest) ProtoMessage() {}

func (x *RpcBlockTextSetIconRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[799]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTextSetIconRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockTextSetIconRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 20, 5, 0}
}

func (x *RpcBlockTextSetIconRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockTextSetIconRequest) GetBlockId() string {
	if x != nil {
		return x.BlockId
	}
	return ""
}

func (x *RpcBlockTextSetIconRequest) GetIconImage() string {
	if x != nil {
		return x.IconImage
	}
	return ""
}

func (x *RpcBlockTextSetIconRequest) GetIconEmoji() string {
	if x != nil {
		return x.IconEmoji
	}
	return ""
}

type RpcBlockTextSetIconResponse struct {
	state         protoimpl.MessageState            `protogen:"open.v1"`
	Error         *RpcBlockTextSetIconResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent                    `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTextSetIconResponse) Reset() {
	*x = RpcBlockTextSetIconResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[800]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTextSetIconResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTextSetIconResponse) ProtoMessage() {}

func (x *RpcBlockTextSetIconResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[800]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTextSetIconResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockTextSetIconResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 20, 5, 1}
}

func (x *RpcBlockTextSetIconResponse) GetError() *RpcBlockTextSetIconResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcBlockTextSetIconResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcBlockTextSetIconResponseError struct {
	state         protoimpl.MessageState               `protogen:"open.v1"`
	Code          RpcBlockTextSetIconResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockTextSetIconResponseErrorCode" json:"code,omitempty"`
	Description   string                               `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTextSetIconResponseError) Reset() {
	*x = RpcBlockTextSetIconResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[801]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTextSetIconResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTextSetIconResponseError) ProtoMessage() {}

func (x *RpcBlockTextSetIconResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[801]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTextSetIconResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockTextSetIconResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 20, 5, 1, 0}
}

func (x *RpcBlockTextSetIconResponseError) GetCode() RpcBlockTextSetIconResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockTextSetIconResponseError_NULL
}

func (x *RpcBlockTextSetIconResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockTextListSetStyleRequest struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	ContextId     string                      `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	BlockIds      []string                    `protobuf:"bytes,2,rep,name=blockIds,proto3" json:"blockIds,omitempty"`
	Style         model.BlockContentTextStyle `protobuf:"varint,3,opt,name=style,proto3,enum=anytype.model.BlockContentTextStyle" json:"style,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTextListSetStyleRequest) Reset() {
	*x = RpcBlockTextListSetStyleRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[802]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTextListSetStyleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTextListSetStyleRequest) ProtoMessage() {}

func (x *RpcBlockTextListSetStyleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[802]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTextListSetStyleRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockTextListSetStyleRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 20, 6, 0}
}

func (x *RpcBlockTextListSetStyleRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockTextListSetStyleRequest) GetBlockIds() []string {
	if x != nil {
		return x.BlockIds
	}
	return nil
}

func (x *RpcBlockTextListSetStyleRequest) GetStyle() model.BlockContentTextStyle {
	if x != nil {
		return x.Style
	}
	return model.BlockContentTextStyle(0)
}

type RpcBlockTextListSetStyleResponse struct {
	state         protoimpl.MessageState                 `protogen:"open.v1"`
	Error         *RpcBlockTextListSetStyleResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent                         `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTextListSetStyleResponse) Reset() {
	*x = RpcBlockTextListSetStyleResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[803]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTextListSetStyleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTextListSetStyleResponse) ProtoMessage() {}

func (x *RpcBlockTextListSetStyleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[803]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTextListSetStyleResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockTextListSetStyleResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 20, 6, 1}
}

func (x *RpcBlockTextListSetStyleResponse) GetError() *RpcBlockTextListSetStyleResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcBlockTextListSetStyleResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcBlockTextListSetStyleResponseError struct {
	state         protoimpl.MessageState                    `protogen:"open.v1"`
	Code          RpcBlockTextListSetStyleResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockTextListSetStyleResponseErrorCode" json:"code,omitempty"`
	Description   string                                    `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTextListSetStyleResponseError) Reset() {
	*x = RpcBlockTextListSetStyleResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[804]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTextListSetStyleResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTextListSetStyleResponseError) ProtoMessage() {}

func (x *RpcBlockTextListSetStyleResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[804]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTextListSetStyleResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockTextListSetStyleResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 20, 6, 1, 0}
}

func (x *RpcBlockTextListSetStyleResponseError) GetCode() RpcBlockTextListSetStyleResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockTextListSetStyleResponseError_NULL
}

func (x *RpcBlockTextListSetStyleResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockTextListSetColorRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextId     string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	BlockIds      []string               `protobuf:"bytes,2,rep,name=blockIds,proto3" json:"blockIds,omitempty"`
	Color         string                 `protobuf:"bytes,3,opt,name=color,proto3" json:"color,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTextListSetColorRequest) Reset() {
	*x = RpcBlockTextListSetColorRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[805]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTextListSetColorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTextListSetColorRequest) ProtoMessage() {}

func (x *RpcBlockTextListSetColorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[805]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTextListSetColorRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockTextListSetColorRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 20, 7, 0}
}

func (x *RpcBlockTextListSetColorRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockTextListSetColorRequest) GetBlockIds() []string {
	if x != nil {
		return x.BlockIds
	}
	return nil
}

func (x *RpcBlockTextListSetColorRequest) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

type RpcBlockTextListSetColorResponse struct {
	state         protoimpl.MessageState                 `protogen:"open.v1"`
	Error         *RpcBlockTextListSetColorResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent                         `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTextListSetColorResponse) Reset() {
	*x = RpcBlockTextListSetColorResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[806]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTextListSetColorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTextListSetColorResponse) ProtoMessage() {}

func (x *RpcBlockTextListSetColorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[806]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTextListSetColorResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockTextListSetColorResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 20, 7, 1}
}

func (x *RpcBlockTextListSetColorResponse) GetError() *RpcBlockTextListSetColorResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcBlockTextListSetColorResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcBlockTextListSetColorResponseError struct {
	state         protoimpl.MessageState                    `protogen:"open.v1"`
	Code          RpcBlockTextListSetColorResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockTextListSetColorResponseErrorCode" json:"code,omitempty"`
	Description   string                                    `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTextListSetColorResponseError) Reset() {
	*x = RpcBlockTextListSetColorResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[807]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTextListSetColorResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTextListSetColorResponseError) ProtoMessage() {}

func (x *RpcBlockTextListSetColorResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[807]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTextListSetColorResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockTextListSetColorResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 20, 7, 1, 0}
}

func (x *RpcBlockTextListSetColorResponseError) GetCode() RpcBlockTextListSetColorResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockTextListSetColorResponseError_NULL
}

func (x *RpcBlockTextListSetColorResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockTextListSetMarkRequest struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	ContextId     string                      `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	BlockIds      []string                    `protobuf:"bytes,2,rep,name=blockIds,proto3" json:"blockIds,omitempty"`
	Mark          *model.BlockContentTextMark `protobuf:"bytes,3,opt,name=mark,proto3" json:"mark,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTextListSetMarkRequest) Reset() {
	*x = RpcBlockTextListSetMarkRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[808]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTextListSetMarkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTextListSetMarkRequest) ProtoMessage() {}

func (x *RpcBlockTextListSetMarkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[808]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTextListSetMarkRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockTextListSetMarkRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 20, 8, 0}
}

func (x *RpcBlockTextListSetMarkRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockTextListSetMarkRequest) GetBlockIds() []string {
	if x != nil {
		return x.BlockIds
	}
	return nil
}

func (x *RpcBlockTextListSetMarkRequest) GetMark() *model.BlockContentTextMark {
	if x != nil {
		return x.Mark
	}
	return nil
}

type RpcBlockTextListSetMarkResponse struct {
	state         protoimpl.MessageState                `protogen:"open.v1"`
	Error         *RpcBlockTextListSetMarkResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent                        `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTextListSetMarkResponse) Reset() {
	*x = RpcBlockTextListSetMarkResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[809]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTextListSetMarkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTextListSetMarkResponse) ProtoMessage() {}

func (x *RpcBlockTextListSetMarkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[809]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTextListSetMarkResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockTextListSetMarkResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 20, 8, 1}
}

func (x *RpcBlockTextListSetMarkResponse) GetError() *RpcBlockTextListSetMarkResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcBlockTextListSetMarkResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcBlockTextListSetMarkResponseError struct {
	state         protoimpl.MessageState                   `protogen:"open.v1"`
	Code          RpcBlockTextListSetMarkResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockTextListSetMarkResponseErrorCode" json:"code,omitempty"`
	Description   string                                   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTextListSetMarkResponseError) Reset() {
	*x = RpcBlockTextListSetMarkResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[810]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTextListSetMarkResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTextListSetMarkResponseError) ProtoMessage() {}

func (x *RpcBlockTextListSetMarkResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[810]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTextListSetMarkResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockTextListSetMarkResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 20, 8, 1, 0}
}

func (x *RpcBlockTextListSetMarkResponseError) GetCode() RpcBlockTextListSetMarkResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockTextListSetMarkResponseError_NULL
}

func (x *RpcBlockTextListSetMarkResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockTextListClearStyleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextId     string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	BlockIds      []string               `protobuf:"bytes,2,rep,name=blockIds,proto3" json:"blockIds,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTextListClearStyleRequest) Reset() {
	*x = RpcBlockTextListClearStyleRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[811]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTextListClearStyleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTextListClearStyleRequest) ProtoMessage() {}

func (x *RpcBlockTextListClearStyleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[811]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTextListClearStyleRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockTextListClearStyleRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 20, 9, 0}
}

func (x *RpcBlockTextListClearStyleRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockTextListClearStyleRequest) GetBlockIds() []string {
	if x != nil {
		return x.BlockIds
	}
	return nil
}

type RpcBlockTextListClearStyleResponse struct {
	state         protoimpl.MessageState                   `protogen:"open.v1"`
	Error         *RpcBlockTextListClearStyleResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent                           `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTextListClearStyleResponse) Reset() {
	*x = RpcBlockTextListClearStyleResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[812]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTextListClearStyleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTextListClearStyleResponse) ProtoMessage() {}

func (x *RpcBlockTextListClearStyleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[812]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTextListClearStyleResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockTextListClearStyleResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 20, 9, 1}
}

func (x *RpcBlockTextListClearStyleResponse) GetError() *RpcBlockTextListClearStyleResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcBlockTextListClearStyleResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcBlockTextListClearStyleResponseError struct {
	state         protoimpl.MessageState                      `protogen:"open.v1"`
	Code          RpcBlockTextListClearStyleResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockTextListClearStyleResponseErrorCode" json:"code,omitempty"`
	Description   string                                      `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTextListClearStyleResponseError) Reset() {
	*x = RpcBlockTextListClearStyleResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[813]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTextListClearStyleResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTextListClearStyleResponseError) ProtoMessage() {}

func (x *RpcBlockTextListClearStyleResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[813]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTextListClearStyleResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockTextListClearStyleResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 20, 9, 1, 0}
}

func (x *RpcBlockTextListClearStyleResponseError) GetCode() RpcBlockTextListClearStyleResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockTextListClearStyleResponseError_NULL
}

func (x *RpcBlockTextListClearStyleResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockTextListClearContentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextId     string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	BlockIds      []string               `protobuf:"bytes,2,rep,name=blockIds,proto3" json:"blockIds,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTextListClearContentRequest) Reset() {
	*x = RpcBlockTextListClearContentRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[814]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTextListClearContentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTextListClearContentRequest) ProtoMessage() {}

func (x *RpcBlockTextListClearContentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[814]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTextListClearContentRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockTextListClearContentRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 20, 10, 0}
}

func (x *RpcBlockTextListClearContentRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockTextListClearContentRequest) GetBlockIds() []string {
	if x != nil {
		return x.BlockIds
	}
	return nil
}

type RpcBlockTextListClearContentResponse struct {
	state         protoimpl.MessageState                     `protogen:"open.v1"`
	Error         *RpcBlockTextListClearContentResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent                             `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTextListClearContentResponse) Reset() {
	*x = RpcBlockTextListClearContentResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[815]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTextListClearContentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTextListClearContentResponse) ProtoMessage() {}

func (x *RpcBlockTextListClearContentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[815]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTextListClearContentResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockTextListClearContentResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 20, 10, 1}
}

func (x *RpcBlockTextListClearContentResponse) GetError() *RpcBlockTextListClearContentResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcBlockTextListClearContentResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcBlockTextListClearContentResponseError struct {
	state         protoimpl.MessageState                        `protogen:"open.v1"`
	Code          RpcBlockTextListClearContentResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockTextListClearContentResponseErrorCode" json:"code,omitempty"`
	Description   string                                        `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTextListClearContentResponseError) Reset() {
	*x = RpcBlockTextListClearContentResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[816]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTextListClearContentResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTextListClearContentResponseError) ProtoMessage() {}

func (x *RpcBlockTextListClearContentResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[816]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTextListClearContentResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockTextListClearContentResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 20, 10, 1, 0}
}

func (x *RpcBlockTextListClearContentResponseError) GetCode() RpcBlockTextListClearContentResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockTextListClearContentResponseError_NULL
}

func (x *RpcBlockTextListClearContentResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockTableCreate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTableCreate) Reset() {
	*x = RpcBlockTableCreate{}
	mi := &file_pb_protos_commands_proto_msgTypes[817]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTableCreate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTableCreate) ProtoMessage() {}

func (x *RpcBlockTableCreate) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[817]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTableCreate.ProtoReflect.Descriptor instead.
func (*RpcBlockTableCreate) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 21, 0}
}

type RpcBlockTableRowCreate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTableRowCreate) Reset() {
	*x = RpcBlockTableRowCreate{}
	mi := &file_pb_protos_commands_proto_msgTypes[818]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTableRowCreate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTableRowCreate) ProtoMessage() {}

func (x *RpcBlockTableRowCreate) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[818]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTableRowCreate.ProtoReflect.Descriptor instead.
func (*RpcBlockTableRowCreate) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 21, 1}
}

type RpcBlockTableRowSetHeader struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTableRowSetHeader) Reset() {
	*x = RpcBlockTableRowSetHeader{}
	mi := &file_pb_protos_commands_proto_msgTypes[819]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTableRowSetHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTableRowSetHeader) ProtoMessage() {}

func (x *RpcBlockTableRowSetHeader) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[819]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTableRowSetHeader.ProtoReflect.Descriptor instead.
func (*RpcBlockTableRowSetHeader) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 21, 2}
}

type RpcBlockTableRowListFill struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTableRowListFill) Reset() {
	*x = RpcBlockTableRowListFill{}
	mi := &file_pb_protos_commands_proto_msgTypes[820]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTableRowListFill) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTableRowListFill) ProtoMessage() {}

func (x *RpcBlockTableRowListFill) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[820]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTableRowListFill.ProtoReflect.Descriptor instead.
func (*RpcBlockTableRowListFill) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 21, 3}
}

type RpcBlockTableRowListClean struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTableRowListClean) Reset() {
	*x = RpcBlockTableRowListClean{}
	mi := &file_pb_protos_commands_proto_msgTypes[821]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTableRowListClean) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTableRowListClean) ProtoMessage() {}

func (x *RpcBlockTableRowListClean) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[821]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTableRowListClean.ProtoReflect.Descriptor instead.
func (*RpcBlockTableRowListClean) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 21, 4}
}

type RpcBlockTableColumnListFill struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTableColumnListFill) Reset() {
	*x = RpcBlockTableColumnListFill{}
	mi := &file_pb_protos_commands_proto_msgTypes[822]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTableColumnListFill) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTableColumnListFill) ProtoMessage() {}

func (x *RpcBlockTableColumnListFill) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[822]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTableColumnListFill.ProtoReflect.Descriptor instead.
func (*RpcBlockTableColumnListFill) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 21, 5}
}

type RpcBlockTableColumnCreate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTableColumnCreate) Reset() {
	*x = RpcBlockTableColumnCreate{}
	mi := &file_pb_protos_commands_proto_msgTypes[823]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTableColumnCreate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTableColumnCreate) ProtoMessage() {}

func (x *RpcBlockTableColumnCreate) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[823]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTableColumnCreate.ProtoReflect.Descriptor instead.
func (*RpcBlockTableColumnCreate) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 21, 6}
}

type RpcBlockTableRowDelete struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTableRowDelete) Reset() {
	*x = RpcBlockTableRowDelete{}
	mi := &file_pb_protos_commands_proto_msgTypes[824]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTableRowDelete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTableRowDelete) ProtoMessage() {}

func (x *RpcBlockTableRowDelete) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[824]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTableRowDelete.ProtoReflect.Descriptor instead.
func (*RpcBlockTableRowDelete) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 21, 7}
}

type RpcBlockTableColumnDelete struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTableColumnDelete) Reset() {
	*x = RpcBlockTableColumnDelete{}
	mi := &file_pb_protos_commands_proto_msgTypes[825]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTableColumnDelete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTableColumnDelete) ProtoMessage() {}

func (x *RpcBlockTableColumnDelete) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[825]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTableColumnDelete.ProtoReflect.Descriptor instead.
func (*RpcBlockTableColumnDelete) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 21, 8}
}

type RpcBlockTableColumnMove struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTableColumnMove) Reset() {
	*x = RpcBlockTableColumnMove{}
	mi := &file_pb_protos_commands_proto_msgTypes[826]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTableColumnMove) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTableColumnMove) ProtoMessage() {}

func (x *RpcBlockTableColumnMove) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[826]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTableColumnMove.ProtoReflect.Descriptor instead.
func (*RpcBlockTableColumnMove) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 21, 9}
}

type RpcBlockTableRowDuplicate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTableRowDuplicate) Reset() {
	*x = RpcBlockTableRowDuplicate{}
	mi := &file_pb_protos_commands_proto_msgTypes[827]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTableRowDuplicate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTableRowDuplicate) ProtoMessage() {}

func (x *RpcBlockTableRowDuplicate) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[827]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTableRowDuplicate.ProtoReflect.Descriptor instead.
func (*RpcBlockTableRowDuplicate) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 21, 10}
}

type RpcBlockTableColumnDuplicate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTableColumnDuplicate) Reset() {
	*x = RpcBlockTableColumnDuplicate{}
	mi := &file_pb_protos_commands_proto_msgTypes[828]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTableColumnDuplicate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTableColumnDuplicate) ProtoMessage() {}

func (x *RpcBlockTableColumnDuplicate) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[828]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTableColumnDuplicate.ProtoReflect.Descriptor instead.
func (*RpcBlockTableColumnDuplicate) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 21, 11}
}

type RpcBlockTableExpand struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTableExpand) Reset() {
	*x = RpcBlockTableExpand{}
	mi := &file_pb_protos_commands_proto_msgTypes[829]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTableExpand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTableExpand) ProtoMessage() {}

func (x *RpcBlockTableExpand) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[829]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTableExpand.ProtoReflect.Descriptor instead.
func (*RpcBlockTableExpand) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 21, 12}
}

type RpcBlockTableSort struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTableSort) Reset() {
	*x = RpcBlockTableSort{}
	mi := &file_pb_protos_commands_proto_msgTypes[830]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTableSort) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTableSort) ProtoMessage() {}

func (x *RpcBlockTableSort) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[830]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTableSort.ProtoReflect.Descriptor instead.
func (*RpcBlockTableSort) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 21, 13}
}

type RpcBlockTableCreateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextId     string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"` // id of the context object
	TargetId      string                 `protobuf:"bytes,2,opt,name=targetId,proto3" json:"targetId,omitempty"`   // id of the closest block
	Position      model.BlockPosition    `protobuf:"varint,3,opt,name=position,proto3,enum=anytype.model.BlockPosition" json:"position,omitempty"`
	Rows          uint32                 `protobuf:"varint,4,opt,name=rows,proto3" json:"rows,omitempty"`
	Columns       uint32                 `protobuf:"varint,5,opt,name=columns,proto3" json:"columns,omitempty"`
	WithHeaderRow bool                   `protobuf:"varint,6,opt,name=withHeaderRow,proto3" json:"withHeaderRow,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTableCreateRequest) Reset() {
	*x = RpcBlockTableCreateRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[831]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTableCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTableCreateRequest) ProtoMessage() {}

func (x *RpcBlockTableCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[831]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTableCreateRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockTableCreateRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 21, 0, 0}
}

func (x *RpcBlockTableCreateRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockTableCreateRequest) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

func (x *RpcBlockTableCreateRequest) GetPosition() model.BlockPosition {
	if x != nil {
		return x.Position
	}
	return model.BlockPosition(0)
}

func (x *RpcBlockTableCreateRequest) GetRows() uint32 {
	if x != nil {
		return x.Rows
	}
	return 0
}

func (x *RpcBlockTableCreateRequest) GetColumns() uint32 {
	if x != nil {
		return x.Columns
	}
	return 0
}

func (x *RpcBlockTableCreateRequest) GetWithHeaderRow() bool {
	if x != nil {
		return x.WithHeaderRow
	}
	return false
}

type RpcBlockTableCreateResponse struct {
	state         protoimpl.MessageState            `protogen:"open.v1"`
	Error         *RpcBlockTableCreateResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	BlockId       string                            `protobuf:"bytes,2,opt,name=blockId,proto3" json:"blockId,omitempty"`
	Event         *ResponseEvent                    `protobuf:"bytes,3,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTableCreateResponse) Reset() {
	*x = RpcBlockTableCreateResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[832]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTableCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTableCreateResponse) ProtoMessage() {}

func (x *RpcBlockTableCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[832]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTableCreateResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockTableCreateResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 21, 0, 1}
}

func (x *RpcBlockTableCreateResponse) GetError() *RpcBlockTableCreateResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcBlockTableCreateResponse) GetBlockId() string {
	if x != nil {
		return x.BlockId
	}
	return ""
}

func (x *RpcBlockTableCreateResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcBlockTableCreateResponseError struct {
	state         protoimpl.MessageState               `protogen:"open.v1"`
	Code          RpcBlockTableCreateResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockTableCreateResponseErrorCode" json:"code,omitempty"`
	Description   string                               `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTableCreateResponseError) Reset() {
	*x = RpcBlockTableCreateResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[833]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTableCreateResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTableCreateResponseError) ProtoMessage() {}

func (x *RpcBlockTableCreateResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[833]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTableCreateResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockTableCreateResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 21, 0, 1, 0}
}

func (x *RpcBlockTableCreateResponseError) GetCode() RpcBlockTableCreateResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockTableCreateResponseError_NULL
}

func (x *RpcBlockTableCreateResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockTableRowCreateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextId     string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"` // id of the context object
	TargetId      string                 `protobuf:"bytes,2,opt,name=targetId,proto3" json:"targetId,omitempty"`   // id of the closest row
	Position      model.BlockPosition    `protobuf:"varint,3,opt,name=position,proto3,enum=anytype.model.BlockPosition" json:"position,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTableRowCreateRequest) Reset() {
	*x = RpcBlockTableRowCreateRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[834]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTableRowCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTableRowCreateRequest) ProtoMessage() {}

func (x *RpcBlockTableRowCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[834]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTableRowCreateRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockTableRowCreateRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 21, 1, 0}
}

func (x *RpcBlockTableRowCreateRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockTableRowCreateRequest) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

func (x *RpcBlockTableRowCreateRequest) GetPosition() model.BlockPosition {
	if x != nil {
		return x.Position
	}
	return model.BlockPosition(0)
}

type RpcBlockTableRowCreateResponse struct {
	state         protoimpl.MessageState               `protogen:"open.v1"`
	Error         *RpcBlockTableRowCreateResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent                       `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTableRowCreateResponse) Reset() {
	*x = RpcBlockTableRowCreateResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[835]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTableRowCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTableRowCreateResponse) ProtoMessage() {}

func (x *RpcBlockTableRowCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[835]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTableRowCreateResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockTableRowCreateResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 21, 1, 1}
}

func (x *RpcBlockTableRowCreateResponse) GetError() *RpcBlockTableRowCreateResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcBlockTableRowCreateResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcBlockTableRowCreateResponseError struct {
	state         protoimpl.MessageState                  `protogen:"open.v1"`
	Code          RpcBlockTableRowCreateResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockTableRowCreateResponseErrorCode" json:"code,omitempty"`
	Description   string                                  `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTableRowCreateResponseError) Reset() {
	*x = RpcBlockTableRowCreateResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[836]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTableRowCreateResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTableRowCreateResponseError) ProtoMessage() {}

func (x *RpcBlockTableRowCreateResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[836]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTableRowCreateResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockTableRowCreateResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 21, 1, 1, 0}
}

func (x *RpcBlockTableRowCreateResponseError) GetCode() RpcBlockTableRowCreateResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockTableRowCreateResponseError_NULL
}

func (x *RpcBlockTableRowCreateResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockTableRowSetHeaderRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextId     string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"` // id of the context object
	TargetId      string                 `protobuf:"bytes,2,opt,name=targetId,proto3" json:"targetId,omitempty"`
	IsHeader      bool                   `protobuf:"varint,3,opt,name=isHeader,proto3" json:"isHeader,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTableRowSetHeaderRequest) Reset() {
	*x = RpcBlockTableRowSetHeaderRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[837]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTableRowSetHeaderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTableRowSetHeaderRequest) ProtoMessage() {}

func (x *RpcBlockTableRowSetHeaderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[837]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTableRowSetHeaderRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockTableRowSetHeaderRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 21, 2, 0}
}

func (x *RpcBlockTableRowSetHeaderRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockTableRowSetHeaderRequest) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

func (x *RpcBlockTableRowSetHeaderRequest) GetIsHeader() bool {
	if x != nil {
		return x.IsHeader
	}
	return false
}

type RpcBlockTableRowSetHeaderResponse struct {
	state         protoimpl.MessageState                  `protogen:"open.v1"`
	Error         *RpcBlockTableRowSetHeaderResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent                          `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTableRowSetHeaderResponse) Reset() {
	*x = RpcBlockTableRowSetHeaderResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[838]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTableRowSetHeaderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTableRowSetHeaderResponse) ProtoMessage() {}

func (x *RpcBlockTableRowSetHeaderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[838]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTableRowSetHeaderResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockTableRowSetHeaderResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 21, 2, 1}
}

func (x *RpcBlockTableRowSetHeaderResponse) GetError() *RpcBlockTableRowSetHeaderResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcBlockTableRowSetHeaderResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcBlockTableRowSetHeaderResponseError struct {
	state         protoimpl.MessageState                     `protogen:"open.v1"`
	Code          RpcBlockTableRowSetHeaderResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockTableRowSetHeaderResponseErrorCode" json:"code,omitempty"`
	Description   string                                     `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTableRowSetHeaderResponseError) Reset() {
	*x = RpcBlockTableRowSetHeaderResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[839]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTableRowSetHeaderResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTableRowSetHeaderResponseError) ProtoMessage() {}

func (x *RpcBlockTableRowSetHeaderResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[839]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTableRowSetHeaderResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockTableRowSetHeaderResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 21, 2, 1, 0}
}

func (x *RpcBlockTableRowSetHeaderResponseError) GetCode() RpcBlockTableRowSetHeaderResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockTableRowSetHeaderResponseError_NULL
}

func (x *RpcBlockTableRowSetHeaderResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockTableRowListFillRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextId     string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"` // id of the context object
	BlockIds      []string               `protobuf:"bytes,2,rep,name=blockIds,proto3" json:"blockIds,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTableRowListFillRequest) Reset() {
	*x = RpcBlockTableRowListFillRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[840]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTableRowListFillRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTableRowListFillRequest) ProtoMessage() {}

func (x *RpcBlockTableRowListFillRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[840]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTableRowListFillRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockTableRowListFillRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 21, 3, 0}
}

func (x *RpcBlockTableRowListFillRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockTableRowListFillRequest) GetBlockIds() []string {
	if x != nil {
		return x.BlockIds
	}
	return nil
}

type RpcBlockTableRowListFillResponse struct {
	state         protoimpl.MessageState                 `protogen:"open.v1"`
	Error         *RpcBlockTableRowListFillResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent                         `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTableRowListFillResponse) Reset() {
	*x = RpcBlockTableRowListFillResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[841]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTableRowListFillResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTableRowListFillResponse) ProtoMessage() {}

func (x *RpcBlockTableRowListFillResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[841]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTableRowListFillResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockTableRowListFillResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 21, 3, 1}
}

func (x *RpcBlockTableRowListFillResponse) GetError() *RpcBlockTableRowListFillResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcBlockTableRowListFillResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcBlockTableRowListFillResponseError struct {
	state         protoimpl.MessageState                    `protogen:"open.v1"`
	Code          RpcBlockTableRowListFillResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockTableRowListFillResponseErrorCode" json:"code,omitempty"`
	Description   string                                    `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTableRowListFillResponseError) Reset() {
	*x = RpcBlockTableRowListFillResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[842]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTableRowListFillResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTableRowListFillResponseError) ProtoMessage() {}

func (x *RpcBlockTableRowListFillResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[842]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTableRowListFillResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockTableRowListFillResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 21, 3, 1, 0}
}

func (x *RpcBlockTableRowListFillResponseError) GetCode() RpcBlockTableRowListFillResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockTableRowListFillResponseError_NULL
}

func (x *RpcBlockTableRowListFillResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockTableRowListCleanRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextId     string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"` // id of the context object
	BlockIds      []string               `protobuf:"bytes,2,rep,name=blockIds,proto3" json:"blockIds,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTableRowListCleanRequest) Reset() {
	*x = RpcBlockTableRowListCleanRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[843]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTableRowListCleanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTableRowListCleanRequest) ProtoMessage() {}

func (x *RpcBlockTableRowListCleanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[843]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTableRowListCleanRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockTableRowListCleanRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 21, 4, 0}
}

func (x *RpcBlockTableRowListCleanRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockTableRowListCleanRequest) GetBlockIds() []string {
	if x != nil {
		return x.BlockIds
	}
	return nil
}

type RpcBlockTableRowListCleanResponse struct {
	state         protoimpl.MessageState                  `protogen:"open.v1"`
	Error         *RpcBlockTableRowListCleanResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent                          `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTableRowListCleanResponse) Reset() {
	*x = RpcBlockTableRowListCleanResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[844]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTableRowListCleanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTableRowListCleanResponse) ProtoMessage() {}

func (x *RpcBlockTableRowListCleanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[844]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTableRowListCleanResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockTableRowListCleanResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 21, 4, 1}
}

func (x *RpcBlockTableRowListCleanResponse) GetError() *RpcBlockTableRowListCleanResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcBlockTableRowListCleanResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcBlockTableRowListCleanResponseError struct {
	state         protoimpl.MessageState                     `protogen:"open.v1"`
	Code          RpcBlockTableRowListCleanResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockTableRowListCleanResponseErrorCode" json:"code,omitempty"`
	Description   string                                     `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTableRowListCleanResponseError) Reset() {
	*x = RpcBlockTableRowListCleanResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[845]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTableRowListCleanResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTableRowListCleanResponseError) ProtoMessage() {}

func (x *RpcBlockTableRowListCleanResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[845]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTableRowListCleanResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockTableRowListCleanResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 21, 4, 1, 0}
}

func (x *RpcBlockTableRowListCleanResponseError) GetCode() RpcBlockTableRowListCleanResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockTableRowListCleanResponseError_NULL
}

func (x *RpcBlockTableRowListCleanResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockTableColumnListFillRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextId     string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"` // id of the context object
	BlockIds      []string               `protobuf:"bytes,2,rep,name=blockIds,proto3" json:"blockIds,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTableColumnListFillRequest) Reset() {
	*x = RpcBlockTableColumnListFillRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[846]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTableColumnListFillRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTableColumnListFillRequest) ProtoMessage() {}

func (x *RpcBlockTableColumnListFillRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[846]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTableColumnListFillRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockTableColumnListFillRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 21, 5, 0}
}

func (x *RpcBlockTableColumnListFillRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockTableColumnListFillRequest) GetBlockIds() []string {
	if x != nil {
		return x.BlockIds
	}
	return nil
}

type RpcBlockTableColumnListFillResponse struct {
	state         protoimpl.MessageState                    `protogen:"open.v1"`
	Error         *RpcBlockTableColumnListFillResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent                            `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTableColumnListFillResponse) Reset() {
	*x = RpcBlockTableColumnListFillResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[847]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTableColumnListFillResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTableColumnListFillResponse) ProtoMessage() {}

func (x *RpcBlockTableColumnListFillResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[847]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTableColumnListFillResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockTableColumnListFillResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 21, 5, 1}
}

func (x *RpcBlockTableColumnListFillResponse) GetError() *RpcBlockTableColumnListFillResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcBlockTableColumnListFillResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcBlockTableColumnListFillResponseError struct {
	state         protoimpl.MessageState                       `protogen:"open.v1"`
	Code          RpcBlockTableColumnListFillResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockTableColumnListFillResponseErrorCode" json:"code,omitempty"`
	Description   string                                       `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTableColumnListFillResponseError) Reset() {
	*x = RpcBlockTableColumnListFillResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[848]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTableColumnListFillResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTableColumnListFillResponseError) ProtoMessage() {}

func (x *RpcBlockTableColumnListFillResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[848]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTableColumnListFillResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockTableColumnListFillResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 21, 5, 1, 0}
}

func (x *RpcBlockTableColumnListFillResponseError) GetCode() RpcBlockTableColumnListFillResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockTableColumnListFillResponseError_NULL
}

func (x *RpcBlockTableColumnListFillResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockTableColumnCreateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextId     string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"` // id of the context object
	TargetId      string                 `protobuf:"bytes,2,opt,name=targetId,proto3" json:"targetId,omitempty"`   // id of the closest column
	Position      model.BlockPosition    `protobuf:"varint,3,opt,name=position,proto3,enum=anytype.model.BlockPosition" json:"position,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTableColumnCreateRequest) Reset() {
	*x = RpcBlockTableColumnCreateRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[849]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTableColumnCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTableColumnCreateRequest) ProtoMessage() {}

func (x *RpcBlockTableColumnCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[849]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTableColumnCreateRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockTableColumnCreateRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 21, 6, 0}
}

func (x *RpcBlockTableColumnCreateRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockTableColumnCreateRequest) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

func (x *RpcBlockTableColumnCreateRequest) GetPosition() model.BlockPosition {
	if x != nil {
		return x.Position
	}
	return model.BlockPosition(0)
}

type RpcBlockTableColumnCreateResponse struct {
	state         protoimpl.MessageState                  `protogen:"open.v1"`
	Error         *RpcBlockTableColumnCreateResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent                          `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTableColumnCreateResponse) Reset() {
	*x = RpcBlockTableColumnCreateResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[850]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTableColumnCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTableColumnCreateResponse) ProtoMessage() {}

func (x *RpcBlockTableColumnCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[850]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTableColumnCreateResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockTableColumnCreateResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 21, 6, 1}
}

func (x *RpcBlockTableColumnCreateResponse) GetError() *RpcBlockTableColumnCreateResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcBlockTableColumnCreateResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcBlockTableColumnCreateResponseError struct {
	state         protoimpl.MessageState                     `protogen:"open.v1"`
	Code          RpcBlockTableColumnCreateResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockTableColumnCreateResponseErrorCode" json:"code,omitempty"`
	Description   string                                     `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTableColumnCreateResponseError) Reset() {
	*x = RpcBlockTableColumnCreateResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[851]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTableColumnCreateResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTableColumnCreateResponseError) ProtoMessage() {}

func (x *RpcBlockTableColumnCreateResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[851]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTableColumnCreateResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockTableColumnCreateResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 21, 6, 1, 0}
}

func (x *RpcBlockTableColumnCreateResponseError) GetCode() RpcBlockTableColumnCreateResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockTableColumnCreateResponseError_NULL
}

func (x *RpcBlockTableColumnCreateResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockTableRowDeleteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextId     string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"` // id of the context object
	TargetId      string                 `protobuf:"bytes,2,opt,name=targetId,proto3" json:"targetId,omitempty"`   // id of the closest row
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTableRowDeleteRequest) Reset() {
	*x = RpcBlockTableRowDeleteRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[852]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTableRowDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTableRowDeleteRequest) ProtoMessage() {}

func (x *RpcBlockTableRowDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[852]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTableRowDeleteRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockTableRowDeleteRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 21, 7, 0}
}

func (x *RpcBlockTableRowDeleteRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockTableRowDeleteRequest) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

type RpcBlockTableRowDeleteResponse struct {
	state         protoimpl.MessageState               `protogen:"open.v1"`
	Error         *RpcBlockTableRowDeleteResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent                       `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTableRowDeleteResponse) Reset() {
	*x = RpcBlockTableRowDeleteResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[853]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTableRowDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTableRowDeleteResponse) ProtoMessage() {}

func (x *RpcBlockTableRowDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[853]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTableRowDeleteResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockTableRowDeleteResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 21, 7, 1}
}

func (x *RpcBlockTableRowDeleteResponse) GetError() *RpcBlockTableRowDeleteResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcBlockTableRowDeleteResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcBlockTableRowDeleteResponseError struct {
	state         protoimpl.MessageState                  `protogen:"open.v1"`
	Code          RpcBlockTableRowDeleteResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockTableRowDeleteResponseErrorCode" json:"code,omitempty"`
	Description   string                                  `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTableRowDeleteResponseError) Reset() {
	*x = RpcBlockTableRowDeleteResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[854]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTableRowDeleteResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTableRowDeleteResponseError) ProtoMessage() {}

func (x *RpcBlockTableRowDeleteResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[854]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTableRowDeleteResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockTableRowDeleteResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 21, 7, 1, 0}
}

func (x *RpcBlockTableRowDeleteResponseError) GetCode() RpcBlockTableRowDeleteResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockTableRowDeleteResponseError_NULL
}

func (x *RpcBlockTableRowDeleteResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockTableColumnDeleteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextId     string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"` // id of the context object
	TargetId      string                 `protobuf:"bytes,2,opt,name=targetId,proto3" json:"targetId,omitempty"`   // id of the closest column
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTableColumnDeleteRequest) Reset() {
	*x = RpcBlockTableColumnDeleteRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[855]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTableColumnDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTableColumnDeleteRequest) ProtoMessage() {}

func (x *RpcBlockTableColumnDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[855]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTableColumnDeleteRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockTableColumnDeleteRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 21, 8, 0}
}

func (x *RpcBlockTableColumnDeleteRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockTableColumnDeleteRequest) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

type RpcBlockTableColumnDeleteResponse struct {
	state         protoimpl.MessageState                  `protogen:"open.v1"`
	Error         *RpcBlockTableColumnDeleteResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent                          `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTableColumnDeleteResponse) Reset() {
	*x = RpcBlockTableColumnDeleteResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[856]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTableColumnDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTableColumnDeleteResponse) ProtoMessage() {}

func (x *RpcBlockTableColumnDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[856]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTableColumnDeleteResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockTableColumnDeleteResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 21, 8, 1}
}

func (x *RpcBlockTableColumnDeleteResponse) GetError() *RpcBlockTableColumnDeleteResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcBlockTableColumnDeleteResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcBlockTableColumnDeleteResponseError struct {
	state         protoimpl.MessageState                     `protogen:"open.v1"`
	Code          RpcBlockTableColumnDeleteResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockTableColumnDeleteResponseErrorCode" json:"code,omitempty"`
	Description   string                                     `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTableColumnDeleteResponseError) Reset() {
	*x = RpcBlockTableColumnDeleteResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[857]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTableColumnDeleteResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTableColumnDeleteResponseError) ProtoMessage() {}

func (x *RpcBlockTableColumnDeleteResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[857]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTableColumnDeleteResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockTableColumnDeleteResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 21, 8, 1, 0}
}

func (x *RpcBlockTableColumnDeleteResponseError) GetCode() RpcBlockTableColumnDeleteResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockTableColumnDeleteResponseError_NULL
}

func (x *RpcBlockTableColumnDeleteResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockTableColumnMoveRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextId     string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	TargetId      string                 `protobuf:"bytes,2,opt,name=targetId,proto3" json:"targetId,omitempty"`
	DropTargetId  string                 `protobuf:"bytes,3,opt,name=dropTargetId,proto3" json:"dropTargetId,omitempty"`
	Position      model.BlockPosition    `protobuf:"varint,4,opt,name=position,proto3,enum=anytype.model.BlockPosition" json:"position,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTableColumnMoveRequest) Reset() {
	*x = RpcBlockTableColumnMoveRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[858]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTableColumnMoveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTableColumnMoveRequest) ProtoMessage() {}

func (x *RpcBlockTableColumnMoveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[858]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTableColumnMoveRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockTableColumnMoveRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 21, 9, 0}
}

func (x *RpcBlockTableColumnMoveRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockTableColumnMoveRequest) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

func (x *RpcBlockTableColumnMoveRequest) GetDropTargetId() string {
	if x != nil {
		return x.DropTargetId
	}
	return ""
}

func (x *RpcBlockTableColumnMoveRequest) GetPosition() model.BlockPosition {
	if x != nil {
		return x.Position
	}
	return model.BlockPosition(0)
}

type RpcBlockTableColumnMoveResponse struct {
	state         protoimpl.MessageState                `protogen:"open.v1"`
	Error         *RpcBlockTableColumnMoveResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent                        `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTableColumnMoveResponse) Reset() {
	*x = RpcBlockTableColumnMoveResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[859]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTableColumnMoveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTableColumnMoveResponse) ProtoMessage() {}

func (x *RpcBlockTableColumnMoveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[859]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTableColumnMoveResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockTableColumnMoveResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 21, 9, 1}
}

func (x *RpcBlockTableColumnMoveResponse) GetError() *RpcBlockTableColumnMoveResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcBlockTableColumnMoveResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcBlockTableColumnMoveResponseError struct {
	state         protoimpl.MessageState                   `protogen:"open.v1"`
	Code          RpcBlockTableColumnMoveResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockTableColumnMoveResponseErrorCode" json:"code,omitempty"`
	Description   string                                   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTableColumnMoveResponseError) Reset() {
	*x = RpcBlockTableColumnMoveResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[860]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTableColumnMoveResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTableColumnMoveResponseError) ProtoMessage() {}

func (x *RpcBlockTableColumnMoveResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[860]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTableColumnMoveResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockTableColumnMoveResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 21, 9, 1, 0}
}

func (x *RpcBlockTableColumnMoveResponseError) GetCode() RpcBlockTableColumnMoveResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockTableColumnMoveResponseError_NULL
}

func (x *RpcBlockTableColumnMoveResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockTableRowDuplicateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextId     string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"` // id of the context object
	TargetId      string                 `protobuf:"bytes,2,opt,name=targetId,proto3" json:"targetId,omitempty"`
	BlockId       string                 `protobuf:"bytes,3,opt,name=blockId,proto3" json:"blockId,omitempty"` // block to duplicate
	Position      model.BlockPosition    `protobuf:"varint,4,opt,name=position,proto3,enum=anytype.model.BlockPosition" json:"position,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTableRowDuplicateRequest) Reset() {
	*x = RpcBlockTableRowDuplicateRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[861]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTableRowDuplicateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTableRowDuplicateRequest) ProtoMessage() {}

func (x *RpcBlockTableRowDuplicateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[861]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTableRowDuplicateRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockTableRowDuplicateRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 21, 10, 0}
}

func (x *RpcBlockTableRowDuplicateRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockTableRowDuplicateRequest) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

func (x *RpcBlockTableRowDuplicateRequest) GetBlockId() string {
	if x != nil {
		return x.BlockId
	}
	return ""
}

func (x *RpcBlockTableRowDuplicateRequest) GetPosition() model.BlockPosition {
	if x != nil {
		return x.Position
	}
	return model.BlockPosition(0)
}

type RpcBlockTableRowDuplicateResponse struct {
	state         protoimpl.MessageState                  `protogen:"open.v1"`
	Error         *RpcBlockTableRowDuplicateResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent                          `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTableRowDuplicateResponse) Reset() {
	*x = RpcBlockTableRowDuplicateResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[862]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTableRowDuplicateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTableRowDuplicateResponse) ProtoMessage() {}

func (x *RpcBlockTableRowDuplicateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[862]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTableRowDuplicateResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockTableRowDuplicateResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 21, 10, 1}
}

func (x *RpcBlockTableRowDuplicateResponse) GetError() *RpcBlockTableRowDuplicateResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcBlockTableRowDuplicateResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcBlockTableRowDuplicateResponseError struct {
	state         protoimpl.MessageState                     `protogen:"open.v1"`
	Code          RpcBlockTableRowDuplicateResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockTableRowDuplicateResponseErrorCode" json:"code,omitempty"`
	Description   string                                     `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTableRowDuplicateResponseError) Reset() {
	*x = RpcBlockTableRowDuplicateResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[863]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTableRowDuplicateResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTableRowDuplicateResponseError) ProtoMessage() {}

func (x *RpcBlockTableRowDuplicateResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[863]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTableRowDuplicateResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockTableRowDuplicateResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 21, 10, 1, 0}
}

func (x *RpcBlockTableRowDuplicateResponseError) GetCode() RpcBlockTableRowDuplicateResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockTableRowDuplicateResponseError_NULL
}

func (x *RpcBlockTableRowDuplicateResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockTableColumnDuplicateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextId     string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"` // id of the context object
	TargetId      string                 `protobuf:"bytes,2,opt,name=targetId,proto3" json:"targetId,omitempty"`
	BlockId       string                 `protobuf:"bytes,3,opt,name=blockId,proto3" json:"blockId,omitempty"` // block to duplicate
	Position      model.BlockPosition    `protobuf:"varint,4,opt,name=position,proto3,enum=anytype.model.BlockPosition" json:"position,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTableColumnDuplicateRequest) Reset() {
	*x = RpcBlockTableColumnDuplicateRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[864]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTableColumnDuplicateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTableColumnDuplicateRequest) ProtoMessage() {}

func (x *RpcBlockTableColumnDuplicateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[864]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTableColumnDuplicateRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockTableColumnDuplicateRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 21, 11, 0}
}

func (x *RpcBlockTableColumnDuplicateRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockTableColumnDuplicateRequest) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

func (x *RpcBlockTableColumnDuplicateRequest) GetBlockId() string {
	if x != nil {
		return x.BlockId
	}
	return ""
}

func (x *RpcBlockTableColumnDuplicateRequest) GetPosition() model.BlockPosition {
	if x != nil {
		return x.Position
	}
	return model.BlockPosition(0)
}

type RpcBlockTableColumnDuplicateResponse struct {
	state         protoimpl.MessageState                     `protogen:"open.v1"`
	Error         *RpcBlockTableColumnDuplicateResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	BlockId       string                                     `protobuf:"bytes,2,opt,name=blockId,proto3" json:"blockId,omitempty"`
	Event         *ResponseEvent                             `protobuf:"bytes,3,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTableColumnDuplicateResponse) Reset() {
	*x = RpcBlockTableColumnDuplicateResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[865]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTableColumnDuplicateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTableColumnDuplicateResponse) ProtoMessage() {}

func (x *RpcBlockTableColumnDuplicateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[865]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTableColumnDuplicateResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockTableColumnDuplicateResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 21, 11, 1}
}

func (x *RpcBlockTableColumnDuplicateResponse) GetError() *RpcBlockTableColumnDuplicateResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcBlockTableColumnDuplicateResponse) GetBlockId() string {
	if x != nil {
		return x.BlockId
	}
	return ""
}

func (x *RpcBlockTableColumnDuplicateResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcBlockTableColumnDuplicateResponseError struct {
	state         protoimpl.MessageState                        `protogen:"open.v1"`
	Code          RpcBlockTableColumnDuplicateResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockTableColumnDuplicateResponseErrorCode" json:"code,omitempty"`
	Description   string                                        `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTableColumnDuplicateResponseError) Reset() {
	*x = RpcBlockTableColumnDuplicateResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[866]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTableColumnDuplicateResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTableColumnDuplicateResponseError) ProtoMessage() {}

func (x *RpcBlockTableColumnDuplicateResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[866]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTableColumnDuplicateResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockTableColumnDuplicateResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 21, 11, 1, 0}
}

func (x *RpcBlockTableColumnDuplicateResponseError) GetCode() RpcBlockTableColumnDuplicateResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockTableColumnDuplicateResponseError_NULL
}

func (x *RpcBlockTableColumnDuplicateResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockTableExpandRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextId     string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"` // id of the context object
	TargetId      string                 `protobuf:"bytes,2,opt,name=targetId,proto3" json:"targetId,omitempty"`
	Columns       uint32                 `protobuf:"varint,3,opt,name=columns,proto3" json:"columns,omitempty"` // number of columns to append
	Rows          uint32                 `protobuf:"varint,4,opt,name=rows,proto3" json:"rows,omitempty"`       // number of rows to append
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTableExpandRequest) Reset() {
	*x = RpcBlockTableExpandRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[867]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTableExpandRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTableExpandRequest) ProtoMessage() {}

func (x *RpcBlockTableExpandRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[867]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTableExpandRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockTableExpandRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 21, 12, 0}
}

func (x *RpcBlockTableExpandRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockTableExpandRequest) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

func (x *RpcBlockTableExpandRequest) GetColumns() uint32 {
	if x != nil {
		return x.Columns
	}
	return 0
}

func (x *RpcBlockTableExpandRequest) GetRows() uint32 {
	if x != nil {
		return x.Rows
	}
	return 0
}

type RpcBlockTableExpandResponse struct {
	state         protoimpl.MessageState            `protogen:"open.v1"`
	Error         *RpcBlockTableExpandResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent                    `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTableExpandResponse) Reset() {
	*x = RpcBlockTableExpandResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[868]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTableExpandResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTableExpandResponse) ProtoMessage() {}

func (x *RpcBlockTableExpandResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[868]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTableExpandResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockTableExpandResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 21, 12, 1}
}

func (x *RpcBlockTableExpandResponse) GetError() *RpcBlockTableExpandResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcBlockTableExpandResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcBlockTableExpandResponseError struct {
	state         protoimpl.MessageState               `protogen:"open.v1"`
	Code          RpcBlockTableExpandResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockTableExpandResponseErrorCode" json:"code,omitempty"`
	Description   string                               `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTableExpandResponseError) Reset() {
	*x = RpcBlockTableExpandResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[869]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTableExpandResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTableExpandResponseError) ProtoMessage() {}

func (x *RpcBlockTableExpandResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[869]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTableExpandResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockTableExpandResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 21, 12, 1, 0}
}

func (x *RpcBlockTableExpandResponseError) GetCode() RpcBlockTableExpandResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockTableExpandResponseError_NULL
}

func (x *RpcBlockTableExpandResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockTableSortRequest struct {
	state         protoimpl.MessageState             `protogen:"open.v1"`
	ContextId     string                             `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"` // id of the context object
	ColumnId      string                             `protobuf:"bytes,2,opt,name=columnId,proto3" json:"columnId,omitempty"`
	Type          model.BlockContentDataviewSortType `protobuf:"varint,3,opt,name=type,proto3,enum=anytype.model.BlockContentDataviewSortType" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTableSortRequest) Reset() {
	*x = RpcBlockTableSortRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[870]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTableSortRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTableSortRequest) ProtoMessage() {}

func (x *RpcBlockTableSortRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[870]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTableSortRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockTableSortRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 21, 13, 0}
}

func (x *RpcBlockTableSortRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockTableSortRequest) GetColumnId() string {
	if x != nil {
		return x.ColumnId
	}
	return ""
}

func (x *RpcBlockTableSortRequest) GetType() model.BlockContentDataviewSortType {
	if x != nil {
		return x.Type
	}
	return model.BlockContentDataviewSortType(0)
}

type RpcBlockTableSortResponse struct {
	state         protoimpl.MessageState          `protogen:"open.v1"`
	Error         *RpcBlockTableSortResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent                  `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTableSortResponse) Reset() {
	*x = RpcBlockTableSortResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[871]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTableSortResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTableSortResponse) ProtoMessage() {}

func (x *RpcBlockTableSortResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[871]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTableSortResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockTableSortResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 21, 13, 1}
}

func (x *RpcBlockTableSortResponse) GetError() *RpcBlockTableSortResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcBlockTableSortResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcBlockTableSortResponseError struct {
	state         protoimpl.MessageState             `protogen:"open.v1"`
	Code          RpcBlockTableSortResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockTableSortResponseErrorCode" json:"code,omitempty"`
	Description   string                             `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockTableSortResponseError) Reset() {
	*x = RpcBlockTableSortResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[872]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockTableSortResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockTableSortResponseError) ProtoMessage() {}

func (x *RpcBlockTableSortResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[872]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockTableSortResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockTableSortResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 21, 13, 1, 0}
}

func (x *RpcBlockTableSortResponseError) GetCode() RpcBlockTableSortResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockTableSortResponseError_NULL
}

func (x *RpcBlockTableSortResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockFileSetName struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockFileSetName) Reset() {
	*x = RpcBlockFileSetName{}
	mi := &file_pb_protos_commands_proto_msgTypes[873]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockFileSetName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockFileSetName) ProtoMessage() {}

func (x *RpcBlockFileSetName) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[873]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockFileSetName.ProtoReflect.Descriptor instead.
func (*RpcBlockFileSetName) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 22, 0}
}

type RpcBlockFileSetTargetObjectId struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockFileSetTargetObjectId) Reset() {
	*x = RpcBlockFileSetTargetObjectId{}
	mi := &file_pb_protos_commands_proto_msgTypes[874]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockFileSetTargetObjectId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockFileSetTargetObjectId) ProtoMessage() {}

func (x *RpcBlockFileSetTargetObjectId) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[874]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockFileSetTargetObjectId.ProtoReflect.Descriptor instead.
func (*RpcBlockFileSetTargetObjectId) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 22, 1}
}

type RpcBlockFileCreateAndUpload struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockFileCreateAndUpload) Reset() {
	*x = RpcBlockFileCreateAndUpload{}
	mi := &file_pb_protos_commands_proto_msgTypes[875]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockFileCreateAndUpload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockFileCreateAndUpload) ProtoMessage() {}

func (x *RpcBlockFileCreateAndUpload) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[875]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockFileCreateAndUpload.ProtoReflect.Descriptor instead.
func (*RpcBlockFileCreateAndUpload) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 22, 2}
}

type RpcBlockFileListSetStyle struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockFileListSetStyle) Reset() {
	*x = RpcBlockFileListSetStyle{}
	mi := &file_pb_protos_commands_proto_msgTypes[876]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockFileListSetStyle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockFileListSetStyle) ProtoMessage() {}

func (x *RpcBlockFileListSetStyle) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[876]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockFileListSetStyle.ProtoReflect.Descriptor instead.
func (*RpcBlockFileListSetStyle) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 22, 3}
}

type RpcBlockFileSetNameRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextId     string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	BlockId       string                 `protobuf:"bytes,2,opt,name=blockId,proto3" json:"blockId,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockFileSetNameRequest) Reset() {
	*x = RpcBlockFileSetNameRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[877]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockFileSetNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockFileSetNameRequest) ProtoMessage() {}

func (x *RpcBlockFileSetNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[877]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockFileSetNameRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockFileSetNameRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 22, 0, 0}
}

func (x *RpcBlockFileSetNameRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockFileSetNameRequest) GetBlockId() string {
	if x != nil {
		return x.BlockId
	}
	return ""
}

func (x *RpcBlockFileSetNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type RpcBlockFileSetNameResponse struct {
	state         protoimpl.MessageState            `protogen:"open.v1"`
	Error         *RpcBlockFileSetNameResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent                    `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockFileSetNameResponse) Reset() {
	*x = RpcBlockFileSetNameResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[878]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockFileSetNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockFileSetNameResponse) ProtoMessage() {}

func (x *RpcBlockFileSetNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[878]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockFileSetNameResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockFileSetNameResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 22, 0, 1}
}

func (x *RpcBlockFileSetNameResponse) GetError() *RpcBlockFileSetNameResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcBlockFileSetNameResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcBlockFileSetNameResponseError struct {
	state         protoimpl.MessageState               `protogen:"open.v1"`
	Code          RpcBlockFileSetNameResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockFileSetNameResponseErrorCode" json:"code,omitempty"`
	Description   string                               `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockFileSetNameResponseError) Reset() {
	*x = RpcBlockFileSetNameResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[879]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockFileSetNameResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockFileSetNameResponseError) ProtoMessage() {}

func (x *RpcBlockFileSetNameResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[879]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockFileSetNameResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockFileSetNameResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 22, 0, 1, 0}
}

func (x *RpcBlockFileSetNameResponseError) GetCode() RpcBlockFileSetNameResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockFileSetNameResponseError_NULL
}

func (x *RpcBlockFileSetNameResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockFileSetTargetObjectIdRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextId     string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	BlockId       string                 `protobuf:"bytes,2,opt,name=blockId,proto3" json:"blockId,omitempty"`
	ObjectId      string                 `protobuf:"bytes,3,opt,name=objectId,proto3" json:"objectId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockFileSetTargetObjectIdRequest) Reset() {
	*x = RpcBlockFileSetTargetObjectIdRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[880]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockFileSetTargetObjectIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockFileSetTargetObjectIdRequest) ProtoMessage() {}

func (x *RpcBlockFileSetTargetObjectIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[880]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockFileSetTargetObjectIdRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockFileSetTargetObjectIdRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 22, 1, 0}
}

func (x *RpcBlockFileSetTargetObjectIdRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockFileSetTargetObjectIdRequest) GetBlockId() string {
	if x != nil {
		return x.BlockId
	}
	return ""
}

func (x *RpcBlockFileSetTargetObjectIdRequest) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

type RpcBlockFileSetTargetObjectIdResponse struct {
	state         protoimpl.MessageState                      `protogen:"open.v1"`
	Error         *RpcBlockFileSetTargetObjectIdResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent                              `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockFileSetTargetObjectIdResponse) Reset() {
	*x = RpcBlockFileSetTargetObjectIdResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[881]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockFileSetTargetObjectIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockFileSetTargetObjectIdResponse) ProtoMessage() {}

func (x *RpcBlockFileSetTargetObjectIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[881]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockFileSetTargetObjectIdResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockFileSetTargetObjectIdResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 22, 1, 1}
}

func (x *RpcBlockFileSetTargetObjectIdResponse) GetError() *RpcBlockFileSetTargetObjectIdResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcBlockFileSetTargetObjectIdResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcBlockFileSetTargetObjectIdResponseError struct {
	state         protoimpl.MessageState                         `protogen:"open.v1"`
	Code          RpcBlockFileSetTargetObjectIdResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockFileSetTargetObjectIdResponseErrorCode" json:"code,omitempty"`
	Description   string                                         `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockFileSetTargetObjectIdResponseError) Reset() {
	*x = RpcBlockFileSetTargetObjectIdResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[882]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockFileSetTargetObjectIdResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockFileSetTargetObjectIdResponseError) ProtoMessage() {}

func (x *RpcBlockFileSetTargetObjectIdResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[882]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockFileSetTargetObjectIdResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockFileSetTargetObjectIdResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 22, 1, 1, 0}
}

func (x *RpcBlockFileSetTargetObjectIdResponseError) GetCode() RpcBlockFileSetTargetObjectIdResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockFileSetTargetObjectIdResponseError_NULL
}

func (x *RpcBlockFileSetTargetObjectIdResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockFileCreateAndUploadRequest struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	ContextId     string                     `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	TargetId      string                     `protobuf:"bytes,2,opt,name=targetId,proto3" json:"targetId,omitempty"`
	Position      model.BlockPosition        `protobuf:"varint,3,opt,name=position,proto3,enum=anytype.model.BlockPosition" json:"position,omitempty"`
	Url           string                     `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
	LocalPath     string                     `protobuf:"bytes,5,opt,name=localPath,proto3" json:"localPath,omitempty"`
	FileType      model.BlockContentFileType `protobuf:"varint,6,opt,name=fileType,proto3,enum=anytype.model.BlockContentFileType" json:"fileType,omitempty"`
	ImageKind     model.ImageKind            `protobuf:"varint,7,opt,name=imageKind,proto3,enum=anytype.model.ImageKind" json:"imageKind,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockFileCreateAndUploadRequest) Reset() {
	*x = RpcBlockFileCreateAndUploadRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[883]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockFileCreateAndUploadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockFileCreateAndUploadRequest) ProtoMessage() {}

func (x *RpcBlockFileCreateAndUploadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[883]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockFileCreateAndUploadRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockFileCreateAndUploadRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 22, 2, 0}
}

func (x *RpcBlockFileCreateAndUploadRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockFileCreateAndUploadRequest) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

func (x *RpcBlockFileCreateAndUploadRequest) GetPosition() model.BlockPosition {
	if x != nil {
		return x.Position
	}
	return model.BlockPosition(0)
}

func (x *RpcBlockFileCreateAndUploadRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *RpcBlockFileCreateAndUploadRequest) GetLocalPath() string {
	if x != nil {
		return x.LocalPath
	}
	return ""
}

func (x *RpcBlockFileCreateAndUploadRequest) GetFileType() model.BlockContentFileType {
	if x != nil {
		return x.FileType
	}
	return model.BlockContentFileType(0)
}

func (x *RpcBlockFileCreateAndUploadRequest) GetImageKind() model.ImageKind {
	if x != nil {
		return x.ImageKind
	}
	return model.ImageKind(0)
}

type RpcBlockFileCreateAndUploadResponse struct {
	state         protoimpl.MessageState                    `protogen:"open.v1"`
	Error         *RpcBlockFileCreateAndUploadResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	BlockId       string                                    `protobuf:"bytes,2,opt,name=blockId,proto3" json:"blockId,omitempty"`
	Event         *ResponseEvent                            `protobuf:"bytes,3,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockFileCreateAndUploadResponse) Reset() {
	*x = RpcBlockFileCreateAndUploadResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[884]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockFileCreateAndUploadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockFileCreateAndUploadResponse) ProtoMessage() {}

func (x *RpcBlockFileCreateAndUploadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[884]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockFileCreateAndUploadResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockFileCreateAndUploadResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 22, 2, 1}
}

func (x *RpcBlockFileCreateAndUploadResponse) GetError() *RpcBlockFileCreateAndUploadResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcBlockFileCreateAndUploadResponse) GetBlockId() string {
	if x != nil {
		return x.BlockId
	}
	return ""
}

func (x *RpcBlockFileCreateAndUploadResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcBlockFileCreateAndUploadResponseError struct {
	state         protoimpl.MessageState                       `protogen:"open.v1"`
	Code          RpcBlockFileCreateAndUploadResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockFileCreateAndUploadResponseErrorCode" json:"code,omitempty"`
	Description   string                                       `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockFileCreateAndUploadResponseError) Reset() {
	*x = RpcBlockFileCreateAndUploadResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[885]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockFileCreateAndUploadResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockFileCreateAndUploadResponseError) ProtoMessage() {}

func (x *RpcBlockFileCreateAndUploadResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[885]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockFileCreateAndUploadResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockFileCreateAndUploadResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 22, 2, 1, 0}
}

func (x *RpcBlockFileCreateAndUploadResponseError) GetCode() RpcBlockFileCreateAndUploadResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockFileCreateAndUploadResponseError_NULL
}

func (x *RpcBlockFileCreateAndUploadResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockFileListSetStyleRequest struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	ContextId     string                      `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	BlockIds      []string                    `protobuf:"bytes,2,rep,name=blockIds,proto3" json:"blockIds,omitempty"`
	Style         model.BlockContentFileStyle `protobuf:"varint,3,opt,name=style,proto3,enum=anytype.model.BlockContentFileStyle" json:"style,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockFileListSetStyleRequest) Reset() {
	*x = RpcBlockFileListSetStyleRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[886]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockFileListSetStyleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockFileListSetStyleRequest) ProtoMessage() {}

func (x *RpcBlockFileListSetStyleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[886]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockFileListSetStyleRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockFileListSetStyleRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 22, 3, 0}
}

func (x *RpcBlockFileListSetStyleRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockFileListSetStyleRequest) GetBlockIds() []string {
	if x != nil {
		return x.BlockIds
	}
	return nil
}

func (x *RpcBlockFileListSetStyleRequest) GetStyle() model.BlockContentFileStyle {
	if x != nil {
		return x.Style
	}
	return model.BlockContentFileStyle(0)
}

type RpcBlockFileListSetStyleResponse struct {
	state         protoimpl.MessageState                 `protogen:"open.v1"`
	Error         *RpcBlockFileListSetStyleResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent                         `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockFileListSetStyleResponse) Reset() {
	*x = RpcBlockFileListSetStyleResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[887]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockFileListSetStyleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockFileListSetStyleResponse) ProtoMessage() {}

func (x *RpcBlockFileListSetStyleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[887]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockFileListSetStyleResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockFileListSetStyleResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 22, 3, 1}
}

func (x *RpcBlockFileListSetStyleResponse) GetError() *RpcBlockFileListSetStyleResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcBlockFileListSetStyleResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcBlockFileListSetStyleResponseError struct {
	state         protoimpl.MessageState                    `protogen:"open.v1"`
	Code          RpcBlockFileListSetStyleResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockFileListSetStyleResponseErrorCode" json:"code,omitempty"`
	Description   string                                    `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockFileListSetStyleResponseError) Reset() {
	*x = RpcBlockFileListSetStyleResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[888]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockFileListSetStyleResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockFileListSetStyleResponseError) ProtoMessage() {}

func (x *RpcBlockFileListSetStyleResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[888]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockFileListSetStyleResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockFileListSetStyleResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 22, 3, 1, 0}
}

func (x *RpcBlockFileListSetStyleResponseError) GetCode() RpcBlockFileListSetStyleResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockFileListSetStyleResponseError_NULL
}

func (x *RpcBlockFileListSetStyleResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockImageSetName struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockImageSetName) Reset() {
	*x = RpcBlockImageSetName{}
	mi := &file_pb_protos_commands_proto_msgTypes[889]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockImageSetName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockImageSetName) ProtoMessage() {}

func (x *RpcBlockImageSetName) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[889]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockImageSetName.ProtoReflect.Descriptor instead.
func (*RpcBlockImageSetName) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 23, 0}
}

type RpcBlockImageSetWidth struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockImageSetWidth) Reset() {
	*x = RpcBlockImageSetWidth{}
	mi := &file_pb_protos_commands_proto_msgTypes[890]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockImageSetWidth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockImageSetWidth) ProtoMessage() {}

func (x *RpcBlockImageSetWidth) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[890]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockImageSetWidth.ProtoReflect.Descriptor instead.
func (*RpcBlockImageSetWidth) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 23, 1}
}

type RpcBlockImageSetNameRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextId     string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	BlockId       string                 `protobuf:"bytes,2,opt,name=blockId,proto3" json:"blockId,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockImageSetNameRequest) Reset() {
	*x = RpcBlockImageSetNameRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[891]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockImageSetNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockImageSetNameRequest) ProtoMessage() {}

func (x *RpcBlockImageSetNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[891]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockImageSetNameRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockImageSetNameRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 23, 0, 0}
}

func (x *RpcBlockImageSetNameRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockImageSetNameRequest) GetBlockId() string {
	if x != nil {
		return x.BlockId
	}
	return ""
}

func (x *RpcBlockImageSetNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type RpcBlockImageSetNameResponse struct {
	state         protoimpl.MessageState             `protogen:"open.v1"`
	Error         *RpcBlockImageSetNameResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockImageSetNameResponse) Reset() {
	*x = RpcBlockImageSetNameResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[892]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockImageSetNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockImageSetNameResponse) ProtoMessage() {}

func (x *RpcBlockImageSetNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[892]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockImageSetNameResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockImageSetNameResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 23, 0, 1}
}

func (x *RpcBlockImageSetNameResponse) GetError() *RpcBlockImageSetNameResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

type RpcBlockImageSetNameResponseError struct {
	state         protoimpl.MessageState                `protogen:"open.v1"`
	Code          RpcBlockImageSetNameResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockImageSetNameResponseErrorCode" json:"code,omitempty"`
	Description   string                                `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockImageSetNameResponseError) Reset() {
	*x = RpcBlockImageSetNameResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[893]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockImageSetNameResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockImageSetNameResponseError) ProtoMessage() {}

func (x *RpcBlockImageSetNameResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[893]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockImageSetNameResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockImageSetNameResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 23, 0, 1, 0}
}

func (x *RpcBlockImageSetNameResponseError) GetCode() RpcBlockImageSetNameResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockImageSetNameResponseError_NULL
}

func (x *RpcBlockImageSetNameResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockImageSetWidthRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextId     string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	BlockId       string                 `protobuf:"bytes,2,opt,name=blockId,proto3" json:"blockId,omitempty"`
	Width         int32                  `protobuf:"varint,3,opt,name=width,proto3" json:"width,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockImageSetWidthRequest) Reset() {
	*x = RpcBlockImageSetWidthRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[894]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockImageSetWidthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockImageSetWidthRequest) ProtoMessage() {}

func (x *RpcBlockImageSetWidthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[894]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockImageSetWidthRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockImageSetWidthRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 23, 1, 0}
}

func (x *RpcBlockImageSetWidthRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockImageSetWidthRequest) GetBlockId() string {
	if x != nil {
		return x.BlockId
	}
	return ""
}

func (x *RpcBlockImageSetWidthRequest) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

type RpcBlockImageSetWidthResponse struct {
	state         protoimpl.MessageState              `protogen:"open.v1"`
	Error         *RpcBlockImageSetWidthResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockImageSetWidthResponse) Reset() {
	*x = RpcBlockImageSetWidthResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[895]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockImageSetWidthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockImageSetWidthResponse) ProtoMessage() {}

func (x *RpcBlockImageSetWidthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[895]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockImageSetWidthResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockImageSetWidthResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 23, 1, 1}
}

func (x *RpcBlockImageSetWidthResponse) GetError() *RpcBlockImageSetWidthResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

type RpcBlockImageSetWidthResponseError struct {
	state         protoimpl.MessageState                 `protogen:"open.v1"`
	Code          RpcBlockImageSetWidthResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockImageSetWidthResponseErrorCode" json:"code,omitempty"`
	Description   string                                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockImageSetWidthResponseError) Reset() {
	*x = RpcBlockImageSetWidthResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[896]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockImageSetWidthResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockImageSetWidthResponseError) ProtoMessage() {}

func (x *RpcBlockImageSetWidthResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[896]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockImageSetWidthResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockImageSetWidthResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 23, 1, 1, 0}
}

func (x *RpcBlockImageSetWidthResponseError) GetCode() RpcBlockImageSetWidthResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockImageSetWidthResponseError_NULL
}

func (x *RpcBlockImageSetWidthResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockVideoSetName struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockVideoSetName) Reset() {
	*x = RpcBlockVideoSetName{}
	mi := &file_pb_protos_commands_proto_msgTypes[897]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockVideoSetName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockVideoSetName) ProtoMessage() {}

func (x *RpcBlockVideoSetName) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[897]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockVideoSetName.ProtoReflect.Descriptor instead.
func (*RpcBlockVideoSetName) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 24, 0}
}

type RpcBlockVideoSetWidth struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockVideoSetWidth) Reset() {
	*x = RpcBlockVideoSetWidth{}
	mi := &file_pb_protos_commands_proto_msgTypes[898]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockVideoSetWidth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockVideoSetWidth) ProtoMessage() {}

func (x *RpcBlockVideoSetWidth) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[898]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockVideoSetWidth.ProtoReflect.Descriptor instead.
func (*RpcBlockVideoSetWidth) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 24, 1}
}

type RpcBlockVideoSetNameRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextId     string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	BlockId       string                 `protobuf:"bytes,2,opt,name=blockId,proto3" json:"blockId,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockVideoSetNameRequest) Reset() {
	*x = RpcBlockVideoSetNameRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[899]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockVideoSetNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockVideoSetNameRequest) ProtoMessage() {}

func (x *RpcBlockVideoSetNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[899]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockVideoSetNameRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockVideoSetNameRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 24, 0, 0}
}

func (x *RpcBlockVideoSetNameRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockVideoSetNameRequest) GetBlockId() string {
	if x != nil {
		return x.BlockId
	}
	return ""
}

func (x *RpcBlockVideoSetNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type RpcBlockVideoSetNameResponse struct {
	state         protoimpl.MessageState             `protogen:"open.v1"`
	Error         *RpcBlockVideoSetNameResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockVideoSetNameResponse) Reset() {
	*x = RpcBlockVideoSetNameResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[900]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockVideoSetNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockVideoSetNameResponse) ProtoMessage() {}

func (x *RpcBlockVideoSetNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[900]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockVideoSetNameResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockVideoSetNameResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 24, 0, 1}
}

func (x *RpcBlockVideoSetNameResponse) GetError() *RpcBlockVideoSetNameResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

type RpcBlockVideoSetNameResponseError struct {
	state         protoimpl.MessageState                `protogen:"open.v1"`
	Code          RpcBlockVideoSetNameResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockVideoSetNameResponseErrorCode" json:"code,omitempty"`
	Description   string                                `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockVideoSetNameResponseError) Reset() {
	*x = RpcBlockVideoSetNameResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[901]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockVideoSetNameResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockVideoSetNameResponseError) ProtoMessage() {}

func (x *RpcBlockVideoSetNameResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[901]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockVideoSetNameResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockVideoSetNameResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 24, 0, 1, 0}
}

func (x *RpcBlockVideoSetNameResponseError) GetCode() RpcBlockVideoSetNameResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockVideoSetNameResponseError_NULL
}

func (x *RpcBlockVideoSetNameResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockVideoSetWidthRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextId     string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	BlockId       string                 `protobuf:"bytes,2,opt,name=blockId,proto3" json:"blockId,omitempty"`
	Width         int32                  `protobuf:"varint,3,opt,name=width,proto3" json:"width,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockVideoSetWidthRequest) Reset() {
	*x = RpcBlockVideoSetWidthRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[902]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockVideoSetWidthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockVideoSetWidthRequest) ProtoMessage() {}

func (x *RpcBlockVideoSetWidthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[902]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockVideoSetWidthRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockVideoSetWidthRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 24, 1, 0}
}

func (x *RpcBlockVideoSetWidthRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockVideoSetWidthRequest) GetBlockId() string {
	if x != nil {
		return x.BlockId
	}
	return ""
}

func (x *RpcBlockVideoSetWidthRequest) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

type RpcBlockVideoSetWidthResponse struct {
	state         protoimpl.MessageState              `protogen:"open.v1"`
	Error         *RpcBlockVideoSetWidthResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockVideoSetWidthResponse) Reset() {
	*x = RpcBlockVideoSetWidthResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[903]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockVideoSetWidthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockVideoSetWidthResponse) ProtoMessage() {}

func (x *RpcBlockVideoSetWidthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[903]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockVideoSetWidthResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockVideoSetWidthResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 24, 1, 1}
}

func (x *RpcBlockVideoSetWidthResponse) GetError() *RpcBlockVideoSetWidthResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

type RpcBlockVideoSetWidthResponseError struct {
	state         protoimpl.MessageState                 `protogen:"open.v1"`
	Code          RpcBlockVideoSetWidthResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockVideoSetWidthResponseErrorCode" json:"code,omitempty"`
	Description   string                                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockVideoSetWidthResponseError) Reset() {
	*x = RpcBlockVideoSetWidthResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[904]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockVideoSetWidthResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockVideoSetWidthResponseError) ProtoMessage() {}

func (x *RpcBlockVideoSetWidthResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[904]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockVideoSetWidthResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockVideoSetWidthResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 24, 1, 1, 0}
}

func (x *RpcBlockVideoSetWidthResponseError) GetCode() RpcBlockVideoSetWidthResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockVideoSetWidthResponseError_NULL
}

func (x *RpcBlockVideoSetWidthResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockLinkCreateWithObject struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockLinkCreateWithObject) Reset() {
	*x = RpcBlockLinkCreateWithObject{}
	mi := &file_pb_protos_commands_proto_msgTypes[905]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockLinkCreateWithObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockLinkCreateWithObject) ProtoMessage() {}

func (x *RpcBlockLinkCreateWithObject) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[905]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockLinkCreateWithObject.ProtoReflect.Descriptor instead.
func (*RpcBlockLinkCreateWithObject) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 25, 0}
}

type RpcBlockLinkListSetAppearance struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockLinkListSetAppearance) Reset() {
	*x = RpcBlockLinkListSetAppearance{}
	mi := &file_pb_protos_commands_proto_msgTypes[906]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockLinkListSetAppearance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockLinkListSetAppearance) ProtoMessage() {}

func (x *RpcBlockLinkListSetAppearance) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[906]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockLinkListSetAppearance.ProtoReflect.Descriptor instead.
func (*RpcBlockLinkListSetAppearance) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 25, 1}
}

type RpcBlockLinkCreateWithObjectRequest struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	ContextId           string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`   // id of the context object
	Details             *structpb.Struct       `protobuf:"bytes,3,opt,name=details,proto3" json:"details,omitempty"`       // new object details
	TemplateId          string                 `protobuf:"bytes,5,opt,name=templateId,proto3" json:"templateId,omitempty"` // optional template id for creating from template
	InternalFlags       []*model.InternalFlag  `protobuf:"bytes,7,rep,name=internalFlags,proto3" json:"internalFlags,omitempty"`
	SpaceId             string                 `protobuf:"bytes,8,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	ObjectTypeUniqueKey string                 `protobuf:"bytes,9,opt,name=objectTypeUniqueKey,proto3" json:"objectTypeUniqueKey,omitempty"`
	Block               *model.Block           `protobuf:"bytes,10,opt,name=block,proto3" json:"block,omitempty"`
	// link block params
	TargetId      string              `protobuf:"bytes,2,opt,name=targetId,proto3" json:"targetId,omitempty"` // id of the closest simple block
	Position      model.BlockPosition `protobuf:"varint,4,opt,name=position,proto3,enum=anytype.model.BlockPosition" json:"position,omitempty"`
	Fields        *structpb.Struct    `protobuf:"bytes,6,opt,name=fields,proto3" json:"fields,omitempty"` // deprecated link block fields
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockLinkCreateWithObjectRequest) Reset() {
	*x = RpcBlockLinkCreateWithObjectRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[907]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockLinkCreateWithObjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockLinkCreateWithObjectRequest) ProtoMessage() {}

func (x *RpcBlockLinkCreateWithObjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[907]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockLinkCreateWithObjectRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockLinkCreateWithObjectRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 25, 0, 0}
}

func (x *RpcBlockLinkCreateWithObjectRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockLinkCreateWithObjectRequest) GetDetails() *structpb.Struct {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *RpcBlockLinkCreateWithObjectRequest) GetTemplateId() string {
	if x != nil {
		return x.TemplateId
	}
	return ""
}

func (x *RpcBlockLinkCreateWithObjectRequest) GetInternalFlags() []*model.InternalFlag {
	if x != nil {
		return x.InternalFlags
	}
	return nil
}

func (x *RpcBlockLinkCreateWithObjectRequest) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *RpcBlockLinkCreateWithObjectRequest) GetObjectTypeUniqueKey() string {
	if x != nil {
		return x.ObjectTypeUniqueKey
	}
	return ""
}

func (x *RpcBlockLinkCreateWithObjectRequest) GetBlock() *model.Block {
	if x != nil {
		return x.Block
	}
	return nil
}

func (x *RpcBlockLinkCreateWithObjectRequest) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

func (x *RpcBlockLinkCreateWithObjectRequest) GetPosition() model.BlockPosition {
	if x != nil {
		return x.Position
	}
	return model.BlockPosition(0)
}

func (x *RpcBlockLinkCreateWithObjectRequest) GetFields() *structpb.Struct {
	if x != nil {
		return x.Fields
	}
	return nil
}

type RpcBlockLinkCreateWithObjectResponse struct {
	state         protoimpl.MessageState                     `protogen:"open.v1"`
	Error         *RpcBlockLinkCreateWithObjectResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	BlockId       string                                     `protobuf:"bytes,2,opt,name=blockId,proto3" json:"blockId,omitempty"`
	TargetId      string                                     `protobuf:"bytes,3,opt,name=targetId,proto3" json:"targetId,omitempty"`
	Event         *ResponseEvent                             `protobuf:"bytes,4,opt,name=event,proto3" json:"event,omitempty"`
	Details       *structpb.Struct                           `protobuf:"bytes,5,opt,name=details,proto3" json:"details,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockLinkCreateWithObjectResponse) Reset() {
	*x = RpcBlockLinkCreateWithObjectResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[908]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockLinkCreateWithObjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockLinkCreateWithObjectResponse) ProtoMessage() {}

func (x *RpcBlockLinkCreateWithObjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[908]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockLinkCreateWithObjectResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockLinkCreateWithObjectResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 25, 0, 1}
}

func (x *RpcBlockLinkCreateWithObjectResponse) GetError() *RpcBlockLinkCreateWithObjectResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcBlockLinkCreateWithObjectResponse) GetBlockId() string {
	if x != nil {
		return x.BlockId
	}
	return ""
}

func (x *RpcBlockLinkCreateWithObjectResponse) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

func (x *RpcBlockLinkCreateWithObjectResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

func (x *RpcBlockLinkCreateWithObjectResponse) GetDetails() *structpb.Struct {
	if x != nil {
		return x.Details
	}
	return nil
}

type RpcBlockLinkCreateWithObjectResponseError struct {
	state         protoimpl.MessageState                        `protogen:"open.v1"`
	Code          RpcBlockLinkCreateWithObjectResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockLinkCreateWithObjectResponseErrorCode" json:"code,omitempty"`
	Description   string                                        `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockLinkCreateWithObjectResponseError) Reset() {
	*x = RpcBlockLinkCreateWithObjectResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[909]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockLinkCreateWithObjectResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockLinkCreateWithObjectResponseError) ProtoMessage() {}

func (x *RpcBlockLinkCreateWithObjectResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[909]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockLinkCreateWithObjectResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockLinkCreateWithObjectResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 25, 0, 1, 0}
}

func (x *RpcBlockLinkCreateWithObjectResponseError) GetCode() RpcBlockLinkCreateWithObjectResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockLinkCreateWithObjectResponseError_NULL
}

func (x *RpcBlockLinkCreateWithObjectResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockLinkListSetAppearanceRequest struct {
	state         protoimpl.MessageState            `protogen:"open.v1"`
	ContextId     string                            `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	BlockIds      []string                          `protobuf:"bytes,2,rep,name=blockIds,proto3" json:"blockIds,omitempty"`
	IconSize      model.BlockContentLinkIconSize    `protobuf:"varint,4,opt,name=iconSize,proto3,enum=anytype.model.BlockContentLinkIconSize" json:"iconSize,omitempty"`
	CardStyle     model.BlockContentLinkCardStyle   `protobuf:"varint,5,opt,name=cardStyle,proto3,enum=anytype.model.BlockContentLinkCardStyle" json:"cardStyle,omitempty"`
	Description   model.BlockContentLinkDescription `protobuf:"varint,6,opt,name=description,proto3,enum=anytype.model.BlockContentLinkDescription" json:"description,omitempty"`
	Relations     []string                          `protobuf:"bytes,7,rep,name=relations,proto3" json:"relations,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockLinkListSetAppearanceRequest) Reset() {
	*x = RpcBlockLinkListSetAppearanceRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[910]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockLinkListSetAppearanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockLinkListSetAppearanceRequest) ProtoMessage() {}

func (x *RpcBlockLinkListSetAppearanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[910]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockLinkListSetAppearanceRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockLinkListSetAppearanceRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 25, 1, 0}
}

func (x *RpcBlockLinkListSetAppearanceRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockLinkListSetAppearanceRequest) GetBlockIds() []string {
	if x != nil {
		return x.BlockIds
	}
	return nil
}

func (x *RpcBlockLinkListSetAppearanceRequest) GetIconSize() model.BlockContentLinkIconSize {
	if x != nil {
		return x.IconSize
	}
	return model.BlockContentLinkIconSize(0)
}

func (x *RpcBlockLinkListSetAppearanceRequest) GetCardStyle() model.BlockContentLinkCardStyle {
	if x != nil {
		return x.CardStyle
	}
	return model.BlockContentLinkCardStyle(0)
}

func (x *RpcBlockLinkListSetAppearanceRequest) GetDescription() model.BlockContentLinkDescription {
	if x != nil {
		return x.Description
	}
	return model.BlockContentLinkDescription(0)
}

func (x *RpcBlockLinkListSetAppearanceRequest) GetRelations() []string {
	if x != nil {
		return x.Relations
	}
	return nil
}

type RpcBlockLinkListSetAppearanceResponse struct {
	state         protoimpl.MessageState                      `protogen:"open.v1"`
	Error         *RpcBlockLinkListSetAppearanceResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent                              `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockLinkListSetAppearanceResponse) Reset() {
	*x = RpcBlockLinkListSetAppearanceResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[911]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockLinkListSetAppearanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockLinkListSetAppearanceResponse) ProtoMessage() {}

func (x *RpcBlockLinkListSetAppearanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[911]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockLinkListSetAppearanceResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockLinkListSetAppearanceResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 25, 1, 1}
}

func (x *RpcBlockLinkListSetAppearanceResponse) GetError() *RpcBlockLinkListSetAppearanceResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcBlockLinkListSetAppearanceResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcBlockLinkListSetAppearanceResponseError struct {
	state         protoimpl.MessageState                         `protogen:"open.v1"`
	Code          RpcBlockLinkListSetAppearanceResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockLinkListSetAppearanceResponseErrorCode" json:"code,omitempty"`
	Description   string                                         `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockLinkListSetAppearanceResponseError) Reset() {
	*x = RpcBlockLinkListSetAppearanceResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[912]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockLinkListSetAppearanceResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockLinkListSetAppearanceResponseError) ProtoMessage() {}

func (x *RpcBlockLinkListSetAppearanceResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[912]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockLinkListSetAppearanceResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockLinkListSetAppearanceResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 25, 1, 1, 0}
}

func (x *RpcBlockLinkListSetAppearanceResponseError) GetCode() RpcBlockLinkListSetAppearanceResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockLinkListSetAppearanceResponseError_NULL
}

func (x *RpcBlockLinkListSetAppearanceResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockRelationSetKey struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockRelationSetKey) Reset() {
	*x = RpcBlockRelationSetKey{}
	mi := &file_pb_protos_commands_proto_msgTypes[913]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockRelationSetKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockRelationSetKey) ProtoMessage() {}

func (x *RpcBlockRelationSetKey) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[913]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockRelationSetKey.ProtoReflect.Descriptor instead.
func (*RpcBlockRelationSetKey) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 26, 0}
}

type RpcBlockRelationAdd struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockRelationAdd) Reset() {
	*x = RpcBlockRelationAdd{}
	mi := &file_pb_protos_commands_proto_msgTypes[914]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockRelationAdd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockRelationAdd) ProtoMessage() {}

func (x *RpcBlockRelationAdd) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[914]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockRelationAdd.ProtoReflect.Descriptor instead.
func (*RpcBlockRelationAdd) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 26, 1}
}

type RpcBlockRelationSetKeyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextId     string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	BlockId       string                 `protobuf:"bytes,2,opt,name=blockId,proto3" json:"blockId,omitempty"`
	Key           string                 `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockRelationSetKeyRequest) Reset() {
	*x = RpcBlockRelationSetKeyRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[915]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockRelationSetKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockRelationSetKeyRequest) ProtoMessage() {}

func (x *RpcBlockRelationSetKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[915]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockRelationSetKeyRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockRelationSetKeyRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 26, 0, 0}
}

func (x *RpcBlockRelationSetKeyRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockRelationSetKeyRequest) GetBlockId() string {
	if x != nil {
		return x.BlockId
	}
	return ""
}

func (x *RpcBlockRelationSetKeyRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type RpcBlockRelationSetKeyResponse struct {
	state         protoimpl.MessageState               `protogen:"open.v1"`
	Error         *RpcBlockRelationSetKeyResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent                       `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockRelationSetKeyResponse) Reset() {
	*x = RpcBlockRelationSetKeyResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[916]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockRelationSetKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockRelationSetKeyResponse) ProtoMessage() {}

func (x *RpcBlockRelationSetKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[916]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockRelationSetKeyResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockRelationSetKeyResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 26, 0, 1}
}

func (x *RpcBlockRelationSetKeyResponse) GetError() *RpcBlockRelationSetKeyResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcBlockRelationSetKeyResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcBlockRelationSetKeyResponseError struct {
	state         protoimpl.MessageState                  `protogen:"open.v1"`
	Code          RpcBlockRelationSetKeyResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockRelationSetKeyResponseErrorCode" json:"code,omitempty"`
	Description   string                                  `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockRelationSetKeyResponseError) Reset() {
	*x = RpcBlockRelationSetKeyResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[917]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockRelationSetKeyResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockRelationSetKeyResponseError) ProtoMessage() {}

func (x *RpcBlockRelationSetKeyResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[917]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockRelationSetKeyResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockRelationSetKeyResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 26, 0, 1, 0}
}

func (x *RpcBlockRelationSetKeyResponseError) GetCode() RpcBlockRelationSetKeyResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockRelationSetKeyResponseError_NULL
}

func (x *RpcBlockRelationSetKeyResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockRelationAddRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextId     string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	BlockId       string                 `protobuf:"bytes,2,opt,name=blockId,proto3" json:"blockId,omitempty"`
	RelationKey   string                 `protobuf:"bytes,3,opt,name=relationKey,proto3" json:"relationKey,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockRelationAddRequest) Reset() {
	*x = RpcBlockRelationAddRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[918]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockRelationAddRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockRelationAddRequest) ProtoMessage() {}

func (x *RpcBlockRelationAddRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[918]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockRelationAddRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockRelationAddRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 26, 1, 0}
}

func (x *RpcBlockRelationAddRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockRelationAddRequest) GetBlockId() string {
	if x != nil {
		return x.BlockId
	}
	return ""
}

func (x *RpcBlockRelationAddRequest) GetRelationKey() string {
	if x != nil {
		return x.RelationKey
	}
	return ""
}

type RpcBlockRelationAddResponse struct {
	state         protoimpl.MessageState            `protogen:"open.v1"`
	Error         *RpcBlockRelationAddResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent                    `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockRelationAddResponse) Reset() {
	*x = RpcBlockRelationAddResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[919]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockRelationAddResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockRelationAddResponse) ProtoMessage() {}

func (x *RpcBlockRelationAddResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[919]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockRelationAddResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockRelationAddResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 26, 1, 1}
}

func (x *RpcBlockRelationAddResponse) GetError() *RpcBlockRelationAddResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcBlockRelationAddResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcBlockRelationAddResponseError struct {
	state         protoimpl.MessageState               `protogen:"open.v1"`
	Code          RpcBlockRelationAddResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockRelationAddResponseErrorCode" json:"code,omitempty"`
	Description   string                               `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockRelationAddResponseError) Reset() {
	*x = RpcBlockRelationAddResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[920]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockRelationAddResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockRelationAddResponseError) ProtoMessage() {}

func (x *RpcBlockRelationAddResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[920]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockRelationAddResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockRelationAddResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 26, 1, 1, 0}
}

func (x *RpcBlockRelationAddResponseError) GetCode() RpcBlockRelationAddResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockRelationAddResponseError_NULL
}

func (x *RpcBlockRelationAddResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockBookmarkFetch struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockBookmarkFetch) Reset() {
	*x = RpcBlockBookmarkFetch{}
	mi := &file_pb_protos_commands_proto_msgTypes[921]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockBookmarkFetch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockBookmarkFetch) ProtoMessage() {}

func (x *RpcBlockBookmarkFetch) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[921]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockBookmarkFetch.ProtoReflect.Descriptor instead.
func (*RpcBlockBookmarkFetch) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 27, 0}
}

type RpcBlockBookmarkCreateAndFetch struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockBookmarkCreateAndFetch) Reset() {
	*x = RpcBlockBookmarkCreateAndFetch{}
	mi := &file_pb_protos_commands_proto_msgTypes[922]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockBookmarkCreateAndFetch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockBookmarkCreateAndFetch) ProtoMessage() {}

func (x *RpcBlockBookmarkCreateAndFetch) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[922]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockBookmarkCreateAndFetch.ProtoReflect.Descriptor instead.
func (*RpcBlockBookmarkCreateAndFetch) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 27, 1}
}

type RpcBlockBookmarkFetchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextId     string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	BlockId       string                 `protobuf:"bytes,2,opt,name=blockId,proto3" json:"blockId,omitempty"`
	Url           string                 `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	TemplateId    string                 `protobuf:"bytes,4,opt,name=templateId,proto3" json:"templateId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockBookmarkFetchRequest) Reset() {
	*x = RpcBlockBookmarkFetchRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[923]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockBookmarkFetchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockBookmarkFetchRequest) ProtoMessage() {}

func (x *RpcBlockBookmarkFetchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[923]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockBookmarkFetchRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockBookmarkFetchRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 27, 0, 0}
}

func (x *RpcBlockBookmarkFetchRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockBookmarkFetchRequest) GetBlockId() string {
	if x != nil {
		return x.BlockId
	}
	return ""
}

func (x *RpcBlockBookmarkFetchRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *RpcBlockBookmarkFetchRequest) GetTemplateId() string {
	if x != nil {
		return x.TemplateId
	}
	return ""
}

type RpcBlockBookmarkFetchResponse struct {
	state         protoimpl.MessageState              `protogen:"open.v1"`
	Error         *RpcBlockBookmarkFetchResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent                      `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockBookmarkFetchResponse) Reset() {
	*x = RpcBlockBookmarkFetchResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[924]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockBookmarkFetchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockBookmarkFetchResponse) ProtoMessage() {}

func (x *RpcBlockBookmarkFetchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[924]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockBookmarkFetchResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockBookmarkFetchResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 27, 0, 1}
}

func (x *RpcBlockBookmarkFetchResponse) GetError() *RpcBlockBookmarkFetchResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcBlockBookmarkFetchResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcBlockBookmarkFetchResponseError struct {
	state         protoimpl.MessageState                 `protogen:"open.v1"`
	Code          RpcBlockBookmarkFetchResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockBookmarkFetchResponseErrorCode" json:"code,omitempty"`
	Description   string                                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockBookmarkFetchResponseError) Reset() {
	*x = RpcBlockBookmarkFetchResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[925]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockBookmarkFetchResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockBookmarkFetchResponseError) ProtoMessage() {}

func (x *RpcBlockBookmarkFetchResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[925]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockBookmarkFetchResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockBookmarkFetchResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 27, 0, 1, 0}
}

func (x *RpcBlockBookmarkFetchResponseError) GetCode() RpcBlockBookmarkFetchResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockBookmarkFetchResponseError_NULL
}

func (x *RpcBlockBookmarkFetchResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockBookmarkCreateAndFetchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextId     string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	TargetId      string                 `protobuf:"bytes,2,opt,name=targetId,proto3" json:"targetId,omitempty"`
	Position      model.BlockPosition    `protobuf:"varint,3,opt,name=position,proto3,enum=anytype.model.BlockPosition" json:"position,omitempty"`
	Url           string                 `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
	TemplateId    string                 `protobuf:"bytes,5,opt,name=templateId,proto3" json:"templateId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockBookmarkCreateAndFetchRequest) Reset() {
	*x = RpcBlockBookmarkCreateAndFetchRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[926]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockBookmarkCreateAndFetchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockBookmarkCreateAndFetchRequest) ProtoMessage() {}

func (x *RpcBlockBookmarkCreateAndFetchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[926]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockBookmarkCreateAndFetchRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockBookmarkCreateAndFetchRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 27, 1, 0}
}

func (x *RpcBlockBookmarkCreateAndFetchRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockBookmarkCreateAndFetchRequest) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

func (x *RpcBlockBookmarkCreateAndFetchRequest) GetPosition() model.BlockPosition {
	if x != nil {
		return x.Position
	}
	return model.BlockPosition(0)
}

func (x *RpcBlockBookmarkCreateAndFetchRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *RpcBlockBookmarkCreateAndFetchRequest) GetTemplateId() string {
	if x != nil {
		return x.TemplateId
	}
	return ""
}

type RpcBlockBookmarkCreateAndFetchResponse struct {
	state         protoimpl.MessageState                       `protogen:"open.v1"`
	Error         *RpcBlockBookmarkCreateAndFetchResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	BlockId       string                                       `protobuf:"bytes,2,opt,name=blockId,proto3" json:"blockId,omitempty"`
	Event         *ResponseEvent                               `protobuf:"bytes,3,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockBookmarkCreateAndFetchResponse) Reset() {
	*x = RpcBlockBookmarkCreateAndFetchResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[927]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockBookmarkCreateAndFetchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockBookmarkCreateAndFetchResponse) ProtoMessage() {}

func (x *RpcBlockBookmarkCreateAndFetchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[927]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockBookmarkCreateAndFetchResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockBookmarkCreateAndFetchResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 27, 1, 1}
}

func (x *RpcBlockBookmarkCreateAndFetchResponse) GetError() *RpcBlockBookmarkCreateAndFetchResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcBlockBookmarkCreateAndFetchResponse) GetBlockId() string {
	if x != nil {
		return x.BlockId
	}
	return ""
}

func (x *RpcBlockBookmarkCreateAndFetchResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcBlockBookmarkCreateAndFetchResponseError struct {
	state         protoimpl.MessageState                          `protogen:"open.v1"`
	Code          RpcBlockBookmarkCreateAndFetchResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockBookmarkCreateAndFetchResponseErrorCode" json:"code,omitempty"`
	Description   string                                          `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockBookmarkCreateAndFetchResponseError) Reset() {
	*x = RpcBlockBookmarkCreateAndFetchResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[928]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockBookmarkCreateAndFetchResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockBookmarkCreateAndFetchResponseError) ProtoMessage() {}

func (x *RpcBlockBookmarkCreateAndFetchResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[928]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockBookmarkCreateAndFetchResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockBookmarkCreateAndFetchResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 27, 1, 1, 0}
}

func (x *RpcBlockBookmarkCreateAndFetchResponseError) GetCode() RpcBlockBookmarkCreateAndFetchResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockBookmarkCreateAndFetchResponseError_NULL
}

func (x *RpcBlockBookmarkCreateAndFetchResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockDivListSetStyle struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDivListSetStyle) Reset() {
	*x = RpcBlockDivListSetStyle{}
	mi := &file_pb_protos_commands_proto_msgTypes[929]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDivListSetStyle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDivListSetStyle) ProtoMessage() {}

func (x *RpcBlockDivListSetStyle) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[929]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDivListSetStyle.ProtoReflect.Descriptor instead.
func (*RpcBlockDivListSetStyle) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 28, 0}
}

type RpcBlockDivListSetStyleRequest struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	ContextId     string                     `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	BlockIds      []string                   `protobuf:"bytes,2,rep,name=blockIds,proto3" json:"blockIds,omitempty"`
	Style         model.BlockContentDivStyle `protobuf:"varint,3,opt,name=style,proto3,enum=anytype.model.BlockContentDivStyle" json:"style,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDivListSetStyleRequest) Reset() {
	*x = RpcBlockDivListSetStyleRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[930]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDivListSetStyleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDivListSetStyleRequest) ProtoMessage() {}

func (x *RpcBlockDivListSetStyleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[930]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDivListSetStyleRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockDivListSetStyleRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 28, 0, 0}
}

func (x *RpcBlockDivListSetStyleRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockDivListSetStyleRequest) GetBlockIds() []string {
	if x != nil {
		return x.BlockIds
	}
	return nil
}

func (x *RpcBlockDivListSetStyleRequest) GetStyle() model.BlockContentDivStyle {
	if x != nil {
		return x.Style
	}
	return model.BlockContentDivStyle(0)
}

type RpcBlockDivListSetStyleResponse struct {
	state         protoimpl.MessageState                `protogen:"open.v1"`
	Error         *RpcBlockDivListSetStyleResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent                        `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDivListSetStyleResponse) Reset() {
	*x = RpcBlockDivListSetStyleResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[931]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDivListSetStyleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDivListSetStyleResponse) ProtoMessage() {}

func (x *RpcBlockDivListSetStyleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[931]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDivListSetStyleResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockDivListSetStyleResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 28, 0, 1}
}

func (x *RpcBlockDivListSetStyleResponse) GetError() *RpcBlockDivListSetStyleResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcBlockDivListSetStyleResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcBlockDivListSetStyleResponseError struct {
	state         protoimpl.MessageState                   `protogen:"open.v1"`
	Code          RpcBlockDivListSetStyleResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockDivListSetStyleResponseErrorCode" json:"code,omitempty"`
	Description   string                                   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDivListSetStyleResponseError) Reset() {
	*x = RpcBlockDivListSetStyleResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[932]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDivListSetStyleResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDivListSetStyleResponseError) ProtoMessage() {}

func (x *RpcBlockDivListSetStyleResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[932]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDivListSetStyleResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockDivListSetStyleResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 28, 0, 1, 0}
}

func (x *RpcBlockDivListSetStyleResponseError) GetCode() RpcBlockDivListSetStyleResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockDivListSetStyleResponseError_NULL
}

func (x *RpcBlockDivListSetStyleResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockDataviewView struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewView) Reset() {
	*x = RpcBlockDataviewView{}
	mi := &file_pb_protos_commands_proto_msgTypes[933]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewView) ProtoMessage() {}

func (x *RpcBlockDataviewView) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[933]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewView.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewView) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 0}
}

type RpcBlockDataviewRelation struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewRelation) Reset() {
	*x = RpcBlockDataviewRelation{}
	mi := &file_pb_protos_commands_proto_msgTypes[934]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewRelation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewRelation) ProtoMessage() {}

func (x *RpcBlockDataviewRelation) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[934]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewRelation.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewRelation) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 1}
}

type RpcBlockDataviewSetSource struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewSetSource) Reset() {
	*x = RpcBlockDataviewSetSource{}
	mi := &file_pb_protos_commands_proto_msgTypes[935]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewSetSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewSetSource) ProtoMessage() {}

func (x *RpcBlockDataviewSetSource) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[935]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewSetSource.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewSetSource) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 2}
}

type RpcBlockDataviewGroupOrder struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewGroupOrder) Reset() {
	*x = RpcBlockDataviewGroupOrder{}
	mi := &file_pb_protos_commands_proto_msgTypes[936]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewGroupOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewGroupOrder) ProtoMessage() {}

func (x *RpcBlockDataviewGroupOrder) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[936]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewGroupOrder.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewGroupOrder) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 3}
}

type RpcBlockDataviewObjectOrder struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewObjectOrder) Reset() {
	*x = RpcBlockDataviewObjectOrder{}
	mi := &file_pb_protos_commands_proto_msgTypes[937]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewObjectOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewObjectOrder) ProtoMessage() {}

func (x *RpcBlockDataviewObjectOrder) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[937]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewObjectOrder.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewObjectOrder) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 4}
}

type RpcBlockDataviewCreateFromExistingObject struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewCreateFromExistingObject) Reset() {
	*x = RpcBlockDataviewCreateFromExistingObject{}
	mi := &file_pb_protos_commands_proto_msgTypes[938]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewCreateFromExistingObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewCreateFromExistingObject) ProtoMessage() {}

func (x *RpcBlockDataviewCreateFromExistingObject) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[938]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewCreateFromExistingObject.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewCreateFromExistingObject) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 5}
}

type RpcBlockDataviewFilter struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewFilter) Reset() {
	*x = RpcBlockDataviewFilter{}
	mi := &file_pb_protos_commands_proto_msgTypes[939]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewFilter) ProtoMessage() {}

func (x *RpcBlockDataviewFilter) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[939]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewFilter.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewFilter) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 6}
}

type RpcBlockDataviewSort struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewSort) Reset() {
	*x = RpcBlockDataviewSort{}
	mi := &file_pb_protos_commands_proto_msgTypes[940]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewSort) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewSort) ProtoMessage() {}

func (x *RpcBlockDataviewSort) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[940]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewSort.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewSort) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 7}
}

type RpcBlockDataviewViewRelation struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewViewRelation) Reset() {
	*x = RpcBlockDataviewViewRelation{}
	mi := &file_pb_protos_commands_proto_msgTypes[941]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewViewRelation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewViewRelation) ProtoMessage() {}

func (x *RpcBlockDataviewViewRelation) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[941]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewViewRelation.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewViewRelation) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 8}
}

type RpcBlockDataviewViewCreate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewViewCreate) Reset() {
	*x = RpcBlockDataviewViewCreate{}
	mi := &file_pb_protos_commands_proto_msgTypes[942]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewViewCreate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewViewCreate) ProtoMessage() {}

func (x *RpcBlockDataviewViewCreate) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[942]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewViewCreate.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewViewCreate) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 0, 0}
}

type RpcBlockDataviewViewUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewViewUpdate) Reset() {
	*x = RpcBlockDataviewViewUpdate{}
	mi := &file_pb_protos_commands_proto_msgTypes[943]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewViewUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewViewUpdate) ProtoMessage() {}

func (x *RpcBlockDataviewViewUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[943]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewViewUpdate.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewViewUpdate) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 0, 1}
}

type RpcBlockDataviewViewDelete struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewViewDelete) Reset() {
	*x = RpcBlockDataviewViewDelete{}
	mi := &file_pb_protos_commands_proto_msgTypes[944]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewViewDelete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewViewDelete) ProtoMessage() {}

func (x *RpcBlockDataviewViewDelete) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[944]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewViewDelete.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewViewDelete) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 0, 2}
}

type RpcBlockDataviewViewSetPosition struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewViewSetPosition) Reset() {
	*x = RpcBlockDataviewViewSetPosition{}
	mi := &file_pb_protos_commands_proto_msgTypes[945]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewViewSetPosition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewViewSetPosition) ProtoMessage() {}

func (x *RpcBlockDataviewViewSetPosition) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[945]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewViewSetPosition.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewViewSetPosition) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 0, 3}
}

// set the current active view locally
type RpcBlockDataviewViewSetActive struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewViewSetActive) Reset() {
	*x = RpcBlockDataviewViewSetActive{}
	mi := &file_pb_protos_commands_proto_msgTypes[946]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewViewSetActive) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewViewSetActive) ProtoMessage() {}

func (x *RpcBlockDataviewViewSetActive) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[946]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewViewSetActive.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewViewSetActive) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 0, 4}
}

type RpcBlockDataviewViewCreateRequest struct {
	state         protoimpl.MessageState          `protogen:"open.v1"`
	ContextId     string                          `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	BlockId       string                          `protobuf:"bytes,2,opt,name=blockId,proto3" json:"blockId,omitempty"` // id of dataview block to insert the new block
	View          *model.BlockContentDataviewView `protobuf:"bytes,4,opt,name=view,proto3" json:"view,omitempty"`
	Source        []string                        `protobuf:"bytes,5,rep,name=source,proto3" json:"source,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewViewCreateRequest) Reset() {
	*x = RpcBlockDataviewViewCreateRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[947]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewViewCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewViewCreateRequest) ProtoMessage() {}

func (x *RpcBlockDataviewViewCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[947]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewViewCreateRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewViewCreateRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 0, 0, 0}
}

func (x *RpcBlockDataviewViewCreateRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockDataviewViewCreateRequest) GetBlockId() string {
	if x != nil {
		return x.BlockId
	}
	return ""
}

func (x *RpcBlockDataviewViewCreateRequest) GetView() *model.BlockContentDataviewView {
	if x != nil {
		return x.View
	}
	return nil
}

func (x *RpcBlockDataviewViewCreateRequest) GetSource() []string {
	if x != nil {
		return x.Source
	}
	return nil
}

type RpcBlockDataviewViewCreateResponse struct {
	state         protoimpl.MessageState                   `protogen:"open.v1"`
	Error         *RpcBlockDataviewViewCreateResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent                           `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	ViewId        string                                   `protobuf:"bytes,3,opt,name=viewId,proto3" json:"viewId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewViewCreateResponse) Reset() {
	*x = RpcBlockDataviewViewCreateResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[948]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewViewCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewViewCreateResponse) ProtoMessage() {}

func (x *RpcBlockDataviewViewCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[948]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewViewCreateResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewViewCreateResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 0, 0, 1}
}

func (x *RpcBlockDataviewViewCreateResponse) GetError() *RpcBlockDataviewViewCreateResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcBlockDataviewViewCreateResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

func (x *RpcBlockDataviewViewCreateResponse) GetViewId() string {
	if x != nil {
		return x.ViewId
	}
	return ""
}

type RpcBlockDataviewViewCreateResponseError struct {
	state         protoimpl.MessageState                      `protogen:"open.v1"`
	Code          RpcBlockDataviewViewCreateResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockDataviewViewCreateResponseErrorCode" json:"code,omitempty"`
	Description   string                                      `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewViewCreateResponseError) Reset() {
	*x = RpcBlockDataviewViewCreateResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[949]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewViewCreateResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewViewCreateResponseError) ProtoMessage() {}

func (x *RpcBlockDataviewViewCreateResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[949]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewViewCreateResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewViewCreateResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 0, 0, 1, 0}
}

func (x *RpcBlockDataviewViewCreateResponseError) GetCode() RpcBlockDataviewViewCreateResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockDataviewViewCreateResponseError_NULL
}

func (x *RpcBlockDataviewViewCreateResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockDataviewViewUpdateRequest struct {
	state         protoimpl.MessageState          `protogen:"open.v1"`
	ContextId     string                          `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	BlockId       string                          `protobuf:"bytes,2,opt,name=blockId,proto3" json:"blockId,omitempty"` // id of dataview block to update
	ViewId        string                          `protobuf:"bytes,3,opt,name=viewId,proto3" json:"viewId,omitempty"`   // id of view to update
	View          *model.BlockContentDataviewView `protobuf:"bytes,4,opt,name=view,proto3" json:"view,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewViewUpdateRequest) Reset() {
	*x = RpcBlockDataviewViewUpdateRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[950]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewViewUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewViewUpdateRequest) ProtoMessage() {}

func (x *RpcBlockDataviewViewUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[950]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewViewUpdateRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewViewUpdateRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 0, 1, 0}
}

func (x *RpcBlockDataviewViewUpdateRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockDataviewViewUpdateRequest) GetBlockId() string {
	if x != nil {
		return x.BlockId
	}
	return ""
}

func (x *RpcBlockDataviewViewUpdateRequest) GetViewId() string {
	if x != nil {
		return x.ViewId
	}
	return ""
}

func (x *RpcBlockDataviewViewUpdateRequest) GetView() *model.BlockContentDataviewView {
	if x != nil {
		return x.View
	}
	return nil
}

type RpcBlockDataviewViewUpdateResponse struct {
	state         protoimpl.MessageState                   `protogen:"open.v1"`
	Error         *RpcBlockDataviewViewUpdateResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent                           `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewViewUpdateResponse) Reset() {
	*x = RpcBlockDataviewViewUpdateResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[951]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewViewUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewViewUpdateResponse) ProtoMessage() {}

func (x *RpcBlockDataviewViewUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[951]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewViewUpdateResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewViewUpdateResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 0, 1, 1}
}

func (x *RpcBlockDataviewViewUpdateResponse) GetError() *RpcBlockDataviewViewUpdateResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcBlockDataviewViewUpdateResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcBlockDataviewViewUpdateResponseError struct {
	state         protoimpl.MessageState                      `protogen:"open.v1"`
	Code          RpcBlockDataviewViewUpdateResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockDataviewViewUpdateResponseErrorCode" json:"code,omitempty"`
	Description   string                                      `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewViewUpdateResponseError) Reset() {
	*x = RpcBlockDataviewViewUpdateResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[952]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewViewUpdateResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewViewUpdateResponseError) ProtoMessage() {}

func (x *RpcBlockDataviewViewUpdateResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[952]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewViewUpdateResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewViewUpdateResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 0, 1, 1, 0}
}

func (x *RpcBlockDataviewViewUpdateResponseError) GetCode() RpcBlockDataviewViewUpdateResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockDataviewViewUpdateResponseError_NULL
}

func (x *RpcBlockDataviewViewUpdateResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockDataviewViewDeleteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextId     string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"` // id of the context object
	BlockId       string                 `protobuf:"bytes,2,opt,name=blockId,proto3" json:"blockId,omitempty"`     // id of the dataview
	ViewId        string                 `protobuf:"bytes,4,opt,name=viewId,proto3" json:"viewId,omitempty"`       // id of the view to remove
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewViewDeleteRequest) Reset() {
	*x = RpcBlockDataviewViewDeleteRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[953]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewViewDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewViewDeleteRequest) ProtoMessage() {}

func (x *RpcBlockDataviewViewDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[953]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewViewDeleteRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewViewDeleteRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 0, 2, 0}
}

func (x *RpcBlockDataviewViewDeleteRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockDataviewViewDeleteRequest) GetBlockId() string {
	if x != nil {
		return x.BlockId
	}
	return ""
}

func (x *RpcBlockDataviewViewDeleteRequest) GetViewId() string {
	if x != nil {
		return x.ViewId
	}
	return ""
}

type RpcBlockDataviewViewDeleteResponse struct {
	state         protoimpl.MessageState                   `protogen:"open.v1"`
	Error         *RpcBlockDataviewViewDeleteResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent                           `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewViewDeleteResponse) Reset() {
	*x = RpcBlockDataviewViewDeleteResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[954]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewViewDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewViewDeleteResponse) ProtoMessage() {}

func (x *RpcBlockDataviewViewDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[954]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewViewDeleteResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewViewDeleteResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 0, 2, 1}
}

func (x *RpcBlockDataviewViewDeleteResponse) GetError() *RpcBlockDataviewViewDeleteResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcBlockDataviewViewDeleteResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcBlockDataviewViewDeleteResponseError struct {
	state         protoimpl.MessageState                      `protogen:"open.v1"`
	Code          RpcBlockDataviewViewDeleteResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockDataviewViewDeleteResponseErrorCode" json:"code,omitempty"`
	Description   string                                      `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewViewDeleteResponseError) Reset() {
	*x = RpcBlockDataviewViewDeleteResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[955]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewViewDeleteResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewViewDeleteResponseError) ProtoMessage() {}

func (x *RpcBlockDataviewViewDeleteResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[955]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewViewDeleteResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewViewDeleteResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 0, 2, 1, 0}
}

func (x *RpcBlockDataviewViewDeleteResponseError) GetCode() RpcBlockDataviewViewDeleteResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockDataviewViewDeleteResponseError_NULL
}

func (x *RpcBlockDataviewViewDeleteResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockDataviewViewSetPositionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextId     string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"` // id of the context object
	BlockId       string                 `protobuf:"bytes,2,opt,name=blockId,proto3" json:"blockId,omitempty"`     // id of the dataview
	ViewId        string                 `protobuf:"bytes,4,opt,name=viewId,proto3" json:"viewId,omitempty"`       // id of the view to remove
	Position      uint32                 `protobuf:"varint,5,opt,name=position,proto3" json:"position,omitempty"`  // index of view position (0 - means first)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewViewSetPositionRequest) Reset() {
	*x = RpcBlockDataviewViewSetPositionRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[956]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewViewSetPositionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewViewSetPositionRequest) ProtoMessage() {}

func (x *RpcBlockDataviewViewSetPositionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[956]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewViewSetPositionRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewViewSetPositionRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 0, 3, 0}
}

func (x *RpcBlockDataviewViewSetPositionRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockDataviewViewSetPositionRequest) GetBlockId() string {
	if x != nil {
		return x.BlockId
	}
	return ""
}

func (x *RpcBlockDataviewViewSetPositionRequest) GetViewId() string {
	if x != nil {
		return x.ViewId
	}
	return ""
}

func (x *RpcBlockDataviewViewSetPositionRequest) GetPosition() uint32 {
	if x != nil {
		return x.Position
	}
	return 0
}

type RpcBlockDataviewViewSetPositionResponse struct {
	state         protoimpl.MessageState                        `protogen:"open.v1"`
	Error         *RpcBlockDataviewViewSetPositionResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent                                `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewViewSetPositionResponse) Reset() {
	*x = RpcBlockDataviewViewSetPositionResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[957]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewViewSetPositionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewViewSetPositionResponse) ProtoMessage() {}

func (x *RpcBlockDataviewViewSetPositionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[957]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewViewSetPositionResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewViewSetPositionResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 0, 3, 1}
}

func (x *RpcBlockDataviewViewSetPositionResponse) GetError() *RpcBlockDataviewViewSetPositionResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcBlockDataviewViewSetPositionResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcBlockDataviewViewSetPositionResponseError struct {
	state         protoimpl.MessageState                           `protogen:"open.v1"`
	Code          RpcBlockDataviewViewSetPositionResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockDataviewViewSetPositionResponseErrorCode" json:"code,omitempty"`
	Description   string                                           `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewViewSetPositionResponseError) Reset() {
	*x = RpcBlockDataviewViewSetPositionResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[958]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewViewSetPositionResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewViewSetPositionResponseError) ProtoMessage() {}

func (x *RpcBlockDataviewViewSetPositionResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[958]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewViewSetPositionResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewViewSetPositionResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 0, 3, 1, 0}
}

func (x *RpcBlockDataviewViewSetPositionResponseError) GetCode() RpcBlockDataviewViewSetPositionResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockDataviewViewSetPositionResponseError_NULL
}

func (x *RpcBlockDataviewViewSetPositionResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockDataviewViewSetActiveRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextId     string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	BlockId       string                 `protobuf:"bytes,2,opt,name=blockId,proto3" json:"blockId,omitempty"` // id of dataview block
	ViewId        string                 `protobuf:"bytes,3,opt,name=viewId,proto3" json:"viewId,omitempty"`   // id of active view
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewViewSetActiveRequest) Reset() {
	*x = RpcBlockDataviewViewSetActiveRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[959]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewViewSetActiveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewViewSetActiveRequest) ProtoMessage() {}

func (x *RpcBlockDataviewViewSetActiveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[959]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewViewSetActiveRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewViewSetActiveRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 0, 4, 0}
}

func (x *RpcBlockDataviewViewSetActiveRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockDataviewViewSetActiveRequest) GetBlockId() string {
	if x != nil {
		return x.BlockId
	}
	return ""
}

func (x *RpcBlockDataviewViewSetActiveRequest) GetViewId() string {
	if x != nil {
		return x.ViewId
	}
	return ""
}

type RpcBlockDataviewViewSetActiveResponse struct {
	state         protoimpl.MessageState                      `protogen:"open.v1"`
	Error         *RpcBlockDataviewViewSetActiveResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent                              `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewViewSetActiveResponse) Reset() {
	*x = RpcBlockDataviewViewSetActiveResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[960]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewViewSetActiveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewViewSetActiveResponse) ProtoMessage() {}

func (x *RpcBlockDataviewViewSetActiveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[960]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewViewSetActiveResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewViewSetActiveResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 0, 4, 1}
}

func (x *RpcBlockDataviewViewSetActiveResponse) GetError() *RpcBlockDataviewViewSetActiveResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcBlockDataviewViewSetActiveResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcBlockDataviewViewSetActiveResponseError struct {
	state         protoimpl.MessageState                         `protogen:"open.v1"`
	Code          RpcBlockDataviewViewSetActiveResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockDataviewViewSetActiveResponseErrorCode" json:"code,omitempty"`
	Description   string                                         `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewViewSetActiveResponseError) Reset() {
	*x = RpcBlockDataviewViewSetActiveResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[961]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewViewSetActiveResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewViewSetActiveResponseError) ProtoMessage() {}

func (x *RpcBlockDataviewViewSetActiveResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[961]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewViewSetActiveResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewViewSetActiveResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 0, 4, 1, 0}
}

func (x *RpcBlockDataviewViewSetActiveResponseError) GetCode() RpcBlockDataviewViewSetActiveResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockDataviewViewSetActiveResponseError_NULL
}

func (x *RpcBlockDataviewViewSetActiveResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockDataviewRelationAdd struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewRelationAdd) Reset() {
	*x = RpcBlockDataviewRelationAdd{}
	mi := &file_pb_protos_commands_proto_msgTypes[962]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewRelationAdd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewRelationAdd) ProtoMessage() {}

func (x *RpcBlockDataviewRelationAdd) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[962]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewRelationAdd.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewRelationAdd) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 1, 0}
}

type RpcBlockDataviewRelationDelete struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewRelationDelete) Reset() {
	*x = RpcBlockDataviewRelationDelete{}
	mi := &file_pb_protos_commands_proto_msgTypes[963]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewRelationDelete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewRelationDelete) ProtoMessage() {}

func (x *RpcBlockDataviewRelationDelete) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[963]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewRelationDelete.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewRelationDelete) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 1, 1}
}

type RpcBlockDataviewRelationAddRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextId     string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	BlockId       string                 `protobuf:"bytes,2,opt,name=blockId,proto3" json:"blockId,omitempty"` // id of dataview block to add relation
	RelationKeys  []string               `protobuf:"bytes,3,rep,name=relationKeys,proto3" json:"relationKeys,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewRelationAddRequest) Reset() {
	*x = RpcBlockDataviewRelationAddRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[964]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewRelationAddRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewRelationAddRequest) ProtoMessage() {}

func (x *RpcBlockDataviewRelationAddRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[964]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewRelationAddRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewRelationAddRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 1, 0, 0}
}

func (x *RpcBlockDataviewRelationAddRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockDataviewRelationAddRequest) GetBlockId() string {
	if x != nil {
		return x.BlockId
	}
	return ""
}

func (x *RpcBlockDataviewRelationAddRequest) GetRelationKeys() []string {
	if x != nil {
		return x.RelationKeys
	}
	return nil
}

type RpcBlockDataviewRelationAddResponse struct {
	state         protoimpl.MessageState                    `protogen:"open.v1"`
	Error         *RpcBlockDataviewRelationAddResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent                            `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewRelationAddResponse) Reset() {
	*x = RpcBlockDataviewRelationAddResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[965]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewRelationAddResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewRelationAddResponse) ProtoMessage() {}

func (x *RpcBlockDataviewRelationAddResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[965]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewRelationAddResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewRelationAddResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 1, 0, 1}
}

func (x *RpcBlockDataviewRelationAddResponse) GetError() *RpcBlockDataviewRelationAddResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcBlockDataviewRelationAddResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcBlockDataviewRelationAddResponseError struct {
	state         protoimpl.MessageState                       `protogen:"open.v1"`
	Code          RpcBlockDataviewRelationAddResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockDataviewRelationAddResponseErrorCode" json:"code,omitempty"`
	Description   string                                       `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewRelationAddResponseError) Reset() {
	*x = RpcBlockDataviewRelationAddResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[966]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewRelationAddResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewRelationAddResponseError) ProtoMessage() {}

func (x *RpcBlockDataviewRelationAddResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[966]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewRelationAddResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewRelationAddResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 1, 0, 1, 0}
}

func (x *RpcBlockDataviewRelationAddResponseError) GetCode() RpcBlockDataviewRelationAddResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockDataviewRelationAddResponseError_NULL
}

func (x *RpcBlockDataviewRelationAddResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockDataviewRelationDeleteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextId     string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	BlockId       string                 `protobuf:"bytes,2,opt,name=blockId,proto3" json:"blockId,omitempty"` // id of dataview block to add relation
	RelationKeys  []string               `protobuf:"bytes,3,rep,name=relationKeys,proto3" json:"relationKeys,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewRelationDeleteRequest) Reset() {
	*x = RpcBlockDataviewRelationDeleteRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[967]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewRelationDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewRelationDeleteRequest) ProtoMessage() {}

func (x *RpcBlockDataviewRelationDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[967]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewRelationDeleteRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewRelationDeleteRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 1, 1, 0}
}

func (x *RpcBlockDataviewRelationDeleteRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockDataviewRelationDeleteRequest) GetBlockId() string {
	if x != nil {
		return x.BlockId
	}
	return ""
}

func (x *RpcBlockDataviewRelationDeleteRequest) GetRelationKeys() []string {
	if x != nil {
		return x.RelationKeys
	}
	return nil
}

type RpcBlockDataviewRelationDeleteResponse struct {
	state         protoimpl.MessageState                       `protogen:"open.v1"`
	Error         *RpcBlockDataviewRelationDeleteResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent                               `protobuf:"bytes,3,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewRelationDeleteResponse) Reset() {
	*x = RpcBlockDataviewRelationDeleteResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[968]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewRelationDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewRelationDeleteResponse) ProtoMessage() {}

func (x *RpcBlockDataviewRelationDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[968]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewRelationDeleteResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewRelationDeleteResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 1, 1, 1}
}

func (x *RpcBlockDataviewRelationDeleteResponse) GetError() *RpcBlockDataviewRelationDeleteResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcBlockDataviewRelationDeleteResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcBlockDataviewRelationDeleteResponseError struct {
	state         protoimpl.MessageState                          `protogen:"open.v1"`
	Code          RpcBlockDataviewRelationDeleteResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockDataviewRelationDeleteResponseErrorCode" json:"code,omitempty"`
	Description   string                                          `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewRelationDeleteResponseError) Reset() {
	*x = RpcBlockDataviewRelationDeleteResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[969]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewRelationDeleteResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewRelationDeleteResponseError) ProtoMessage() {}

func (x *RpcBlockDataviewRelationDeleteResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[969]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewRelationDeleteResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewRelationDeleteResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 1, 1, 1, 0}
}

func (x *RpcBlockDataviewRelationDeleteResponseError) GetCode() RpcBlockDataviewRelationDeleteResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockDataviewRelationDeleteResponseError_NULL
}

func (x *RpcBlockDataviewRelationDeleteResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockDataviewSetSourceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextId     string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	BlockId       string                 `protobuf:"bytes,2,opt,name=blockId,proto3" json:"blockId,omitempty"`
	Source        []string               `protobuf:"bytes,3,rep,name=source,proto3" json:"source,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewSetSourceRequest) Reset() {
	*x = RpcBlockDataviewSetSourceRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[970]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewSetSourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewSetSourceRequest) ProtoMessage() {}

func (x *RpcBlockDataviewSetSourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[970]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewSetSourceRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewSetSourceRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 2, 0}
}

func (x *RpcBlockDataviewSetSourceRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockDataviewSetSourceRequest) GetBlockId() string {
	if x != nil {
		return x.BlockId
	}
	return ""
}

func (x *RpcBlockDataviewSetSourceRequest) GetSource() []string {
	if x != nil {
		return x.Source
	}
	return nil
}

type RpcBlockDataviewSetSourceResponse struct {
	state         protoimpl.MessageState                  `protogen:"open.v1"`
	Error         *RpcBlockDataviewSetSourceResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent                          `protobuf:"bytes,4,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewSetSourceResponse) Reset() {
	*x = RpcBlockDataviewSetSourceResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[971]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewSetSourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewSetSourceResponse) ProtoMessage() {}

func (x *RpcBlockDataviewSetSourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[971]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewSetSourceResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewSetSourceResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 2, 1}
}

func (x *RpcBlockDataviewSetSourceResponse) GetError() *RpcBlockDataviewSetSourceResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcBlockDataviewSetSourceResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcBlockDataviewSetSourceResponseError struct {
	state         protoimpl.MessageState                     `protogen:"open.v1"`
	Code          RpcBlockDataviewSetSourceResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockDataviewSetSourceResponseErrorCode" json:"code,omitempty"`
	Description   string                                     `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewSetSourceResponseError) Reset() {
	*x = RpcBlockDataviewSetSourceResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[972]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewSetSourceResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewSetSourceResponseError) ProtoMessage() {}

func (x *RpcBlockDataviewSetSourceResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[972]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewSetSourceResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewSetSourceResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 2, 1, 0}
}

func (x *RpcBlockDataviewSetSourceResponseError) GetCode() RpcBlockDataviewSetSourceResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockDataviewSetSourceResponseError_NULL
}

func (x *RpcBlockDataviewSetSourceResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockDataviewGroupOrderUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewGroupOrderUpdate) Reset() {
	*x = RpcBlockDataviewGroupOrderUpdate{}
	mi := &file_pb_protos_commands_proto_msgTypes[973]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewGroupOrderUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewGroupOrderUpdate) ProtoMessage() {}

func (x *RpcBlockDataviewGroupOrderUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[973]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewGroupOrderUpdate.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewGroupOrderUpdate) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 3, 0}
}

type RpcBlockDataviewGroupOrderUpdateRequest struct {
	state         protoimpl.MessageState                `protogen:"open.v1"`
	ContextId     string                                `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	BlockId       string                                `protobuf:"bytes,2,opt,name=blockId,proto3" json:"blockId,omitempty"`
	GroupOrder    *model.BlockContentDataviewGroupOrder `protobuf:"bytes,3,opt,name=groupOrder,proto3" json:"groupOrder,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewGroupOrderUpdateRequest) Reset() {
	*x = RpcBlockDataviewGroupOrderUpdateRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[974]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewGroupOrderUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewGroupOrderUpdateRequest) ProtoMessage() {}

func (x *RpcBlockDataviewGroupOrderUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[974]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewGroupOrderUpdateRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewGroupOrderUpdateRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 3, 0, 0}
}

func (x *RpcBlockDataviewGroupOrderUpdateRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockDataviewGroupOrderUpdateRequest) GetBlockId() string {
	if x != nil {
		return x.BlockId
	}
	return ""
}

func (x *RpcBlockDataviewGroupOrderUpdateRequest) GetGroupOrder() *model.BlockContentDataviewGroupOrder {
	if x != nil {
		return x.GroupOrder
	}
	return nil
}

type RpcBlockDataviewGroupOrderUpdateResponse struct {
	state         protoimpl.MessageState                         `protogen:"open.v1"`
	Error         *RpcBlockDataviewGroupOrderUpdateResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent                                 `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewGroupOrderUpdateResponse) Reset() {
	*x = RpcBlockDataviewGroupOrderUpdateResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[975]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewGroupOrderUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewGroupOrderUpdateResponse) ProtoMessage() {}

func (x *RpcBlockDataviewGroupOrderUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[975]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewGroupOrderUpdateResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewGroupOrderUpdateResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 3, 0, 1}
}

func (x *RpcBlockDataviewGroupOrderUpdateResponse) GetError() *RpcBlockDataviewGroupOrderUpdateResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcBlockDataviewGroupOrderUpdateResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcBlockDataviewGroupOrderUpdateResponseError struct {
	state         protoimpl.MessageState                            `protogen:"open.v1"`
	Code          RpcBlockDataviewGroupOrderUpdateResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockDataviewGroupOrderUpdateResponseErrorCode" json:"code,omitempty"`
	Description   string                                            `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewGroupOrderUpdateResponseError) Reset() {
	*x = RpcBlockDataviewGroupOrderUpdateResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[976]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewGroupOrderUpdateResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewGroupOrderUpdateResponseError) ProtoMessage() {}

func (x *RpcBlockDataviewGroupOrderUpdateResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[976]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewGroupOrderUpdateResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewGroupOrderUpdateResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 3, 0, 1, 0}
}

func (x *RpcBlockDataviewGroupOrderUpdateResponseError) GetCode() RpcBlockDataviewGroupOrderUpdateResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockDataviewGroupOrderUpdateResponseError_NULL
}

func (x *RpcBlockDataviewGroupOrderUpdateResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockDataviewObjectOrderUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewObjectOrderUpdate) Reset() {
	*x = RpcBlockDataviewObjectOrderUpdate{}
	mi := &file_pb_protos_commands_proto_msgTypes[977]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewObjectOrderUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewObjectOrderUpdate) ProtoMessage() {}

func (x *RpcBlockDataviewObjectOrderUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[977]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewObjectOrderUpdate.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewObjectOrderUpdate) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 4, 0}
}

type RpcBlockDataviewObjectOrderMove struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewObjectOrderMove) Reset() {
	*x = RpcBlockDataviewObjectOrderMove{}
	mi := &file_pb_protos_commands_proto_msgTypes[978]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewObjectOrderMove) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewObjectOrderMove) ProtoMessage() {}

func (x *RpcBlockDataviewObjectOrderMove) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[978]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewObjectOrderMove.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewObjectOrderMove) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 4, 1}
}

type RpcBlockDataviewObjectOrderUpdateRequest struct {
	state         protoimpl.MessageState                   `protogen:"open.v1"`
	ContextId     string                                   `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	BlockId       string                                   `protobuf:"bytes,2,opt,name=blockId,proto3" json:"blockId,omitempty"`
	ObjectOrders  []*model.BlockContentDataviewObjectOrder `protobuf:"bytes,3,rep,name=objectOrders,proto3" json:"objectOrders,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewObjectOrderUpdateRequest) Reset() {
	*x = RpcBlockDataviewObjectOrderUpdateRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[979]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewObjectOrderUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewObjectOrderUpdateRequest) ProtoMessage() {}

func (x *RpcBlockDataviewObjectOrderUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[979]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewObjectOrderUpdateRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewObjectOrderUpdateRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 4, 0, 0}
}

func (x *RpcBlockDataviewObjectOrderUpdateRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockDataviewObjectOrderUpdateRequest) GetBlockId() string {
	if x != nil {
		return x.BlockId
	}
	return ""
}

func (x *RpcBlockDataviewObjectOrderUpdateRequest) GetObjectOrders() []*model.BlockContentDataviewObjectOrder {
	if x != nil {
		return x.ObjectOrders
	}
	return nil
}

type RpcBlockDataviewObjectOrderUpdateResponse struct {
	state         protoimpl.MessageState                          `protogen:"open.v1"`
	Error         *RpcBlockDataviewObjectOrderUpdateResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent                                  `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewObjectOrderUpdateResponse) Reset() {
	*x = RpcBlockDataviewObjectOrderUpdateResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[980]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewObjectOrderUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewObjectOrderUpdateResponse) ProtoMessage() {}

func (x *RpcBlockDataviewObjectOrderUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[980]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewObjectOrderUpdateResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewObjectOrderUpdateResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 4, 0, 1}
}

func (x *RpcBlockDataviewObjectOrderUpdateResponse) GetError() *RpcBlockDataviewObjectOrderUpdateResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcBlockDataviewObjectOrderUpdateResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcBlockDataviewObjectOrderUpdateResponseError struct {
	state         protoimpl.MessageState                             `protogen:"open.v1"`
	Code          RpcBlockDataviewObjectOrderUpdateResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockDataviewObjectOrderUpdateResponseErrorCode" json:"code,omitempty"`
	Description   string                                             `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewObjectOrderUpdateResponseError) Reset() {
	*x = RpcBlockDataviewObjectOrderUpdateResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[981]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewObjectOrderUpdateResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewObjectOrderUpdateResponseError) ProtoMessage() {}

func (x *RpcBlockDataviewObjectOrderUpdateResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[981]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewObjectOrderUpdateResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewObjectOrderUpdateResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 4, 0, 1, 0}
}

func (x *RpcBlockDataviewObjectOrderUpdateResponseError) GetCode() RpcBlockDataviewObjectOrderUpdateResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockDataviewObjectOrderUpdateResponseError_NULL
}

func (x *RpcBlockDataviewObjectOrderUpdateResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockDataviewObjectOrderMoveRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextId     string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	BlockId       string                 `protobuf:"bytes,2,opt,name=blockId,proto3" json:"blockId,omitempty"`
	ViewId        string                 `protobuf:"bytes,3,opt,name=viewId,proto3" json:"viewId,omitempty"`
	GroupId       string                 `protobuf:"bytes,4,opt,name=groupId,proto3" json:"groupId,omitempty"`
	AfterId       string                 `protobuf:"bytes,5,opt,name=afterId,proto3" json:"afterId,omitempty"`
	ObjectIds     []string               `protobuf:"bytes,6,rep,name=objectIds,proto3" json:"objectIds,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewObjectOrderMoveRequest) Reset() {
	*x = RpcBlockDataviewObjectOrderMoveRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[982]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewObjectOrderMoveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewObjectOrderMoveRequest) ProtoMessage() {}

func (x *RpcBlockDataviewObjectOrderMoveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[982]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewObjectOrderMoveRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewObjectOrderMoveRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 4, 1, 0}
}

func (x *RpcBlockDataviewObjectOrderMoveRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockDataviewObjectOrderMoveRequest) GetBlockId() string {
	if x != nil {
		return x.BlockId
	}
	return ""
}

func (x *RpcBlockDataviewObjectOrderMoveRequest) GetViewId() string {
	if x != nil {
		return x.ViewId
	}
	return ""
}

func (x *RpcBlockDataviewObjectOrderMoveRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *RpcBlockDataviewObjectOrderMoveRequest) GetAfterId() string {
	if x != nil {
		return x.AfterId
	}
	return ""
}

func (x *RpcBlockDataviewObjectOrderMoveRequest) GetObjectIds() []string {
	if x != nil {
		return x.ObjectIds
	}
	return nil
}

type RpcBlockDataviewObjectOrderMoveResponse struct {
	state         protoimpl.MessageState                        `protogen:"open.v1"`
	Error         *RpcBlockDataviewObjectOrderMoveResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent                                `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewObjectOrderMoveResponse) Reset() {
	*x = RpcBlockDataviewObjectOrderMoveResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[983]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewObjectOrderMoveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewObjectOrderMoveResponse) ProtoMessage() {}

func (x *RpcBlockDataviewObjectOrderMoveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[983]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewObjectOrderMoveResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewObjectOrderMoveResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 4, 1, 1}
}

func (x *RpcBlockDataviewObjectOrderMoveResponse) GetError() *RpcBlockDataviewObjectOrderMoveResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcBlockDataviewObjectOrderMoveResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcBlockDataviewObjectOrderMoveResponseError struct {
	state         protoimpl.MessageState                           `protogen:"open.v1"`
	Code          RpcBlockDataviewObjectOrderMoveResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockDataviewObjectOrderMoveResponseErrorCode" json:"code,omitempty"`
	Description   string                                           `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewObjectOrderMoveResponseError) Reset() {
	*x = RpcBlockDataviewObjectOrderMoveResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[984]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewObjectOrderMoveResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewObjectOrderMoveResponseError) ProtoMessage() {}

func (x *RpcBlockDataviewObjectOrderMoveResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[984]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewObjectOrderMoveResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewObjectOrderMoveResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 4, 1, 1, 0}
}

func (x *RpcBlockDataviewObjectOrderMoveResponseError) GetCode() RpcBlockDataviewObjectOrderMoveResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockDataviewObjectOrderMoveResponseError_NULL
}

func (x *RpcBlockDataviewObjectOrderMoveResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockDataviewCreateFromExistingObjectRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ContextId      string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	BlockId        string                 `protobuf:"bytes,2,opt,name=blockId,proto3" json:"blockId,omitempty"`
	TargetObjectId string                 `protobuf:"bytes,3,opt,name=targetObjectId,proto3" json:"targetObjectId,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RpcBlockDataviewCreateFromExistingObjectRequest) Reset() {
	*x = RpcBlockDataviewCreateFromExistingObjectRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[985]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewCreateFromExistingObjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewCreateFromExistingObjectRequest) ProtoMessage() {}

func (x *RpcBlockDataviewCreateFromExistingObjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[985]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewCreateFromExistingObjectRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewCreateFromExistingObjectRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 5, 0}
}

func (x *RpcBlockDataviewCreateFromExistingObjectRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockDataviewCreateFromExistingObjectRequest) GetBlockId() string {
	if x != nil {
		return x.BlockId
	}
	return ""
}

func (x *RpcBlockDataviewCreateFromExistingObjectRequest) GetTargetObjectId() string {
	if x != nil {
		return x.TargetObjectId
	}
	return ""
}

type RpcBlockDataviewCreateFromExistingObjectResponse struct {
	state          protoimpl.MessageState                                 `protogen:"open.v1"`
	Error          *RpcBlockDataviewCreateFromExistingObjectResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	BlockId        string                                                 `protobuf:"bytes,2,opt,name=blockId,proto3" json:"blockId,omitempty"`
	TargetObjectId string                                                 `protobuf:"bytes,3,opt,name=targetObjectId,proto3" json:"targetObjectId,omitempty"`
	View           []*model.BlockContentDataviewView                      `protobuf:"bytes,4,rep,name=view,proto3" json:"view,omitempty"`
	Event          *ResponseEvent                                         `protobuf:"bytes,5,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RpcBlockDataviewCreateFromExistingObjectResponse) Reset() {
	*x = RpcBlockDataviewCreateFromExistingObjectResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[986]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewCreateFromExistingObjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewCreateFromExistingObjectResponse) ProtoMessage() {}

func (x *RpcBlockDataviewCreateFromExistingObjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[986]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewCreateFromExistingObjectResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewCreateFromExistingObjectResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 5, 1}
}

func (x *RpcBlockDataviewCreateFromExistingObjectResponse) GetError() *RpcBlockDataviewCreateFromExistingObjectResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcBlockDataviewCreateFromExistingObjectResponse) GetBlockId() string {
	if x != nil {
		return x.BlockId
	}
	return ""
}

func (x *RpcBlockDataviewCreateFromExistingObjectResponse) GetTargetObjectId() string {
	if x != nil {
		return x.TargetObjectId
	}
	return ""
}

func (x *RpcBlockDataviewCreateFromExistingObjectResponse) GetView() []*model.BlockContentDataviewView {
	if x != nil {
		return x.View
	}
	return nil
}

func (x *RpcBlockDataviewCreateFromExistingObjectResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcBlockDataviewCreateFromExistingObjectResponseError struct {
	state         protoimpl.MessageState                                    `protogen:"open.v1"`
	Code          RpcBlockDataviewCreateFromExistingObjectResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockDataviewCreateFromExistingObjectResponseErrorCode" json:"code,omitempty"`
	Description   string                                                    `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewCreateFromExistingObjectResponseError) Reset() {
	*x = RpcBlockDataviewCreateFromExistingObjectResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[987]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewCreateFromExistingObjectResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewCreateFromExistingObjectResponseError) ProtoMessage() {}

func (x *RpcBlockDataviewCreateFromExistingObjectResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[987]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewCreateFromExistingObjectResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewCreateFromExistingObjectResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 5, 1, 0}
}

func (x *RpcBlockDataviewCreateFromExistingObjectResponseError) GetCode() RpcBlockDataviewCreateFromExistingObjectResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockDataviewCreateFromExistingObjectResponseError_NULL
}

func (x *RpcBlockDataviewCreateFromExistingObjectResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockDataviewFilterAdd struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewFilterAdd) Reset() {
	*x = RpcBlockDataviewFilterAdd{}
	mi := &file_pb_protos_commands_proto_msgTypes[988]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewFilterAdd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewFilterAdd) ProtoMessage() {}

func (x *RpcBlockDataviewFilterAdd) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[988]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewFilterAdd.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewFilterAdd) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 6, 0}
}

type RpcBlockDataviewFilterRemove struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewFilterRemove) Reset() {
	*x = RpcBlockDataviewFilterRemove{}
	mi := &file_pb_protos_commands_proto_msgTypes[989]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewFilterRemove) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewFilterRemove) ProtoMessage() {}

func (x *RpcBlockDataviewFilterRemove) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[989]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewFilterRemove.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewFilterRemove) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 6, 1}
}

type RpcBlockDataviewFilterReplace struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewFilterReplace) Reset() {
	*x = RpcBlockDataviewFilterReplace{}
	mi := &file_pb_protos_commands_proto_msgTypes[990]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewFilterReplace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewFilterReplace) ProtoMessage() {}

func (x *RpcBlockDataviewFilterReplace) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[990]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewFilterReplace.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewFilterReplace) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 6, 2}
}

type RpcBlockDataviewFilterSort struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewFilterSort) Reset() {
	*x = RpcBlockDataviewFilterSort{}
	mi := &file_pb_protos_commands_proto_msgTypes[991]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewFilterSort) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewFilterSort) ProtoMessage() {}

func (x *RpcBlockDataviewFilterSort) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[991]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewFilterSort.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewFilterSort) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 6, 3}
}

type RpcBlockDataviewFilterAddRequest struct {
	state         protoimpl.MessageState            `protogen:"open.v1"`
	ContextId     string                            `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	BlockId       string                            `protobuf:"bytes,2,opt,name=blockId,proto3" json:"blockId,omitempty"` // id of dataview block to update
	ViewId        string                            `protobuf:"bytes,3,opt,name=viewId,proto3" json:"viewId,omitempty"`   // id of view to update
	Filter        *model.BlockContentDataviewFilter `protobuf:"bytes,4,opt,name=filter,proto3" json:"filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewFilterAddRequest) Reset() {
	*x = RpcBlockDataviewFilterAddRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[992]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewFilterAddRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewFilterAddRequest) ProtoMessage() {}

func (x *RpcBlockDataviewFilterAddRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[992]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewFilterAddRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewFilterAddRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 6, 0, 0}
}

func (x *RpcBlockDataviewFilterAddRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockDataviewFilterAddRequest) GetBlockId() string {
	if x != nil {
		return x.BlockId
	}
	return ""
}

func (x *RpcBlockDataviewFilterAddRequest) GetViewId() string {
	if x != nil {
		return x.ViewId
	}
	return ""
}

func (x *RpcBlockDataviewFilterAddRequest) GetFilter() *model.BlockContentDataviewFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type RpcBlockDataviewFilterAddResponse struct {
	state         protoimpl.MessageState                  `protogen:"open.v1"`
	Error         *RpcBlockDataviewFilterAddResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent                          `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewFilterAddResponse) Reset() {
	*x = RpcBlockDataviewFilterAddResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[993]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewFilterAddResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewFilterAddResponse) ProtoMessage() {}

func (x *RpcBlockDataviewFilterAddResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[993]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewFilterAddResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewFilterAddResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 6, 0, 1}
}

func (x *RpcBlockDataviewFilterAddResponse) GetError() *RpcBlockDataviewFilterAddResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcBlockDataviewFilterAddResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcBlockDataviewFilterAddResponseError struct {
	state         protoimpl.MessageState                     `protogen:"open.v1"`
	Code          RpcBlockDataviewFilterAddResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockDataviewFilterAddResponseErrorCode" json:"code,omitempty"`
	Description   string                                     `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewFilterAddResponseError) Reset() {
	*x = RpcBlockDataviewFilterAddResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[994]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewFilterAddResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewFilterAddResponseError) ProtoMessage() {}

func (x *RpcBlockDataviewFilterAddResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[994]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewFilterAddResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewFilterAddResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 6, 0, 1, 0}
}

func (x *RpcBlockDataviewFilterAddResponseError) GetCode() RpcBlockDataviewFilterAddResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockDataviewFilterAddResponseError_NULL
}

func (x *RpcBlockDataviewFilterAddResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockDataviewFilterRemoveRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextId     string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	BlockId       string                 `protobuf:"bytes,2,opt,name=blockId,proto3" json:"blockId,omitempty"` // id of dataview block to update
	ViewId        string                 `protobuf:"bytes,3,opt,name=viewId,proto3" json:"viewId,omitempty"`   // id of view to update
	Ids           []string               `protobuf:"bytes,4,rep,name=ids,proto3" json:"ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewFilterRemoveRequest) Reset() {
	*x = RpcBlockDataviewFilterRemoveRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[995]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewFilterRemoveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewFilterRemoveRequest) ProtoMessage() {}

func (x *RpcBlockDataviewFilterRemoveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[995]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewFilterRemoveRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewFilterRemoveRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 6, 1, 0}
}

func (x *RpcBlockDataviewFilterRemoveRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockDataviewFilterRemoveRequest) GetBlockId() string {
	if x != nil {
		return x.BlockId
	}
	return ""
}

func (x *RpcBlockDataviewFilterRemoveRequest) GetViewId() string {
	if x != nil {
		return x.ViewId
	}
	return ""
}

func (x *RpcBlockDataviewFilterRemoveRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

type RpcBlockDataviewFilterRemoveResponse struct {
	state         protoimpl.MessageState                     `protogen:"open.v1"`
	Error         *RpcBlockDataviewFilterRemoveResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent                             `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewFilterRemoveResponse) Reset() {
	*x = RpcBlockDataviewFilterRemoveResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[996]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewFilterRemoveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewFilterRemoveResponse) ProtoMessage() {}

func (x *RpcBlockDataviewFilterRemoveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[996]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewFilterRemoveResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewFilterRemoveResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 6, 1, 1}
}

func (x *RpcBlockDataviewFilterRemoveResponse) GetError() *RpcBlockDataviewFilterRemoveResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcBlockDataviewFilterRemoveResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcBlockDataviewFilterRemoveResponseError struct {
	state         protoimpl.MessageState                        `protogen:"open.v1"`
	Code          RpcBlockDataviewFilterRemoveResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockDataviewFilterRemoveResponseErrorCode" json:"code,omitempty"`
	Description   string                                        `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewFilterRemoveResponseError) Reset() {
	*x = RpcBlockDataviewFilterRemoveResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[997]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewFilterRemoveResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewFilterRemoveResponseError) ProtoMessage() {}

func (x *RpcBlockDataviewFilterRemoveResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[997]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewFilterRemoveResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewFilterRemoveResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 6, 1, 1, 0}
}

func (x *RpcBlockDataviewFilterRemoveResponseError) GetCode() RpcBlockDataviewFilterRemoveResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockDataviewFilterRemoveResponseError_NULL
}

func (x *RpcBlockDataviewFilterRemoveResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockDataviewFilterReplaceRequest struct {
	state         protoimpl.MessageState            `protogen:"open.v1"`
	ContextId     string                            `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	BlockId       string                            `protobuf:"bytes,2,opt,name=blockId,proto3" json:"blockId,omitempty"` // id of dataview block to update
	ViewId        string                            `protobuf:"bytes,3,opt,name=viewId,proto3" json:"viewId,omitempty"`   // id of view to update
	Id            string                            `protobuf:"bytes,4,opt,name=id,proto3" json:"id,omitempty"`
	Filter        *model.BlockContentDataviewFilter `protobuf:"bytes,5,opt,name=filter,proto3" json:"filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewFilterReplaceRequest) Reset() {
	*x = RpcBlockDataviewFilterReplaceRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[998]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewFilterReplaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewFilterReplaceRequest) ProtoMessage() {}

func (x *RpcBlockDataviewFilterReplaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[998]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewFilterReplaceRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewFilterReplaceRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 6, 2, 0}
}

func (x *RpcBlockDataviewFilterReplaceRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockDataviewFilterReplaceRequest) GetBlockId() string {
	if x != nil {
		return x.BlockId
	}
	return ""
}

func (x *RpcBlockDataviewFilterReplaceRequest) GetViewId() string {
	if x != nil {
		return x.ViewId
	}
	return ""
}

func (x *RpcBlockDataviewFilterReplaceRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RpcBlockDataviewFilterReplaceRequest) GetFilter() *model.BlockContentDataviewFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type RpcBlockDataviewFilterReplaceResponse struct {
	state         protoimpl.MessageState                      `protogen:"open.v1"`
	Error         *RpcBlockDataviewFilterReplaceResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent                              `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewFilterReplaceResponse) Reset() {
	*x = RpcBlockDataviewFilterReplaceResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[999]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewFilterReplaceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewFilterReplaceResponse) ProtoMessage() {}

func (x *RpcBlockDataviewFilterReplaceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[999]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewFilterReplaceResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewFilterReplaceResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 6, 2, 1}
}

func (x *RpcBlockDataviewFilterReplaceResponse) GetError() *RpcBlockDataviewFilterReplaceResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcBlockDataviewFilterReplaceResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcBlockDataviewFilterReplaceResponseError struct {
	state         protoimpl.MessageState                         `protogen:"open.v1"`
	Code          RpcBlockDataviewFilterReplaceResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockDataviewFilterReplaceResponseErrorCode" json:"code,omitempty"`
	Description   string                                         `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewFilterReplaceResponseError) Reset() {
	*x = RpcBlockDataviewFilterReplaceResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[1000]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewFilterReplaceResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewFilterReplaceResponseError) ProtoMessage() {}

func (x *RpcBlockDataviewFilterReplaceResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1000]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewFilterReplaceResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewFilterReplaceResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 6, 2, 1, 0}
}

func (x *RpcBlockDataviewFilterReplaceResponseError) GetCode() RpcBlockDataviewFilterReplaceResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockDataviewFilterReplaceResponseError_NULL
}

func (x *RpcBlockDataviewFilterReplaceResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockDataviewFilterSortRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextId     string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	BlockId       string                 `protobuf:"bytes,2,opt,name=blockId,proto3" json:"blockId,omitempty"` // id of dataview block to update
	ViewId        string                 `protobuf:"bytes,3,opt,name=viewId,proto3" json:"viewId,omitempty"`   // id of view to update
	Ids           []string               `protobuf:"bytes,4,rep,name=ids,proto3" json:"ids,omitempty"`         // new order of filters
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewFilterSortRequest) Reset() {
	*x = RpcBlockDataviewFilterSortRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[1001]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewFilterSortRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewFilterSortRequest) ProtoMessage() {}

func (x *RpcBlockDataviewFilterSortRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1001]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewFilterSortRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewFilterSortRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 6, 3, 0}
}

func (x *RpcBlockDataviewFilterSortRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockDataviewFilterSortRequest) GetBlockId() string {
	if x != nil {
		return x.BlockId
	}
	return ""
}

func (x *RpcBlockDataviewFilterSortRequest) GetViewId() string {
	if x != nil {
		return x.ViewId
	}
	return ""
}

func (x *RpcBlockDataviewFilterSortRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

type RpcBlockDataviewFilterSortResponse struct {
	state         protoimpl.MessageState                   `protogen:"open.v1"`
	Error         *RpcBlockDataviewFilterSortResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent                           `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewFilterSortResponse) Reset() {
	*x = RpcBlockDataviewFilterSortResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[1002]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewFilterSortResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewFilterSortResponse) ProtoMessage() {}

func (x *RpcBlockDataviewFilterSortResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1002]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewFilterSortResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewFilterSortResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 6, 3, 1}
}

func (x *RpcBlockDataviewFilterSortResponse) GetError() *RpcBlockDataviewFilterSortResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcBlockDataviewFilterSortResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcBlockDataviewFilterSortResponseError struct {
	state         protoimpl.MessageState                      `protogen:"open.v1"`
	Code          RpcBlockDataviewFilterSortResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockDataviewFilterSortResponseErrorCode" json:"code,omitempty"`
	Description   string                                      `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewFilterSortResponseError) Reset() {
	*x = RpcBlockDataviewFilterSortResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[1003]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewFilterSortResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewFilterSortResponseError) ProtoMessage() {}

func (x *RpcBlockDataviewFilterSortResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1003]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewFilterSortResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewFilterSortResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 6, 3, 1, 0}
}

func (x *RpcBlockDataviewFilterSortResponseError) GetCode() RpcBlockDataviewFilterSortResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockDataviewFilterSortResponseError_NULL
}

func (x *RpcBlockDataviewFilterSortResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockDataviewSortAdd struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewSortAdd) Reset() {
	*x = RpcBlockDataviewSortAdd{}
	mi := &file_pb_protos_commands_proto_msgTypes[1004]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewSortAdd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewSortAdd) ProtoMessage() {}

func (x *RpcBlockDataviewSortAdd) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1004]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewSortAdd.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewSortAdd) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 7, 0}
}

type RpcBlockDataviewSortRemove struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewSortRemove) Reset() {
	*x = RpcBlockDataviewSortRemove{}
	mi := &file_pb_protos_commands_proto_msgTypes[1005]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewSortRemove) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewSortRemove) ProtoMessage() {}

func (x *RpcBlockDataviewSortRemove) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1005]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewSortRemove.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewSortRemove) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 7, 1}
}

type RpcBlockDataviewSortReplace struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewSortReplace) Reset() {
	*x = RpcBlockDataviewSortReplace{}
	mi := &file_pb_protos_commands_proto_msgTypes[1006]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewSortReplace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewSortReplace) ProtoMessage() {}

func (x *RpcBlockDataviewSortReplace) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1006]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewSortReplace.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewSortReplace) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 7, 2}
}

type RpcBlockDataviewSortSSort struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewSortSSort) Reset() {
	*x = RpcBlockDataviewSortSSort{}
	mi := &file_pb_protos_commands_proto_msgTypes[1007]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewSortSSort) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewSortSSort) ProtoMessage() {}

func (x *RpcBlockDataviewSortSSort) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1007]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewSortSSort.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewSortSSort) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 7, 3}
}

type RpcBlockDataviewSortAddRequest struct {
	state         protoimpl.MessageState          `protogen:"open.v1"`
	ContextId     string                          `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	BlockId       string                          `protobuf:"bytes,2,opt,name=blockId,proto3" json:"blockId,omitempty"` // id of dataview block to update
	ViewId        string                          `protobuf:"bytes,3,opt,name=viewId,proto3" json:"viewId,omitempty"`   // id of view to update
	Sort          *model.BlockContentDataviewSort `protobuf:"bytes,4,opt,name=sort,proto3" json:"sort,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewSortAddRequest) Reset() {
	*x = RpcBlockDataviewSortAddRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[1008]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewSortAddRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewSortAddRequest) ProtoMessage() {}

func (x *RpcBlockDataviewSortAddRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1008]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewSortAddRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewSortAddRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 7, 0, 0}
}

func (x *RpcBlockDataviewSortAddRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockDataviewSortAddRequest) GetBlockId() string {
	if x != nil {
		return x.BlockId
	}
	return ""
}

func (x *RpcBlockDataviewSortAddRequest) GetViewId() string {
	if x != nil {
		return x.ViewId
	}
	return ""
}

func (x *RpcBlockDataviewSortAddRequest) GetSort() *model.BlockContentDataviewSort {
	if x != nil {
		return x.Sort
	}
	return nil
}

type RpcBlockDataviewSortAddResponse struct {
	state         protoimpl.MessageState                `protogen:"open.v1"`
	Error         *RpcBlockDataviewSortAddResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent                        `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewSortAddResponse) Reset() {
	*x = RpcBlockDataviewSortAddResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[1009]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewSortAddResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewSortAddResponse) ProtoMessage() {}

func (x *RpcBlockDataviewSortAddResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1009]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewSortAddResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewSortAddResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 7, 0, 1}
}

func (x *RpcBlockDataviewSortAddResponse) GetError() *RpcBlockDataviewSortAddResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcBlockDataviewSortAddResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcBlockDataviewSortAddResponseError struct {
	state         protoimpl.MessageState                   `protogen:"open.v1"`
	Code          RpcBlockDataviewSortAddResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockDataviewSortAddResponseErrorCode" json:"code,omitempty"`
	Description   string                                   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewSortAddResponseError) Reset() {
	*x = RpcBlockDataviewSortAddResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[1010]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewSortAddResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewSortAddResponseError) ProtoMessage() {}

func (x *RpcBlockDataviewSortAddResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1010]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewSortAddResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewSortAddResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 7, 0, 1, 0}
}

func (x *RpcBlockDataviewSortAddResponseError) GetCode() RpcBlockDataviewSortAddResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockDataviewSortAddResponseError_NULL
}

func (x *RpcBlockDataviewSortAddResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockDataviewSortRemoveRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextId     string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	BlockId       string                 `protobuf:"bytes,2,opt,name=blockId,proto3" json:"blockId,omitempty"` // id of dataview block to update
	ViewId        string                 `protobuf:"bytes,3,opt,name=viewId,proto3" json:"viewId,omitempty"`   // id of view to update
	Ids           []string               `protobuf:"bytes,4,rep,name=ids,proto3" json:"ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewSortRemoveRequest) Reset() {
	*x = RpcBlockDataviewSortRemoveRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[1011]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewSortRemoveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewSortRemoveRequest) ProtoMessage() {}

func (x *RpcBlockDataviewSortRemoveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1011]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewSortRemoveRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewSortRemoveRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 7, 1, 0}
}

func (x *RpcBlockDataviewSortRemoveRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockDataviewSortRemoveRequest) GetBlockId() string {
	if x != nil {
		return x.BlockId
	}
	return ""
}

func (x *RpcBlockDataviewSortRemoveRequest) GetViewId() string {
	if x != nil {
		return x.ViewId
	}
	return ""
}

func (x *RpcBlockDataviewSortRemoveRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

type RpcBlockDataviewSortRemoveResponse struct {
	state         protoimpl.MessageState                   `protogen:"open.v1"`
	Error         *RpcBlockDataviewSortRemoveResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent                           `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewSortRemoveResponse) Reset() {
	*x = RpcBlockDataviewSortRemoveResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[1012]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewSortRemoveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewSortRemoveResponse) ProtoMessage() {}

func (x *RpcBlockDataviewSortRemoveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1012]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewSortRemoveResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewSortRemoveResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 7, 1, 1}
}

func (x *RpcBlockDataviewSortRemoveResponse) GetError() *RpcBlockDataviewSortRemoveResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcBlockDataviewSortRemoveResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcBlockDataviewSortRemoveResponseError struct {
	state         protoimpl.MessageState                      `protogen:"open.v1"`
	Code          RpcBlockDataviewSortRemoveResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockDataviewSortRemoveResponseErrorCode" json:"code,omitempty"`
	Description   string                                      `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewSortRemoveResponseError) Reset() {
	*x = RpcBlockDataviewSortRemoveResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[1013]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewSortRemoveResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewSortRemoveResponseError) ProtoMessage() {}

func (x *RpcBlockDataviewSortRemoveResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1013]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewSortRemoveResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewSortRemoveResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 7, 1, 1, 0}
}

func (x *RpcBlockDataviewSortRemoveResponseError) GetCode() RpcBlockDataviewSortRemoveResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockDataviewSortRemoveResponseError_NULL
}

func (x *RpcBlockDataviewSortRemoveResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockDataviewSortReplaceRequest struct {
	state         protoimpl.MessageState          `protogen:"open.v1"`
	ContextId     string                          `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	BlockId       string                          `protobuf:"bytes,2,opt,name=blockId,proto3" json:"blockId,omitempty"` // id of dataview block to update
	ViewId        string                          `protobuf:"bytes,3,opt,name=viewId,proto3" json:"viewId,omitempty"`   // id of view to update
	Id            string                          `protobuf:"bytes,4,opt,name=id,proto3" json:"id,omitempty"`
	Sort          *model.BlockContentDataviewSort `protobuf:"bytes,5,opt,name=sort,proto3" json:"sort,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewSortReplaceRequest) Reset() {
	*x = RpcBlockDataviewSortReplaceRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[1014]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewSortReplaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewSortReplaceRequest) ProtoMessage() {}

func (x *RpcBlockDataviewSortReplaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1014]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewSortReplaceRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewSortReplaceRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 7, 2, 0}
}

func (x *RpcBlockDataviewSortReplaceRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockDataviewSortReplaceRequest) GetBlockId() string {
	if x != nil {
		return x.BlockId
	}
	return ""
}

func (x *RpcBlockDataviewSortReplaceRequest) GetViewId() string {
	if x != nil {
		return x.ViewId
	}
	return ""
}

func (x *RpcBlockDataviewSortReplaceRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RpcBlockDataviewSortReplaceRequest) GetSort() *model.BlockContentDataviewSort {
	if x != nil {
		return x.Sort
	}
	return nil
}

type RpcBlockDataviewSortReplaceResponse struct {
	state         protoimpl.MessageState                    `protogen:"open.v1"`
	Error         *RpcBlockDataviewSortReplaceResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent                            `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewSortReplaceResponse) Reset() {
	*x = RpcBlockDataviewSortReplaceResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[1015]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewSortReplaceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewSortReplaceResponse) ProtoMessage() {}

func (x *RpcBlockDataviewSortReplaceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1015]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewSortReplaceResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewSortReplaceResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 7, 2, 1}
}

func (x *RpcBlockDataviewSortReplaceResponse) GetError() *RpcBlockDataviewSortReplaceResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcBlockDataviewSortReplaceResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcBlockDataviewSortReplaceResponseError struct {
	state         protoimpl.MessageState                       `protogen:"open.v1"`
	Code          RpcBlockDataviewSortReplaceResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockDataviewSortReplaceResponseErrorCode" json:"code,omitempty"`
	Description   string                                       `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewSortReplaceResponseError) Reset() {
	*x = RpcBlockDataviewSortReplaceResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[1016]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewSortReplaceResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewSortReplaceResponseError) ProtoMessage() {}

func (x *RpcBlockDataviewSortReplaceResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1016]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewSortReplaceResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewSortReplaceResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 7, 2, 1, 0}
}

func (x *RpcBlockDataviewSortReplaceResponseError) GetCode() RpcBlockDataviewSortReplaceResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockDataviewSortReplaceResponseError_NULL
}

func (x *RpcBlockDataviewSortReplaceResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockDataviewSortSSortRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextId     string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	BlockId       string                 `protobuf:"bytes,2,opt,name=blockId,proto3" json:"blockId,omitempty"` // id of dataview block to update
	ViewId        string                 `protobuf:"bytes,3,opt,name=viewId,proto3" json:"viewId,omitempty"`   // id of view to update
	Ids           []string               `protobuf:"bytes,4,rep,name=ids,proto3" json:"ids,omitempty"`         // new order of sorts
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewSortSSortRequest) Reset() {
	*x = RpcBlockDataviewSortSSortRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[1017]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewSortSSortRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewSortSSortRequest) ProtoMessage() {}

func (x *RpcBlockDataviewSortSSortRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1017]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewSortSSortRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewSortSSortRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 7, 3, 0}
}

func (x *RpcBlockDataviewSortSSortRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockDataviewSortSSortRequest) GetBlockId() string {
	if x != nil {
		return x.BlockId
	}
	return ""
}

func (x *RpcBlockDataviewSortSSortRequest) GetViewId() string {
	if x != nil {
		return x.ViewId
	}
	return ""
}

func (x *RpcBlockDataviewSortSSortRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

type RpcBlockDataviewSortSSortResponse struct {
	state         protoimpl.MessageState                  `protogen:"open.v1"`
	Error         *RpcBlockDataviewSortSSortResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent                          `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewSortSSortResponse) Reset() {
	*x = RpcBlockDataviewSortSSortResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[1018]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewSortSSortResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewSortSSortResponse) ProtoMessage() {}

func (x *RpcBlockDataviewSortSSortResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1018]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewSortSSortResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewSortSSortResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 7, 3, 1}
}

func (x *RpcBlockDataviewSortSSortResponse) GetError() *RpcBlockDataviewSortSSortResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcBlockDataviewSortSSortResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcBlockDataviewSortSSortResponseError struct {
	state         protoimpl.MessageState                     `protogen:"open.v1"`
	Code          RpcBlockDataviewSortSSortResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockDataviewSortSSortResponseErrorCode" json:"code,omitempty"`
	Description   string                                     `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewSortSSortResponseError) Reset() {
	*x = RpcBlockDataviewSortSSortResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[1019]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewSortSSortResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewSortSSortResponseError) ProtoMessage() {}

func (x *RpcBlockDataviewSortSSortResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1019]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewSortSSortResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewSortSSortResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 7, 3, 1, 0}
}

func (x *RpcBlockDataviewSortSSortResponseError) GetCode() RpcBlockDataviewSortSSortResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockDataviewSortSSortResponseError_NULL
}

func (x *RpcBlockDataviewSortSSortResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockDataviewViewRelationAdd struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewViewRelationAdd) Reset() {
	*x = RpcBlockDataviewViewRelationAdd{}
	mi := &file_pb_protos_commands_proto_msgTypes[1020]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewViewRelationAdd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewViewRelationAdd) ProtoMessage() {}

func (x *RpcBlockDataviewViewRelationAdd) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1020]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewViewRelationAdd.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewViewRelationAdd) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 8, 0}
}

type RpcBlockDataviewViewRelationRemove struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewViewRelationRemove) Reset() {
	*x = RpcBlockDataviewViewRelationRemove{}
	mi := &file_pb_protos_commands_proto_msgTypes[1021]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewViewRelationRemove) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewViewRelationRemove) ProtoMessage() {}

func (x *RpcBlockDataviewViewRelationRemove) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1021]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewViewRelationRemove.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewViewRelationRemove) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 8, 1}
}

type RpcBlockDataviewViewRelationReplace struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewViewRelationReplace) Reset() {
	*x = RpcBlockDataviewViewRelationReplace{}
	mi := &file_pb_protos_commands_proto_msgTypes[1022]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewViewRelationReplace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewViewRelationReplace) ProtoMessage() {}

func (x *RpcBlockDataviewViewRelationReplace) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1022]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewViewRelationReplace.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewViewRelationReplace) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 8, 2}
}

type RpcBlockDataviewViewRelationSort struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewViewRelationSort) Reset() {
	*x = RpcBlockDataviewViewRelationSort{}
	mi := &file_pb_protos_commands_proto_msgTypes[1023]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewViewRelationSort) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewViewRelationSort) ProtoMessage() {}

func (x *RpcBlockDataviewViewRelationSort) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1023]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewViewRelationSort.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewViewRelationSort) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 8, 3}
}

type RpcBlockDataviewViewRelationAddRequest struct {
	state         protoimpl.MessageState              `protogen:"open.v1"`
	ContextId     string                              `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	BlockId       string                              `protobuf:"bytes,2,opt,name=blockId,proto3" json:"blockId,omitempty"` // id of dataview block to update
	ViewId        string                              `protobuf:"bytes,3,opt,name=viewId,proto3" json:"viewId,omitempty"`   // id of view to update
	Relation      *model.BlockContentDataviewRelation `protobuf:"bytes,4,opt,name=relation,proto3" json:"relation,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewViewRelationAddRequest) Reset() {
	*x = RpcBlockDataviewViewRelationAddRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[1024]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewViewRelationAddRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewViewRelationAddRequest) ProtoMessage() {}

func (x *RpcBlockDataviewViewRelationAddRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1024]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewViewRelationAddRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewViewRelationAddRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 8, 0, 0}
}

func (x *RpcBlockDataviewViewRelationAddRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockDataviewViewRelationAddRequest) GetBlockId() string {
	if x != nil {
		return x.BlockId
	}
	return ""
}

func (x *RpcBlockDataviewViewRelationAddRequest) GetViewId() string {
	if x != nil {
		return x.ViewId
	}
	return ""
}

func (x *RpcBlockDataviewViewRelationAddRequest) GetRelation() *model.BlockContentDataviewRelation {
	if x != nil {
		return x.Relation
	}
	return nil
}

type RpcBlockDataviewViewRelationAddResponse struct {
	state         protoimpl.MessageState                        `protogen:"open.v1"`
	Error         *RpcBlockDataviewViewRelationAddResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent                                `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewViewRelationAddResponse) Reset() {
	*x = RpcBlockDataviewViewRelationAddResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[1025]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewViewRelationAddResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewViewRelationAddResponse) ProtoMessage() {}

func (x *RpcBlockDataviewViewRelationAddResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1025]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewViewRelationAddResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewViewRelationAddResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 8, 0, 1}
}

func (x *RpcBlockDataviewViewRelationAddResponse) GetError() *RpcBlockDataviewViewRelationAddResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcBlockDataviewViewRelationAddResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcBlockDataviewViewRelationAddResponseError struct {
	state         protoimpl.MessageState                           `protogen:"open.v1"`
	Code          RpcBlockDataviewViewRelationAddResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockDataviewViewRelationAddResponseErrorCode" json:"code,omitempty"`
	Description   string                                           `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewViewRelationAddResponseError) Reset() {
	*x = RpcBlockDataviewViewRelationAddResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[1026]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewViewRelationAddResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewViewRelationAddResponseError) ProtoMessage() {}

func (x *RpcBlockDataviewViewRelationAddResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1026]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewViewRelationAddResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewViewRelationAddResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 8, 0, 1, 0}
}

func (x *RpcBlockDataviewViewRelationAddResponseError) GetCode() RpcBlockDataviewViewRelationAddResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockDataviewViewRelationAddResponseError_NULL
}

func (x *RpcBlockDataviewViewRelationAddResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockDataviewViewRelationRemoveRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextId     string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	BlockId       string                 `protobuf:"bytes,2,opt,name=blockId,proto3" json:"blockId,omitempty"` // id of dataview block to update
	ViewId        string                 `protobuf:"bytes,3,opt,name=viewId,proto3" json:"viewId,omitempty"`   // id of view to update
	RelationKeys  []string               `protobuf:"bytes,4,rep,name=relationKeys,proto3" json:"relationKeys,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewViewRelationRemoveRequest) Reset() {
	*x = RpcBlockDataviewViewRelationRemoveRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[1027]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewViewRelationRemoveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewViewRelationRemoveRequest) ProtoMessage() {}

func (x *RpcBlockDataviewViewRelationRemoveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1027]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewViewRelationRemoveRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewViewRelationRemoveRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 8, 1, 0}
}

func (x *RpcBlockDataviewViewRelationRemoveRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockDataviewViewRelationRemoveRequest) GetBlockId() string {
	if x != nil {
		return x.BlockId
	}
	return ""
}

func (x *RpcBlockDataviewViewRelationRemoveRequest) GetViewId() string {
	if x != nil {
		return x.ViewId
	}
	return ""
}

func (x *RpcBlockDataviewViewRelationRemoveRequest) GetRelationKeys() []string {
	if x != nil {
		return x.RelationKeys
	}
	return nil
}

type RpcBlockDataviewViewRelationRemoveResponse struct {
	state         protoimpl.MessageState                           `protogen:"open.v1"`
	Error         *RpcBlockDataviewViewRelationRemoveResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent                                   `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewViewRelationRemoveResponse) Reset() {
	*x = RpcBlockDataviewViewRelationRemoveResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[1028]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewViewRelationRemoveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewViewRelationRemoveResponse) ProtoMessage() {}

func (x *RpcBlockDataviewViewRelationRemoveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1028]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewViewRelationRemoveResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewViewRelationRemoveResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 8, 1, 1}
}

func (x *RpcBlockDataviewViewRelationRemoveResponse) GetError() *RpcBlockDataviewViewRelationRemoveResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcBlockDataviewViewRelationRemoveResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcBlockDataviewViewRelationRemoveResponseError struct {
	state         protoimpl.MessageState                              `protogen:"open.v1"`
	Code          RpcBlockDataviewViewRelationRemoveResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockDataviewViewRelationRemoveResponseErrorCode" json:"code,omitempty"`
	Description   string                                              `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewViewRelationRemoveResponseError) Reset() {
	*x = RpcBlockDataviewViewRelationRemoveResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[1029]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewViewRelationRemoveResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewViewRelationRemoveResponseError) ProtoMessage() {}

func (x *RpcBlockDataviewViewRelationRemoveResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1029]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewViewRelationRemoveResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewViewRelationRemoveResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 8, 1, 1, 0}
}

func (x *RpcBlockDataviewViewRelationRemoveResponseError) GetCode() RpcBlockDataviewViewRelationRemoveResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockDataviewViewRelationRemoveResponseError_NULL
}

func (x *RpcBlockDataviewViewRelationRemoveResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockDataviewViewRelationReplaceRequest struct {
	state         protoimpl.MessageState              `protogen:"open.v1"`
	ContextId     string                              `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	BlockId       string                              `protobuf:"bytes,2,opt,name=blockId,proto3" json:"blockId,omitempty"` // id of dataview block to update
	ViewId        string                              `protobuf:"bytes,3,opt,name=viewId,proto3" json:"viewId,omitempty"`   // id of view to update
	RelationKey   string                              `protobuf:"bytes,4,opt,name=relationKey,proto3" json:"relationKey,omitempty"`
	Relation      *model.BlockContentDataviewRelation `protobuf:"bytes,5,opt,name=relation,proto3" json:"relation,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewViewRelationReplaceRequest) Reset() {
	*x = RpcBlockDataviewViewRelationReplaceRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[1030]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewViewRelationReplaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewViewRelationReplaceRequest) ProtoMessage() {}

func (x *RpcBlockDataviewViewRelationReplaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1030]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewViewRelationReplaceRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewViewRelationReplaceRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 8, 2, 0}
}

func (x *RpcBlockDataviewViewRelationReplaceRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockDataviewViewRelationReplaceRequest) GetBlockId() string {
	if x != nil {
		return x.BlockId
	}
	return ""
}

func (x *RpcBlockDataviewViewRelationReplaceRequest) GetViewId() string {
	if x != nil {
		return x.ViewId
	}
	return ""
}

func (x *RpcBlockDataviewViewRelationReplaceRequest) GetRelationKey() string {
	if x != nil {
		return x.RelationKey
	}
	return ""
}

func (x *RpcBlockDataviewViewRelationReplaceRequest) GetRelation() *model.BlockContentDataviewRelation {
	if x != nil {
		return x.Relation
	}
	return nil
}

type RpcBlockDataviewViewRelationReplaceResponse struct {
	state         protoimpl.MessageState                            `protogen:"open.v1"`
	Error         *RpcBlockDataviewViewRelationReplaceResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent                                    `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewViewRelationReplaceResponse) Reset() {
	*x = RpcBlockDataviewViewRelationReplaceResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[1031]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewViewRelationReplaceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewViewRelationReplaceResponse) ProtoMessage() {}

func (x *RpcBlockDataviewViewRelationReplaceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1031]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewViewRelationReplaceResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewViewRelationReplaceResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 8, 2, 1}
}

func (x *RpcBlockDataviewViewRelationReplaceResponse) GetError() *RpcBlockDataviewViewRelationReplaceResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcBlockDataviewViewRelationReplaceResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcBlockDataviewViewRelationReplaceResponseError struct {
	state         protoimpl.MessageState                               `protogen:"open.v1"`
	Code          RpcBlockDataviewViewRelationReplaceResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockDataviewViewRelationReplaceResponseErrorCode" json:"code,omitempty"`
	Description   string                                               `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewViewRelationReplaceResponseError) Reset() {
	*x = RpcBlockDataviewViewRelationReplaceResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[1032]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewViewRelationReplaceResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewViewRelationReplaceResponseError) ProtoMessage() {}

func (x *RpcBlockDataviewViewRelationReplaceResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1032]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewViewRelationReplaceResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewViewRelationReplaceResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 8, 2, 1, 0}
}

func (x *RpcBlockDataviewViewRelationReplaceResponseError) GetCode() RpcBlockDataviewViewRelationReplaceResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockDataviewViewRelationReplaceResponseError_NULL
}

func (x *RpcBlockDataviewViewRelationReplaceResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockDataviewViewRelationSortRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextId     string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	BlockId       string                 `protobuf:"bytes,2,opt,name=blockId,proto3" json:"blockId,omitempty"`           // id of dataview block to update
	ViewId        string                 `protobuf:"bytes,3,opt,name=viewId,proto3" json:"viewId,omitempty"`             // id of view to update
	RelationKeys  []string               `protobuf:"bytes,4,rep,name=relationKeys,proto3" json:"relationKeys,omitempty"` // new order of relations
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewViewRelationSortRequest) Reset() {
	*x = RpcBlockDataviewViewRelationSortRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[1033]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewViewRelationSortRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewViewRelationSortRequest) ProtoMessage() {}

func (x *RpcBlockDataviewViewRelationSortRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1033]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewViewRelationSortRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewViewRelationSortRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 8, 3, 0}
}

func (x *RpcBlockDataviewViewRelationSortRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockDataviewViewRelationSortRequest) GetBlockId() string {
	if x != nil {
		return x.BlockId
	}
	return ""
}

func (x *RpcBlockDataviewViewRelationSortRequest) GetViewId() string {
	if x != nil {
		return x.ViewId
	}
	return ""
}

func (x *RpcBlockDataviewViewRelationSortRequest) GetRelationKeys() []string {
	if x != nil {
		return x.RelationKeys
	}
	return nil
}

type RpcBlockDataviewViewRelationSortResponse struct {
	state         protoimpl.MessageState                         `protogen:"open.v1"`
	Error         *RpcBlockDataviewViewRelationSortResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent                                 `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewViewRelationSortResponse) Reset() {
	*x = RpcBlockDataviewViewRelationSortResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[1034]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewViewRelationSortResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewViewRelationSortResponse) ProtoMessage() {}

func (x *RpcBlockDataviewViewRelationSortResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1034]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewViewRelationSortResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewViewRelationSortResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 8, 3, 1}
}

func (x *RpcBlockDataviewViewRelationSortResponse) GetError() *RpcBlockDataviewViewRelationSortResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcBlockDataviewViewRelationSortResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcBlockDataviewViewRelationSortResponseError struct {
	state         protoimpl.MessageState                            `protogen:"open.v1"`
	Code          RpcBlockDataviewViewRelationSortResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockDataviewViewRelationSortResponseErrorCode" json:"code,omitempty"`
	Description   string                                            `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockDataviewViewRelationSortResponseError) Reset() {
	*x = RpcBlockDataviewViewRelationSortResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[1035]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockDataviewViewRelationSortResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockDataviewViewRelationSortResponseError) ProtoMessage() {}

func (x *RpcBlockDataviewViewRelationSortResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1035]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockDataviewViewRelationSortResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockDataviewViewRelationSortResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 29, 8, 3, 1, 0}
}

func (x *RpcBlockDataviewViewRelationSortResponseError) GetCode() RpcBlockDataviewViewRelationSortResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockDataviewViewRelationSortResponseError_NULL
}

func (x *RpcBlockDataviewViewRelationSortResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockWidgetSetTargetId struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockWidgetSetTargetId) Reset() {
	*x = RpcBlockWidgetSetTargetId{}
	mi := &file_pb_protos_commands_proto_msgTypes[1036]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockWidgetSetTargetId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockWidgetSetTargetId) ProtoMessage() {}

func (x *RpcBlockWidgetSetTargetId) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1036]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockWidgetSetTargetId.ProtoReflect.Descriptor instead.
func (*RpcBlockWidgetSetTargetId) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 30, 0}
}

type RpcBlockWidgetSetLayout struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockWidgetSetLayout) Reset() {
	*x = RpcBlockWidgetSetLayout{}
	mi := &file_pb_protos_commands_proto_msgTypes[1037]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockWidgetSetLayout) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockWidgetSetLayout) ProtoMessage() {}

func (x *RpcBlockWidgetSetLayout) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1037]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockWidgetSetLayout.ProtoReflect.Descriptor instead.
func (*RpcBlockWidgetSetLayout) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 30, 1}
}

type RpcBlockWidgetSetLimit struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockWidgetSetLimit) Reset() {
	*x = RpcBlockWidgetSetLimit{}
	mi := &file_pb_protos_commands_proto_msgTypes[1038]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockWidgetSetLimit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockWidgetSetLimit) ProtoMessage() {}

func (x *RpcBlockWidgetSetLimit) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1038]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockWidgetSetLimit.ProtoReflect.Descriptor instead.
func (*RpcBlockWidgetSetLimit) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 30, 2}
}

type RpcBlockWidgetSetViewId struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockWidgetSetViewId) Reset() {
	*x = RpcBlockWidgetSetViewId{}
	mi := &file_pb_protos_commands_proto_msgTypes[1039]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockWidgetSetViewId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockWidgetSetViewId) ProtoMessage() {}

func (x *RpcBlockWidgetSetViewId) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1039]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockWidgetSetViewId.ProtoReflect.Descriptor instead.
func (*RpcBlockWidgetSetViewId) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 30, 3}
}

type RpcBlockWidgetSetTargetIdRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextId     string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	BlockId       string                 `protobuf:"bytes,2,opt,name=blockId,proto3" json:"blockId,omitempty"`
	TargetId      string                 `protobuf:"bytes,3,opt,name=targetId,proto3" json:"targetId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockWidgetSetTargetIdRequest) Reset() {
	*x = RpcBlockWidgetSetTargetIdRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[1040]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockWidgetSetTargetIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockWidgetSetTargetIdRequest) ProtoMessage() {}

func (x *RpcBlockWidgetSetTargetIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1040]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockWidgetSetTargetIdRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockWidgetSetTargetIdRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 30, 0, 0}
}

func (x *RpcBlockWidgetSetTargetIdRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockWidgetSetTargetIdRequest) GetBlockId() string {
	if x != nil {
		return x.BlockId
	}
	return ""
}

func (x *RpcBlockWidgetSetTargetIdRequest) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

type RpcBlockWidgetSetTargetIdResponse struct {
	state         protoimpl.MessageState                  `protogen:"open.v1"`
	Error         *RpcBlockWidgetSetTargetIdResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent                          `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockWidgetSetTargetIdResponse) Reset() {
	*x = RpcBlockWidgetSetTargetIdResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[1041]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockWidgetSetTargetIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockWidgetSetTargetIdResponse) ProtoMessage() {}

func (x *RpcBlockWidgetSetTargetIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1041]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockWidgetSetTargetIdResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockWidgetSetTargetIdResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 30, 0, 1}
}

func (x *RpcBlockWidgetSetTargetIdResponse) GetError() *RpcBlockWidgetSetTargetIdResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcBlockWidgetSetTargetIdResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcBlockWidgetSetTargetIdResponseError struct {
	state         protoimpl.MessageState                     `protogen:"open.v1"`
	Code          RpcBlockWidgetSetTargetIdResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockWidgetSetTargetIdResponseErrorCode" json:"code,omitempty"`
	Description   string                                     `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockWidgetSetTargetIdResponseError) Reset() {
	*x = RpcBlockWidgetSetTargetIdResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[1042]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockWidgetSetTargetIdResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockWidgetSetTargetIdResponseError) ProtoMessage() {}

func (x *RpcBlockWidgetSetTargetIdResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1042]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockWidgetSetTargetIdResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockWidgetSetTargetIdResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 30, 0, 1, 0}
}

func (x *RpcBlockWidgetSetTargetIdResponseError) GetCode() RpcBlockWidgetSetTargetIdResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockWidgetSetTargetIdResponseError_NULL
}

func (x *RpcBlockWidgetSetTargetIdResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockWidgetSetLayoutRequest struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	ContextId     string                         `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	BlockId       string                         `protobuf:"bytes,2,opt,name=blockId,proto3" json:"blockId,omitempty"`
	Layout        model.BlockContentWidgetLayout `protobuf:"varint,3,opt,name=layout,proto3,enum=anytype.model.BlockContentWidgetLayout" json:"layout,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockWidgetSetLayoutRequest) Reset() {
	*x = RpcBlockWidgetSetLayoutRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[1043]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockWidgetSetLayoutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockWidgetSetLayoutRequest) ProtoMessage() {}

func (x *RpcBlockWidgetSetLayoutRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1043]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockWidgetSetLayoutRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockWidgetSetLayoutRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 30, 1, 0}
}

func (x *RpcBlockWidgetSetLayoutRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockWidgetSetLayoutRequest) GetBlockId() string {
	if x != nil {
		return x.BlockId
	}
	return ""
}

func (x *RpcBlockWidgetSetLayoutRequest) GetLayout() model.BlockContentWidgetLayout {
	if x != nil {
		return x.Layout
	}
	return model.BlockContentWidgetLayout(0)
}

type RpcBlockWidgetSetLayoutResponse struct {
	state         protoimpl.MessageState                `protogen:"open.v1"`
	Error         *RpcBlockWidgetSetLayoutResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent                        `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockWidgetSetLayoutResponse) Reset() {
	*x = RpcBlockWidgetSetLayoutResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[1044]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockWidgetSetLayoutResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockWidgetSetLayoutResponse) ProtoMessage() {}

func (x *RpcBlockWidgetSetLayoutResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1044]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockWidgetSetLayoutResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockWidgetSetLayoutResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 30, 1, 1}
}

func (x *RpcBlockWidgetSetLayoutResponse) GetError() *RpcBlockWidgetSetLayoutResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcBlockWidgetSetLayoutResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcBlockWidgetSetLayoutResponseError struct {
	state         protoimpl.MessageState                   `protogen:"open.v1"`
	Code          RpcBlockWidgetSetLayoutResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockWidgetSetLayoutResponseErrorCode" json:"code,omitempty"`
	Description   string                                   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockWidgetSetLayoutResponseError) Reset() {
	*x = RpcBlockWidgetSetLayoutResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[1045]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockWidgetSetLayoutResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockWidgetSetLayoutResponseError) ProtoMessage() {}

func (x *RpcBlockWidgetSetLayoutResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1045]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockWidgetSetLayoutResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockWidgetSetLayoutResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 30, 1, 1, 0}
}

func (x *RpcBlockWidgetSetLayoutResponseError) GetCode() RpcBlockWidgetSetLayoutResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockWidgetSetLayoutResponseError_NULL
}

func (x *RpcBlockWidgetSetLayoutResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockWidgetSetLimitRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextId     string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	BlockId       string                 `protobuf:"bytes,2,opt,name=blockId,proto3" json:"blockId,omitempty"`
	Limit         int32                  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockWidgetSetLimitRequest) Reset() {
	*x = RpcBlockWidgetSetLimitRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[1046]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockWidgetSetLimitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockWidgetSetLimitRequest) ProtoMessage() {}

func (x *RpcBlockWidgetSetLimitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1046]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockWidgetSetLimitRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockWidgetSetLimitRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 30, 2, 0}
}

func (x *RpcBlockWidgetSetLimitRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockWidgetSetLimitRequest) GetBlockId() string {
	if x != nil {
		return x.BlockId
	}
	return ""
}

func (x *RpcBlockWidgetSetLimitRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type RpcBlockWidgetSetLimitResponse struct {
	state         protoimpl.MessageState               `protogen:"open.v1"`
	Error         *RpcBlockWidgetSetLimitResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent                       `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockWidgetSetLimitResponse) Reset() {
	*x = RpcBlockWidgetSetLimitResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[1047]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockWidgetSetLimitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockWidgetSetLimitResponse) ProtoMessage() {}

func (x *RpcBlockWidgetSetLimitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1047]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockWidgetSetLimitResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockWidgetSetLimitResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 30, 2, 1}
}

func (x *RpcBlockWidgetSetLimitResponse) GetError() *RpcBlockWidgetSetLimitResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcBlockWidgetSetLimitResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcBlockWidgetSetLimitResponseError struct {
	state         protoimpl.MessageState                  `protogen:"open.v1"`
	Code          RpcBlockWidgetSetLimitResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockWidgetSetLimitResponseErrorCode" json:"code,omitempty"`
	Description   string                                  `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockWidgetSetLimitResponseError) Reset() {
	*x = RpcBlockWidgetSetLimitResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[1048]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockWidgetSetLimitResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockWidgetSetLimitResponseError) ProtoMessage() {}

func (x *RpcBlockWidgetSetLimitResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1048]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockWidgetSetLimitResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockWidgetSetLimitResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 30, 2, 1, 0}
}

func (x *RpcBlockWidgetSetLimitResponseError) GetCode() RpcBlockWidgetSetLimitResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockWidgetSetLimitResponseError_NULL
}

func (x *RpcBlockWidgetSetLimitResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBlockWidgetSetViewIdRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextId     string                 `protobuf:"bytes,1,opt,name=contextId,proto3" json:"contextId,omitempty"`
	BlockId       string                 `protobuf:"bytes,2,opt,name=blockId,proto3" json:"blockId,omitempty"`
	ViewId        string                 `protobuf:"bytes,3,opt,name=viewId,proto3" json:"viewId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockWidgetSetViewIdRequest) Reset() {
	*x = RpcBlockWidgetSetViewIdRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[1049]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockWidgetSetViewIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockWidgetSetViewIdRequest) ProtoMessage() {}

func (x *RpcBlockWidgetSetViewIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1049]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockWidgetSetViewIdRequest.ProtoReflect.Descriptor instead.
func (*RpcBlockWidgetSetViewIdRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 30, 3, 0}
}

func (x *RpcBlockWidgetSetViewIdRequest) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *RpcBlockWidgetSetViewIdRequest) GetBlockId() string {
	if x != nil {
		return x.BlockId
	}
	return ""
}

func (x *RpcBlockWidgetSetViewIdRequest) GetViewId() string {
	if x != nil {
		return x.ViewId
	}
	return ""
}

type RpcBlockWidgetSetViewIdResponse struct {
	state         protoimpl.MessageState                `protogen:"open.v1"`
	Error         *RpcBlockWidgetSetViewIdResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent                        `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockWidgetSetViewIdResponse) Reset() {
	*x = RpcBlockWidgetSetViewIdResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[1050]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockWidgetSetViewIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockWidgetSetViewIdResponse) ProtoMessage() {}

func (x *RpcBlockWidgetSetViewIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1050]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockWidgetSetViewIdResponse.ProtoReflect.Descriptor instead.
func (*RpcBlockWidgetSetViewIdResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 30, 3, 1}
}

func (x *RpcBlockWidgetSetViewIdResponse) GetError() *RpcBlockWidgetSetViewIdResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcBlockWidgetSetViewIdResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcBlockWidgetSetViewIdResponseError struct {
	state         protoimpl.MessageState                   `protogen:"open.v1"`
	Code          RpcBlockWidgetSetViewIdResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBlockWidgetSetViewIdResponseErrorCode" json:"code,omitempty"`
	Description   string                                   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBlockWidgetSetViewIdResponseError) Reset() {
	*x = RpcBlockWidgetSetViewIdResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[1051]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBlockWidgetSetViewIdResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBlockWidgetSetViewIdResponseError) ProtoMessage() {}

func (x *RpcBlockWidgetSetViewIdResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1051]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBlockWidgetSetViewIdResponseError.ProtoReflect.Descriptor instead.
func (*RpcBlockWidgetSetViewIdResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 30, 3, 1, 0}
}

func (x *RpcBlockWidgetSetViewIdResponseError) GetCode() RpcBlockWidgetSetViewIdResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBlockWidgetSetViewIdResponseError_NULL
}

func (x *RpcBlockWidgetSetViewIdResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcDebugTreeInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TreeId        string                 `protobuf:"bytes,1,opt,name=treeId,proto3" json:"treeId,omitempty"`
	HeadIds       []string               `protobuf:"bytes,2,rep,name=headIds,proto3" json:"headIds,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcDebugTreeInfo) Reset() {
	*x = RpcDebugTreeInfo{}
	mi := &file_pb_protos_commands_proto_msgTypes[1052]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcDebugTreeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcDebugTreeInfo) ProtoMessage() {}

func (x *RpcDebugTreeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1052]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcDebugTreeInfo.ProtoReflect.Descriptor instead.
func (*RpcDebugTreeInfo) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 31, 0}
}

func (x *RpcDebugTreeInfo) GetTreeId() string {
	if x != nil {
		return x.TreeId
	}
	return ""
}

func (x *RpcDebugTreeInfo) GetHeadIds() []string {
	if x != nil {
		return x.HeadIds
	}
	return nil
}

type RpcDebugStat struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcDebugStat) Reset() {
	*x = RpcDebugStat{}
	mi := &file_pb_protos_commands_proto_msgTypes[1053]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcDebugStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcDebugStat) ProtoMessage() {}

func (x *RpcDebugStat) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1053]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcDebugStat.ProtoReflect.Descriptor instead.
func (*RpcDebugStat) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 31, 1}
}

type RpcDebugTreeHeads struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcDebugTreeHeads) Reset() {
	*x = RpcDebugTreeHeads{}
	mi := &file_pb_protos_commands_proto_msgTypes[1054]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcDebugTreeHeads) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcDebugTreeHeads) ProtoMessage() {}

func (x *RpcDebugTreeHeads) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1054]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcDebugTreeHeads.ProtoReflect.Descriptor instead.
func (*RpcDebugTreeHeads) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 31, 2}
}

type RpcDebugTree struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcDebugTree) Reset() {
	*x = RpcDebugTree{}
	mi := &file_pb_protos_commands_proto_msgTypes[1055]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcDebugTree) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcDebugTree) ProtoMessage() {}

func (x *RpcDebugTree) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1055]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcDebugTree.ProtoReflect.Descriptor instead.
func (*RpcDebugTree) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 31, 3}
}

type RpcDebugSpaceSummary struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcDebugSpaceSummary) Reset() {
	*x = RpcDebugSpaceSummary{}
	mi := &file_pb_protos_commands_proto_msgTypes[1056]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcDebugSpaceSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcDebugSpaceSummary) ProtoMessage() {}

func (x *RpcDebugSpaceSummary) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1056]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcDebugSpaceSummary.ProtoReflect.Descriptor instead.
func (*RpcDebugSpaceSummary) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 31, 4}
}

type RpcDebugStackGoroutines struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcDebugStackGoroutines) Reset() {
	*x = RpcDebugStackGoroutines{}
	mi := &file_pb_protos_commands_proto_msgTypes[1057]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcDebugStackGoroutines) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcDebugStackGoroutines) ProtoMessage() {}

func (x *RpcDebugStackGoroutines) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1057]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcDebugStackGoroutines.ProtoReflect.Descriptor instead.
func (*RpcDebugStackGoroutines) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 31, 5}
}

type RpcDebugExportLocalstore struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcDebugExportLocalstore) Reset() {
	*x = RpcDebugExportLocalstore{}
	mi := &file_pb_protos_commands_proto_msgTypes[1058]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcDebugExportLocalstore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcDebugExportLocalstore) ProtoMessage() {}

func (x *RpcDebugExportLocalstore) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1058]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcDebugExportLocalstore.ProtoReflect.Descriptor instead.
func (*RpcDebugExportLocalstore) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 31, 6}
}

type RpcDebugSubscriptions struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcDebugSubscriptions) Reset() {
	*x = RpcDebugSubscriptions{}
	mi := &file_pb_protos_commands_proto_msgTypes[1059]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcDebugSubscriptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcDebugSubscriptions) ProtoMessage() {}

func (x *RpcDebugSubscriptions) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1059]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcDebugSubscriptions.ProtoReflect.Descriptor instead.
func (*RpcDebugSubscriptions) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 31, 7}
}

type RpcDebugOpenedObjects struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcDebugOpenedObjects) Reset() {
	*x = RpcDebugOpenedObjects{}
	mi := &file_pb_protos_commands_proto_msgTypes[1060]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcDebugOpenedObjects) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcDebugOpenedObjects) ProtoMessage() {}

func (x *RpcDebugOpenedObjects) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1060]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcDebugOpenedObjects.ProtoReflect.Descriptor instead.
func (*RpcDebugOpenedObjects) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 31, 8}
}

type RpcDebugRunProfiler struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcDebugRunProfiler) Reset() {
	*x = RpcDebugRunProfiler{}
	mi := &file_pb_protos_commands_proto_msgTypes[1061]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcDebugRunProfiler) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcDebugRunProfiler) ProtoMessage() {}

func (x *RpcDebugRunProfiler) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1061]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcDebugRunProfiler.ProtoReflect.Descriptor instead.
func (*RpcDebugRunProfiler) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 31, 9}
}

type RpcDebugAccountSelectTrace struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcDebugAccountSelectTrace) Reset() {
	*x = RpcDebugAccountSelectTrace{}
	mi := &file_pb_protos_commands_proto_msgTypes[1062]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcDebugAccountSelectTrace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcDebugAccountSelectTrace) ProtoMessage() {}

func (x *RpcDebugAccountSelectTrace) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1062]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcDebugAccountSelectTrace.ProtoReflect.Descriptor instead.
func (*RpcDebugAccountSelectTrace) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 31, 10}
}

type RpcDebugExportLog struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcDebugExportLog) Reset() {
	*x = RpcDebugExportLog{}
	mi := &file_pb_protos_commands_proto_msgTypes[1063]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcDebugExportLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcDebugExportLog) ProtoMessage() {}

func (x *RpcDebugExportLog) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1063]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcDebugExportLog.ProtoReflect.Descriptor instead.
func (*RpcDebugExportLog) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 31, 11}
}

type RpcDebugPing struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcDebugPing) Reset() {
	*x = RpcDebugPing{}
	mi := &file_pb_protos_commands_proto_msgTypes[1064]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcDebugPing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcDebugPing) ProtoMessage() {}

func (x *RpcDebugPing) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1064]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcDebugPing.ProtoReflect.Descriptor instead.
func (*RpcDebugPing) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 31, 12}
}

type RpcDebugAnystoreObjectChanges struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcDebugAnystoreObjectChanges) Reset() {
	*x = RpcDebugAnystoreObjectChanges{}
	mi := &file_pb_protos_commands_proto_msgTypes[1065]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcDebugAnystoreObjectChanges) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcDebugAnystoreObjectChanges) ProtoMessage() {}

func (x *RpcDebugAnystoreObjectChanges) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1065]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcDebugAnystoreObjectChanges.ProtoReflect.Descriptor instead.
func (*RpcDebugAnystoreObjectChanges) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 31, 13}
}

type RpcDebugNetCheck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcDebugNetCheck) Reset() {
	*x = RpcDebugNetCheck{}
	mi := &file_pb_protos_commands_proto_msgTypes[1066]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcDebugNetCheck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcDebugNetCheck) ProtoMessage() {}

func (x *RpcDebugNetCheck) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1066]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcDebugNetCheck.ProtoReflect.Descriptor instead.
func (*RpcDebugNetCheck) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 31, 14}
}

type RpcDebugStatRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcDebugStatRequest) Reset() {
	*x = RpcDebugStatRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[1067]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcDebugStatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcDebugStatRequest) ProtoMessage() {}

func (x *RpcDebugStatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1067]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcDebugStatRequest.ProtoReflect.Descriptor instead.
func (*RpcDebugStatRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 31, 1, 0}
}

type RpcDebugStatResponse struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	Error         *RpcDebugStatResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	JsonStat      string                     `protobuf:"bytes,2,opt,name=jsonStat,proto3" json:"jsonStat,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcDebugStatResponse) Reset() {
	*x = RpcDebugStatResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[1068]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcDebugStatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcDebugStatResponse) ProtoMessage() {}

func (x *RpcDebugStatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1068]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcDebugStatResponse.ProtoReflect.Descriptor instead.
func (*RpcDebugStatResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 31, 1, 1}
}

func (x *RpcDebugStatResponse) GetError() *RpcDebugStatResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcDebugStatResponse) GetJsonStat() string {
	if x != nil {
		return x.JsonStat
	}
	return ""
}

type RpcDebugStatResponseError struct {
	state         protoimpl.MessageState        `protogen:"open.v1"`
	Code          RpcDebugStatResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcDebugStatResponseErrorCode" json:"code,omitempty"`
	Description   string                        `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcDebugStatResponseError) Reset() {
	*x = RpcDebugStatResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[1069]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcDebugStatResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcDebugStatResponseError) ProtoMessage() {}

func (x *RpcDebugStatResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1069]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcDebugStatResponseError.ProtoReflect.Descriptor instead.
func (*RpcDebugStatResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 31, 1, 1, 0}
}

func (x *RpcDebugStatResponseError) GetCode() RpcDebugStatResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcDebugStatResponseError_NULL
}

func (x *RpcDebugStatResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcDebugTreeHeadsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TreeId        string                 `protobuf:"bytes,1,opt,name=treeId,proto3" json:"treeId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcDebugTreeHeadsRequest) Reset() {
	*x = RpcDebugTreeHeadsRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[1070]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcDebugTreeHeadsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcDebugTreeHeadsRequest) ProtoMessage() {}

func (x *RpcDebugTreeHeadsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1070]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcDebugTreeHeadsRequest.ProtoReflect.Descriptor instead.
func (*RpcDebugTreeHeadsRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 31, 2, 0}
}

func (x *RpcDebugTreeHeadsRequest) GetTreeId() string {
	if x != nil {
		return x.TreeId
	}
	return ""
}

type RpcDebugTreeHeadsResponse struct {
	state         protoimpl.MessageState          `protogen:"open.v1"`
	Error         *RpcDebugTreeHeadsResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	SpaceId       string                          `protobuf:"bytes,2,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	Info          *RpcDebugTreeInfo               `protobuf:"bytes,3,opt,name=info,proto3" json:"info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcDebugTreeHeadsResponse) Reset() {
	*x = RpcDebugTreeHeadsResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[1071]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcDebugTreeHeadsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcDebugTreeHeadsResponse) ProtoMessage() {}

func (x *RpcDebugTreeHeadsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1071]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcDebugTreeHeadsResponse.ProtoReflect.Descriptor instead.
func (*RpcDebugTreeHeadsResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 31, 2, 1}
}

func (x *RpcDebugTreeHeadsResponse) GetError() *RpcDebugTreeHeadsResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcDebugTreeHeadsResponse) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *RpcDebugTreeHeadsResponse) GetInfo() *RpcDebugTreeInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type RpcDebugTreeHeadsResponseError struct {
	state         protoimpl.MessageState             `protogen:"open.v1"`
	Code          RpcDebugTreeHeadsResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcDebugTreeHeadsResponseErrorCode" json:"code,omitempty"`
	Description   string                             `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcDebugTreeHeadsResponseError) Reset() {
	*x = RpcDebugTreeHeadsResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[1072]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcDebugTreeHeadsResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcDebugTreeHeadsResponseError) ProtoMessage() {}

func (x *RpcDebugTreeHeadsResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1072]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcDebugTreeHeadsResponseError.ProtoReflect.Descriptor instead.
func (*RpcDebugTreeHeadsResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 31, 2, 1, 0}
}

func (x *RpcDebugTreeHeadsResponseError) GetCode() RpcDebugTreeHeadsResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcDebugTreeHeadsResponseError_NULL
}

func (x *RpcDebugTreeHeadsResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcDebugTreeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TreeId        string                 `protobuf:"bytes,1,opt,name=treeId,proto3" json:"treeId,omitempty"`
	Path          string                 `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Unanonymized  bool                   `protobuf:"varint,3,opt,name=unanonymized,proto3" json:"unanonymized,omitempty"` // set to true to disable mocking of the actual data inside changes
	GenerateSvg   bool                   `protobuf:"varint,4,opt,name=generateSvg,proto3" json:"generateSvg,omitempty"`   // set to true to write both ZIP and SVG files
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcDebugTreeRequest) Reset() {
	*x = RpcDebugTreeRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[1073]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcDebugTreeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcDebugTreeRequest) ProtoMessage() {}

func (x *RpcDebugTreeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1073]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcDebugTreeRequest.ProtoReflect.Descriptor instead.
func (*RpcDebugTreeRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 31, 3, 0}
}

func (x *RpcDebugTreeRequest) GetTreeId() string {
	if x != nil {
		return x.TreeId
	}
	return ""
}

func (x *RpcDebugTreeRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *RpcDebugTreeRequest) GetUnanonymized() bool {
	if x != nil {
		return x.Unanonymized
	}
	return false
}

func (x *RpcDebugTreeRequest) GetGenerateSvg() bool {
	if x != nil {
		return x.GenerateSvg
	}
	return false
}

type RpcDebugTreeResponse struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	Error         *RpcDebugTreeResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Filename      string                     `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcDebugTreeResponse) Reset() {
	*x = RpcDebugTreeResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[1074]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcDebugTreeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcDebugTreeResponse) ProtoMessage() {}

func (x *RpcDebugTreeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1074]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcDebugTreeResponse.ProtoReflect.Descriptor instead.
func (*RpcDebugTreeResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 31, 3, 1}
}

func (x *RpcDebugTreeResponse) GetError() *RpcDebugTreeResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcDebugTreeResponse) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

type RpcDebugTreeResponseError struct {
	state         protoimpl.MessageState        `protogen:"open.v1"`
	Code          RpcDebugTreeResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcDebugTreeResponseErrorCode" json:"code,omitempty"`
	Description   string                        `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcDebugTreeResponseError) Reset() {
	*x = RpcDebugTreeResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[1075]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcDebugTreeResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcDebugTreeResponseError) ProtoMessage() {}

func (x *RpcDebugTreeResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1075]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcDebugTreeResponseError.ProtoReflect.Descriptor instead.
func (*RpcDebugTreeResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 31, 3, 1, 0}
}

func (x *RpcDebugTreeResponseError) GetCode() RpcDebugTreeResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcDebugTreeResponseError_NULL
}

func (x *RpcDebugTreeResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcDebugSpaceSummaryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SpaceId       string                 `protobuf:"bytes,1,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcDebugSpaceSummaryRequest) Reset() {
	*x = RpcDebugSpaceSummaryRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[1076]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcDebugSpaceSummaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcDebugSpaceSummaryRequest) ProtoMessage() {}

func (x *RpcDebugSpaceSummaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1076]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcDebugSpaceSummaryRequest.ProtoReflect.Descriptor instead.
func (*RpcDebugSpaceSummaryRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 31, 4, 0}
}

func (x *RpcDebugSpaceSummaryRequest) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

type RpcDebugSpaceSummaryResponse struct {
	state         protoimpl.MessageState             `protogen:"open.v1"`
	Error         *RpcDebugSpaceSummaryResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	SpaceId       string                             `protobuf:"bytes,2,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	Infos         []*RpcDebugTreeInfo                `protobuf:"bytes,3,rep,name=infos,proto3" json:"infos,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcDebugSpaceSummaryResponse) Reset() {
	*x = RpcDebugSpaceSummaryResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[1077]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcDebugSpaceSummaryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcDebugSpaceSummaryResponse) ProtoMessage() {}

func (x *RpcDebugSpaceSummaryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1077]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcDebugSpaceSummaryResponse.ProtoReflect.Descriptor instead.
func (*RpcDebugSpaceSummaryResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 31, 4, 1}
}

func (x *RpcDebugSpaceSummaryResponse) GetError() *RpcDebugSpaceSummaryResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcDebugSpaceSummaryResponse) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *RpcDebugSpaceSummaryResponse) GetInfos() []*RpcDebugTreeInfo {
	if x != nil {
		return x.Infos
	}
	return nil
}

type RpcDebugSpaceSummaryResponseError struct {
	state         protoimpl.MessageState                `protogen:"open.v1"`
	Code          RpcDebugSpaceSummaryResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcDebugSpaceSummaryResponseErrorCode" json:"code,omitempty"`
	Description   string                                `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcDebugSpaceSummaryResponseError) Reset() {
	*x = RpcDebugSpaceSummaryResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[1078]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcDebugSpaceSummaryResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcDebugSpaceSummaryResponseError) ProtoMessage() {}

func (x *RpcDebugSpaceSummaryResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1078]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcDebugSpaceSummaryResponseError.ProtoReflect.Descriptor instead.
func (*RpcDebugSpaceSummaryResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 31, 4, 1, 0}
}

func (x *RpcDebugSpaceSummaryResponseError) GetCode() RpcDebugSpaceSummaryResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcDebugSpaceSummaryResponseError_NULL
}

func (x *RpcDebugSpaceSummaryResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcDebugStackGoroutinesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcDebugStackGoroutinesRequest) Reset() {
	*x = RpcDebugStackGoroutinesRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[1079]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcDebugStackGoroutinesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcDebugStackGoroutinesRequest) ProtoMessage() {}

func (x *RpcDebugStackGoroutinesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1079]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcDebugStackGoroutinesRequest.ProtoReflect.Descriptor instead.
func (*RpcDebugStackGoroutinesRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 31, 5, 0}
}

func (x *RpcDebugStackGoroutinesRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type RpcDebugStackGoroutinesResponse struct {
	state         protoimpl.MessageState                `protogen:"open.v1"`
	Error         *RpcDebugStackGoroutinesResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcDebugStackGoroutinesResponse) Reset() {
	*x = RpcDebugStackGoroutinesResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[1080]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcDebugStackGoroutinesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcDebugStackGoroutinesResponse) ProtoMessage() {}

func (x *RpcDebugStackGoroutinesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1080]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcDebugStackGoroutinesResponse.ProtoReflect.Descriptor instead.
func (*RpcDebugStackGoroutinesResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 31, 5, 1}
}

func (x *RpcDebugStackGoroutinesResponse) GetError() *RpcDebugStackGoroutinesResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

type RpcDebugStackGoroutinesResponseError struct {
	state         protoimpl.MessageState                   `protogen:"open.v1"`
	Code          RpcDebugStackGoroutinesResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcDebugStackGoroutinesResponseErrorCode" json:"code,omitempty"`
	Description   string                                   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcDebugStackGoroutinesResponseError) Reset() {
	*x = RpcDebugStackGoroutinesResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[1081]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcDebugStackGoroutinesResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcDebugStackGoroutinesResponseError) ProtoMessage() {}

func (x *RpcDebugStackGoroutinesResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1081]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcDebugStackGoroutinesResponseError.ProtoReflect.Descriptor instead.
func (*RpcDebugStackGoroutinesResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 31, 5, 1, 0}
}

func (x *RpcDebugStackGoroutinesResponseError) GetCode() RpcDebugStackGoroutinesResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcDebugStackGoroutinesResponseError_NULL
}

func (x *RpcDebugStackGoroutinesResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcDebugExportLocalstoreRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// the path where export files will place
	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	// ids of documents for export, when empty - will export all available docs
	DocIds        []string `protobuf:"bytes,2,rep,name=docIds,proto3" json:"docIds,omitempty"`
	SpaceId       string   `protobuf:"bytes,3,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcDebugExportLocalstoreRequest) Reset() {
	*x = RpcDebugExportLocalstoreRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[1082]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcDebugExportLocalstoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcDebugExportLocalstoreRequest) ProtoMessage() {}

func (x *RpcDebugExportLocalstoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1082]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcDebugExportLocalstoreRequest.ProtoReflect.Descriptor instead.
func (*RpcDebugExportLocalstoreRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 31, 6, 0}
}

func (x *RpcDebugExportLocalstoreRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *RpcDebugExportLocalstoreRequest) GetDocIds() []string {
	if x != nil {
		return x.DocIds
	}
	return nil
}

func (x *RpcDebugExportLocalstoreRequest) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

type RpcDebugExportLocalstoreResponse struct {
	state         protoimpl.MessageState                 `protogen:"open.v1"`
	Error         *RpcDebugExportLocalstoreResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Path          string                                 `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Event         *ResponseEvent                         `protobuf:"bytes,3,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcDebugExportLocalstoreResponse) Reset() {
	*x = RpcDebugExportLocalstoreResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[1083]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcDebugExportLocalstoreResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcDebugExportLocalstoreResponse) ProtoMessage() {}

func (x *RpcDebugExportLocalstoreResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1083]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcDebugExportLocalstoreResponse.ProtoReflect.Descriptor instead.
func (*RpcDebugExportLocalstoreResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 31, 6, 1}
}

func (x *RpcDebugExportLocalstoreResponse) GetError() *RpcDebugExportLocalstoreResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcDebugExportLocalstoreResponse) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *RpcDebugExportLocalstoreResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcDebugExportLocalstoreResponseError struct {
	state         protoimpl.MessageState                    `protogen:"open.v1"`
	Code          RpcDebugExportLocalstoreResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcDebugExportLocalstoreResponseErrorCode" json:"code,omitempty"`
	Description   string                                    `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcDebugExportLocalstoreResponseError) Reset() {
	*x = RpcDebugExportLocalstoreResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[1084]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcDebugExportLocalstoreResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcDebugExportLocalstoreResponseError) ProtoMessage() {}

func (x *RpcDebugExportLocalstoreResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1084]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcDebugExportLocalstoreResponseError.ProtoReflect.Descriptor instead.
func (*RpcDebugExportLocalstoreResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 31, 6, 1, 0}
}

func (x *RpcDebugExportLocalstoreResponseError) GetCode() RpcDebugExportLocalstoreResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcDebugExportLocalstoreResponseError_NULL
}

func (x *RpcDebugExportLocalstoreResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcDebugSubscriptionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcDebugSubscriptionsRequest) Reset() {
	*x = RpcDebugSubscriptionsRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[1085]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcDebugSubscriptionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcDebugSubscriptionsRequest) ProtoMessage() {}

func (x *RpcDebugSubscriptionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1085]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcDebugSubscriptionsRequest.ProtoReflect.Descriptor instead.
func (*RpcDebugSubscriptionsRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 31, 7, 0}
}

type RpcDebugSubscriptionsResponse struct {
	state         protoimpl.MessageState              `protogen:"open.v1"`
	Error         *RpcDebugSubscriptionsResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Subscriptions []string                            `protobuf:"bytes,2,rep,name=subscriptions,proto3" json:"subscriptions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcDebugSubscriptionsResponse) Reset() {
	*x = RpcDebugSubscriptionsResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[1086]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcDebugSubscriptionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcDebugSubscriptionsResponse) ProtoMessage() {}

func (x *RpcDebugSubscriptionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1086]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcDebugSubscriptionsResponse.ProtoReflect.Descriptor instead.
func (*RpcDebugSubscriptionsResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 31, 7, 1}
}

func (x *RpcDebugSubscriptionsResponse) GetError() *RpcDebugSubscriptionsResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcDebugSubscriptionsResponse) GetSubscriptions() []string {
	if x != nil {
		return x.Subscriptions
	}
	return nil
}

type RpcDebugSubscriptionsResponseError struct {
	state         protoimpl.MessageState                 `protogen:"open.v1"`
	Code          RpcDebugSubscriptionsResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcDebugSubscriptionsResponseErrorCode" json:"code,omitempty"`
	Description   string                                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcDebugSubscriptionsResponseError) Reset() {
	*x = RpcDebugSubscriptionsResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[1087]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcDebugSubscriptionsResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcDebugSubscriptionsResponseError) ProtoMessage() {}

func (x *RpcDebugSubscriptionsResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1087]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcDebugSubscriptionsResponseError.ProtoReflect.Descriptor instead.
func (*RpcDebugSubscriptionsResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 31, 7, 1, 0}
}

func (x *RpcDebugSubscriptionsResponseError) GetCode() RpcDebugSubscriptionsResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcDebugSubscriptionsResponseError_NULL
}

func (x *RpcDebugSubscriptionsResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcDebugOpenedObjectsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcDebugOpenedObjectsRequest) Reset() {
	*x = RpcDebugOpenedObjectsRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[1088]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcDebugOpenedObjectsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcDebugOpenedObjectsRequest) ProtoMessage() {}

func (x *RpcDebugOpenedObjectsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1088]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcDebugOpenedObjectsRequest.ProtoReflect.Descriptor instead.
func (*RpcDebugOpenedObjectsRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 31, 8, 0}
}

type RpcDebugOpenedObjectsResponse struct {
	state         protoimpl.MessageState              `protogen:"open.v1"`
	Error         *RpcDebugOpenedObjectsResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	ObjectIDs     []string                            `protobuf:"bytes,2,rep,name=objectIDs,proto3" json:"objectIDs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcDebugOpenedObjectsResponse) Reset() {
	*x = RpcDebugOpenedObjectsResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[1089]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcDebugOpenedObjectsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcDebugOpenedObjectsResponse) ProtoMessage() {}

func (x *RpcDebugOpenedObjectsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1089]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcDebugOpenedObjectsResponse.ProtoReflect.Descriptor instead.
func (*RpcDebugOpenedObjectsResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 31, 8, 1}
}

func (x *RpcDebugOpenedObjectsResponse) GetError() *RpcDebugOpenedObjectsResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcDebugOpenedObjectsResponse) GetObjectIDs() []string {
	if x != nil {
		return x.ObjectIDs
	}
	return nil
}

type RpcDebugOpenedObjectsResponseError struct {
	state         protoimpl.MessageState                 `protogen:"open.v1"`
	Code          RpcDebugOpenedObjectsResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcDebugOpenedObjectsResponseErrorCode" json:"code,omitempty"`
	Description   string                                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcDebugOpenedObjectsResponseError) Reset() {
	*x = RpcDebugOpenedObjectsResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[1090]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcDebugOpenedObjectsResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcDebugOpenedObjectsResponseError) ProtoMessage() {}

func (x *RpcDebugOpenedObjectsResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1090]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcDebugOpenedObjectsResponseError.ProtoReflect.Descriptor instead.
func (*RpcDebugOpenedObjectsResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 31, 8, 1, 0}
}

func (x *RpcDebugOpenedObjectsResponseError) GetCode() RpcDebugOpenedObjectsResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcDebugOpenedObjectsResponseError_NULL
}

func (x *RpcDebugOpenedObjectsResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcDebugRunProfilerRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	DurationInSeconds int32                  `protobuf:"varint,1,opt,name=durationInSeconds,proto3" json:"durationInSeconds,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *RpcDebugRunProfilerRequest) Reset() {
	*x = RpcDebugRunProfilerRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[1091]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcDebugRunProfilerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcDebugRunProfilerRequest) ProtoMessage() {}

func (x *RpcDebugRunProfilerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1091]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcDebugRunProfilerRequest.ProtoReflect.Descriptor instead.
func (*RpcDebugRunProfilerRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 31, 9, 0}
}

func (x *RpcDebugRunProfilerRequest) GetDurationInSeconds() int32 {
	if x != nil {
		return x.DurationInSeconds
	}
	return 0
}

type RpcDebugRunProfilerResponse struct {
	state         protoimpl.MessageState            `protogen:"open.v1"`
	Error         *RpcDebugRunProfilerResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Path          string                            `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcDebugRunProfilerResponse) Reset() {
	*x = RpcDebugRunProfilerResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[1092]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcDebugRunProfilerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcDebugRunProfilerResponse) ProtoMessage() {}

func (x *RpcDebugRunProfilerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1092]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcDebugRunProfilerResponse.ProtoReflect.Descriptor instead.
func (*RpcDebugRunProfilerResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 31, 9, 1}
}

func (x *RpcDebugRunProfilerResponse) GetError() *RpcDebugRunProfilerResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcDebugRunProfilerResponse) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type RpcDebugRunProfilerResponseError struct {
	state         protoimpl.MessageState               `protogen:"open.v1"`
	Code          RpcDebugRunProfilerResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcDebugRunProfilerResponseErrorCode" json:"code,omitempty"`
	Description   string                               `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcDebugRunProfilerResponseError) Reset() {
	*x = RpcDebugRunProfilerResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[1093]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcDebugRunProfilerResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcDebugRunProfilerResponseError) ProtoMessage() {}

func (x *RpcDebugRunProfilerResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1093]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcDebugRunProfilerResponseError.ProtoReflect.Descriptor instead.
func (*RpcDebugRunProfilerResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 31, 9, 1, 0}
}

func (x *RpcDebugRunProfilerResponseError) GetCode() RpcDebugRunProfilerResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcDebugRunProfilerResponseError_NULL
}

func (x *RpcDebugRunProfilerResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcDebugAccountSelectTraceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Dir           string                 `protobuf:"bytes,1,opt,name=dir,proto3" json:"dir,omitempty"` // empty means using OS-provided temp dir
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcDebugAccountSelectTraceRequest) Reset() {
	*x = RpcDebugAccountSelectTraceRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[1094]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcDebugAccountSelectTraceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcDebugAccountSelectTraceRequest) ProtoMessage() {}

func (x *RpcDebugAccountSelectTraceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1094]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcDebugAccountSelectTraceRequest.ProtoReflect.Descriptor instead.
func (*RpcDebugAccountSelectTraceRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 31, 10, 0}
}

func (x *RpcDebugAccountSelectTraceRequest) GetDir() string {
	if x != nil {
		return x.Dir
	}
	return ""
}

type RpcDebugAccountSelectTraceResponse struct {
	state         protoimpl.MessageState                   `protogen:"open.v1"`
	Error         *RpcDebugAccountSelectTraceResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Path          string                                   `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcDebugAccountSelectTraceResponse) Reset() {
	*x = RpcDebugAccountSelectTraceResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[1095]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcDebugAccountSelectTraceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcDebugAccountSelectTraceResponse) ProtoMessage() {}

func (x *RpcDebugAccountSelectTraceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1095]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcDebugAccountSelectTraceResponse.ProtoReflect.Descriptor instead.
func (*RpcDebugAccountSelectTraceResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 31, 10, 1}
}

func (x *RpcDebugAccountSelectTraceResponse) GetError() *RpcDebugAccountSelectTraceResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcDebugAccountSelectTraceResponse) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type RpcDebugAccountSelectTraceResponseError struct {
	state         protoimpl.MessageState                      `protogen:"open.v1"`
	Code          RpcDebugAccountSelectTraceResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcDebugAccountSelectTraceResponseErrorCode" json:"code,omitempty"`
	Description   string                                      `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcDebugAccountSelectTraceResponseError) Reset() {
	*x = RpcDebugAccountSelectTraceResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[1096]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcDebugAccountSelectTraceResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcDebugAccountSelectTraceResponseError) ProtoMessage() {}

func (x *RpcDebugAccountSelectTraceResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1096]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcDebugAccountSelectTraceResponseError.ProtoReflect.Descriptor instead.
func (*RpcDebugAccountSelectTraceResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 31, 10, 1, 0}
}

func (x *RpcDebugAccountSelectTraceResponseError) GetCode() RpcDebugAccountSelectTraceResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcDebugAccountSelectTraceResponseError_NULL
}

func (x *RpcDebugAccountSelectTraceResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcDebugExportLogRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Dir           string                 `protobuf:"bytes,1,opt,name=dir,proto3" json:"dir,omitempty"` // empty means using OS-provided temp dir
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcDebugExportLogRequest) Reset() {
	*x = RpcDebugExportLogRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[1097]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcDebugExportLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcDebugExportLogRequest) ProtoMessage() {}

func (x *RpcDebugExportLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1097]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcDebugExportLogRequest.ProtoReflect.Descriptor instead.
func (*RpcDebugExportLogRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 31, 11, 0}
}

func (x *RpcDebugExportLogRequest) GetDir() string {
	if x != nil {
		return x.Dir
	}
	return ""
}

type RpcDebugExportLogResponse struct {
	state         protoimpl.MessageState          `protogen:"open.v1"`
	Error         *RpcDebugExportLogResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Path          string                          `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcDebugExportLogResponse) Reset() {
	*x = RpcDebugExportLogResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[1098]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcDebugExportLogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcDebugExportLogResponse) ProtoMessage() {}

func (x *RpcDebugExportLogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1098]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcDebugExportLogResponse.ProtoReflect.Descriptor instead.
func (*RpcDebugExportLogResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 31, 11, 1}
}

func (x *RpcDebugExportLogResponse) GetError() *RpcDebugExportLogResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcDebugExportLogResponse) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type RpcDebugExportLogResponseError struct {
	state         protoimpl.MessageState             `protogen:"open.v1"`
	Code          RpcDebugExportLogResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcDebugExportLogResponseErrorCode" json:"code,omitempty"`
	Description   string                             `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcDebugExportLogResponseError) Reset() {
	*x = RpcDebugExportLogResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[1099]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcDebugExportLogResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcDebugExportLogResponseError) ProtoMessage() {}

func (x *RpcDebugExportLogResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1099]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcDebugExportLogResponseError.ProtoReflect.Descriptor instead.
func (*RpcDebugExportLogResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 31, 11, 1, 0}
}

func (x *RpcDebugExportLogResponseError) GetCode() RpcDebugExportLogResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcDebugExportLogResponseError_NULL
}

func (x *RpcDebugExportLogResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcDebugPingRequest struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	Index                int32                  `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	NumberOfEventsToSend int32                  `protobuf:"varint,2,opt,name=numberOfEventsToSend,proto3" json:"numberOfEventsToSend,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *RpcDebugPingRequest) Reset() {
	*x = RpcDebugPingRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[1100]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcDebugPingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcDebugPingRequest) ProtoMessage() {}

func (x *RpcDebugPingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1100]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcDebugPingRequest.ProtoReflect.Descriptor instead.
func (*RpcDebugPingRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 31, 12, 0}
}

func (x *RpcDebugPingRequest) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *RpcDebugPingRequest) GetNumberOfEventsToSend() int32 {
	if x != nil {
		return x.NumberOfEventsToSend
	}
	return 0
}

type RpcDebugPingResponse struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	Error         *RpcDebugPingResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Index         int32                      `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcDebugPingResponse) Reset() {
	*x = RpcDebugPingResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[1101]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcDebugPingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcDebugPingResponse) ProtoMessage() {}

func (x *RpcDebugPingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1101]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcDebugPingResponse.ProtoReflect.Descriptor instead.
func (*RpcDebugPingResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 31, 12, 1}
}

func (x *RpcDebugPingResponse) GetError() *RpcDebugPingResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcDebugPingResponse) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

type RpcDebugPingResponseError struct {
	state         protoimpl.MessageState        `protogen:"open.v1"`
	Code          RpcDebugPingResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcDebugPingResponseErrorCode" json:"code,omitempty"`
	Description   string                        `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcDebugPingResponseError) Reset() {
	*x = RpcDebugPingResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[1102]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcDebugPingResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcDebugPingResponseError) ProtoMessage() {}

func (x *RpcDebugPingResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1102]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcDebugPingResponseError.ProtoReflect.Descriptor instead.
func (*RpcDebugPingResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 31, 12, 1, 0}
}

func (x *RpcDebugPingResponseError) GetCode() RpcDebugPingResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcDebugPingResponseError_NULL
}

func (x *RpcDebugPingResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcDebugAnystoreObjectChangesRequest struct {
	state         protoimpl.MessageState                      `protogen:"open.v1"`
	ObjectId      string                                      `protobuf:"bytes,1,opt,name=objectId,proto3" json:"objectId,omitempty"`
	OrderBy       RpcDebugAnystoreObjectChangesRequestOrderBy `protobuf:"varint,2,opt,name=orderBy,proto3,enum=anytype.RpcDebugAnystoreObjectChangesRequestOrderBy" json:"orderBy,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcDebugAnystoreObjectChangesRequest) Reset() {
	*x = RpcDebugAnystoreObjectChangesRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[1103]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcDebugAnystoreObjectChangesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcDebugAnystoreObjectChangesRequest) ProtoMessage() {}

func (x *RpcDebugAnystoreObjectChangesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1103]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcDebugAnystoreObjectChangesRequest.ProtoReflect.Descriptor instead.
func (*RpcDebugAnystoreObjectChangesRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 31, 13, 0}
}

func (x *RpcDebugAnystoreObjectChangesRequest) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

func (x *RpcDebugAnystoreObjectChangesRequest) GetOrderBy() RpcDebugAnystoreObjectChangesRequestOrderBy {
	if x != nil {
		return x.OrderBy
	}
	return RpcDebugAnystoreObjectChangesRequest_ORDER_ID
}

type RpcDebugAnystoreObjectChangesResponse struct {
	state         protoimpl.MessageState                         `protogen:"open.v1"`
	Error         *RpcDebugAnystoreObjectChangesResponseError    `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Changes       []*RpcDebugAnystoreObjectChangesResponseChange `protobuf:"bytes,2,rep,name=changes,proto3" json:"changes,omitempty"`
	WrongOrder    bool                                           `protobuf:"varint,3,opt,name=wrongOrder,proto3" json:"wrongOrder,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcDebugAnystoreObjectChangesResponse) Reset() {
	*x = RpcDebugAnystoreObjectChangesResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[1104]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcDebugAnystoreObjectChangesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcDebugAnystoreObjectChangesResponse) ProtoMessage() {}

func (x *RpcDebugAnystoreObjectChangesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1104]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcDebugAnystoreObjectChangesResponse.ProtoReflect.Descriptor instead.
func (*RpcDebugAnystoreObjectChangesResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 31, 13, 1}
}

func (x *RpcDebugAnystoreObjectChangesResponse) GetError() *RpcDebugAnystoreObjectChangesResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcDebugAnystoreObjectChangesResponse) GetChanges() []*RpcDebugAnystoreObjectChangesResponseChange {
	if x != nil {
		return x.Changes
	}
	return nil
}

func (x *RpcDebugAnystoreObjectChangesResponse) GetWrongOrder() bool {
	if x != nil {
		return x.WrongOrder
	}
	return false
}

type RpcDebugAnystoreObjectChangesResponseChange struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChangeId      string                 `protobuf:"bytes,1,opt,name=changeId,proto3" json:"changeId,omitempty"`
	OrderId       string                 `protobuf:"bytes,2,opt,name=orderId,proto3" json:"orderId,omitempty"`
	Error         string                 `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	Change        *structpb.Struct       `protobuf:"bytes,4,opt,name=change,proto3" json:"change,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcDebugAnystoreObjectChangesResponseChange) Reset() {
	*x = RpcDebugAnystoreObjectChangesResponseChange{}
	mi := &file_pb_protos_commands_proto_msgTypes[1105]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcDebugAnystoreObjectChangesResponseChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcDebugAnystoreObjectChangesResponseChange) ProtoMessage() {}

func (x *RpcDebugAnystoreObjectChangesResponseChange) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1105]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcDebugAnystoreObjectChangesResponseChange.ProtoReflect.Descriptor instead.
func (*RpcDebugAnystoreObjectChangesResponseChange) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 31, 13, 1, 0}
}

func (x *RpcDebugAnystoreObjectChangesResponseChange) GetChangeId() string {
	if x != nil {
		return x.ChangeId
	}
	return ""
}

func (x *RpcDebugAnystoreObjectChangesResponseChange) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *RpcDebugAnystoreObjectChangesResponseChange) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *RpcDebugAnystoreObjectChangesResponseChange) GetChange() *structpb.Struct {
	if x != nil {
		return x.Change
	}
	return nil
}

type RpcDebugAnystoreObjectChangesResponseError struct {
	state         protoimpl.MessageState                         `protogen:"open.v1"`
	Code          RpcDebugAnystoreObjectChangesResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcDebugAnystoreObjectChangesResponseErrorCode" json:"code,omitempty"`
	Description   string                                         `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcDebugAnystoreObjectChangesResponseError) Reset() {
	*x = RpcDebugAnystoreObjectChangesResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[1106]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcDebugAnystoreObjectChangesResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcDebugAnystoreObjectChangesResponseError) ProtoMessage() {}

func (x *RpcDebugAnystoreObjectChangesResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1106]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcDebugAnystoreObjectChangesResponseError.ProtoReflect.Descriptor instead.
func (*RpcDebugAnystoreObjectChangesResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 31, 13, 1, 1}
}

func (x *RpcDebugAnystoreObjectChangesResponseError) GetCode() RpcDebugAnystoreObjectChangesResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcDebugAnystoreObjectChangesResponseError_NULL
}

func (x *RpcDebugAnystoreObjectChangesResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcDebugNetCheckRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientYml     string                 `protobuf:"bytes,1,opt,name=clientYml,proto3" json:"clientYml,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcDebugNetCheckRequest) Reset() {
	*x = RpcDebugNetCheckRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[1107]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcDebugNetCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcDebugNetCheckRequest) ProtoMessage() {}

func (x *RpcDebugNetCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1107]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcDebugNetCheckRequest.ProtoReflect.Descriptor instead.
func (*RpcDebugNetCheckRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 31, 14, 0}
}

func (x *RpcDebugNetCheckRequest) GetClientYml() string {
	if x != nil {
		return x.ClientYml
	}
	return ""
}

type RpcDebugNetCheckResponse struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	Error         *RpcDebugNetCheckResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Result        string                         `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcDebugNetCheckResponse) Reset() {
	*x = RpcDebugNetCheckResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[1108]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcDebugNetCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcDebugNetCheckResponse) ProtoMessage() {}

func (x *RpcDebugNetCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1108]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcDebugNetCheckResponse.ProtoReflect.Descriptor instead.
func (*RpcDebugNetCheckResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 31, 14, 1}
}

func (x *RpcDebugNetCheckResponse) GetError() *RpcDebugNetCheckResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcDebugNetCheckResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type RpcDebugNetCheckResponseError struct {
	state         protoimpl.MessageState            `protogen:"open.v1"`
	Code          RpcDebugNetCheckResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcDebugNetCheckResponseErrorCode" json:"code,omitempty"`
	Description   string                            `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcDebugNetCheckResponseError) Reset() {
	*x = RpcDebugNetCheckResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[1109]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcDebugNetCheckResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcDebugNetCheckResponseError) ProtoMessage() {}

func (x *RpcDebugNetCheckResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1109]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcDebugNetCheckResponseError.ProtoReflect.Descriptor instead.
func (*RpcDebugNetCheckResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 31, 14, 1, 0}
}

func (x *RpcDebugNetCheckResponseError) GetCode() RpcDebugNetCheckResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcDebugNetCheckResponseError_NULL
}

func (x *RpcDebugNetCheckResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcInitialSetParameters struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcInitialSetParameters) Reset() {
	*x = RpcInitialSetParameters{}
	mi := &file_pb_protos_commands_proto_msgTypes[1110]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcInitialSetParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcInitialSetParameters) ProtoMessage() {}

func (x *RpcInitialSetParameters) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1110]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcInitialSetParameters.ProtoReflect.Descriptor instead.
func (*RpcInitialSetParameters) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 32, 0}
}

type RpcInitialSetParametersRequest struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Platform           string                 `protobuf:"bytes,1,opt,name=platform,proto3" json:"platform,omitempty"`
	Version            string                 `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Workdir            string                 `protobuf:"bytes,3,opt,name=workdir,proto3" json:"workdir,omitempty"`
	LogLevel           string                 `protobuf:"bytes,4,opt,name=logLevel,proto3" json:"logLevel,omitempty"`
	DoNotSendLogs      bool                   `protobuf:"varint,5,opt,name=doNotSendLogs,proto3" json:"doNotSendLogs,omitempty"`
	DoNotSaveLogs      bool                   `protobuf:"varint,6,opt,name=doNotSaveLogs,proto3" json:"doNotSaveLogs,omitempty"`
	DoNotSendTelemetry bool                   `protobuf:"varint,7,opt,name=doNotSendTelemetry,proto3" json:"doNotSendTelemetry,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *RpcInitialSetParametersRequest) Reset() {
	*x = RpcInitialSetParametersRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[1111]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcInitialSetParametersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcInitialSetParametersRequest) ProtoMessage() {}

func (x *RpcInitialSetParametersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1111]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcInitialSetParametersRequest.ProtoReflect.Descriptor instead.
func (*RpcInitialSetParametersRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 32, 0, 0}
}

func (x *RpcInitialSetParametersRequest) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *RpcInitialSetParametersRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *RpcInitialSetParametersRequest) GetWorkdir() string {
	if x != nil {
		return x.Workdir
	}
	return ""
}

func (x *RpcInitialSetParametersRequest) GetLogLevel() string {
	if x != nil {
		return x.LogLevel
	}
	return ""
}

func (x *RpcInitialSetParametersRequest) GetDoNotSendLogs() bool {
	if x != nil {
		return x.DoNotSendLogs
	}
	return false
}

func (x *RpcInitialSetParametersRequest) GetDoNotSaveLogs() bool {
	if x != nil {
		return x.DoNotSaveLogs
	}
	return false
}

func (x *RpcInitialSetParametersRequest) GetDoNotSendTelemetry() bool {
	if x != nil {
		return x.DoNotSendTelemetry
	}
	return false
}

type RpcInitialSetParametersResponse struct {
	state         protoimpl.MessageState                `protogen:"open.v1"`
	Error         *RpcInitialSetParametersResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcInitialSetParametersResponse) Reset() {
	*x = RpcInitialSetParametersResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[1112]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcInitialSetParametersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcInitialSetParametersResponse) ProtoMessage() {}

func (x *RpcInitialSetParametersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1112]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcInitialSetParametersResponse.ProtoReflect.Descriptor instead.
func (*RpcInitialSetParametersResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 32, 0, 1}
}

func (x *RpcInitialSetParametersResponse) GetError() *RpcInitialSetParametersResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

type RpcInitialSetParametersResponseError struct {
	state         protoimpl.MessageState                   `protogen:"open.v1"`
	Code          RpcInitialSetParametersResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcInitialSetParametersResponseErrorCode" json:"code,omitempty"`
	Description   string                                   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcInitialSetParametersResponseError) Reset() {
	*x = RpcInitialSetParametersResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[1113]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcInitialSetParametersResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcInitialSetParametersResponseError) ProtoMessage() {}

func (x *RpcInitialSetParametersResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1113]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcInitialSetParametersResponseError.ProtoReflect.Descriptor instead.
func (*RpcInitialSetParametersResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 32, 0, 1, 0}
}

func (x *RpcInitialSetParametersResponseError) GetCode() RpcInitialSetParametersResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcInitialSetParametersResponseError_NULL
}

func (x *RpcInitialSetParametersResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcLogSend struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcLogSend) Reset() {
	*x = RpcLogSend{}
	mi := &file_pb_protos_commands_proto_msgTypes[1114]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcLogSend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcLogSend) ProtoMessage() {}

func (x *RpcLogSend) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1114]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcLogSend.ProtoReflect.Descriptor instead.
func (*RpcLogSend) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 33, 0}
}

type RpcLogSendRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Level         RpcLogSendRequestLevel `protobuf:"varint,2,opt,name=level,proto3,enum=anytype.RpcLogSendRequestLevel" json:"level,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcLogSendRequest) Reset() {
	*x = RpcLogSendRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[1115]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcLogSendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcLogSendRequest) ProtoMessage() {}

func (x *RpcLogSendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1115]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcLogSendRequest.ProtoReflect.Descriptor instead.
func (*RpcLogSendRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 33, 0, 0}
}

func (x *RpcLogSendRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *RpcLogSendRequest) GetLevel() RpcLogSendRequestLevel {
	if x != nil {
		return x.Level
	}
	return RpcLogSendRequest_DEBUG
}

type RpcLogSendResponse struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Error         *RpcLogSendResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcLogSendResponse) Reset() {
	*x = RpcLogSendResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[1116]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcLogSendResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcLogSendResponse) ProtoMessage() {}

func (x *RpcLogSendResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1116]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcLogSendResponse.ProtoReflect.Descriptor instead.
func (*RpcLogSendResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 33, 0, 1}
}

func (x *RpcLogSendResponse) GetError() *RpcLogSendResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

type RpcLogSendResponseError struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	Code          RpcLogSendResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcLogSendResponseErrorCode" json:"code,omitempty"`
	Description   string                      `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcLogSendResponseError) Reset() {
	*x = RpcLogSendResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[1117]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcLogSendResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcLogSendResponseError) ProtoMessage() {}

func (x *RpcLogSendResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1117]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcLogSendResponseError.ProtoReflect.Descriptor instead.
func (*RpcLogSendResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 33, 0, 1, 0}
}

func (x *RpcLogSendResponseError) GetCode() RpcLogSendResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcLogSendResponseError_NULL
}

func (x *RpcLogSendResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcProcessCancel struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcProcessCancel) Reset() {
	*x = RpcProcessCancel{}
	mi := &file_pb_protos_commands_proto_msgTypes[1118]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcProcessCancel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcProcessCancel) ProtoMessage() {}

func (x *RpcProcessCancel) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1118]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcProcessCancel.ProtoReflect.Descriptor instead.
func (*RpcProcessCancel) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 34, 0}
}

type RpcProcessSubscribe struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcProcessSubscribe) Reset() {
	*x = RpcProcessSubscribe{}
	mi := &file_pb_protos_commands_proto_msgTypes[1119]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcProcessSubscribe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcProcessSubscribe) ProtoMessage() {}

func (x *RpcProcessSubscribe) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1119]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcProcessSubscribe.ProtoReflect.Descriptor instead.
func (*RpcProcessSubscribe) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 34, 1}
}

type RpcProcessUnsubscribe struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcProcessUnsubscribe) Reset() {
	*x = RpcProcessUnsubscribe{}
	mi := &file_pb_protos_commands_proto_msgTypes[1120]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcProcessUnsubscribe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcProcessUnsubscribe) ProtoMessage() {}

func (x *RpcProcessUnsubscribe) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1120]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcProcessUnsubscribe.ProtoReflect.Descriptor instead.
func (*RpcProcessUnsubscribe) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 34, 2}
}

type RpcProcessCancelRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcProcessCancelRequest) Reset() {
	*x = RpcProcessCancelRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[1121]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcProcessCancelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcProcessCancelRequest) ProtoMessage() {}

func (x *RpcProcessCancelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1121]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcProcessCancelRequest.ProtoReflect.Descriptor instead.
func (*RpcProcessCancelRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 34, 0, 0}
}

func (x *RpcProcessCancelRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type RpcProcessCancelResponse struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	Error         *RpcProcessCancelResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcProcessCancelResponse) Reset() {
	*x = RpcProcessCancelResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[1122]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcProcessCancelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcProcessCancelResponse) ProtoMessage() {}

func (x *RpcProcessCancelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1122]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcProcessCancelResponse.ProtoReflect.Descriptor instead.
func (*RpcProcessCancelResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 34, 0, 1}
}

func (x *RpcProcessCancelResponse) GetError() *RpcProcessCancelResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

type RpcProcessCancelResponseError struct {
	state         protoimpl.MessageState            `protogen:"open.v1"`
	Code          RpcProcessCancelResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcProcessCancelResponseErrorCode" json:"code,omitempty"`
	Description   string                            `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcProcessCancelResponseError) Reset() {
	*x = RpcProcessCancelResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[1123]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcProcessCancelResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcProcessCancelResponseError) ProtoMessage() {}

func (x *RpcProcessCancelResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1123]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcProcessCancelResponseError.ProtoReflect.Descriptor instead.
func (*RpcProcessCancelResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 34, 0, 1, 0}
}

func (x *RpcProcessCancelResponseError) GetCode() RpcProcessCancelResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcProcessCancelResponseError_NULL
}

func (x *RpcProcessCancelResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcProcessSubscribeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcProcessSubscribeRequest) Reset() {
	*x = RpcProcessSubscribeRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[1124]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcProcessSubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcProcessSubscribeRequest) ProtoMessage() {}

func (x *RpcProcessSubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1124]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcProcessSubscribeRequest.ProtoReflect.Descriptor instead.
func (*RpcProcessSubscribeRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 34, 1, 0}
}

type RpcProcessSubscribeResponse struct {
	state         protoimpl.MessageState            `protogen:"open.v1"`
	Error         *RpcProcessSubscribeResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcProcessSubscribeResponse) Reset() {
	*x = RpcProcessSubscribeResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[1125]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcProcessSubscribeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcProcessSubscribeResponse) ProtoMessage() {}

func (x *RpcProcessSubscribeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1125]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcProcessSubscribeResponse.ProtoReflect.Descriptor instead.
func (*RpcProcessSubscribeResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 34, 1, 1}
}

func (x *RpcProcessSubscribeResponse) GetError() *RpcProcessSubscribeResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

type RpcProcessSubscribeResponseError struct {
	state         protoimpl.MessageState               `protogen:"open.v1"`
	Code          RpcProcessSubscribeResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcProcessSubscribeResponseErrorCode" json:"code,omitempty"`
	Description   string                               `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcProcessSubscribeResponseError) Reset() {
	*x = RpcProcessSubscribeResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[1126]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcProcessSubscribeResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcProcessSubscribeResponseError) ProtoMessage() {}

func (x *RpcProcessSubscribeResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1126]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcProcessSubscribeResponseError.ProtoReflect.Descriptor instead.
func (*RpcProcessSubscribeResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 34, 1, 1, 0}
}

func (x *RpcProcessSubscribeResponseError) GetCode() RpcProcessSubscribeResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcProcessSubscribeResponseError_NULL
}

func (x *RpcProcessSubscribeResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcProcessUnsubscribeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcProcessUnsubscribeRequest) Reset() {
	*x = RpcProcessUnsubscribeRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[1127]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcProcessUnsubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcProcessUnsubscribeRequest) ProtoMessage() {}

func (x *RpcProcessUnsubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1127]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcProcessUnsubscribeRequest.ProtoReflect.Descriptor instead.
func (*RpcProcessUnsubscribeRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 34, 2, 0}
}

type RpcProcessUnsubscribeResponse struct {
	state         protoimpl.MessageState              `protogen:"open.v1"`
	Error         *RpcProcessUnsubscribeResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcProcessUnsubscribeResponse) Reset() {
	*x = RpcProcessUnsubscribeResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[1128]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcProcessUnsubscribeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcProcessUnsubscribeResponse) ProtoMessage() {}

func (x *RpcProcessUnsubscribeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1128]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcProcessUnsubscribeResponse.ProtoReflect.Descriptor instead.
func (*RpcProcessUnsubscribeResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 34, 2, 1}
}

func (x *RpcProcessUnsubscribeResponse) GetError() *RpcProcessUnsubscribeResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

type RpcProcessUnsubscribeResponseError struct {
	state         protoimpl.MessageState                 `protogen:"open.v1"`
	Code          RpcProcessUnsubscribeResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcProcessUnsubscribeResponseErrorCode" json:"code,omitempty"`
	Description   string                                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcProcessUnsubscribeResponseError) Reset() {
	*x = RpcProcessUnsubscribeResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[1129]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcProcessUnsubscribeResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcProcessUnsubscribeResponseError) ProtoMessage() {}

func (x *RpcProcessUnsubscribeResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1129]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcProcessUnsubscribeResponseError.ProtoReflect.Descriptor instead.
func (*RpcProcessUnsubscribeResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 34, 2, 1, 0}
}

func (x *RpcProcessUnsubscribeResponseError) GetCode() RpcProcessUnsubscribeResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcProcessUnsubscribeResponseError_NULL
}

func (x *RpcProcessUnsubscribeResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcGenericErrorResponseError struct {
	state         protoimpl.MessageState           `protogen:"open.v1"`
	Code          RpcGenericErrorResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcGenericErrorResponseErrorCode" json:"code,omitempty"`
	Description   string                           `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcGenericErrorResponseError) Reset() {
	*x = RpcGenericErrorResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[1130]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcGenericErrorResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcGenericErrorResponseError) ProtoMessage() {}

func (x *RpcGenericErrorResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1130]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcGenericErrorResponseError.ProtoReflect.Descriptor instead.
func (*RpcGenericErrorResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 35, 0}
}

func (x *RpcGenericErrorResponseError) GetCode() RpcGenericErrorResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcGenericErrorResponseError_NULL
}

func (x *RpcGenericErrorResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcNotificationList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcNotificationList) Reset() {
	*x = RpcNotificationList{}
	mi := &file_pb_protos_commands_proto_msgTypes[1131]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcNotificationList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcNotificationList) ProtoMessage() {}

func (x *RpcNotificationList) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1131]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcNotificationList.ProtoReflect.Descriptor instead.
func (*RpcNotificationList) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 36, 0}
}

type RpcNotificationReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcNotificationReply) Reset() {
	*x = RpcNotificationReply{}
	mi := &file_pb_protos_commands_proto_msgTypes[1132]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcNotificationReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcNotificationReply) ProtoMessage() {}

func (x *RpcNotificationReply) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1132]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcNotificationReply.ProtoReflect.Descriptor instead.
func (*RpcNotificationReply) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 36, 1}
}

type RpcNotificationTest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcNotificationTest) Reset() {
	*x = RpcNotificationTest{}
	mi := &file_pb_protos_commands_proto_msgTypes[1133]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcNotificationTest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcNotificationTest) ProtoMessage() {}

func (x *RpcNotificationTest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1133]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcNotificationTest.ProtoReflect.Descriptor instead.
func (*RpcNotificationTest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 36, 2}
}

type RpcNotificationListRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IncludeRead   bool                   `protobuf:"varint,1,opt,name=includeRead,proto3" json:"includeRead,omitempty"`
	Limit         int64                  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcNotificationListRequest) Reset() {
	*x = RpcNotificationListRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[1134]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcNotificationListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcNotificationListRequest) ProtoMessage() {}

func (x *RpcNotificationListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1134]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcNotificationListRequest.ProtoReflect.Descriptor instead.
func (*RpcNotificationListRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 36, 0, 0}
}

func (x *RpcNotificationListRequest) GetIncludeRead() bool {
	if x != nil {
		return x.IncludeRead
	}
	return false
}

func (x *RpcNotificationListRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type RpcNotificationListResponse struct {
	state         protoimpl.MessageState            `protogen:"open.v1"`
	Error         *RpcNotificationListResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Notifications []*model.Notification             `protobuf:"bytes,2,rep,name=notifications,proto3" json:"notifications,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcNotificationListResponse) Reset() {
	*x = RpcNotificationListResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[1135]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcNotificationListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcNotificationListResponse) ProtoMessage() {}

func (x *RpcNotificationListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1135]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcNotificationListResponse.ProtoReflect.Descriptor instead.
func (*RpcNotificationListResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 36, 0, 1}
}

func (x *RpcNotificationListResponse) GetError() *RpcNotificationListResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcNotificationListResponse) GetNotifications() []*model.Notification {
	if x != nil {
		return x.Notifications
	}
	return nil
}

type RpcNotificationListResponseError struct {
	state         protoimpl.MessageState               `protogen:"open.v1"`
	Code          RpcNotificationListResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcNotificationListResponseErrorCode" json:"code,omitempty"`
	Description   string                               `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcNotificationListResponseError) Reset() {
	*x = RpcNotificationListResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[1136]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcNotificationListResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcNotificationListResponseError) ProtoMessage() {}

func (x *RpcNotificationListResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1136]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcNotificationListResponseError.ProtoReflect.Descriptor instead.
func (*RpcNotificationListResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 36, 0, 1, 0}
}

func (x *RpcNotificationListResponseError) GetCode() RpcNotificationListResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcNotificationListResponseError_NULL
}

func (x *RpcNotificationListResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcNotificationReplyRequest struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	Ids           []string                     `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	ActionType    model.NotificationActionType `protobuf:"varint,2,opt,name=actionType,proto3,enum=anytype.model.NotificationActionType" json:"actionType,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcNotificationReplyRequest) Reset() {
	*x = RpcNotificationReplyRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[1137]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcNotificationReplyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcNotificationReplyRequest) ProtoMessage() {}

func (x *RpcNotificationReplyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1137]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcNotificationReplyRequest.ProtoReflect.Descriptor instead.
func (*RpcNotificationReplyRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 36, 1, 0}
}

func (x *RpcNotificationReplyRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *RpcNotificationReplyRequest) GetActionType() model.NotificationActionType {
	if x != nil {
		return x.ActionType
	}
	return model.NotificationActionType(0)
}

type RpcNotificationReplyResponse struct {
	state         protoimpl.MessageState             `protogen:"open.v1"`
	Error         *RpcNotificationReplyResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcNotificationReplyResponse) Reset() {
	*x = RpcNotificationReplyResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[1138]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcNotificationReplyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcNotificationReplyResponse) ProtoMessage() {}

func (x *RpcNotificationReplyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1138]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcNotificationReplyResponse.ProtoReflect.Descriptor instead.
func (*RpcNotificationReplyResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 36, 1, 1}
}

func (x *RpcNotificationReplyResponse) GetError() *RpcNotificationReplyResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

type RpcNotificationReplyResponseError struct {
	state         protoimpl.MessageState                `protogen:"open.v1"`
	Code          RpcNotificationReplyResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcNotificationReplyResponseErrorCode" json:"code,omitempty"`
	Description   string                                `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcNotificationReplyResponseError) Reset() {
	*x = RpcNotificationReplyResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[1139]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcNotificationReplyResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcNotificationReplyResponseError) ProtoMessage() {}

func (x *RpcNotificationReplyResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1139]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcNotificationReplyResponseError.ProtoReflect.Descriptor instead.
func (*RpcNotificationReplyResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 36, 1, 1, 0}
}

func (x *RpcNotificationReplyResponseError) GetCode() RpcNotificationReplyResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcNotificationReplyResponseError_NULL
}

func (x *RpcNotificationReplyResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcNotificationTestRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcNotificationTestRequest) Reset() {
	*x = RpcNotificationTestRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[1140]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcNotificationTestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcNotificationTestRequest) ProtoMessage() {}

func (x *RpcNotificationTestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1140]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcNotificationTestRequest.ProtoReflect.Descriptor instead.
func (*RpcNotificationTestRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 36, 2, 0}
}

type RpcNotificationTestResponse struct {
	state         protoimpl.MessageState            `protogen:"open.v1"`
	Error         *RpcNotificationTestResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Notification  *model.Notification               `protobuf:"bytes,2,opt,name=notification,proto3" json:"notification,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcNotificationTestResponse) Reset() {
	*x = RpcNotificationTestResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[1141]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcNotificationTestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcNotificationTestResponse) ProtoMessage() {}

func (x *RpcNotificationTestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1141]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcNotificationTestResponse.ProtoReflect.Descriptor instead.
func (*RpcNotificationTestResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 36, 2, 1}
}

func (x *RpcNotificationTestResponse) GetError() *RpcNotificationTestResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcNotificationTestResponse) GetNotification() *model.Notification {
	if x != nil {
		return x.Notification
	}
	return nil
}

type RpcNotificationTestResponseError struct {
	state         protoimpl.MessageState               `protogen:"open.v1"`
	Code          RpcNotificationTestResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcNotificationTestResponseErrorCode" json:"code,omitempty"`
	Description   string                               `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcNotificationTestResponseError) Reset() {
	*x = RpcNotificationTestResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[1142]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcNotificationTestResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcNotificationTestResponseError) ProtoMessage() {}

func (x *RpcNotificationTestResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1142]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcNotificationTestResponseError.ProtoReflect.Descriptor instead.
func (*RpcNotificationTestResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 36, 2, 1, 0}
}

func (x *RpcNotificationTestResponseError) GetCode() RpcNotificationTestResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcNotificationTestResponseError_NULL
}

func (x *RpcNotificationTestResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// *
// Get the current status of the membership
// including the tier, status, dates, etc
// WARNING: this can be cached by Anytype heart
type RpcMembershipGetStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcMembershipGetStatus) Reset() {
	*x = RpcMembershipGetStatus{}
	mi := &file_pb_protos_commands_proto_msgTypes[1143]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcMembershipGetStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcMembershipGetStatus) ProtoMessage() {}

func (x *RpcMembershipGetStatus) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1143]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcMembershipGetStatus.ProtoReflect.Descriptor instead.
func (*RpcMembershipGetStatus) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 37, 0}
}

// *
// Check if the requested name is valid and vacant for the requested tier
// before requesting a payment link and paying
type RpcMembershipIsNameValid struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcMembershipIsNameValid) Reset() {
	*x = RpcMembershipIsNameValid{}
	mi := &file_pb_protos_commands_proto_msgTypes[1144]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcMembershipIsNameValid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcMembershipIsNameValid) ProtoMessage() {}

func (x *RpcMembershipIsNameValid) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1144]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcMembershipIsNameValid.ProtoReflect.Descriptor instead.
func (*RpcMembershipIsNameValid) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 37, 1}
}

// *
// Generate a unique id for payment request (for mobile clients)
// Generate a link to Stripe/Crypto where user can pay for the membership (for desktop client)
type RpcMembershipRegisterPaymentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcMembershipRegisterPaymentRequest) Reset() {
	*x = RpcMembershipRegisterPaymentRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[1145]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcMembershipRegisterPaymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcMembershipRegisterPaymentRequest) ProtoMessage() {}

func (x *RpcMembershipRegisterPaymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1145]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcMembershipRegisterPaymentRequest.ProtoReflect.Descriptor instead.
func (*RpcMembershipRegisterPaymentRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 37, 2}
}

// *
// Generate a link to the portal where user can:
// a) change his billing details
// b) see payment info, invoices, etc
// c) cancel membership
type RpcMembershipGetPortalLinkUrl struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcMembershipGetPortalLinkUrl) Reset() {
	*x = RpcMembershipGetPortalLinkUrl{}
	mi := &file_pb_protos_commands_proto_msgTypes[1146]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcMembershipGetPortalLinkUrl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcMembershipGetPortalLinkUrl) ProtoMessage() {}

func (x *RpcMembershipGetPortalLinkUrl) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1146]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcMembershipGetPortalLinkUrl.ProtoReflect.Descriptor instead.
func (*RpcMembershipGetPortalLinkUrl) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 37, 3}
}

type RpcMembershipFinalize struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcMembershipFinalize) Reset() {
	*x = RpcMembershipFinalize{}
	mi := &file_pb_protos_commands_proto_msgTypes[1147]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcMembershipFinalize) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcMembershipFinalize) ProtoMessage() {}

func (x *RpcMembershipFinalize) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1147]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcMembershipFinalize.ProtoReflect.Descriptor instead.
func (*RpcMembershipFinalize) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 37, 4}
}

// *
// Get the current status of the e-mail verification.
// Status can change if you call GetVerificationEmail or VerifyEmailCode
type RpcMembershipGetVerificationEmailStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcMembershipGetVerificationEmailStatus) Reset() {
	*x = RpcMembershipGetVerificationEmailStatus{}
	mi := &file_pb_protos_commands_proto_msgTypes[1148]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcMembershipGetVerificationEmailStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcMembershipGetVerificationEmailStatus) ProtoMessage() {}

func (x *RpcMembershipGetVerificationEmailStatus) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1148]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcMembershipGetVerificationEmailStatus.ProtoReflect.Descriptor instead.
func (*RpcMembershipGetVerificationEmailStatus) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 37, 5}
}

// *
// Send an e-mail with verification code to the user
// can be called multiple times but with some timeout (N seconds) between calls
type RpcMembershipGetVerificationEmail struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcMembershipGetVerificationEmail) Reset() {
	*x = RpcMembershipGetVerificationEmail{}
	mi := &file_pb_protos_commands_proto_msgTypes[1149]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcMembershipGetVerificationEmail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcMembershipGetVerificationEmail) ProtoMessage() {}

func (x *RpcMembershipGetVerificationEmail) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1149]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcMembershipGetVerificationEmail.ProtoReflect.Descriptor instead.
func (*RpcMembershipGetVerificationEmail) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 37, 6}
}

// *
// Verify the e-mail address of the user
// need a correct code that was sent to the user when calling GetVerificationEmail
type RpcMembershipVerifyEmailCode struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcMembershipVerifyEmailCode) Reset() {
	*x = RpcMembershipVerifyEmailCode{}
	mi := &file_pb_protos_commands_proto_msgTypes[1150]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcMembershipVerifyEmailCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcMembershipVerifyEmailCode) ProtoMessage() {}

func (x *RpcMembershipVerifyEmailCode) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1150]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcMembershipVerifyEmailCode.ProtoReflect.Descriptor instead.
func (*RpcMembershipVerifyEmailCode) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 37, 7}
}

// *
// Tiers can change on the backend so if you want to show users the latest data
// you can call this method to get the latest tiers
type RpcMembershipGetTiers struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcMembershipGetTiers) Reset() {
	*x = RpcMembershipGetTiers{}
	mi := &file_pb_protos_commands_proto_msgTypes[1151]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcMembershipGetTiers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcMembershipGetTiers) ProtoMessage() {}

func (x *RpcMembershipGetTiers) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1151]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcMembershipGetTiers.ProtoReflect.Descriptor instead.
func (*RpcMembershipGetTiers) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 37, 8}
}

type RpcMembershipVerifyAppStoreReceipt struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcMembershipVerifyAppStoreReceipt) Reset() {
	*x = RpcMembershipVerifyAppStoreReceipt{}
	mi := &file_pb_protos_commands_proto_msgTypes[1152]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcMembershipVerifyAppStoreReceipt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcMembershipVerifyAppStoreReceipt) ProtoMessage() {}

func (x *RpcMembershipVerifyAppStoreReceipt) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1152]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcMembershipVerifyAppStoreReceipt.ProtoReflect.Descriptor instead.
func (*RpcMembershipVerifyAppStoreReceipt) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 37, 9}
}

type RpcMembershipGetStatusRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// pass true to force the cache update
	// by default this is false
	NoCache       bool `protobuf:"varint,1,opt,name=noCache,proto3" json:"noCache,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcMembershipGetStatusRequest) Reset() {
	*x = RpcMembershipGetStatusRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[1153]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcMembershipGetStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcMembershipGetStatusRequest) ProtoMessage() {}

func (x *RpcMembershipGetStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1153]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcMembershipGetStatusRequest.ProtoReflect.Descriptor instead.
func (*RpcMembershipGetStatusRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 37, 0, 0}
}

func (x *RpcMembershipGetStatusRequest) GetNoCache() bool {
	if x != nil {
		return x.NoCache
	}
	return false
}

type RpcMembershipGetStatusResponse struct {
	state         protoimpl.MessageState               `protogen:"open.v1"`
	Error         *RpcMembershipGetStatusResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Data          *model.Membership                    `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcMembershipGetStatusResponse) Reset() {
	*x = RpcMembershipGetStatusResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[1154]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcMembershipGetStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcMembershipGetStatusResponse) ProtoMessage() {}

func (x *RpcMembershipGetStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1154]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcMembershipGetStatusResponse.ProtoReflect.Descriptor instead.
func (*RpcMembershipGetStatusResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 37, 0, 1}
}

func (x *RpcMembershipGetStatusResponse) GetError() *RpcMembershipGetStatusResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcMembershipGetStatusResponse) GetData() *model.Membership {
	if x != nil {
		return x.Data
	}
	return nil
}

type RpcMembershipGetStatusResponseError struct {
	state         protoimpl.MessageState                  `protogen:"open.v1"`
	Code          RpcMembershipGetStatusResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcMembershipGetStatusResponseErrorCode" json:"code,omitempty"`
	Description   string                                  `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcMembershipGetStatusResponseError) Reset() {
	*x = RpcMembershipGetStatusResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[1155]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcMembershipGetStatusResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcMembershipGetStatusResponseError) ProtoMessage() {}

func (x *RpcMembershipGetStatusResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1155]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcMembershipGetStatusResponseError.ProtoReflect.Descriptor instead.
func (*RpcMembershipGetStatusResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 37, 0, 1, 0}
}

func (x *RpcMembershipGetStatusResponseError) GetCode() RpcMembershipGetStatusResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcMembershipGetStatusResponseError_NULL
}

func (x *RpcMembershipGetStatusResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcMembershipIsNameValidRequest struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	RequestedTier uint32                    `protobuf:"varint,1,opt,name=requestedTier,proto3" json:"requestedTier,omitempty"`
	NsName        string                    `protobuf:"bytes,2,opt,name=nsName,proto3" json:"nsName,omitempty"`
	NsNameType    model.NameserviceNameType `protobuf:"varint,3,opt,name=nsNameType,proto3,enum=anytype.model.NameserviceNameType" json:"nsNameType,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcMembershipIsNameValidRequest) Reset() {
	*x = RpcMembershipIsNameValidRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[1156]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcMembershipIsNameValidRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcMembershipIsNameValidRequest) ProtoMessage() {}

func (x *RpcMembershipIsNameValidRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1156]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcMembershipIsNameValidRequest.ProtoReflect.Descriptor instead.
func (*RpcMembershipIsNameValidRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 37, 1, 0}
}

func (x *RpcMembershipIsNameValidRequest) GetRequestedTier() uint32 {
	if x != nil {
		return x.RequestedTier
	}
	return 0
}

func (x *RpcMembershipIsNameValidRequest) GetNsName() string {
	if x != nil {
		return x.NsName
	}
	return ""
}

func (x *RpcMembershipIsNameValidRequest) GetNsNameType() model.NameserviceNameType {
	if x != nil {
		return x.NsNameType
	}
	return model.NameserviceNameType(0)
}

type RpcMembershipIsNameValidResponse struct {
	state         protoimpl.MessageState                 `protogen:"open.v1"`
	Error         *RpcMembershipIsNameValidResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcMembershipIsNameValidResponse) Reset() {
	*x = RpcMembershipIsNameValidResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[1157]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcMembershipIsNameValidResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcMembershipIsNameValidResponse) ProtoMessage() {}

func (x *RpcMembershipIsNameValidResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1157]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcMembershipIsNameValidResponse.ProtoReflect.Descriptor instead.
func (*RpcMembershipIsNameValidResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 37, 1, 1}
}

func (x *RpcMembershipIsNameValidResponse) GetError() *RpcMembershipIsNameValidResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

type RpcMembershipIsNameValidResponseError struct {
	state         protoimpl.MessageState                    `protogen:"open.v1"`
	Code          RpcMembershipIsNameValidResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcMembershipIsNameValidResponseErrorCode" json:"code,omitempty"`
	Description   string                                    `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcMembershipIsNameValidResponseError) Reset() {
	*x = RpcMembershipIsNameValidResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[1158]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcMembershipIsNameValidResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcMembershipIsNameValidResponseError) ProtoMessage() {}

func (x *RpcMembershipIsNameValidResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1158]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcMembershipIsNameValidResponseError.ProtoReflect.Descriptor instead.
func (*RpcMembershipIsNameValidResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 37, 1, 1, 0}
}

func (x *RpcMembershipIsNameValidResponseError) GetCode() RpcMembershipIsNameValidResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcMembershipIsNameValidResponseError_NULL
}

func (x *RpcMembershipIsNameValidResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcMembershipRegisterPaymentRequestRequest struct {
	state         protoimpl.MessageState        `protogen:"open.v1"`
	RequestedTier uint32                        `protobuf:"varint,1,opt,name=requestedTier,proto3" json:"requestedTier,omitempty"`
	PaymentMethod model.MembershipPaymentMethod `protobuf:"varint,2,opt,name=paymentMethod,proto3,enum=anytype.model.MembershipPaymentMethod" json:"paymentMethod,omitempty"`
	// if empty - then no name requested
	// if non-empty - PP node will register that name on behalf of the user
	NsName     string                    `protobuf:"bytes,3,opt,name=nsName,proto3" json:"nsName,omitempty"`
	NsNameType model.NameserviceNameType `protobuf:"varint,4,opt,name=nsNameType,proto3,enum=anytype.model.NameserviceNameType" json:"nsNameType,omitempty"`
	// for some tiers and payment methods (like crypto) we need an e-mail
	// please get if either from:
	// 1. Membership.GetStatus() -> anytype.model.Membership.userEmail field
	// 2. Ask user from the UI
	UserEmail     string `protobuf:"bytes,5,opt,name=userEmail,proto3" json:"userEmail,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcMembershipRegisterPaymentRequestRequest) Reset() {
	*x = RpcMembershipRegisterPaymentRequestRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[1159]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcMembershipRegisterPaymentRequestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcMembershipRegisterPaymentRequestRequest) ProtoMessage() {}

func (x *RpcMembershipRegisterPaymentRequestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1159]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcMembershipRegisterPaymentRequestRequest.ProtoReflect.Descriptor instead.
func (*RpcMembershipRegisterPaymentRequestRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 37, 2, 0}
}

func (x *RpcMembershipRegisterPaymentRequestRequest) GetRequestedTier() uint32 {
	if x != nil {
		return x.RequestedTier
	}
	return 0
}

func (x *RpcMembershipRegisterPaymentRequestRequest) GetPaymentMethod() model.MembershipPaymentMethod {
	if x != nil {
		return x.PaymentMethod
	}
	return model.MembershipPaymentMethod(0)
}

func (x *RpcMembershipRegisterPaymentRequestRequest) GetNsName() string {
	if x != nil {
		return x.NsName
	}
	return ""
}

func (x *RpcMembershipRegisterPaymentRequestRequest) GetNsNameType() model.NameserviceNameType {
	if x != nil {
		return x.NsNameType
	}
	return model.NameserviceNameType(0)
}

func (x *RpcMembershipRegisterPaymentRequestRequest) GetUserEmail() string {
	if x != nil {
		return x.UserEmail
	}
	return ""
}

type RpcMembershipRegisterPaymentRequestResponse struct {
	state protoimpl.MessageState                            `protogen:"open.v1"`
	Error *RpcMembershipRegisterPaymentRequestResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	// will feature current billing ID
	// stripe.com/?client_reference_id=1234
	PaymentUrl string `protobuf:"bytes,2,opt,name=paymentUrl,proto3" json:"paymentUrl,omitempty"`
	// billingID is only needed for mobile clients
	BillingId     string `protobuf:"bytes,3,opt,name=billingId,proto3" json:"billingId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcMembershipRegisterPaymentRequestResponse) Reset() {
	*x = RpcMembershipRegisterPaymentRequestResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[1160]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcMembershipRegisterPaymentRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcMembershipRegisterPaymentRequestResponse) ProtoMessage() {}

func (x *RpcMembershipRegisterPaymentRequestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1160]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcMembershipRegisterPaymentRequestResponse.ProtoReflect.Descriptor instead.
func (*RpcMembershipRegisterPaymentRequestResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 37, 2, 1}
}

func (x *RpcMembershipRegisterPaymentRequestResponse) GetError() *RpcMembershipRegisterPaymentRequestResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcMembershipRegisterPaymentRequestResponse) GetPaymentUrl() string {
	if x != nil {
		return x.PaymentUrl
	}
	return ""
}

func (x *RpcMembershipRegisterPaymentRequestResponse) GetBillingId() string {
	if x != nil {
		return x.BillingId
	}
	return ""
}

type RpcMembershipRegisterPaymentRequestResponseError struct {
	state         protoimpl.MessageState                               `protogen:"open.v1"`
	Code          RpcMembershipRegisterPaymentRequestResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcMembershipRegisterPaymentRequestResponseErrorCode" json:"code,omitempty"`
	Description   string                                               `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcMembershipRegisterPaymentRequestResponseError) Reset() {
	*x = RpcMembershipRegisterPaymentRequestResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[1161]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcMembershipRegisterPaymentRequestResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcMembershipRegisterPaymentRequestResponseError) ProtoMessage() {}

func (x *RpcMembershipRegisterPaymentRequestResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1161]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcMembershipRegisterPaymentRequestResponseError.ProtoReflect.Descriptor instead.
func (*RpcMembershipRegisterPaymentRequestResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 37, 2, 1, 0}
}

func (x *RpcMembershipRegisterPaymentRequestResponseError) GetCode() RpcMembershipRegisterPaymentRequestResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcMembershipRegisterPaymentRequestResponseError_NULL
}

func (x *RpcMembershipRegisterPaymentRequestResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcMembershipGetPortalLinkUrlRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcMembershipGetPortalLinkUrlRequest) Reset() {
	*x = RpcMembershipGetPortalLinkUrlRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[1162]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcMembershipGetPortalLinkUrlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcMembershipGetPortalLinkUrlRequest) ProtoMessage() {}

func (x *RpcMembershipGetPortalLinkUrlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1162]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcMembershipGetPortalLinkUrlRequest.ProtoReflect.Descriptor instead.
func (*RpcMembershipGetPortalLinkUrlRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 37, 3, 0}
}

type RpcMembershipGetPortalLinkUrlResponse struct {
	state         protoimpl.MessageState                      `protogen:"open.v1"`
	Error         *RpcMembershipGetPortalLinkUrlResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	PortalUrl     string                                      `protobuf:"bytes,2,opt,name=portalUrl,proto3" json:"portalUrl,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcMembershipGetPortalLinkUrlResponse) Reset() {
	*x = RpcMembershipGetPortalLinkUrlResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[1163]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcMembershipGetPortalLinkUrlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcMembershipGetPortalLinkUrlResponse) ProtoMessage() {}

func (x *RpcMembershipGetPortalLinkUrlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1163]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcMembershipGetPortalLinkUrlResponse.ProtoReflect.Descriptor instead.
func (*RpcMembershipGetPortalLinkUrlResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 37, 3, 1}
}

func (x *RpcMembershipGetPortalLinkUrlResponse) GetError() *RpcMembershipGetPortalLinkUrlResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcMembershipGetPortalLinkUrlResponse) GetPortalUrl() string {
	if x != nil {
		return x.PortalUrl
	}
	return ""
}

type RpcMembershipGetPortalLinkUrlResponseError struct {
	state         protoimpl.MessageState                         `protogen:"open.v1"`
	Code          RpcMembershipGetPortalLinkUrlResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcMembershipGetPortalLinkUrlResponseErrorCode" json:"code,omitempty"`
	Description   string                                         `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcMembershipGetPortalLinkUrlResponseError) Reset() {
	*x = RpcMembershipGetPortalLinkUrlResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[1164]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcMembershipGetPortalLinkUrlResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcMembershipGetPortalLinkUrlResponseError) ProtoMessage() {}

func (x *RpcMembershipGetPortalLinkUrlResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1164]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcMembershipGetPortalLinkUrlResponseError.ProtoReflect.Descriptor instead.
func (*RpcMembershipGetPortalLinkUrlResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 37, 3, 1, 0}
}

func (x *RpcMembershipGetPortalLinkUrlResponseError) GetCode() RpcMembershipGetPortalLinkUrlResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcMembershipGetPortalLinkUrlResponseError_NULL
}

func (x *RpcMembershipGetPortalLinkUrlResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcMembershipFinalizeRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// if empty - then no name requested
	// if non-empty - PP node will register that name on behalf of the user
	NsName        string                    `protobuf:"bytes,1,opt,name=nsName,proto3" json:"nsName,omitempty"`
	NsNameType    model.NameserviceNameType `protobuf:"varint,2,opt,name=nsNameType,proto3,enum=anytype.model.NameserviceNameType" json:"nsNameType,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcMembershipFinalizeRequest) Reset() {
	*x = RpcMembershipFinalizeRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[1165]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcMembershipFinalizeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcMembershipFinalizeRequest) ProtoMessage() {}

func (x *RpcMembershipFinalizeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1165]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcMembershipFinalizeRequest.ProtoReflect.Descriptor instead.
func (*RpcMembershipFinalizeRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 37, 4, 0}
}

func (x *RpcMembershipFinalizeRequest) GetNsName() string {
	if x != nil {
		return x.NsName
	}
	return ""
}

func (x *RpcMembershipFinalizeRequest) GetNsNameType() model.NameserviceNameType {
	if x != nil {
		return x.NsNameType
	}
	return model.NameserviceNameType(0)
}

type RpcMembershipFinalizeResponse struct {
	state         protoimpl.MessageState              `protogen:"open.v1"`
	Error         *RpcMembershipFinalizeResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcMembershipFinalizeResponse) Reset() {
	*x = RpcMembershipFinalizeResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[1166]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcMembershipFinalizeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcMembershipFinalizeResponse) ProtoMessage() {}

func (x *RpcMembershipFinalizeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1166]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcMembershipFinalizeResponse.ProtoReflect.Descriptor instead.
func (*RpcMembershipFinalizeResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 37, 4, 1}
}

func (x *RpcMembershipFinalizeResponse) GetError() *RpcMembershipFinalizeResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

type RpcMembershipFinalizeResponseError struct {
	state         protoimpl.MessageState                 `protogen:"open.v1"`
	Code          RpcMembershipFinalizeResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcMembershipFinalizeResponseErrorCode" json:"code,omitempty"`
	Description   string                                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcMembershipFinalizeResponseError) Reset() {
	*x = RpcMembershipFinalizeResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[1167]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcMembershipFinalizeResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcMembershipFinalizeResponseError) ProtoMessage() {}

func (x *RpcMembershipFinalizeResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1167]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcMembershipFinalizeResponseError.ProtoReflect.Descriptor instead.
func (*RpcMembershipFinalizeResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 37, 4, 1, 0}
}

func (x *RpcMembershipFinalizeResponseError) GetCode() RpcMembershipFinalizeResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcMembershipFinalizeResponseError_NULL
}

func (x *RpcMembershipFinalizeResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcMembershipGetVerificationEmailStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcMembershipGetVerificationEmailStatusRequest) Reset() {
	*x = RpcMembershipGetVerificationEmailStatusRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[1168]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcMembershipGetVerificationEmailStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcMembershipGetVerificationEmailStatusRequest) ProtoMessage() {}

func (x *RpcMembershipGetVerificationEmailStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1168]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcMembershipGetVerificationEmailStatusRequest.ProtoReflect.Descriptor instead.
func (*RpcMembershipGetVerificationEmailStatusRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 37, 5, 0}
}

type RpcMembershipGetVerificationEmailStatusResponse struct {
	state         protoimpl.MessageState                                `protogen:"open.v1"`
	Error         *RpcMembershipGetVerificationEmailStatusResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Status        model.MembershipEmailVerificationStatus               `protobuf:"varint,2,opt,name=status,proto3,enum=anytype.model.MembershipEmailVerificationStatus" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcMembershipGetVerificationEmailStatusResponse) Reset() {
	*x = RpcMembershipGetVerificationEmailStatusResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[1169]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcMembershipGetVerificationEmailStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcMembershipGetVerificationEmailStatusResponse) ProtoMessage() {}

func (x *RpcMembershipGetVerificationEmailStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1169]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcMembershipGetVerificationEmailStatusResponse.ProtoReflect.Descriptor instead.
func (*RpcMembershipGetVerificationEmailStatusResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 37, 5, 1}
}

func (x *RpcMembershipGetVerificationEmailStatusResponse) GetError() *RpcMembershipGetVerificationEmailStatusResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcMembershipGetVerificationEmailStatusResponse) GetStatus() model.MembershipEmailVerificationStatus {
	if x != nil {
		return x.Status
	}
	return model.MembershipEmailVerificationStatus(0)
}

type RpcMembershipGetVerificationEmailStatusResponseError struct {
	state         protoimpl.MessageState                                   `protogen:"open.v1"`
	Code          RpcMembershipGetVerificationEmailStatusResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcMembershipGetVerificationEmailStatusResponseErrorCode" json:"code,omitempty"`
	Description   string                                                   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcMembershipGetVerificationEmailStatusResponseError) Reset() {
	*x = RpcMembershipGetVerificationEmailStatusResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[1170]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcMembershipGetVerificationEmailStatusResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcMembershipGetVerificationEmailStatusResponseError) ProtoMessage() {}

func (x *RpcMembershipGetVerificationEmailStatusResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1170]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcMembershipGetVerificationEmailStatusResponseError.ProtoReflect.Descriptor instead.
func (*RpcMembershipGetVerificationEmailStatusResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 37, 5, 1, 0}
}

func (x *RpcMembershipGetVerificationEmailStatusResponseError) GetCode() RpcMembershipGetVerificationEmailStatusResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcMembershipGetVerificationEmailStatusResponseError_NULL
}

func (x *RpcMembershipGetVerificationEmailStatusResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcMembershipGetVerificationEmailRequest struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	Email                   string                 `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	SubscribeToNewsletter   bool                   `protobuf:"varint,2,opt,name=subscribeToNewsletter,proto3" json:"subscribeToNewsletter,omitempty"`
	InsiderTipsAndTutorials bool                   `protobuf:"varint,3,opt,name=insiderTipsAndTutorials,proto3" json:"insiderTipsAndTutorials,omitempty"`
	// if we are coming from the onboarding list
	IsOnboardingList bool `protobuf:"varint,4,opt,name=isOnboardingList,proto3" json:"isOnboardingList,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *RpcMembershipGetVerificationEmailRequest) Reset() {
	*x = RpcMembershipGetVerificationEmailRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[1171]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcMembershipGetVerificationEmailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcMembershipGetVerificationEmailRequest) ProtoMessage() {}

func (x *RpcMembershipGetVerificationEmailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1171]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcMembershipGetVerificationEmailRequest.ProtoReflect.Descriptor instead.
func (*RpcMembershipGetVerificationEmailRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 37, 6, 0}
}

func (x *RpcMembershipGetVerificationEmailRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *RpcMembershipGetVerificationEmailRequest) GetSubscribeToNewsletter() bool {
	if x != nil {
		return x.SubscribeToNewsletter
	}
	return false
}

func (x *RpcMembershipGetVerificationEmailRequest) GetInsiderTipsAndTutorials() bool {
	if x != nil {
		return x.InsiderTipsAndTutorials
	}
	return false
}

func (x *RpcMembershipGetVerificationEmailRequest) GetIsOnboardingList() bool {
	if x != nil {
		return x.IsOnboardingList
	}
	return false
}

type RpcMembershipGetVerificationEmailResponse struct {
	state         protoimpl.MessageState                          `protogen:"open.v1"`
	Error         *RpcMembershipGetVerificationEmailResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcMembershipGetVerificationEmailResponse) Reset() {
	*x = RpcMembershipGetVerificationEmailResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[1172]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcMembershipGetVerificationEmailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcMembershipGetVerificationEmailResponse) ProtoMessage() {}

func (x *RpcMembershipGetVerificationEmailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1172]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcMembershipGetVerificationEmailResponse.ProtoReflect.Descriptor instead.
func (*RpcMembershipGetVerificationEmailResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 37, 6, 1}
}

func (x *RpcMembershipGetVerificationEmailResponse) GetError() *RpcMembershipGetVerificationEmailResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

type RpcMembershipGetVerificationEmailResponseError struct {
	state         protoimpl.MessageState                             `protogen:"open.v1"`
	Code          RpcMembershipGetVerificationEmailResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcMembershipGetVerificationEmailResponseErrorCode" json:"code,omitempty"`
	Description   string                                             `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcMembershipGetVerificationEmailResponseError) Reset() {
	*x = RpcMembershipGetVerificationEmailResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[1173]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcMembershipGetVerificationEmailResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcMembershipGetVerificationEmailResponseError) ProtoMessage() {}

func (x *RpcMembershipGetVerificationEmailResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1173]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcMembershipGetVerificationEmailResponseError.ProtoReflect.Descriptor instead.
func (*RpcMembershipGetVerificationEmailResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 37, 6, 1, 0}
}

func (x *RpcMembershipGetVerificationEmailResponseError) GetCode() RpcMembershipGetVerificationEmailResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcMembershipGetVerificationEmailResponseError_NULL
}

func (x *RpcMembershipGetVerificationEmailResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcMembershipVerifyEmailCodeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          string                 `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcMembershipVerifyEmailCodeRequest) Reset() {
	*x = RpcMembershipVerifyEmailCodeRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[1174]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcMembershipVerifyEmailCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcMembershipVerifyEmailCodeRequest) ProtoMessage() {}

func (x *RpcMembershipVerifyEmailCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1174]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcMembershipVerifyEmailCodeRequest.ProtoReflect.Descriptor instead.
func (*RpcMembershipVerifyEmailCodeRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 37, 7, 0}
}

func (x *RpcMembershipVerifyEmailCodeRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type RpcMembershipVerifyEmailCodeResponse struct {
	state         protoimpl.MessageState                     `protogen:"open.v1"`
	Error         *RpcMembershipVerifyEmailCodeResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcMembershipVerifyEmailCodeResponse) Reset() {
	*x = RpcMembershipVerifyEmailCodeResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[1175]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcMembershipVerifyEmailCodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcMembershipVerifyEmailCodeResponse) ProtoMessage() {}

func (x *RpcMembershipVerifyEmailCodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1175]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcMembershipVerifyEmailCodeResponse.ProtoReflect.Descriptor instead.
func (*RpcMembershipVerifyEmailCodeResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 37, 7, 1}
}

func (x *RpcMembershipVerifyEmailCodeResponse) GetError() *RpcMembershipVerifyEmailCodeResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

type RpcMembershipVerifyEmailCodeResponseError struct {
	state         protoimpl.MessageState                        `protogen:"open.v1"`
	Code          RpcMembershipVerifyEmailCodeResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcMembershipVerifyEmailCodeResponseErrorCode" json:"code,omitempty"`
	Description   string                                        `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcMembershipVerifyEmailCodeResponseError) Reset() {
	*x = RpcMembershipVerifyEmailCodeResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[1176]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcMembershipVerifyEmailCodeResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcMembershipVerifyEmailCodeResponseError) ProtoMessage() {}

func (x *RpcMembershipVerifyEmailCodeResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1176]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcMembershipVerifyEmailCodeResponseError.ProtoReflect.Descriptor instead.
func (*RpcMembershipVerifyEmailCodeResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 37, 7, 1, 0}
}

func (x *RpcMembershipVerifyEmailCodeResponseError) GetCode() RpcMembershipVerifyEmailCodeResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcMembershipVerifyEmailCodeResponseError_NULL
}

func (x *RpcMembershipVerifyEmailCodeResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcMembershipGetTiersRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// pass true to force the cache update
	// by default this is false
	NoCache       bool   `protobuf:"varint,1,opt,name=noCache,proto3" json:"noCache,omitempty"`
	Locale        string `protobuf:"bytes,2,opt,name=locale,proto3" json:"locale,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcMembershipGetTiersRequest) Reset() {
	*x = RpcMembershipGetTiersRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[1177]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcMembershipGetTiersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcMembershipGetTiersRequest) ProtoMessage() {}

func (x *RpcMembershipGetTiersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1177]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcMembershipGetTiersRequest.ProtoReflect.Descriptor instead.
func (*RpcMembershipGetTiersRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 37, 8, 0}
}

func (x *RpcMembershipGetTiersRequest) GetNoCache() bool {
	if x != nil {
		return x.NoCache
	}
	return false
}

func (x *RpcMembershipGetTiersRequest) GetLocale() string {
	if x != nil {
		return x.Locale
	}
	return ""
}

type RpcMembershipGetTiersResponse struct {
	state         protoimpl.MessageState              `protogen:"open.v1"`
	Error         *RpcMembershipGetTiersResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Tiers         []*model.MembershipTierData         `protobuf:"bytes,2,rep,name=tiers,proto3" json:"tiers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcMembershipGetTiersResponse) Reset() {
	*x = RpcMembershipGetTiersResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[1178]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcMembershipGetTiersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcMembershipGetTiersResponse) ProtoMessage() {}

func (x *RpcMembershipGetTiersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1178]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcMembershipGetTiersResponse.ProtoReflect.Descriptor instead.
func (*RpcMembershipGetTiersResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 37, 8, 1}
}

func (x *RpcMembershipGetTiersResponse) GetError() *RpcMembershipGetTiersResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcMembershipGetTiersResponse) GetTiers() []*model.MembershipTierData {
	if x != nil {
		return x.Tiers
	}
	return nil
}

type RpcMembershipGetTiersResponseError struct {
	state         protoimpl.MessageState                 `protogen:"open.v1"`
	Code          RpcMembershipGetTiersResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcMembershipGetTiersResponseErrorCode" json:"code,omitempty"`
	Description   string                                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcMembershipGetTiersResponseError) Reset() {
	*x = RpcMembershipGetTiersResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[1179]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcMembershipGetTiersResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcMembershipGetTiersResponseError) ProtoMessage() {}

func (x *RpcMembershipGetTiersResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1179]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcMembershipGetTiersResponseError.ProtoReflect.Descriptor instead.
func (*RpcMembershipGetTiersResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 37, 8, 1, 0}
}

func (x *RpcMembershipGetTiersResponseError) GetCode() RpcMembershipGetTiersResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcMembershipGetTiersResponseError_NULL
}

func (x *RpcMembershipGetTiersResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcMembershipVerifyAppStoreReceiptRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// receipt is a JWT-encoded string including info about subscription purchase
	Receipt       string `protobuf:"bytes,1,opt,name=receipt,proto3" json:"receipt,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcMembershipVerifyAppStoreReceiptRequest) Reset() {
	*x = RpcMembershipVerifyAppStoreReceiptRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[1180]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcMembershipVerifyAppStoreReceiptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcMembershipVerifyAppStoreReceiptRequest) ProtoMessage() {}

func (x *RpcMembershipVerifyAppStoreReceiptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1180]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcMembershipVerifyAppStoreReceiptRequest.ProtoReflect.Descriptor instead.
func (*RpcMembershipVerifyAppStoreReceiptRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 37, 9, 0}
}

func (x *RpcMembershipVerifyAppStoreReceiptRequest) GetReceipt() string {
	if x != nil {
		return x.Receipt
	}
	return ""
}

type RpcMembershipVerifyAppStoreReceiptResponse struct {
	state         protoimpl.MessageState                           `protogen:"open.v1"`
	Error         *RpcMembershipVerifyAppStoreReceiptResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcMembershipVerifyAppStoreReceiptResponse) Reset() {
	*x = RpcMembershipVerifyAppStoreReceiptResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[1181]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcMembershipVerifyAppStoreReceiptResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcMembershipVerifyAppStoreReceiptResponse) ProtoMessage() {}

func (x *RpcMembershipVerifyAppStoreReceiptResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1181]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcMembershipVerifyAppStoreReceiptResponse.ProtoReflect.Descriptor instead.
func (*RpcMembershipVerifyAppStoreReceiptResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 37, 9, 1}
}

func (x *RpcMembershipVerifyAppStoreReceiptResponse) GetError() *RpcMembershipVerifyAppStoreReceiptResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

type RpcMembershipVerifyAppStoreReceiptResponseError struct {
	state         protoimpl.MessageState                              `protogen:"open.v1"`
	Code          RpcMembershipVerifyAppStoreReceiptResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcMembershipVerifyAppStoreReceiptResponseErrorCode" json:"code,omitempty"`
	Description   string                                              `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcMembershipVerifyAppStoreReceiptResponseError) Reset() {
	*x = RpcMembershipVerifyAppStoreReceiptResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[1182]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcMembershipVerifyAppStoreReceiptResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcMembershipVerifyAppStoreReceiptResponseError) ProtoMessage() {}

func (x *RpcMembershipVerifyAppStoreReceiptResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1182]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcMembershipVerifyAppStoreReceiptResponseError.ProtoReflect.Descriptor instead.
func (*RpcMembershipVerifyAppStoreReceiptResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 37, 9, 1, 0}
}

func (x *RpcMembershipVerifyAppStoreReceiptResponseError) GetCode() RpcMembershipVerifyAppStoreReceiptResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcMembershipVerifyAppStoreReceiptResponseError_NULL
}

func (x *RpcMembershipVerifyAppStoreReceiptResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcNameServiceResolveName struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcNameServiceResolveName) Reset() {
	*x = RpcNameServiceResolveName{}
	mi := &file_pb_protos_commands_proto_msgTypes[1183]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcNameServiceResolveName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcNameServiceResolveName) ProtoMessage() {}

func (x *RpcNameServiceResolveName) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1183]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcNameServiceResolveName.ProtoReflect.Descriptor instead.
func (*RpcNameServiceResolveName) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 38, 0}
}

type RpcNameServiceResolveAnyId struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcNameServiceResolveAnyId) Reset() {
	*x = RpcNameServiceResolveAnyId{}
	mi := &file_pb_protos_commands_proto_msgTypes[1184]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcNameServiceResolveAnyId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcNameServiceResolveAnyId) ProtoMessage() {}

func (x *RpcNameServiceResolveAnyId) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1184]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcNameServiceResolveAnyId.ProtoReflect.Descriptor instead.
func (*RpcNameServiceResolveAnyId) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 38, 1}
}

type RpcNameServiceResolveSpaceId struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcNameServiceResolveSpaceId) Reset() {
	*x = RpcNameServiceResolveSpaceId{}
	mi := &file_pb_protos_commands_proto_msgTypes[1185]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcNameServiceResolveSpaceId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcNameServiceResolveSpaceId) ProtoMessage() {}

func (x *RpcNameServiceResolveSpaceId) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1185]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcNameServiceResolveSpaceId.ProtoReflect.Descriptor instead.
func (*RpcNameServiceResolveSpaceId) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 38, 2}
}

type RpcNameServiceUserAccount struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcNameServiceUserAccount) Reset() {
	*x = RpcNameServiceUserAccount{}
	mi := &file_pb_protos_commands_proto_msgTypes[1186]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcNameServiceUserAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcNameServiceUserAccount) ProtoMessage() {}

func (x *RpcNameServiceUserAccount) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1186]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcNameServiceUserAccount.ProtoReflect.Descriptor instead.
func (*RpcNameServiceUserAccount) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 38, 3}
}

type RpcNameServiceResolveNameRequest struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	NsName        string                    `protobuf:"bytes,1,opt,name=nsName,proto3" json:"nsName,omitempty"`
	NsNameType    model.NameserviceNameType `protobuf:"varint,2,opt,name=nsNameType,proto3,enum=anytype.model.NameserviceNameType" json:"nsNameType,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcNameServiceResolveNameRequest) Reset() {
	*x = RpcNameServiceResolveNameRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[1187]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcNameServiceResolveNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcNameServiceResolveNameRequest) ProtoMessage() {}

func (x *RpcNameServiceResolveNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1187]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcNameServiceResolveNameRequest.ProtoReflect.Descriptor instead.
func (*RpcNameServiceResolveNameRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 38, 0, 0}
}

func (x *RpcNameServiceResolveNameRequest) GetNsName() string {
	if x != nil {
		return x.NsName
	}
	return ""
}

func (x *RpcNameServiceResolveNameRequest) GetNsNameType() model.NameserviceNameType {
	if x != nil {
		return x.NsNameType
	}
	return model.NameserviceNameType(0)
}

type RpcNameServiceResolveNameResponse struct {
	state     protoimpl.MessageState                  `protogen:"open.v1"`
	Error     *RpcNameServiceResolveNameResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Available bool                                    `protobuf:"varint,2,opt,name=available,proto3" json:"available,omitempty"`
	// EOA -> SCW -> name
	// This field is non-empty only if name is "already registered"
	OwnerScwEthAddress string `protobuf:"bytes,3,opt,name=ownerScwEthAddress,proto3" json:"ownerScwEthAddress,omitempty"`
	// This field is non-empty only if name is "already registered"
	OwnerEthAddress string `protobuf:"bytes,4,opt,name=ownerEthAddress,proto3" json:"ownerEthAddress,omitempty"`
	// A content hash attached to this name
	// This field is non-empty only if name is "already registered"
	OwnerAnyAddress string `protobuf:"bytes,5,opt,name=ownerAnyAddress,proto3" json:"ownerAnyAddress,omitempty"`
	// A SpaceId attached to this name
	// This field is non-empty only if name is "already registered"
	SpaceId string `protobuf:"bytes,6,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	// A timestamp when this name expires
	NameExpires   int64 `protobuf:"varint,7,opt,name=nameExpires,proto3" json:"nameExpires,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcNameServiceResolveNameResponse) Reset() {
	*x = RpcNameServiceResolveNameResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[1188]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcNameServiceResolveNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcNameServiceResolveNameResponse) ProtoMessage() {}

func (x *RpcNameServiceResolveNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1188]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcNameServiceResolveNameResponse.ProtoReflect.Descriptor instead.
func (*RpcNameServiceResolveNameResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 38, 0, 1}
}

func (x *RpcNameServiceResolveNameResponse) GetError() *RpcNameServiceResolveNameResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcNameServiceResolveNameResponse) GetAvailable() bool {
	if x != nil {
		return x.Available
	}
	return false
}

func (x *RpcNameServiceResolveNameResponse) GetOwnerScwEthAddress() string {
	if x != nil {
		return x.OwnerScwEthAddress
	}
	return ""
}

func (x *RpcNameServiceResolveNameResponse) GetOwnerEthAddress() string {
	if x != nil {
		return x.OwnerEthAddress
	}
	return ""
}

func (x *RpcNameServiceResolveNameResponse) GetOwnerAnyAddress() string {
	if x != nil {
		return x.OwnerAnyAddress
	}
	return ""
}

func (x *RpcNameServiceResolveNameResponse) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *RpcNameServiceResolveNameResponse) GetNameExpires() int64 {
	if x != nil {
		return x.NameExpires
	}
	return 0
}

type RpcNameServiceResolveNameResponseError struct {
	state         protoimpl.MessageState                     `protogen:"open.v1"`
	Code          RpcNameServiceResolveNameResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcNameServiceResolveNameResponseErrorCode" json:"code,omitempty"`
	Description   string                                     `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcNameServiceResolveNameResponseError) Reset() {
	*x = RpcNameServiceResolveNameResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[1189]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcNameServiceResolveNameResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcNameServiceResolveNameResponseError) ProtoMessage() {}

func (x *RpcNameServiceResolveNameResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1189]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcNameServiceResolveNameResponseError.ProtoReflect.Descriptor instead.
func (*RpcNameServiceResolveNameResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 38, 0, 1, 0}
}

func (x *RpcNameServiceResolveNameResponseError) GetCode() RpcNameServiceResolveNameResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcNameServiceResolveNameResponseError_NULL
}

func (x *RpcNameServiceResolveNameResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcNameServiceResolveAnyIdRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AnyId         string                 `protobuf:"bytes,1,opt,name=anyId,proto3" json:"anyId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcNameServiceResolveAnyIdRequest) Reset() {
	*x = RpcNameServiceResolveAnyIdRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[1190]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcNameServiceResolveAnyIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcNameServiceResolveAnyIdRequest) ProtoMessage() {}

func (x *RpcNameServiceResolveAnyIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1190]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcNameServiceResolveAnyIdRequest.ProtoReflect.Descriptor instead.
func (*RpcNameServiceResolveAnyIdRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 38, 1, 0}
}

func (x *RpcNameServiceResolveAnyIdRequest) GetAnyId() string {
	if x != nil {
		return x.AnyId
	}
	return ""
}

type RpcNameServiceResolveAnyIdResponse struct {
	state protoimpl.MessageState                   `protogen:"open.v1"`
	Error *RpcNameServiceResolveAnyIdResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Found bool                                     `protobuf:"varint,2,opt,name=found,proto3" json:"found,omitempty"`
	// not including suffix
	NsName        string                    `protobuf:"bytes,3,opt,name=nsName,proto3" json:"nsName,omitempty"`
	NsNameType    model.NameserviceNameType `protobuf:"varint,4,opt,name=nsNameType,proto3,enum=anytype.model.NameserviceNameType" json:"nsNameType,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcNameServiceResolveAnyIdResponse) Reset() {
	*x = RpcNameServiceResolveAnyIdResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[1191]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcNameServiceResolveAnyIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcNameServiceResolveAnyIdResponse) ProtoMessage() {}

func (x *RpcNameServiceResolveAnyIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1191]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcNameServiceResolveAnyIdResponse.ProtoReflect.Descriptor instead.
func (*RpcNameServiceResolveAnyIdResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 38, 1, 1}
}

func (x *RpcNameServiceResolveAnyIdResponse) GetError() *RpcNameServiceResolveAnyIdResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcNameServiceResolveAnyIdResponse) GetFound() bool {
	if x != nil {
		return x.Found
	}
	return false
}

func (x *RpcNameServiceResolveAnyIdResponse) GetNsName() string {
	if x != nil {
		return x.NsName
	}
	return ""
}

func (x *RpcNameServiceResolveAnyIdResponse) GetNsNameType() model.NameserviceNameType {
	if x != nil {
		return x.NsNameType
	}
	return model.NameserviceNameType(0)
}

type RpcNameServiceResolveAnyIdResponseError struct {
	state         protoimpl.MessageState                      `protogen:"open.v1"`
	Code          RpcNameServiceResolveAnyIdResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcNameServiceResolveAnyIdResponseErrorCode" json:"code,omitempty"`
	Description   string                                      `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcNameServiceResolveAnyIdResponseError) Reset() {
	*x = RpcNameServiceResolveAnyIdResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[1192]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcNameServiceResolveAnyIdResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcNameServiceResolveAnyIdResponseError) ProtoMessage() {}

func (x *RpcNameServiceResolveAnyIdResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1192]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcNameServiceResolveAnyIdResponseError.ProtoReflect.Descriptor instead.
func (*RpcNameServiceResolveAnyIdResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 38, 1, 1, 0}
}

func (x *RpcNameServiceResolveAnyIdResponseError) GetCode() RpcNameServiceResolveAnyIdResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcNameServiceResolveAnyIdResponseError_NULL
}

func (x *RpcNameServiceResolveAnyIdResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcNameServiceResolveSpaceIdRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SpaceId       string                 `protobuf:"bytes,1,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcNameServiceResolveSpaceIdRequest) Reset() {
	*x = RpcNameServiceResolveSpaceIdRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[1193]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcNameServiceResolveSpaceIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcNameServiceResolveSpaceIdRequest) ProtoMessage() {}

func (x *RpcNameServiceResolveSpaceIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1193]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcNameServiceResolveSpaceIdRequest.ProtoReflect.Descriptor instead.
func (*RpcNameServiceResolveSpaceIdRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 38, 2, 0}
}

func (x *RpcNameServiceResolveSpaceIdRequest) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

type RpcNameServiceResolveSpaceIdResponse struct {
	state protoimpl.MessageState                     `protogen:"open.v1"`
	Error *RpcNameServiceResolveSpaceIdResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Found bool                                       `protobuf:"varint,2,opt,name=found,proto3" json:"found,omitempty"`
	// not including suffix
	NsName        string                    `protobuf:"bytes,3,opt,name=nsName,proto3" json:"nsName,omitempty"`
	NsNameType    model.NameserviceNameType `protobuf:"varint,4,opt,name=nsNameType,proto3,enum=anytype.model.NameserviceNameType" json:"nsNameType,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcNameServiceResolveSpaceIdResponse) Reset() {
	*x = RpcNameServiceResolveSpaceIdResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[1194]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcNameServiceResolveSpaceIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcNameServiceResolveSpaceIdResponse) ProtoMessage() {}

func (x *RpcNameServiceResolveSpaceIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1194]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcNameServiceResolveSpaceIdResponse.ProtoReflect.Descriptor instead.
func (*RpcNameServiceResolveSpaceIdResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 38, 2, 1}
}

func (x *RpcNameServiceResolveSpaceIdResponse) GetError() *RpcNameServiceResolveSpaceIdResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcNameServiceResolveSpaceIdResponse) GetFound() bool {
	if x != nil {
		return x.Found
	}
	return false
}

func (x *RpcNameServiceResolveSpaceIdResponse) GetNsName() string {
	if x != nil {
		return x.NsName
	}
	return ""
}

func (x *RpcNameServiceResolveSpaceIdResponse) GetNsNameType() model.NameserviceNameType {
	if x != nil {
		return x.NsNameType
	}
	return model.NameserviceNameType(0)
}

type RpcNameServiceResolveSpaceIdResponseError struct {
	state         protoimpl.MessageState                        `protogen:"open.v1"`
	Code          RpcNameServiceResolveSpaceIdResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcNameServiceResolveSpaceIdResponseErrorCode" json:"code,omitempty"`
	Description   string                                        `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcNameServiceResolveSpaceIdResponseError) Reset() {
	*x = RpcNameServiceResolveSpaceIdResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[1195]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcNameServiceResolveSpaceIdResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcNameServiceResolveSpaceIdResponseError) ProtoMessage() {}

func (x *RpcNameServiceResolveSpaceIdResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1195]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcNameServiceResolveSpaceIdResponseError.ProtoReflect.Descriptor instead.
func (*RpcNameServiceResolveSpaceIdResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 38, 2, 1, 0}
}

func (x *RpcNameServiceResolveSpaceIdResponseError) GetCode() RpcNameServiceResolveSpaceIdResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcNameServiceResolveSpaceIdResponseError_NULL
}

func (x *RpcNameServiceResolveSpaceIdResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcNameServiceUserAccountGet struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcNameServiceUserAccountGet) Reset() {
	*x = RpcNameServiceUserAccountGet{}
	mi := &file_pb_protos_commands_proto_msgTypes[1196]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcNameServiceUserAccountGet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcNameServiceUserAccountGet) ProtoMessage() {}

func (x *RpcNameServiceUserAccountGet) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1196]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcNameServiceUserAccountGet.ProtoReflect.Descriptor instead.
func (*RpcNameServiceUserAccountGet) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 38, 3, 0}
}

type RpcNameServiceUserAccountGetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcNameServiceUserAccountGetRequest) Reset() {
	*x = RpcNameServiceUserAccountGetRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[1197]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcNameServiceUserAccountGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcNameServiceUserAccountGetRequest) ProtoMessage() {}

func (x *RpcNameServiceUserAccountGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1197]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcNameServiceUserAccountGetRequest.ProtoReflect.Descriptor instead.
func (*RpcNameServiceUserAccountGetRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 38, 3, 0, 0}
}

type RpcNameServiceUserAccountGetResponse struct {
	state protoimpl.MessageState                     `protogen:"open.v1"`
	Error *RpcNameServiceUserAccountGetResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	// this will use ReverseResolve to get current name
	// user can buy many names, but
	// only 1 name can be set as "current": ETH address <-> name
	NsNameAttached string                    `protobuf:"bytes,2,opt,name=nsNameAttached,proto3" json:"nsNameAttached,omitempty"`
	NsNameType     model.NameserviceNameType `protobuf:"varint,3,opt,name=nsNameType,proto3,enum=anytype.model.NameserviceNameType" json:"nsNameType,omitempty"`
	// Number of names that the user can reserve
	NamesCountLeft uint64 `protobuf:"varint,4,opt,name=namesCountLeft,proto3" json:"namesCountLeft,omitempty"`
	// Number of operations: update name, add new data, etc
	OperationsCountLeft uint64 `protobuf:"varint,5,opt,name=operationsCountLeft,proto3" json:"operationsCountLeft,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *RpcNameServiceUserAccountGetResponse) Reset() {
	*x = RpcNameServiceUserAccountGetResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[1198]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcNameServiceUserAccountGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcNameServiceUserAccountGetResponse) ProtoMessage() {}

func (x *RpcNameServiceUserAccountGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1198]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcNameServiceUserAccountGetResponse.ProtoReflect.Descriptor instead.
func (*RpcNameServiceUserAccountGetResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 38, 3, 0, 1}
}

func (x *RpcNameServiceUserAccountGetResponse) GetError() *RpcNameServiceUserAccountGetResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcNameServiceUserAccountGetResponse) GetNsNameAttached() string {
	if x != nil {
		return x.NsNameAttached
	}
	return ""
}

func (x *RpcNameServiceUserAccountGetResponse) GetNsNameType() model.NameserviceNameType {
	if x != nil {
		return x.NsNameType
	}
	return model.NameserviceNameType(0)
}

func (x *RpcNameServiceUserAccountGetResponse) GetNamesCountLeft() uint64 {
	if x != nil {
		return x.NamesCountLeft
	}
	return 0
}

func (x *RpcNameServiceUserAccountGetResponse) GetOperationsCountLeft() uint64 {
	if x != nil {
		return x.OperationsCountLeft
	}
	return 0
}

type RpcNameServiceUserAccountGetResponseError struct {
	state         protoimpl.MessageState                        `protogen:"open.v1"`
	Code          RpcNameServiceUserAccountGetResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcNameServiceUserAccountGetResponseErrorCode" json:"code,omitempty"`
	Description   string                                        `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcNameServiceUserAccountGetResponseError) Reset() {
	*x = RpcNameServiceUserAccountGetResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[1199]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcNameServiceUserAccountGetResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcNameServiceUserAccountGetResponseError) ProtoMessage() {}

func (x *RpcNameServiceUserAccountGetResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1199]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcNameServiceUserAccountGetResponseError.ProtoReflect.Descriptor instead.
func (*RpcNameServiceUserAccountGetResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 38, 3, 0, 1, 0}
}

func (x *RpcNameServiceUserAccountGetResponseError) GetCode() RpcNameServiceUserAccountGetResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcNameServiceUserAccountGetResponseError_NULL
}

func (x *RpcNameServiceUserAccountGetResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcBroadcastPayloadEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBroadcastPayloadEvent) Reset() {
	*x = RpcBroadcastPayloadEvent{}
	mi := &file_pb_protos_commands_proto_msgTypes[1200]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBroadcastPayloadEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBroadcastPayloadEvent) ProtoMessage() {}

func (x *RpcBroadcastPayloadEvent) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1200]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBroadcastPayloadEvent.ProtoReflect.Descriptor instead.
func (*RpcBroadcastPayloadEvent) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 39, 0}
}

type RpcBroadcastPayloadEventRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Payload       string                 `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBroadcastPayloadEventRequest) Reset() {
	*x = RpcBroadcastPayloadEventRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[1201]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBroadcastPayloadEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBroadcastPayloadEventRequest) ProtoMessage() {}

func (x *RpcBroadcastPayloadEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1201]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBroadcastPayloadEventRequest.ProtoReflect.Descriptor instead.
func (*RpcBroadcastPayloadEventRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 39, 0, 0}
}

func (x *RpcBroadcastPayloadEventRequest) GetPayload() string {
	if x != nil {
		return x.Payload
	}
	return ""
}

type RpcBroadcastPayloadEventResponse struct {
	state         protoimpl.MessageState                 `protogen:"open.v1"`
	Event         *ResponseEvent                         `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	Error         *RpcBroadcastPayloadEventResponseError `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBroadcastPayloadEventResponse) Reset() {
	*x = RpcBroadcastPayloadEventResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[1202]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBroadcastPayloadEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBroadcastPayloadEventResponse) ProtoMessage() {}

func (x *RpcBroadcastPayloadEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1202]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBroadcastPayloadEventResponse.ProtoReflect.Descriptor instead.
func (*RpcBroadcastPayloadEventResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 39, 0, 1}
}

func (x *RpcBroadcastPayloadEventResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

func (x *RpcBroadcastPayloadEventResponse) GetError() *RpcBroadcastPayloadEventResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

type RpcBroadcastPayloadEventResponseError struct {
	state         protoimpl.MessageState                    `protogen:"open.v1"`
	Code          RpcBroadcastPayloadEventResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcBroadcastPayloadEventResponseErrorCode" json:"code,omitempty"`
	Description   string                                    `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcBroadcastPayloadEventResponseError) Reset() {
	*x = RpcBroadcastPayloadEventResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[1203]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcBroadcastPayloadEventResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcBroadcastPayloadEventResponseError) ProtoMessage() {}

func (x *RpcBroadcastPayloadEventResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1203]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcBroadcastPayloadEventResponseError.ProtoReflect.Descriptor instead.
func (*RpcBroadcastPayloadEventResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 39, 0, 1, 0}
}

func (x *RpcBroadcastPayloadEventResponseError) GetCode() RpcBroadcastPayloadEventResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcBroadcastPayloadEventResponseError_NULL
}

func (x *RpcBroadcastPayloadEventResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcDeviceSetName struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcDeviceSetName) Reset() {
	*x = RpcDeviceSetName{}
	mi := &file_pb_protos_commands_proto_msgTypes[1204]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcDeviceSetName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcDeviceSetName) ProtoMessage() {}

func (x *RpcDeviceSetName) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1204]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcDeviceSetName.ProtoReflect.Descriptor instead.
func (*RpcDeviceSetName) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 40, 0}
}

type RpcDeviceList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcDeviceList) Reset() {
	*x = RpcDeviceList{}
	mi := &file_pb_protos_commands_proto_msgTypes[1205]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcDeviceList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcDeviceList) ProtoMessage() {}

func (x *RpcDeviceList) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1205]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcDeviceList.ProtoReflect.Descriptor instead.
func (*RpcDeviceList) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 40, 1}
}

type RpcDeviceNetworkState struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcDeviceNetworkState) Reset() {
	*x = RpcDeviceNetworkState{}
	mi := &file_pb_protos_commands_proto_msgTypes[1206]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcDeviceNetworkState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcDeviceNetworkState) ProtoMessage() {}

func (x *RpcDeviceNetworkState) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1206]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcDeviceNetworkState.ProtoReflect.Descriptor instead.
func (*RpcDeviceNetworkState) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 40, 2}
}

type RpcDeviceSetNameRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeviceId      string                 `protobuf:"bytes,1,opt,name=deviceId,proto3" json:"deviceId,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcDeviceSetNameRequest) Reset() {
	*x = RpcDeviceSetNameRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[1207]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcDeviceSetNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcDeviceSetNameRequest) ProtoMessage() {}

func (x *RpcDeviceSetNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1207]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcDeviceSetNameRequest.ProtoReflect.Descriptor instead.
func (*RpcDeviceSetNameRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 40, 0, 0}
}

func (x *RpcDeviceSetNameRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *RpcDeviceSetNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type RpcDeviceSetNameResponse struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	Error         *RpcDeviceSetNameResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcDeviceSetNameResponse) Reset() {
	*x = RpcDeviceSetNameResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[1208]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcDeviceSetNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcDeviceSetNameResponse) ProtoMessage() {}

func (x *RpcDeviceSetNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1208]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcDeviceSetNameResponse.ProtoReflect.Descriptor instead.
func (*RpcDeviceSetNameResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 40, 0, 1}
}

func (x *RpcDeviceSetNameResponse) GetError() *RpcDeviceSetNameResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

type RpcDeviceSetNameResponseError struct {
	state         protoimpl.MessageState            `protogen:"open.v1"`
	Code          RpcDeviceSetNameResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcDeviceSetNameResponseErrorCode" json:"code,omitempty"`
	Description   string                            `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcDeviceSetNameResponseError) Reset() {
	*x = RpcDeviceSetNameResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[1209]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcDeviceSetNameResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcDeviceSetNameResponseError) ProtoMessage() {}

func (x *RpcDeviceSetNameResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1209]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcDeviceSetNameResponseError.ProtoReflect.Descriptor instead.
func (*RpcDeviceSetNameResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 40, 0, 1, 0}
}

func (x *RpcDeviceSetNameResponseError) GetCode() RpcDeviceSetNameResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcDeviceSetNameResponseError_NULL
}

func (x *RpcDeviceSetNameResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcDeviceListRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcDeviceListRequest) Reset() {
	*x = RpcDeviceListRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[1210]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcDeviceListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcDeviceListRequest) ProtoMessage() {}

func (x *RpcDeviceListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1210]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcDeviceListRequest.ProtoReflect.Descriptor instead.
func (*RpcDeviceListRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 40, 1, 0}
}

type RpcDeviceListResponse struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	Error         *RpcDeviceListResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Devices       []*model.DeviceInfo         `protobuf:"bytes,2,rep,name=devices,proto3" json:"devices,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcDeviceListResponse) Reset() {
	*x = RpcDeviceListResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[1211]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcDeviceListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcDeviceListResponse) ProtoMessage() {}

func (x *RpcDeviceListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1211]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcDeviceListResponse.ProtoReflect.Descriptor instead.
func (*RpcDeviceListResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 40, 1, 1}
}

func (x *RpcDeviceListResponse) GetError() *RpcDeviceListResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcDeviceListResponse) GetDevices() []*model.DeviceInfo {
	if x != nil {
		return x.Devices
	}
	return nil
}

type RpcDeviceListResponseError struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	Code          RpcDeviceListResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcDeviceListResponseErrorCode" json:"code,omitempty"`
	Description   string                         `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcDeviceListResponseError) Reset() {
	*x = RpcDeviceListResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[1212]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcDeviceListResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcDeviceListResponseError) ProtoMessage() {}

func (x *RpcDeviceListResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1212]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcDeviceListResponseError.ProtoReflect.Descriptor instead.
func (*RpcDeviceListResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 40, 1, 1, 0}
}

func (x *RpcDeviceListResponseError) GetCode() RpcDeviceListResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcDeviceListResponseError_NULL
}

func (x *RpcDeviceListResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcDeviceNetworkStateSet struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcDeviceNetworkStateSet) Reset() {
	*x = RpcDeviceNetworkStateSet{}
	mi := &file_pb_protos_commands_proto_msgTypes[1213]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcDeviceNetworkStateSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcDeviceNetworkStateSet) ProtoMessage() {}

func (x *RpcDeviceNetworkStateSet) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1213]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcDeviceNetworkStateSet.ProtoReflect.Descriptor instead.
func (*RpcDeviceNetworkStateSet) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 40, 2, 0}
}

type RpcDeviceNetworkStateSetRequest struct {
	state             protoimpl.MessageState  `protogen:"open.v1"`
	DeviceNetworkType model.DeviceNetworkType `protobuf:"varint,1,opt,name=deviceNetworkType,proto3,enum=anytype.model.DeviceNetworkType" json:"deviceNetworkType,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *RpcDeviceNetworkStateSetRequest) Reset() {
	*x = RpcDeviceNetworkStateSetRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[1214]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcDeviceNetworkStateSetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcDeviceNetworkStateSetRequest) ProtoMessage() {}

func (x *RpcDeviceNetworkStateSetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1214]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcDeviceNetworkStateSetRequest.ProtoReflect.Descriptor instead.
func (*RpcDeviceNetworkStateSetRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 40, 2, 0, 0}
}

func (x *RpcDeviceNetworkStateSetRequest) GetDeviceNetworkType() model.DeviceNetworkType {
	if x != nil {
		return x.DeviceNetworkType
	}
	return model.DeviceNetworkType(0)
}

type RpcDeviceNetworkStateSetResponse struct {
	state         protoimpl.MessageState                 `protogen:"open.v1"`
	Error         *RpcDeviceNetworkStateSetResponseError `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcDeviceNetworkStateSetResponse) Reset() {
	*x = RpcDeviceNetworkStateSetResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[1215]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcDeviceNetworkStateSetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcDeviceNetworkStateSetResponse) ProtoMessage() {}

func (x *RpcDeviceNetworkStateSetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1215]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcDeviceNetworkStateSetResponse.ProtoReflect.Descriptor instead.
func (*RpcDeviceNetworkStateSetResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 40, 2, 0, 1}
}

func (x *RpcDeviceNetworkStateSetResponse) GetError() *RpcDeviceNetworkStateSetResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

type RpcDeviceNetworkStateSetResponseError struct {
	state         protoimpl.MessageState                    `protogen:"open.v1"`
	Code          RpcDeviceNetworkStateSetResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcDeviceNetworkStateSetResponseErrorCode" json:"code,omitempty"`
	Description   string                                    `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcDeviceNetworkStateSetResponseError) Reset() {
	*x = RpcDeviceNetworkStateSetResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[1216]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcDeviceNetworkStateSetResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcDeviceNetworkStateSetResponseError) ProtoMessage() {}

func (x *RpcDeviceNetworkStateSetResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1216]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcDeviceNetworkStateSetResponseError.ProtoReflect.Descriptor instead.
func (*RpcDeviceNetworkStateSetResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 40, 2, 0, 1, 0}
}

func (x *RpcDeviceNetworkStateSetResponseError) GetCode() RpcDeviceNetworkStateSetResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcDeviceNetworkStateSetResponseError_NULL
}

func (x *RpcDeviceNetworkStateSetResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcChatAddMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcChatAddMessage) Reset() {
	*x = RpcChatAddMessage{}
	mi := &file_pb_protos_commands_proto_msgTypes[1217]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcChatAddMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcChatAddMessage) ProtoMessage() {}

func (x *RpcChatAddMessage) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1217]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcChatAddMessage.ProtoReflect.Descriptor instead.
func (*RpcChatAddMessage) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 41, 0}
}

type RpcChatEditMessageContent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcChatEditMessageContent) Reset() {
	*x = RpcChatEditMessageContent{}
	mi := &file_pb_protos_commands_proto_msgTypes[1218]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcChatEditMessageContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcChatEditMessageContent) ProtoMessage() {}

func (x *RpcChatEditMessageContent) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1218]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcChatEditMessageContent.ProtoReflect.Descriptor instead.
func (*RpcChatEditMessageContent) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 41, 1}
}

type RpcChatToggleMessageReaction struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcChatToggleMessageReaction) Reset() {
	*x = RpcChatToggleMessageReaction{}
	mi := &file_pb_protos_commands_proto_msgTypes[1219]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcChatToggleMessageReaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcChatToggleMessageReaction) ProtoMessage() {}

func (x *RpcChatToggleMessageReaction) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1219]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcChatToggleMessageReaction.ProtoReflect.Descriptor instead.
func (*RpcChatToggleMessageReaction) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 41, 2}
}

type RpcChatDeleteMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcChatDeleteMessage) Reset() {
	*x = RpcChatDeleteMessage{}
	mi := &file_pb_protos_commands_proto_msgTypes[1220]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcChatDeleteMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcChatDeleteMessage) ProtoMessage() {}

func (x *RpcChatDeleteMessage) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1220]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcChatDeleteMessage.ProtoReflect.Descriptor instead.
func (*RpcChatDeleteMessage) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 41, 3}
}

type RpcChatGetMessages struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcChatGetMessages) Reset() {
	*x = RpcChatGetMessages{}
	mi := &file_pb_protos_commands_proto_msgTypes[1221]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcChatGetMessages) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcChatGetMessages) ProtoMessage() {}

func (x *RpcChatGetMessages) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1221]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcChatGetMessages.ProtoReflect.Descriptor instead.
func (*RpcChatGetMessages) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 41, 4}
}

type RpcChatGetMessagesByIds struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcChatGetMessagesByIds) Reset() {
	*x = RpcChatGetMessagesByIds{}
	mi := &file_pb_protos_commands_proto_msgTypes[1222]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcChatGetMessagesByIds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcChatGetMessagesByIds) ProtoMessage() {}

func (x *RpcChatGetMessagesByIds) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1222]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcChatGetMessagesByIds.ProtoReflect.Descriptor instead.
func (*RpcChatGetMessagesByIds) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 41, 5}
}

type RpcChatSubscribeLastMessages struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcChatSubscribeLastMessages) Reset() {
	*x = RpcChatSubscribeLastMessages{}
	mi := &file_pb_protos_commands_proto_msgTypes[1223]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcChatSubscribeLastMessages) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcChatSubscribeLastMessages) ProtoMessage() {}

func (x *RpcChatSubscribeLastMessages) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1223]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcChatSubscribeLastMessages.ProtoReflect.Descriptor instead.
func (*RpcChatSubscribeLastMessages) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 41, 6}
}

type RpcChatUnsubscribe struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcChatUnsubscribe) Reset() {
	*x = RpcChatUnsubscribe{}
	mi := &file_pb_protos_commands_proto_msgTypes[1224]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcChatUnsubscribe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcChatUnsubscribe) ProtoMessage() {}

func (x *RpcChatUnsubscribe) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1224]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcChatUnsubscribe.ProtoReflect.Descriptor instead.
func (*RpcChatUnsubscribe) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 41, 7}
}

type RpcChatSubscribeToMessagePreviews struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcChatSubscribeToMessagePreviews) Reset() {
	*x = RpcChatSubscribeToMessagePreviews{}
	mi := &file_pb_protos_commands_proto_msgTypes[1225]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcChatSubscribeToMessagePreviews) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcChatSubscribeToMessagePreviews) ProtoMessage() {}

func (x *RpcChatSubscribeToMessagePreviews) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1225]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcChatSubscribeToMessagePreviews.ProtoReflect.Descriptor instead.
func (*RpcChatSubscribeToMessagePreviews) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 41, 8}
}

type RpcChatReadMessages struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcChatReadMessages) Reset() {
	*x = RpcChatReadMessages{}
	mi := &file_pb_protos_commands_proto_msgTypes[1226]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcChatReadMessages) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcChatReadMessages) ProtoMessage() {}

func (x *RpcChatReadMessages) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1226]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcChatReadMessages.ProtoReflect.Descriptor instead.
func (*RpcChatReadMessages) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 41, 9}
}

type RpcChatUnread struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcChatUnread) Reset() {
	*x = RpcChatUnread{}
	mi := &file_pb_protos_commands_proto_msgTypes[1227]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcChatUnread) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcChatUnread) ProtoMessage() {}

func (x *RpcChatUnread) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1227]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcChatUnread.ProtoReflect.Descriptor instead.
func (*RpcChatUnread) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 41, 10}
}

type RpcChatAddMessageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChatObjectId  string                 `protobuf:"bytes,1,opt,name=chatObjectId,proto3" json:"chatObjectId,omitempty"`
	Message       *model.ChatMessage     `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcChatAddMessageRequest) Reset() {
	*x = RpcChatAddMessageRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[1228]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcChatAddMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcChatAddMessageRequest) ProtoMessage() {}

func (x *RpcChatAddMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1228]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcChatAddMessageRequest.ProtoReflect.Descriptor instead.
func (*RpcChatAddMessageRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 41, 0, 0}
}

func (x *RpcChatAddMessageRequest) GetChatObjectId() string {
	if x != nil {
		return x.ChatObjectId
	}
	return ""
}

func (x *RpcChatAddMessageRequest) GetMessage() *model.ChatMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

type RpcChatAddMessageResponse struct {
	state         protoimpl.MessageState          `protogen:"open.v1"`
	Error         *RpcChatAddMessageResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	MessageId     string                          `protobuf:"bytes,2,opt,name=messageId,proto3" json:"messageId,omitempty"`
	Event         *ResponseEvent                  `protobuf:"bytes,3,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcChatAddMessageResponse) Reset() {
	*x = RpcChatAddMessageResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[1229]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcChatAddMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcChatAddMessageResponse) ProtoMessage() {}

func (x *RpcChatAddMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1229]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcChatAddMessageResponse.ProtoReflect.Descriptor instead.
func (*RpcChatAddMessageResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 41, 0, 1}
}

func (x *RpcChatAddMessageResponse) GetError() *RpcChatAddMessageResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcChatAddMessageResponse) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *RpcChatAddMessageResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcChatAddMessageResponseError struct {
	state         protoimpl.MessageState             `protogen:"open.v1"`
	Code          RpcChatAddMessageResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcChatAddMessageResponseErrorCode" json:"code,omitempty"`
	Description   string                             `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcChatAddMessageResponseError) Reset() {
	*x = RpcChatAddMessageResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[1230]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcChatAddMessageResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcChatAddMessageResponseError) ProtoMessage() {}

func (x *RpcChatAddMessageResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1230]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcChatAddMessageResponseError.ProtoReflect.Descriptor instead.
func (*RpcChatAddMessageResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 41, 0, 1, 0}
}

func (x *RpcChatAddMessageResponseError) GetCode() RpcChatAddMessageResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcChatAddMessageResponseError_NULL
}

func (x *RpcChatAddMessageResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcChatEditMessageContentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChatObjectId  string                 `protobuf:"bytes,1,opt,name=chatObjectId,proto3" json:"chatObjectId,omitempty"`
	MessageId     string                 `protobuf:"bytes,2,opt,name=messageId,proto3" json:"messageId,omitempty"`
	EditedMessage *model.ChatMessage     `protobuf:"bytes,3,opt,name=editedMessage,proto3" json:"editedMessage,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcChatEditMessageContentRequest) Reset() {
	*x = RpcChatEditMessageContentRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[1231]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcChatEditMessageContentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcChatEditMessageContentRequest) ProtoMessage() {}

func (x *RpcChatEditMessageContentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1231]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcChatEditMessageContentRequest.ProtoReflect.Descriptor instead.
func (*RpcChatEditMessageContentRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 41, 1, 0}
}

func (x *RpcChatEditMessageContentRequest) GetChatObjectId() string {
	if x != nil {
		return x.ChatObjectId
	}
	return ""
}

func (x *RpcChatEditMessageContentRequest) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *RpcChatEditMessageContentRequest) GetEditedMessage() *model.ChatMessage {
	if x != nil {
		return x.EditedMessage
	}
	return nil
}

type RpcChatEditMessageContentResponse struct {
	state         protoimpl.MessageState                  `protogen:"open.v1"`
	Error         *RpcChatEditMessageContentResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcChatEditMessageContentResponse) Reset() {
	*x = RpcChatEditMessageContentResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[1232]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcChatEditMessageContentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcChatEditMessageContentResponse) ProtoMessage() {}

func (x *RpcChatEditMessageContentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1232]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcChatEditMessageContentResponse.ProtoReflect.Descriptor instead.
func (*RpcChatEditMessageContentResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 41, 1, 1}
}

func (x *RpcChatEditMessageContentResponse) GetError() *RpcChatEditMessageContentResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

type RpcChatEditMessageContentResponseError struct {
	state         protoimpl.MessageState                     `protogen:"open.v1"`
	Code          RpcChatEditMessageContentResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcChatEditMessageContentResponseErrorCode" json:"code,omitempty"`
	Description   string                                     `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcChatEditMessageContentResponseError) Reset() {
	*x = RpcChatEditMessageContentResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[1233]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcChatEditMessageContentResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcChatEditMessageContentResponseError) ProtoMessage() {}

func (x *RpcChatEditMessageContentResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1233]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcChatEditMessageContentResponseError.ProtoReflect.Descriptor instead.
func (*RpcChatEditMessageContentResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 41, 1, 1, 0}
}

func (x *RpcChatEditMessageContentResponseError) GetCode() RpcChatEditMessageContentResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcChatEditMessageContentResponseError_NULL
}

func (x *RpcChatEditMessageContentResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcChatToggleMessageReactionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChatObjectId  string                 `protobuf:"bytes,1,opt,name=chatObjectId,proto3" json:"chatObjectId,omitempty"`
	MessageId     string                 `protobuf:"bytes,2,opt,name=messageId,proto3" json:"messageId,omitempty"`
	Emoji         string                 `protobuf:"bytes,3,opt,name=emoji,proto3" json:"emoji,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcChatToggleMessageReactionRequest) Reset() {
	*x = RpcChatToggleMessageReactionRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[1234]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcChatToggleMessageReactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcChatToggleMessageReactionRequest) ProtoMessage() {}

func (x *RpcChatToggleMessageReactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1234]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcChatToggleMessageReactionRequest.ProtoReflect.Descriptor instead.
func (*RpcChatToggleMessageReactionRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 41, 2, 0}
}

func (x *RpcChatToggleMessageReactionRequest) GetChatObjectId() string {
	if x != nil {
		return x.ChatObjectId
	}
	return ""
}

func (x *RpcChatToggleMessageReactionRequest) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *RpcChatToggleMessageReactionRequest) GetEmoji() string {
	if x != nil {
		return x.Emoji
	}
	return ""
}

type RpcChatToggleMessageReactionResponse struct {
	state         protoimpl.MessageState                     `protogen:"open.v1"`
	Error         *RpcChatToggleMessageReactionResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcChatToggleMessageReactionResponse) Reset() {
	*x = RpcChatToggleMessageReactionResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[1235]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcChatToggleMessageReactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcChatToggleMessageReactionResponse) ProtoMessage() {}

func (x *RpcChatToggleMessageReactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1235]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcChatToggleMessageReactionResponse.ProtoReflect.Descriptor instead.
func (*RpcChatToggleMessageReactionResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 41, 2, 1}
}

func (x *RpcChatToggleMessageReactionResponse) GetError() *RpcChatToggleMessageReactionResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

type RpcChatToggleMessageReactionResponseError struct {
	state         protoimpl.MessageState                        `protogen:"open.v1"`
	Code          RpcChatToggleMessageReactionResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcChatToggleMessageReactionResponseErrorCode" json:"code,omitempty"`
	Description   string                                        `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcChatToggleMessageReactionResponseError) Reset() {
	*x = RpcChatToggleMessageReactionResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[1236]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcChatToggleMessageReactionResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcChatToggleMessageReactionResponseError) ProtoMessage() {}

func (x *RpcChatToggleMessageReactionResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1236]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcChatToggleMessageReactionResponseError.ProtoReflect.Descriptor instead.
func (*RpcChatToggleMessageReactionResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 41, 2, 1, 0}
}

func (x *RpcChatToggleMessageReactionResponseError) GetCode() RpcChatToggleMessageReactionResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcChatToggleMessageReactionResponseError_NULL
}

func (x *RpcChatToggleMessageReactionResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcChatDeleteMessageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChatObjectId  string                 `protobuf:"bytes,1,opt,name=chatObjectId,proto3" json:"chatObjectId,omitempty"`
	MessageId     string                 `protobuf:"bytes,2,opt,name=messageId,proto3" json:"messageId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcChatDeleteMessageRequest) Reset() {
	*x = RpcChatDeleteMessageRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[1237]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcChatDeleteMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcChatDeleteMessageRequest) ProtoMessage() {}

func (x *RpcChatDeleteMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1237]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcChatDeleteMessageRequest.ProtoReflect.Descriptor instead.
func (*RpcChatDeleteMessageRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 41, 3, 0}
}

func (x *RpcChatDeleteMessageRequest) GetChatObjectId() string {
	if x != nil {
		return x.ChatObjectId
	}
	return ""
}

func (x *RpcChatDeleteMessageRequest) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

type RpcChatDeleteMessageResponse struct {
	state         protoimpl.MessageState             `protogen:"open.v1"`
	Error         *RpcChatDeleteMessageResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcChatDeleteMessageResponse) Reset() {
	*x = RpcChatDeleteMessageResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[1238]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcChatDeleteMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcChatDeleteMessageResponse) ProtoMessage() {}

func (x *RpcChatDeleteMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1238]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcChatDeleteMessageResponse.ProtoReflect.Descriptor instead.
func (*RpcChatDeleteMessageResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 41, 3, 1}
}

func (x *RpcChatDeleteMessageResponse) GetError() *RpcChatDeleteMessageResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

type RpcChatDeleteMessageResponseError struct {
	state         protoimpl.MessageState                `protogen:"open.v1"`
	Code          RpcChatDeleteMessageResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcChatDeleteMessageResponseErrorCode" json:"code,omitempty"`
	Description   string                                `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcChatDeleteMessageResponseError) Reset() {
	*x = RpcChatDeleteMessageResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[1239]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcChatDeleteMessageResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcChatDeleteMessageResponseError) ProtoMessage() {}

func (x *RpcChatDeleteMessageResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1239]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcChatDeleteMessageResponseError.ProtoReflect.Descriptor instead.
func (*RpcChatDeleteMessageResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 41, 3, 1, 0}
}

func (x *RpcChatDeleteMessageResponseError) GetCode() RpcChatDeleteMessageResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcChatDeleteMessageResponseError_NULL
}

func (x *RpcChatDeleteMessageResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcChatGetMessagesRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ChatObjectId    string                 `protobuf:"bytes,1,opt,name=chatObjectId,proto3" json:"chatObjectId,omitempty"`
	AfterOrderId    string                 `protobuf:"bytes,4,opt,name=afterOrderId,proto3" json:"afterOrderId,omitempty"`   // OrderId of the message after which to get messages
	BeforeOrderId   string                 `protobuf:"bytes,2,opt,name=beforeOrderId,proto3" json:"beforeOrderId,omitempty"` // OrderId of the message before which to get messages
	Limit           int32                  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	IncludeBoundary bool                   `protobuf:"varint,5,opt,name=includeBoundary,proto3" json:"includeBoundary,omitempty"` // If true, include a message at the boundary (afterOrderId or beforeOrderId)
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *RpcChatGetMessagesRequest) Reset() {
	*x = RpcChatGetMessagesRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[1240]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcChatGetMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcChatGetMessagesRequest) ProtoMessage() {}

func (x *RpcChatGetMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1240]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcChatGetMessagesRequest.ProtoReflect.Descriptor instead.
func (*RpcChatGetMessagesRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 41, 4, 0}
}

func (x *RpcChatGetMessagesRequest) GetChatObjectId() string {
	if x != nil {
		return x.ChatObjectId
	}
	return ""
}

func (x *RpcChatGetMessagesRequest) GetAfterOrderId() string {
	if x != nil {
		return x.AfterOrderId
	}
	return ""
}

func (x *RpcChatGetMessagesRequest) GetBeforeOrderId() string {
	if x != nil {
		return x.BeforeOrderId
	}
	return ""
}

func (x *RpcChatGetMessagesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *RpcChatGetMessagesRequest) GetIncludeBoundary() bool {
	if x != nil {
		return x.IncludeBoundary
	}
	return false
}

type RpcChatGetMessagesResponse struct {
	state         protoimpl.MessageState           `protogen:"open.v1"`
	Error         *RpcChatGetMessagesResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Messages      []*model.ChatMessage             `protobuf:"bytes,2,rep,name=messages,proto3" json:"messages,omitempty"`
	ChatState     *model.ChatState                 `protobuf:"bytes,3,opt,name=chatState,proto3" json:"chatState,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcChatGetMessagesResponse) Reset() {
	*x = RpcChatGetMessagesResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[1241]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcChatGetMessagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcChatGetMessagesResponse) ProtoMessage() {}

func (x *RpcChatGetMessagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1241]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcChatGetMessagesResponse.ProtoReflect.Descriptor instead.
func (*RpcChatGetMessagesResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 41, 4, 1}
}

func (x *RpcChatGetMessagesResponse) GetError() *RpcChatGetMessagesResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcChatGetMessagesResponse) GetMessages() []*model.ChatMessage {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *RpcChatGetMessagesResponse) GetChatState() *model.ChatState {
	if x != nil {
		return x.ChatState
	}
	return nil
}

type RpcChatGetMessagesResponseError struct {
	state         protoimpl.MessageState              `protogen:"open.v1"`
	Code          RpcChatGetMessagesResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcChatGetMessagesResponseErrorCode" json:"code,omitempty"`
	Description   string                              `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcChatGetMessagesResponseError) Reset() {
	*x = RpcChatGetMessagesResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[1242]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcChatGetMessagesResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcChatGetMessagesResponseError) ProtoMessage() {}

func (x *RpcChatGetMessagesResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1242]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcChatGetMessagesResponseError.ProtoReflect.Descriptor instead.
func (*RpcChatGetMessagesResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 41, 4, 1, 0}
}

func (x *RpcChatGetMessagesResponseError) GetCode() RpcChatGetMessagesResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcChatGetMessagesResponseError_NULL
}

func (x *RpcChatGetMessagesResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcChatGetMessagesByIdsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChatObjectId  string                 `protobuf:"bytes,1,opt,name=chatObjectId,proto3" json:"chatObjectId,omitempty"`
	MessageIds    []string               `protobuf:"bytes,2,rep,name=messageIds,proto3" json:"messageIds,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcChatGetMessagesByIdsRequest) Reset() {
	*x = RpcChatGetMessagesByIdsRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[1243]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcChatGetMessagesByIdsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcChatGetMessagesByIdsRequest) ProtoMessage() {}

func (x *RpcChatGetMessagesByIdsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1243]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcChatGetMessagesByIdsRequest.ProtoReflect.Descriptor instead.
func (*RpcChatGetMessagesByIdsRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 41, 5, 0}
}

func (x *RpcChatGetMessagesByIdsRequest) GetChatObjectId() string {
	if x != nil {
		return x.ChatObjectId
	}
	return ""
}

func (x *RpcChatGetMessagesByIdsRequest) GetMessageIds() []string {
	if x != nil {
		return x.MessageIds
	}
	return nil
}

type RpcChatGetMessagesByIdsResponse struct {
	state         protoimpl.MessageState                `protogen:"open.v1"`
	Error         *RpcChatGetMessagesByIdsResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Messages      []*model.ChatMessage                  `protobuf:"bytes,2,rep,name=messages,proto3" json:"messages,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcChatGetMessagesByIdsResponse) Reset() {
	*x = RpcChatGetMessagesByIdsResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[1244]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcChatGetMessagesByIdsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcChatGetMessagesByIdsResponse) ProtoMessage() {}

func (x *RpcChatGetMessagesByIdsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1244]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcChatGetMessagesByIdsResponse.ProtoReflect.Descriptor instead.
func (*RpcChatGetMessagesByIdsResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 41, 5, 1}
}

func (x *RpcChatGetMessagesByIdsResponse) GetError() *RpcChatGetMessagesByIdsResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcChatGetMessagesByIdsResponse) GetMessages() []*model.ChatMessage {
	if x != nil {
		return x.Messages
	}
	return nil
}

type RpcChatGetMessagesByIdsResponseError struct {
	state         protoimpl.MessageState                   `protogen:"open.v1"`
	Code          RpcChatGetMessagesByIdsResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcChatGetMessagesByIdsResponseErrorCode" json:"code,omitempty"`
	Description   string                                   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcChatGetMessagesByIdsResponseError) Reset() {
	*x = RpcChatGetMessagesByIdsResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[1245]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcChatGetMessagesByIdsResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcChatGetMessagesByIdsResponseError) ProtoMessage() {}

func (x *RpcChatGetMessagesByIdsResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1245]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcChatGetMessagesByIdsResponseError.ProtoReflect.Descriptor instead.
func (*RpcChatGetMessagesByIdsResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 41, 5, 1, 0}
}

func (x *RpcChatGetMessagesByIdsResponseError) GetCode() RpcChatGetMessagesByIdsResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcChatGetMessagesByIdsResponseError_NULL
}

func (x *RpcChatGetMessagesByIdsResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcChatSubscribeLastMessagesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChatObjectId  string                 `protobuf:"bytes,1,opt,name=chatObjectId,proto3" json:"chatObjectId,omitempty"` // Identifier for the chat
	Limit         int32                  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`              // Number of max last messages to return and subscribe
	SubId         string                 `protobuf:"bytes,3,opt,name=subId,proto3" json:"subId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcChatSubscribeLastMessagesRequest) Reset() {
	*x = RpcChatSubscribeLastMessagesRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[1246]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcChatSubscribeLastMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcChatSubscribeLastMessagesRequest) ProtoMessage() {}

func (x *RpcChatSubscribeLastMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1246]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcChatSubscribeLastMessagesRequest.ProtoReflect.Descriptor instead.
func (*RpcChatSubscribeLastMessagesRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 41, 6, 0}
}

func (x *RpcChatSubscribeLastMessagesRequest) GetChatObjectId() string {
	if x != nil {
		return x.ChatObjectId
	}
	return ""
}

func (x *RpcChatSubscribeLastMessagesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *RpcChatSubscribeLastMessagesRequest) GetSubId() string {
	if x != nil {
		return x.SubId
	}
	return ""
}

type RpcChatSubscribeLastMessagesResponse struct {
	state             protoimpl.MessageState                     `protogen:"open.v1"`
	Error             *RpcChatSubscribeLastMessagesResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Messages          []*model.ChatMessage                       `protobuf:"bytes,2,rep,name=messages,proto3" json:"messages,omitempty"`                    // List of messages
	NumMessagesBefore int32                                      `protobuf:"varint,3,opt,name=numMessagesBefore,proto3" json:"numMessagesBefore,omitempty"` // Number of messages before the returned messages
	ChatState         *model.ChatState                           `protobuf:"bytes,4,opt,name=chatState,proto3" json:"chatState,omitempty"`                  // Chat state
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *RpcChatSubscribeLastMessagesResponse) Reset() {
	*x = RpcChatSubscribeLastMessagesResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[1247]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcChatSubscribeLastMessagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcChatSubscribeLastMessagesResponse) ProtoMessage() {}

func (x *RpcChatSubscribeLastMessagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1247]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcChatSubscribeLastMessagesResponse.ProtoReflect.Descriptor instead.
func (*RpcChatSubscribeLastMessagesResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 41, 6, 1}
}

func (x *RpcChatSubscribeLastMessagesResponse) GetError() *RpcChatSubscribeLastMessagesResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcChatSubscribeLastMessagesResponse) GetMessages() []*model.ChatMessage {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *RpcChatSubscribeLastMessagesResponse) GetNumMessagesBefore() int32 {
	if x != nil {
		return x.NumMessagesBefore
	}
	return 0
}

func (x *RpcChatSubscribeLastMessagesResponse) GetChatState() *model.ChatState {
	if x != nil {
		return x.ChatState
	}
	return nil
}

type RpcChatSubscribeLastMessagesResponseError struct {
	state         protoimpl.MessageState                        `protogen:"open.v1"`
	Code          RpcChatSubscribeLastMessagesResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcChatSubscribeLastMessagesResponseErrorCode" json:"code,omitempty"`
	Description   string                                        `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcChatSubscribeLastMessagesResponseError) Reset() {
	*x = RpcChatSubscribeLastMessagesResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[1248]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcChatSubscribeLastMessagesResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcChatSubscribeLastMessagesResponseError) ProtoMessage() {}

func (x *RpcChatSubscribeLastMessagesResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1248]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcChatSubscribeLastMessagesResponseError.ProtoReflect.Descriptor instead.
func (*RpcChatSubscribeLastMessagesResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 41, 6, 1, 0}
}

func (x *RpcChatSubscribeLastMessagesResponseError) GetCode() RpcChatSubscribeLastMessagesResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcChatSubscribeLastMessagesResponseError_NULL
}

func (x *RpcChatSubscribeLastMessagesResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcChatUnsubscribeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChatObjectId  string                 `protobuf:"bytes,1,opt,name=chatObjectId,proto3" json:"chatObjectId,omitempty"` // Identifier for the chat
	SubId         string                 `protobuf:"bytes,2,opt,name=subId,proto3" json:"subId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcChatUnsubscribeRequest) Reset() {
	*x = RpcChatUnsubscribeRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[1249]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcChatUnsubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcChatUnsubscribeRequest) ProtoMessage() {}

func (x *RpcChatUnsubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1249]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcChatUnsubscribeRequest.ProtoReflect.Descriptor instead.
func (*RpcChatUnsubscribeRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 41, 7, 0}
}

func (x *RpcChatUnsubscribeRequest) GetChatObjectId() string {
	if x != nil {
		return x.ChatObjectId
	}
	return ""
}

func (x *RpcChatUnsubscribeRequest) GetSubId() string {
	if x != nil {
		return x.SubId
	}
	return ""
}

type RpcChatUnsubscribeResponse struct {
	state         protoimpl.MessageState           `protogen:"open.v1"`
	Error         *RpcChatUnsubscribeResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcChatUnsubscribeResponse) Reset() {
	*x = RpcChatUnsubscribeResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[1250]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcChatUnsubscribeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcChatUnsubscribeResponse) ProtoMessage() {}

func (x *RpcChatUnsubscribeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1250]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcChatUnsubscribeResponse.ProtoReflect.Descriptor instead.
func (*RpcChatUnsubscribeResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 41, 7, 1}
}

func (x *RpcChatUnsubscribeResponse) GetError() *RpcChatUnsubscribeResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

type RpcChatUnsubscribeResponseError struct {
	state         protoimpl.MessageState              `protogen:"open.v1"`
	Code          RpcChatUnsubscribeResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcChatUnsubscribeResponseErrorCode" json:"code,omitempty"`
	Description   string                              `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcChatUnsubscribeResponseError) Reset() {
	*x = RpcChatUnsubscribeResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[1251]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcChatUnsubscribeResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcChatUnsubscribeResponseError) ProtoMessage() {}

func (x *RpcChatUnsubscribeResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1251]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcChatUnsubscribeResponseError.ProtoReflect.Descriptor instead.
func (*RpcChatUnsubscribeResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 41, 7, 1, 0}
}

func (x *RpcChatUnsubscribeResponseError) GetCode() RpcChatUnsubscribeResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcChatUnsubscribeResponseError_NULL
}

func (x *RpcChatUnsubscribeResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcChatSubscribeToMessagePreviewsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcChatSubscribeToMessagePreviewsRequest) Reset() {
	*x = RpcChatSubscribeToMessagePreviewsRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[1252]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcChatSubscribeToMessagePreviewsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcChatSubscribeToMessagePreviewsRequest) ProtoMessage() {}

func (x *RpcChatSubscribeToMessagePreviewsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1252]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcChatSubscribeToMessagePreviewsRequest.ProtoReflect.Descriptor instead.
func (*RpcChatSubscribeToMessagePreviewsRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 41, 8, 0}
}

type RpcChatSubscribeToMessagePreviewsResponse struct {
	state         protoimpl.MessageState                          `protogen:"open.v1"`
	Error         *RpcChatSubscribeToMessagePreviewsResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	SubId         string                                          `protobuf:"bytes,2,opt,name=subId,proto3" json:"subId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcChatSubscribeToMessagePreviewsResponse) Reset() {
	*x = RpcChatSubscribeToMessagePreviewsResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[1253]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcChatSubscribeToMessagePreviewsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcChatSubscribeToMessagePreviewsResponse) ProtoMessage() {}

func (x *RpcChatSubscribeToMessagePreviewsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1253]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcChatSubscribeToMessagePreviewsResponse.ProtoReflect.Descriptor instead.
func (*RpcChatSubscribeToMessagePreviewsResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 41, 8, 1}
}

func (x *RpcChatSubscribeToMessagePreviewsResponse) GetError() *RpcChatSubscribeToMessagePreviewsResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcChatSubscribeToMessagePreviewsResponse) GetSubId() string {
	if x != nil {
		return x.SubId
	}
	return ""
}

type RpcChatSubscribeToMessagePreviewsResponseError struct {
	state         protoimpl.MessageState                             `protogen:"open.v1"`
	Code          RpcChatSubscribeToMessagePreviewsResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcChatSubscribeToMessagePreviewsResponseErrorCode" json:"code,omitempty"`
	Description   string                                             `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcChatSubscribeToMessagePreviewsResponseError) Reset() {
	*x = RpcChatSubscribeToMessagePreviewsResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[1254]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcChatSubscribeToMessagePreviewsResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcChatSubscribeToMessagePreviewsResponseError) ProtoMessage() {}

func (x *RpcChatSubscribeToMessagePreviewsResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1254]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcChatSubscribeToMessagePreviewsResponseError.ProtoReflect.Descriptor instead.
func (*RpcChatSubscribeToMessagePreviewsResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 41, 8, 1, 0}
}

func (x *RpcChatSubscribeToMessagePreviewsResponseError) GetCode() RpcChatSubscribeToMessagePreviewsResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcChatSubscribeToMessagePreviewsResponseError_NULL
}

func (x *RpcChatSubscribeToMessagePreviewsResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcChatReadMessagesRequest struct {
	state           protoimpl.MessageState      `protogen:"open.v1"`
	Type            RpcChatReadMessagesReadType `protobuf:"varint,1,opt,name=type,proto3,enum=anytype.RpcChatReadMessagesReadType" json:"type,omitempty"`
	ChatObjectId    string                      `protobuf:"bytes,2,opt,name=chatObjectId,proto3" json:"chatObjectId,omitempty"`        // id of the chat object
	AfterOrderId    string                      `protobuf:"bytes,3,opt,name=afterOrderId,proto3" json:"afterOrderId,omitempty"`        // read from this orderId; if empty - read from the beginning of the chat
	BeforeOrderId   string                      `protobuf:"bytes,4,opt,name=beforeOrderId,proto3" json:"beforeOrderId,omitempty"`      // read til this orderId
	LastDbTimestamp int64                       `protobuf:"varint,5,opt,name=lastDbTimestamp,proto3" json:"lastDbTimestamp,omitempty"` // dbTimestamp from the last processed ChatState event(or GetMessages). Used to prevent race conditions
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *RpcChatReadMessagesRequest) Reset() {
	*x = RpcChatReadMessagesRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[1255]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcChatReadMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcChatReadMessagesRequest) ProtoMessage() {}

func (x *RpcChatReadMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1255]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcChatReadMessagesRequest.ProtoReflect.Descriptor instead.
func (*RpcChatReadMessagesRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 41, 9, 0}
}

func (x *RpcChatReadMessagesRequest) GetType() RpcChatReadMessagesReadType {
	if x != nil {
		return x.Type
	}
	return RpcChatReadMessages_messages
}

func (x *RpcChatReadMessagesRequest) GetChatObjectId() string {
	if x != nil {
		return x.ChatObjectId
	}
	return ""
}

func (x *RpcChatReadMessagesRequest) GetAfterOrderId() string {
	if x != nil {
		return x.AfterOrderId
	}
	return ""
}

func (x *RpcChatReadMessagesRequest) GetBeforeOrderId() string {
	if x != nil {
		return x.BeforeOrderId
	}
	return ""
}

func (x *RpcChatReadMessagesRequest) GetLastDbTimestamp() int64 {
	if x != nil {
		return x.LastDbTimestamp
	}
	return 0
}

type RpcChatReadMessagesResponse struct {
	state         protoimpl.MessageState            `protogen:"open.v1"`
	Error         *RpcChatReadMessagesResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent                    `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcChatReadMessagesResponse) Reset() {
	*x = RpcChatReadMessagesResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[1256]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcChatReadMessagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcChatReadMessagesResponse) ProtoMessage() {}

func (x *RpcChatReadMessagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1256]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcChatReadMessagesResponse.ProtoReflect.Descriptor instead.
func (*RpcChatReadMessagesResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 41, 9, 1}
}

func (x *RpcChatReadMessagesResponse) GetError() *RpcChatReadMessagesResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcChatReadMessagesResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcChatReadMessagesResponseError struct {
	state         protoimpl.MessageState               `protogen:"open.v1"`
	Code          RpcChatReadMessagesResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcChatReadMessagesResponseErrorCode" json:"code,omitempty"`
	Description   string                               `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcChatReadMessagesResponseError) Reset() {
	*x = RpcChatReadMessagesResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[1257]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcChatReadMessagesResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcChatReadMessagesResponseError) ProtoMessage() {}

func (x *RpcChatReadMessagesResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1257]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcChatReadMessagesResponseError.ProtoReflect.Descriptor instead.
func (*RpcChatReadMessagesResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 41, 9, 1, 0}
}

func (x *RpcChatReadMessagesResponseError) GetCode() RpcChatReadMessagesResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcChatReadMessagesResponseError_NULL
}

func (x *RpcChatReadMessagesResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RpcChatUnreadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChatObjectId  string                 `protobuf:"bytes,2,opt,name=chatObjectId,proto3" json:"chatObjectId,omitempty"` // id of the chat object
	AfterOrderId  string                 `protobuf:"bytes,3,opt,name=afterOrderId,proto3" json:"afterOrderId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcChatUnreadRequest) Reset() {
	*x = RpcChatUnreadRequest{}
	mi := &file_pb_protos_commands_proto_msgTypes[1258]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcChatUnreadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcChatUnreadRequest) ProtoMessage() {}

func (x *RpcChatUnreadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1258]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcChatUnreadRequest.ProtoReflect.Descriptor instead.
func (*RpcChatUnreadRequest) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 41, 10, 0}
}

func (x *RpcChatUnreadRequest) GetChatObjectId() string {
	if x != nil {
		return x.ChatObjectId
	}
	return ""
}

func (x *RpcChatUnreadRequest) GetAfterOrderId() string {
	if x != nil {
		return x.AfterOrderId
	}
	return ""
}

type RpcChatUnreadResponse struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	Error         *RpcChatUnreadResponseError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Event         *ResponseEvent              `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcChatUnreadResponse) Reset() {
	*x = RpcChatUnreadResponse{}
	mi := &file_pb_protos_commands_proto_msgTypes[1259]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcChatUnreadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcChatUnreadResponse) ProtoMessage() {}

func (x *RpcChatUnreadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1259]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcChatUnreadResponse.ProtoReflect.Descriptor instead.
func (*RpcChatUnreadResponse) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 41, 10, 1}
}

func (x *RpcChatUnreadResponse) GetError() *RpcChatUnreadResponseError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RpcChatUnreadResponse) GetEvent() *ResponseEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RpcChatUnreadResponseError struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	Code          RpcChatUnreadResponseErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=anytype.RpcChatUnreadResponseErrorCode" json:"code,omitempty"`
	Description   string                         `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RpcChatUnreadResponseError) Reset() {
	*x = RpcChatUnreadResponseError{}
	mi := &file_pb_protos_commands_proto_msgTypes[1260]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RpcChatUnreadResponseError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcChatUnreadResponseError) ProtoMessage() {}

func (x *RpcChatUnreadResponseError) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_commands_proto_msgTypes[1260]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcChatUnreadResponseError.ProtoReflect.Descriptor instead.
func (*RpcChatUnreadResponseError) Descriptor() ([]byte, []int) {
	return file_pb_protos_commands_proto_rawDescGZIP(), []int{0, 41, 10, 1, 0}
}

func (x *RpcChatUnreadResponseError) GetCode() RpcChatUnreadResponseErrorCode {
	if x != nil {
		return x.Code
	}
	return RpcChatUnreadResponseError_NULL
}

func (x *RpcChatUnreadResponseError) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

var file_pb_protos_commands_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: (*bool)(nil),
		Field:         7777,
		Name:          "anytype.no_auth",
		Tag:           "varint,7777,opt,name=no_auth",
		Filename:      "pb/protos/commands.proto",
	},
}

// Extension fields to descriptorpb.MessageOptions.
var (
	// optional bool no_auth = 7777;
	E_NoAuth = &file_pb_protos_commands_proto_extTypes[0]
)

var File_pb_protos_commands_proto protoreflect.FileDescriptor

var file_pb_protos_commands_proto_rawDesc = string([]byte{
	0x0a, 0x18, 0x70, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x61, 0x6e, 0x79, 0x74,
	0x79, 0x70, 0x65, 0x1a, 0x24, 0x70, 0x6b, 0x67, 0x2f, 0x6c, 0x69, 0x62, 0x2f, 0x70, 0x62, 0x2f,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x28, 0x70, 0x6b, 0x67, 0x2f, 0x6c,
	0x69, 0x62, 0x2f, 0x70, 0x62, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x70, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb2, 0xb2, 0x08, 0x0a,
	0x03, 0x52, 0x70, 0x63, 0x1a, 0xf6, 0x07, 0x0a, 0x03, 0x41, 0x70, 0x70, 0x1a, 0xc5, 0x02, 0x0a,
	0x0a, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x1a, 0x0f, 0x0a, 0x07, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x3a, 0x04, 0x88, 0xe6, 0x03, 0x01, 0x1a, 0xa5, 0x02, 0x0a,
	0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x41, 0x70, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x1a,
	0xa2, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x43, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2f, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x41, 0x70, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c,
	0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52,
	0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50,
	0x55, 0x54, 0x10, 0x02, 0x1a, 0x9e, 0x03, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x1a, 0x8f, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x55, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x41, 0x70, 0x70, 0x2e, 0x53, 0x65, 0x74, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0b, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x2d, 0x0a, 0x0b, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x42, 0x41, 0x43,
	0x4b, 0x47, 0x52, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x46, 0x4f, 0x52,
	0x45, 0x47, 0x52, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x01, 0x1a, 0xf9, 0x01, 0x0a, 0x08, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x52, 0x70, 0x63, 0x2e, 0x41, 0x70, 0x70, 0x2e, 0x53, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0xa6, 0x01, 0x0a,
	0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x47, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52,
	0x70, 0x63, 0x2e, 0x41, 0x70, 0x70, 0x2e, 0x53, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c,
	0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45,
	0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e,
	0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0x85, 0x02, 0x0a, 0x08, 0x53, 0x68, 0x75, 0x74, 0x64, 0x6f,
	0x77, 0x6e, 0x1a, 0x09, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0xed, 0x01,
	0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x79, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x41, 0x70, 0x70, 0x2e, 0x53, 0x68, 0x75, 0x74,
	0x64, 0x6f, 0x77, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0xa0, 0x01, 0x0a, 0x05, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x41, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63,
	0x2e, 0x41, 0x70, 0x70, 0x2e, 0x53, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d,
	0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0x9a, 0x38,
	0x0a, 0x05, 0x53, 0x70, 0x61, 0x63, 0x65, 0x1a, 0xcc, 0x03, 0x0a, 0x0c, 0x4c, 0x65, 0x61, 0x76,
	0x65, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x1a, 0x43, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x1a, 0xf6, 0x02,
	0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x61, 0x6e, 0x79, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x4c, 0x65,
	0x61, 0x76, 0x65, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x1a, 0xa3, 0x02, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x47, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x4c, 0x65, 0x61,
	0x76, 0x65, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xae, 0x01, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08,
	0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42,
	0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x4e, 0x4f,
	0x5f, 0x53, 0x55, 0x43, 0x48, 0x5f, 0x53, 0x50, 0x41, 0x43, 0x45, 0x10, 0x65, 0x12, 0x14, 0x0a,
	0x10, 0x53, 0x50, 0x41, 0x43, 0x45, 0x5f, 0x49, 0x53, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45,
	0x44, 0x10, 0x66, 0x12, 0x12, 0x0a, 0x0e, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x46,
	0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x67, 0x12, 0x11, 0x0a, 0x0d, 0x4c, 0x49, 0x4d, 0x49, 0x54,
	0x5f, 0x52, 0x45, 0x41, 0x43, 0x48, 0x45, 0x44, 0x10, 0x68, 0x12, 0x17, 0x0a, 0x13, 0x4e, 0x4f,
	0x5f, 0x41, 0x50, 0x50, 0x52, 0x4f, 0x56, 0x45, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54,
	0x53, 0x10, 0x69, 0x12, 0x11, 0x0a, 0x0d, 0x4e, 0x4f, 0x54, 0x5f, 0x53, 0x48, 0x41, 0x52, 0x45,
	0x41, 0x42, 0x4c, 0x45, 0x10, 0x6a, 0x1a, 0x83, 0x03, 0x0a, 0x0d, 0x4d, 0x61, 0x6b, 0x65, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x1a, 0x23, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x1a, 0xcc, 0x02,
	0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x61, 0x6e, 0x79, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x4d, 0x61,
	0x6b, 0x65, 0x53, 0x68, 0x61, 0x72, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x1a, 0xf8, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x48, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x34, 0x2e, 0x61, 0x6e, 0x79, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x4d, 0x61,
	0x6b, 0x65, 0x53, 0x68, 0x61, 0x72, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x82, 0x01, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e,
	0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a,
	0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d,
	0x4e, 0x4f, 0x5f, 0x53, 0x55, 0x43, 0x48, 0x5f, 0x53, 0x50, 0x41, 0x43, 0x45, 0x10, 0x65, 0x12,
	0x14, 0x0a, 0x10, 0x53, 0x50, 0x41, 0x43, 0x45, 0x5f, 0x49, 0x53, 0x5f, 0x44, 0x45, 0x4c, 0x45,
	0x54, 0x45, 0x44, 0x10, 0x66, 0x12, 0x12, 0x0a, 0x0e, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54,
	0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x67, 0x12, 0x11, 0x0a, 0x0d, 0x4c, 0x49, 0x4d,
	0x49, 0x54, 0x5f, 0x52, 0x45, 0x41, 0x43, 0x48, 0x45, 0x44, 0x10, 0x68, 0x1a, 0xdd, 0x03, 0x0a,
	0x0e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x1a,
	0x23, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x49, 0x64, 0x1a, 0xa5, 0x03, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x46, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x30, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x43, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x43, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x69, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x46, 0x69, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x1a, 0x8c, 0x02,
	0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x49, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x35, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x52, 0x70, 0x63, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x95, 0x01, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a,
	0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f,
	0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41,
	0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x4e, 0x4f, 0x5f,
	0x53, 0x55, 0x43, 0x48, 0x5f, 0x53, 0x50, 0x41, 0x43, 0x45, 0x10, 0x65, 0x12, 0x14, 0x0a, 0x10,
	0x53, 0x50, 0x41, 0x43, 0x45, 0x5f, 0x49, 0x53, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x44,
	0x10, 0x66, 0x12, 0x12, 0x0a, 0x0e, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x46, 0x41,
	0x49, 0x4c, 0x45, 0x44, 0x10, 0x67, 0x12, 0x11, 0x0a, 0x0d, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x5f,
	0x52, 0x45, 0x41, 0x43, 0x48, 0x45, 0x44, 0x10, 0x68, 0x12, 0x11, 0x0a, 0x0d, 0x4e, 0x4f, 0x54,
	0x5f, 0x53, 0x48, 0x41, 0x52, 0x45, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x69, 0x1a, 0xfd, 0x02, 0x0a,
	0x0b, 0x53, 0x74, 0x6f, 0x70, 0x53, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x1a, 0x23, 0x0a, 0x07,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49,
	0x64, 0x1a, 0xc8, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e,
	0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x53, 0x70, 0x61, 0x63,
	0x65, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x53, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x1a, 0xf6, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x46, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e, 0x61, 0x6e,
	0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x2e,
	0x53, 0x74, 0x6f, 0x70, 0x53, 0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x82, 0x01, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e,
	0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a,
	0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d,
	0x4e, 0x4f, 0x5f, 0x53, 0x55, 0x43, 0x48, 0x5f, 0x53, 0x50, 0x41, 0x43, 0x45, 0x10, 0x65, 0x12,
	0x14, 0x0a, 0x10, 0x53, 0x50, 0x41, 0x43, 0x45, 0x5f, 0x49, 0x53, 0x5f, 0x44, 0x45, 0x4c, 0x45,
	0x54, 0x45, 0x44, 0x10, 0x66, 0x12, 0x12, 0x0a, 0x0e, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54,
	0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x67, 0x12, 0x11, 0x0a, 0x0d, 0x4c, 0x49, 0x4d,
	0x49, 0x54, 0x5f, 0x52, 0x45, 0x41, 0x43, 0x48, 0x45, 0x44, 0x10, 0x68, 0x1a, 0x95, 0x03, 0x0a,
	0x10, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x1a, 0x23, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x1a, 0xdb, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x32, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63,
	0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x47, 0x65, 0x74,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1c, 0x0a,
	0x09, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x69,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x4b, 0x65,
	0x79, 0x1a, 0xc0, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x4b, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x37, 0x2e, 0x61, 0x6e, 0x79, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x49, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x48, 0x0a, 0x04, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d,
	0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12,
	0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x12, 0x14,
	0x0a, 0x10, 0x4e, 0x4f, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x5f, 0x49, 0x4e, 0x56, 0x49,
	0x54, 0x45, 0x10, 0x65, 0x1a, 0x93, 0x03, 0x0a, 0x0c, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52,
	0x65, 0x76, 0x6f, 0x6b, 0x65, 0x1a, 0x23, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x1a, 0xdd, 0x02, 0x0a, 0x08, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x52, 0x70, 0x63, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0x8a, 0x02,
	0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x47, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x52, 0x70, 0x63, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x95, 0x01, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e,
	0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e,
	0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f,
	0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x4e, 0x4f, 0x5f, 0x53, 0x55,
	0x43, 0x48, 0x5f, 0x53, 0x50, 0x41, 0x43, 0x45, 0x10, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x50,
	0x41, 0x43, 0x45, 0x5f, 0x49, 0x53, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x66,
	0x12, 0x11, 0x0a, 0x0d, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x5f, 0x52, 0x45, 0x41, 0x43, 0x48, 0x45,
	0x44, 0x10, 0x67, 0x12, 0x12, 0x0a, 0x0e, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x46,
	0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x68, 0x12, 0x11, 0x0a, 0x0d, 0x4e, 0x4f, 0x54, 0x5f, 0x53,
	0x48, 0x41, 0x52, 0x45, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x69, 0x1a, 0x95, 0x04, 0x0a, 0x0a, 0x49,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x56, 0x69, 0x65, 0x77, 0x1a, 0x4d, 0x0a, 0x07, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43,
	0x69, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65,
	0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x46, 0x69, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x1a, 0xb7, 0x03, 0x0a, 0x08, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52,
	0x70, 0x63, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x56,
	0x69, 0x65, 0x77, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x63, 0x6f, 0x6e, 0x43, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x63,
	0x6f, 0x6e, 0x43, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0xe8, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x45, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x31, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x53, 0x70,
	0x61, 0x63, 0x65, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x56, 0x69, 0x65, 0x77, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x76, 0x0a, 0x04, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d,
	0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12,
	0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x12, 0x14,
	0x0a, 0x10, 0x49, 0x4e, 0x56, 0x49, 0x54, 0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55,
	0x4e, 0x44, 0x10, 0x65, 0x12, 0x16, 0x0a, 0x12, 0x49, 0x4e, 0x56, 0x49, 0x54, 0x45, 0x5f, 0x42,
	0x41, 0x44, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x45, 0x4e, 0x54, 0x10, 0x66, 0x12, 0x14, 0x0a, 0x10,
	0x53, 0x50, 0x41, 0x43, 0x45, 0x5f, 0x49, 0x53, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x44,
	0x10, 0x67, 0x1a, 0xa3, 0x04, 0x0a, 0x04, 0x4a, 0x6f, 0x69, 0x6e, 0x1a, 0x85, 0x01, 0x0a, 0x07,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x69, 0x64, 0x12, 0x24, 0x0a,
	0x0d, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65,
	0x4b, 0x65, 0x79, 0x1a, 0x92, 0x03, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3c, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x53, 0x70,
	0x61, 0x63, 0x65, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0xc7,
	0x02, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x3f, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x52, 0x70, 0x63, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xda, 0x01, 0x0a, 0x04,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11,
	0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10,
	0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02,
	0x12, 0x11, 0x0a, 0x0d, 0x4e, 0x4f, 0x5f, 0x53, 0x55, 0x43, 0x48, 0x5f, 0x53, 0x50, 0x41, 0x43,
	0x45, 0x10, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x50, 0x41, 0x43, 0x45, 0x5f, 0x49, 0x53, 0x5f,
	0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x66, 0x12, 0x14, 0x0a, 0x10, 0x49, 0x4e, 0x56,
	0x49, 0x54, 0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x67, 0x12,
	0x16, 0x0a, 0x12, 0x49, 0x4e, 0x56, 0x49, 0x54, 0x45, 0x5f, 0x42, 0x41, 0x44, 0x5f, 0x43, 0x4f,
	0x4e, 0x54, 0x45, 0x4e, 0x54, 0x10, 0x68, 0x12, 0x12, 0x0a, 0x0e, 0x52, 0x45, 0x51, 0x55, 0x45,
	0x53, 0x54, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x69, 0x12, 0x11, 0x0a, 0x0d, 0x4c,
	0x49, 0x4d, 0x49, 0x54, 0x5f, 0x52, 0x45, 0x41, 0x43, 0x48, 0x45, 0x44, 0x10, 0x6a, 0x12, 0x11,
	0x0a, 0x0d, 0x4e, 0x4f, 0x54, 0x5f, 0x53, 0x48, 0x41, 0x52, 0x45, 0x41, 0x42, 0x4c, 0x45, 0x10,
	0x6b, 0x12, 0x15, 0x0a, 0x11, 0x44, 0x49, 0x46, 0x46, 0x45, 0x52, 0x45, 0x4e, 0x54, 0x5f, 0x4e,
	0x45, 0x54, 0x57, 0x4f, 0x52, 0x4b, 0x10, 0x6c, 0x1a, 0xa2, 0x03, 0x0a, 0x0a, 0x4a, 0x6f, 0x69,
	0x6e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x1a, 0x23, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x1a, 0xee, 0x02, 0x0a,
	0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x4a, 0x6f, 0x69,
	0x6e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0x9d, 0x02,
	0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x45, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x52, 0x70, 0x63, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x43, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0xaa, 0x01, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c,
	0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45,
	0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e,
	0x50, 0x55, 0x54, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x4e, 0x4f, 0x5f, 0x53, 0x55, 0x43, 0x48,
	0x5f, 0x53, 0x50, 0x41, 0x43, 0x45, 0x10, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x50, 0x41, 0x43,
	0x45, 0x5f, 0x49, 0x53, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x66, 0x12, 0x12,
	0x0a, 0x0e, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44,
	0x10, 0x67, 0x12, 0x11, 0x0a, 0x0d, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x5f, 0x52, 0x45, 0x41, 0x43,
	0x48, 0x45, 0x44, 0x10, 0x68, 0x12, 0x13, 0x0a, 0x0f, 0x4e, 0x4f, 0x5f, 0x53, 0x55, 0x43, 0x48,
	0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x69, 0x12, 0x11, 0x0a, 0x0d, 0x4e, 0x4f,
	0x54, 0x5f, 0x53, 0x48, 0x41, 0x52, 0x45, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x6a, 0x1a, 0xaf, 0x04,
	0x0a, 0x0e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65,
	0x1a, 0x88, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x12, 0x47, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70,
	0x61, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0b,
	0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x91, 0x03, 0x0a, 0x08,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x1a, 0xbc, 0x02, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x49, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x35, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xc5, 0x01, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e,
	0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a,
	0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d,
	0x4e, 0x4f, 0x5f, 0x53, 0x55, 0x43, 0x48, 0x5f, 0x53, 0x50, 0x41, 0x43, 0x45, 0x10, 0x65, 0x12,
	0x14, 0x0a, 0x10, 0x53, 0x50, 0x41, 0x43, 0x45, 0x5f, 0x49, 0x53, 0x5f, 0x44, 0x45, 0x4c, 0x45,
	0x54, 0x45, 0x44, 0x10, 0x66, 0x12, 0x13, 0x0a, 0x0f, 0x4e, 0x4f, 0x5f, 0x53, 0x55, 0x43, 0x48,
	0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x67, 0x12, 0x19, 0x0a, 0x15, 0x49, 0x4e,
	0x43, 0x4f, 0x52, 0x52, 0x45, 0x43, 0x54, 0x5f, 0x50, 0x45, 0x52, 0x4d, 0x49, 0x53, 0x53, 0x49,
	0x4f, 0x4e, 0x53, 0x10, 0x68, 0x12, 0x12, 0x0a, 0x0e, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54,
	0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x69, 0x12, 0x11, 0x0a, 0x0d, 0x4c, 0x49, 0x4d,
	0x49, 0x54, 0x5f, 0x52, 0x45, 0x41, 0x43, 0x48, 0x45, 0x44, 0x10, 0x6a, 0x12, 0x11, 0x0a, 0x0d,
	0x4e, 0x4f, 0x54, 0x5f, 0x53, 0x48, 0x41, 0x52, 0x45, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x6b, 0x1a,
	0xca, 0x03, 0x0a, 0x0e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x65, 0x63, 0x6c, 0x69,
	0x6e, 0x65, 0x1a, 0x3f, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x1a, 0xf6, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x46, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x30, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x53, 0x70,
	0x61, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x65, 0x63, 0x6c, 0x69,
	0x6e, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0xa1, 0x02, 0x0a, 0x05, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x49, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x35, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x65, 0x63, 0x6c,
	0x69, 0x6e, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0xaa, 0x01, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c,
	0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52,
	0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50,
	0x55, 0x54, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x4e, 0x4f, 0x5f, 0x53, 0x55, 0x43, 0x48, 0x5f,
	0x53, 0x50, 0x41, 0x43, 0x45, 0x10, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x50, 0x41, 0x43, 0x45,
	0x5f, 0x49, 0x53, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x66, 0x12, 0x12, 0x0a,
	0x0e, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10,
	0x67, 0x12, 0x11, 0x0a, 0x0d, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x5f, 0x52, 0x45, 0x41, 0x43, 0x48,
	0x45, 0x44, 0x10, 0x68, 0x12, 0x13, 0x0a, 0x0f, 0x4e, 0x4f, 0x5f, 0x53, 0x55, 0x43, 0x48, 0x5f,
	0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x69, 0x12, 0x11, 0x0a, 0x0d, 0x4e, 0x4f, 0x54,
	0x5f, 0x53, 0x48, 0x41, 0x52, 0x45, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x6a, 0x1a, 0xdd, 0x03, 0x0a,
	0x11, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x1a, 0x43, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x1a, 0x82, 0x03, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70,
	0x63, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70,
	0x61, 0x6e, 0x74, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a,
	0xaa, 0x02, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x4c, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x38, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x50, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xb0, 0x01, 0x0a, 0x04, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d,
	0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12,
	0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x12, 0x11,
	0x0a, 0x0d, 0x4e, 0x4f, 0x5f, 0x53, 0x55, 0x43, 0x48, 0x5f, 0x53, 0x50, 0x41, 0x43, 0x45, 0x10,
	0x65, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x50, 0x41, 0x43, 0x45, 0x5f, 0x49, 0x53, 0x5f, 0x44, 0x45,
	0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x66, 0x12, 0x19, 0x0a, 0x15, 0x50, 0x41, 0x52, 0x54, 0x49,
	0x43, 0x49, 0x50, 0x41, 0x4e, 0x54, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44,
	0x10, 0x67, 0x12, 0x12, 0x0a, 0x0e, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x46, 0x41,
	0x49, 0x4c, 0x45, 0x44, 0x10, 0x68, 0x12, 0x11, 0x0a, 0x0d, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x5f,
	0x52, 0x45, 0x41, 0x43, 0x48, 0x45, 0x44, 0x10, 0x69, 0x12, 0x11, 0x0a, 0x0d, 0x4e, 0x4f, 0x54,
	0x5f, 0x53, 0x48, 0x41, 0x52, 0x45, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x6a, 0x1a, 0xbf, 0x04, 0x0a,
	0x1c, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x1a, 0x69, 0x0a,
	0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x49, 0x64, 0x12, 0x44, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52,
	0x07, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x1a, 0xb3, 0x03, 0x0a, 0x08, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52,
	0x70, 0x63, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69,
	0x70, 0x61, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0xd0, 0x02, 0x0a, 0x05,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x57, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x43, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70,
	0x63, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70,
	0x61, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0xcb, 0x01, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c,
	0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45,
	0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e,
	0x50, 0x55, 0x54, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x4e, 0x4f, 0x5f, 0x53, 0x55, 0x43, 0x48,
	0x5f, 0x53, 0x50, 0x41, 0x43, 0x45, 0x10, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x50, 0x41, 0x43,
	0x45, 0x5f, 0x49, 0x53, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x66, 0x12, 0x12,
	0x0a, 0x0e, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44,
	0x10, 0x67, 0x12, 0x11, 0x0a, 0x0d, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x5f, 0x52, 0x45, 0x41, 0x43,
	0x48, 0x45, 0x44, 0x10, 0x68, 0x12, 0x19, 0x0a, 0x15, 0x50, 0x41, 0x52, 0x54, 0x49, 0x43, 0x49,
	0x50, 0x41, 0x4e, 0x54, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x69,
	0x12, 0x19, 0x0a, 0x15, 0x49, 0x4e, 0x43, 0x4f, 0x52, 0x52, 0x45, 0x43, 0x54, 0x5f, 0x50, 0x45,
	0x52, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x53, 0x10, 0x6a, 0x12, 0x11, 0x0a, 0x0d, 0x4e,
	0x4f, 0x54, 0x5f, 0x53, 0x48, 0x41, 0x52, 0x45, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x6b, 0x1a, 0x9f,
	0x03, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x1a, 0x23, 0x0a, 0x07, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x1a, 0xef,
	0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x79,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x1a, 0x84, 0x02, 0x0a, 0x05, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x41, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x2d, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x95, 0x01, 0x0a, 0x04, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d,
	0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x12, 0x11, 0x0a,
	0x0d, 0x4e, 0x4f, 0x5f, 0x53, 0x55, 0x43, 0x48, 0x5f, 0x53, 0x50, 0x41, 0x43, 0x45, 0x10, 0x65,
	0x12, 0x14, 0x0a, 0x10, 0x53, 0x50, 0x41, 0x43, 0x45, 0x5f, 0x49, 0x53, 0x5f, 0x44, 0x45, 0x4c,
	0x45, 0x54, 0x45, 0x44, 0x10, 0x66, 0x12, 0x12, 0x0a, 0x0e, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53,
	0x54, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x67, 0x12, 0x11, 0x0a, 0x0d, 0x4c, 0x49,
	0x4d, 0x49, 0x54, 0x5f, 0x52, 0x45, 0x41, 0x43, 0x48, 0x45, 0x44, 0x10, 0x68, 0x12, 0x11, 0x0a,
	0x0d, 0x4e, 0x4f, 0x54, 0x5f, 0x53, 0x48, 0x41, 0x52, 0x45, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x69,
	0x1a, 0xd3, 0x02, 0x0a, 0x08, 0x53, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x1a, 0x53, 0x0a,
	0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x56, 0x69, 0x65, 0x77, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x56, 0x69, 0x65, 0x77, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x56, 0x69, 0x65, 0x77, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x56, 0x69, 0x65, 0x77, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x1a, 0xf1, 0x01, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x40, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a,
	0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x53, 0x70, 0x61,
	0x63, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x1a, 0xa2, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x43, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2f, 0x2e, 0x61, 0x6e, 0x79, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x53, 0x65,
	0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55,
	0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f,
	0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49,
	0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xb1, 0x02, 0x0a, 0x0a, 0x55, 0x6e, 0x73, 0x65, 0x74,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x1a, 0x2b, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x20, 0x0a, 0x0b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x56, 0x69, 0x65, 0x77, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x56, 0x69, 0x65, 0x77,
	0x49, 0x64, 0x1a, 0xf5, 0x01, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x42, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c,
	0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x53, 0x70, 0x61,
	0x63, 0x65, 0x2e, 0x55, 0x6e, 0x73, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x1a, 0xa4, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x45, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e, 0x61, 0x6e,
	0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x2e,
	0x55, 0x6e, 0x73, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08,
	0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42,
	0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xd8, 0x0f, 0x0a, 0x06, 0x57,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x1a, 0x9e, 0x03, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x1a, 0x65, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x72,
	0x6f, 0x6f, 0x74, 0x50, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72,
	0x6f, 0x6f, 0x74, 0x50, 0x61, 0x74, 0x68, 0x12, 0x38, 0x0a, 0x17, 0x66, 0x75, 0x6c, 0x6c, 0x74,
	0x65, 0x78, 0x74, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x66, 0x75, 0x6c, 0x6c, 0x74, 0x65,
	0x78, 0x74, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x3a, 0x04, 0x88, 0xe6, 0x03, 0x01, 0x1a, 0xac, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70,
	0x63, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69,
	0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69,
	0x63, 0x1a, 0xc2, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x42, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x61, 0x6e, 0x79, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x53, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c,
	0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45,
	0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e,
	0x50, 0x55, 0x54, 0x10, 0x02, 0x12, 0x1f, 0x0a, 0x1b, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x5f,
	0x54, 0x4f, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x4c, 0x4f, 0x43, 0x41, 0x4c, 0x5f,
	0x52, 0x45, 0x50, 0x4f, 0x10, 0x65, 0x1a, 0xa2, 0x03, 0x0a, 0x07, 0x52, 0x65, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x1a, 0x81, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x72, 0x6f, 0x6f, 0x74, 0x50, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x72, 0x6f, 0x6f, 0x74, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x6e,
	0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x6e,
	0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x12, 0x38, 0x0a, 0x17, 0x66, 0x75, 0x6c, 0x6c, 0x74, 0x65,
	0x78, 0x74, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x66, 0x75, 0x6c, 0x6c, 0x74, 0x65, 0x78,
	0x74, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65,
	0x3a, 0x04, 0x88, 0xe6, 0x03, 0x01, 0x1a, 0x92, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63,
	0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0xc3, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x43, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2f, 0x2e,
	0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x57, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x53, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08,
	0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42,
	0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x12, 0x1f, 0x0a, 0x1b, 0x46, 0x41,
	0x49, 0x4c, 0x45, 0x44, 0x5f, 0x54, 0x4f, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x4c,
	0x4f, 0x43, 0x41, 0x4c, 0x5f, 0x52, 0x45, 0x50, 0x4f, 0x10, 0x65, 0x1a, 0xf4, 0x02, 0x0a, 0x07,
	0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x1a, 0x3f, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x12, 0x18,
	0x0a, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x6f, 0x70, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x65, 0x6e, 0x74, 0x72, 0x6f, 0x70, 0x79, 0x1a, 0xa7, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52,
	0x70, 0x63, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x6f,
	0x70, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x6f, 0x70,
	0x79, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x1a, 0xa2, 0x01,
	0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x43, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2f, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x52, 0x70, 0x63, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32,
	0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00,
	0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f,
	0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54,
	0x10, 0x02, 0x1a, 0xe0, 0x03, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x1a, 0x4f, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1c, 0x0a, 0x08, 0x6d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x08, 0x6d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x12, 0x18, 0x0a,
	0x06, 0x61, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x06, 0x61, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x3a, 0x04, 0x88, 0xe6, 0x03, 0x01, 0x42, 0x06, 0x0a,
	0x04, 0x61, 0x75, 0x74, 0x68, 0x1a, 0xfd, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x46, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x30, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e,
	0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x1a, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x61, 0x70, 0x70, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1c, 0x0a, 0x09,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x1a, 0xd8, 0x01, 0x0a, 0x05, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x49, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x35, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63,
	0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x62, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c,
	0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45,
	0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e,
	0x50, 0x55, 0x54, 0x10, 0x02, 0x12, 0x2e, 0x0a, 0x2a, 0x41, 0x50, 0x50, 0x5f, 0x54, 0x4f, 0x4b,
	0x45, 0x4e, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x5f, 0x49, 0x4e, 0x5f,
	0x54, 0x48, 0x45, 0x5f, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x54, 0x5f, 0x41, 0x43, 0x43, 0x4f,
	0x55, 0x4e, 0x54, 0x10, 0x65, 0x1a, 0xad, 0x02, 0x0a, 0x0c, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x1a, 0x1f, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x1a, 0xfb, 0x01, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70,
	0x63, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0xa7, 0x01, 0x0a, 0x05,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x48, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x34, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70,
	0x63, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c,
	0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45,
	0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e,
	0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xda, 0x45, 0x0a, 0x07, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x1a, 0xdf, 0x01, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x26, 0x0a, 0x0e,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x76, 0x69, 0x65, 0x77, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x76, 0x69, 0x65, 0x77, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x65,
	0x62, 0x75, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x44, 0x65, 0x62, 0x75, 0x67, 0x12, 0x38, 0x0a, 0x17, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x50, 0x72, 0x65, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x50,
	0x72, 0x65, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x12, 0x22, 0x0a, 0x0c, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x70,
	0x61, 0x63, 0x65, 0x73, 0x12, 0x2d, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x64, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x05, 0x65, 0x78,
	0x74, 0x72, 0x61, 0x1a, 0xca, 0x08, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x1a, 0xad,
	0x03, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2a,
	0x0a, 0x0f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x50, 0x61, 0x74,
	0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0f, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x17,
	0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x4e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x53, 0x79, 0x6e, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17, 0x64,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x4e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x42, 0x0a, 0x0b, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x61, 0x6e,
	0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x0b, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x40, 0x0a, 0x1b, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x1b, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x32, 0x0a, 0x14,
	0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x59, 0x61, 0x6d, 0x75, 0x78, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x70, 0x6f, 0x72, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x70, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x59, 0x61, 0x6d, 0x75, 0x78, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74,
	0x12, 0x2c, 0x0a, 0x11, 0x6a, 0x73, 0x6f, 0x6e, 0x41, 0x70, 0x69, 0x4c, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x41, 0x64, 0x64, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6a, 0x73, 0x6f,
	0x6e, 0x41, 0x70, 0x69, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x3a, 0x04,
	0x88, 0xe6, 0x03, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x1a, 0x8f,
	0x05, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x6e, 0x79,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x30, 0x0a,
	0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x33, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x1a, 0xd9, 0x03, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x43,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2f, 0x2e, 0x61,
	0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xe8, 0x02, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08,
	0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42,
	0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x12, 0x2c, 0x0a, 0x28, 0x41, 0x43,
	0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x5f, 0x42, 0x55,
	0x54, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x5f, 0x54, 0x4f, 0x5f, 0x53, 0x54, 0x41, 0x52,
	0x54, 0x5f, 0x4e, 0x4f, 0x44, 0x45, 0x10, 0x65, 0x12, 0x2a, 0x0a, 0x26, 0x41, 0x43, 0x43, 0x4f,
	0x55, 0x4e, 0x54, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x5f, 0x42, 0x55, 0x54, 0x5f,
	0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x5f, 0x54, 0x4f, 0x5f, 0x53, 0x45, 0x54, 0x5f, 0x4e, 0x41,
	0x4d, 0x45, 0x10, 0x66, 0x12, 0x1f, 0x0a, 0x1b, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x5f, 0x54,
	0x4f, 0x5f, 0x53, 0x54, 0x4f, 0x50, 0x5f, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x5f, 0x4e,
	0x4f, 0x44, 0x45, 0x10, 0x68, 0x12, 0x1a, 0x0a, 0x16, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x5f,
	0x54, 0x4f, 0x5f, 0x57, 0x52, 0x49, 0x54, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x10,
	0x69, 0x12, 0x1f, 0x0a, 0x1b, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x5f, 0x54, 0x4f, 0x5f, 0x43,
	0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x4c, 0x4f, 0x43, 0x41, 0x4c, 0x5f, 0x52, 0x45, 0x50, 0x4f,
	0x10, 0x6a, 0x12, 0x20, 0x0a, 0x1c, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x43, 0x52,
	0x45, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x49, 0x53, 0x5f, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c,
	0x45, 0x44, 0x10, 0x6b, 0x12, 0x1a, 0x0a, 0x15, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f, 0x46,
	0x49, 0x4c, 0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0xc8, 0x01,
	0x12, 0x18, 0x0a, 0x13, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f, 0x46, 0x49, 0x4c, 0x45, 0x5f,
	0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0xc9, 0x01, 0x12, 0x24, 0x0a, 0x1f, 0x43, 0x4f,
	0x4e, 0x46, 0x49, 0x47, 0x5f, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x4e, 0x45, 0x54, 0x57, 0x4f, 0x52,
	0x4b, 0x5f, 0x49, 0x44, 0x5f, 0x4d, 0x49, 0x53, 0x4d, 0x41, 0x54, 0x43, 0x48, 0x10, 0xca, 0x01,
	0x1a, 0xac, 0x02, 0x0a, 0x07, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x1a, 0x09, 0x0a, 0x07,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x95, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70,
	0x63, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0xc5, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x44, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x30, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x54, 0x0a, 0x04, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d,
	0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x12, 0x20, 0x0a,
	0x1c, 0x4e, 0x45, 0x45, 0x44, 0x5f, 0x54, 0x4f, 0x5f, 0x52, 0x45, 0x43, 0x4f, 0x56, 0x45, 0x52,
	0x5f, 0x57, 0x41, 0x4c, 0x4c, 0x45, 0x54, 0x5f, 0x46, 0x49, 0x52, 0x53, 0x54, 0x10, 0x66, 0x1a,
	0xf5, 0x02, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x1a, 0x09, 0x0a, 0x07, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0xdf, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x40, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x35, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x1a, 0xd9, 0x01, 0x0a, 0x05,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x43, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x2f, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70,
	0x63, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x69, 0x0a, 0x04,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11,
	0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10,
	0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02,
	0x12, 0x1e, 0x0a, 0x1a, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x41,
	0x4c, 0x52, 0x45, 0x41, 0x44, 0x59, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x65,
	0x12, 0x15, 0x0a, 0x11, 0x55, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x5f, 0x54, 0x4f, 0x5f, 0x43, 0x4f,
	0x4e, 0x4e, 0x45, 0x43, 0x54, 0x10, 0x66, 0x1a, 0x84, 0x03, 0x0a, 0x0e, 0x52, 0x65, 0x76, 0x65,
	0x72, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x09, 0x0a, 0x07, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0xe6, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x48, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x32, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x76, 0x65, 0x72, 0x74, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x35, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61,
	0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x1a, 0xd8, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x4b, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x37, 0x2e, 0x61, 0x6e,
	0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2e, 0x52, 0x65, 0x76, 0x65, 0x72, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x60, 0x0a, 0x04,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11,
	0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10,
	0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02,
	0x12, 0x15, 0x0a, 0x11, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x41,
	0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x55, 0x4e, 0x41, 0x42, 0x4c,
	0x45, 0x5f, 0x54, 0x4f, 0x5f, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x10, 0x66, 0x1a, 0xb6,
	0x03, 0x0a, 0x07, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x65, 0x1a, 0x75, 0x0a, 0x07, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x6f, 0x74, 0x50, 0x61, 0x74,
	0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6f, 0x74, 0x50, 0x61, 0x74,
	0x68, 0x12, 0x38, 0x0a, 0x17, 0x66, 0x75, 0x6c, 0x6c, 0x74, 0x65, 0x78, 0x74, 0x50, 0x72, 0x69,
	0x6d, 0x61, 0x72, 0x79, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x17, 0x66, 0x75, 0x6c, 0x6c, 0x74, 0x65, 0x78, 0x74, 0x50, 0x72, 0x69, 0x6d,
	0x61, 0x72, 0x79, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x3a, 0x04, 0x88, 0xe6, 0x03,
	0x01, 0x1a, 0xb3, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e,
	0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x2e, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x1a, 0xe3, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x44, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x61, 0x6e, 0x79, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e,
	0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x72, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e,
	0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e,
	0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f,
	0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x41, 0x43, 0x43, 0x4f, 0x55,
	0x4e, 0x54, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x65, 0x12, 0x0c,
	0x0a, 0x08, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x45, 0x44, 0x10, 0x66, 0x12, 0x19, 0x0a, 0x15,
	0x4e, 0x4f, 0x54, 0x5f, 0x45, 0x4e, 0x4f, 0x55, 0x47, 0x48, 0x5f, 0x46, 0x52, 0x45, 0x45, 0x5f,
	0x53, 0x50, 0x41, 0x43, 0x45, 0x10, 0x67, 0x1a, 0xb2, 0x02, 0x0a, 0x0d, 0x4d, 0x69, 0x67, 0x72,
	0x61, 0x74, 0x65, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x1a, 0x1f, 0x0a, 0x07, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x3a, 0x04, 0x88, 0xe6, 0x03, 0x01, 0x1a, 0xff, 0x01, 0x0a, 0x08, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x52, 0x70, 0x63, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x4d, 0x69, 0x67,
	0x72, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x1a, 0xa9, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x4a, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x36, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x4d,
	0x69, 0x67, 0x72, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e,
	0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a,
	0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xe9, 0x09, 0x0a,
	0x06, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x1a, 0x97, 0x03, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x6f, 0x74, 0x50, 0x61, 0x74, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6f, 0x74, 0x50, 0x61, 0x74, 0x68, 0x12,
	0x38, 0x0a, 0x17, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x4e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x79, 0x6e, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x17, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x4e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x42, 0x0a, 0x0b, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20,
	0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4d, 0x6f, 0x64, 0x65,
	0x52, 0x0b, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x40, 0x0a,
	0x1b, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x1b, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12,
	0x32, 0x0a, 0x14, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x59, 0x61, 0x6d, 0x75, 0x78, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x70,
	0x72, 0x65, 0x66, 0x65, 0x72, 0x59, 0x61, 0x6d, 0x75, 0x78, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70,
	0x6f, 0x72, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x6a, 0x73, 0x6f, 0x6e, 0x41, 0x70, 0x69, 0x4c, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x6a, 0x73, 0x6f, 0x6e, 0x41, 0x70, 0x69, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x41, 0x64, 0x64,
	0x72, 0x12, 0x38, 0x0a, 0x17, 0x66, 0x75, 0x6c, 0x6c, 0x74, 0x65, 0x78, 0x74, 0x50, 0x72, 0x69,
	0x6d, 0x61, 0x72, 0x79, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x17, 0x66, 0x75, 0x6c, 0x6c, 0x74, 0x65, 0x78, 0x74, 0x50, 0x72, 0x69, 0x6d,
	0x61, 0x72, 0x79, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x3a, 0x04, 0x88, 0xe6, 0x03,
	0x01, 0x1a, 0xc4, 0x06, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e,
	0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x30, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x33, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63,
	0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0x8e, 0x05, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x43, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x2f, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x9d, 0x04, 0x0a, 0x04, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d,
	0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x12, 0x1f, 0x0a,
	0x1b, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x5f, 0x54, 0x4f, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54,
	0x45, 0x5f, 0x4c, 0x4f, 0x43, 0x41, 0x4c, 0x5f, 0x52, 0x45, 0x50, 0x4f, 0x10, 0x65, 0x12, 0x23,
	0x0a, 0x1f, 0x4c, 0x4f, 0x43, 0x41, 0x4c, 0x5f, 0x52, 0x45, 0x50, 0x4f, 0x5f, 0x45, 0x58, 0x49,
	0x53, 0x54, 0x53, 0x5f, 0x42, 0x55, 0x54, 0x5f, 0x43, 0x4f, 0x52, 0x52, 0x55, 0x50, 0x54, 0x45,
	0x44, 0x10, 0x66, 0x12, 0x16, 0x0a, 0x12, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x5f, 0x54, 0x4f,
	0x5f, 0x52, 0x55, 0x4e, 0x5f, 0x4e, 0x4f, 0x44, 0x45, 0x10, 0x67, 0x12, 0x1f, 0x0a, 0x1b, 0x46,
	0x41, 0x49, 0x4c, 0x45, 0x44, 0x5f, 0x54, 0x4f, 0x5f, 0x46, 0x49, 0x4e, 0x44, 0x5f, 0x41, 0x43,
	0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x10, 0x68, 0x12, 0x2e, 0x0a, 0x2a,
	0x4c, 0x4f, 0x43, 0x41, 0x4c, 0x5f, 0x52, 0x45, 0x50, 0x4f, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x45,
	0x58, 0x49, 0x53, 0x54, 0x53, 0x5f, 0x41, 0x4e, 0x44, 0x5f, 0x4d, 0x4e, 0x45, 0x4d, 0x4f, 0x4e,
	0x49, 0x43, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x53, 0x45, 0x54, 0x10, 0x69, 0x12, 0x20, 0x0a, 0x1c,
	0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x5f, 0x54, 0x4f, 0x5f, 0x53, 0x54, 0x4f, 0x50, 0x5f, 0x53,
	0x45, 0x41, 0x52, 0x43, 0x48, 0x45, 0x52, 0x5f, 0x4e, 0x4f, 0x44, 0x45, 0x10, 0x6a, 0x12, 0x26,
	0x0a, 0x22, 0x41, 0x4e, 0x4f, 0x54, 0x48, 0x45, 0x52, 0x5f, 0x41, 0x4e, 0x59, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x50, 0x52, 0x4f, 0x43, 0x45, 0x53, 0x53, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x55, 0x4e,
	0x4e, 0x49, 0x4e, 0x47, 0x10, 0x6c, 0x12, 0x3e, 0x0a, 0x3a, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44,
	0x5f, 0x54, 0x4f, 0x5f, 0x46, 0x45, 0x54, 0x43, 0x48, 0x5f, 0x52, 0x45, 0x4d, 0x4f, 0x54, 0x45,
	0x5f, 0x4e, 0x4f, 0x44, 0x45, 0x5f, 0x48, 0x41, 0x53, 0x5f, 0x49, 0x4e, 0x43, 0x4f, 0x4d, 0x50,
	0x41, 0x54, 0x49, 0x42, 0x4c, 0x45, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x5f, 0x56, 0x45, 0x52,
	0x53, 0x49, 0x4f, 0x4e, 0x10, 0x6e, 0x12, 0x16, 0x0a, 0x12, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e,
	0x54, 0x5f, 0x49, 0x53, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x6f, 0x12, 0x1c,
	0x0a, 0x18, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x49,
	0x53, 0x5f, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x45, 0x44, 0x10, 0x70, 0x12, 0x1e, 0x0a, 0x1a,
	0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x4f, 0x52, 0x45, 0x5f, 0x4e, 0x4f,
	0x54, 0x5f, 0x4d, 0x49, 0x47, 0x52, 0x41, 0x54, 0x45, 0x44, 0x10, 0x71, 0x12, 0x1a, 0x0a, 0x15,
	0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x5f,
	0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0xc8, 0x01, 0x12, 0x18, 0x0a, 0x13, 0x43, 0x4f, 0x4e, 0x46,
	0x49, 0x47, 0x5f, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10,
	0xc9, 0x01, 0x12, 0x24, 0x0a, 0x1f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f, 0x46, 0x49, 0x4c,
	0x45, 0x5f, 0x4e, 0x45, 0x54, 0x57, 0x4f, 0x52, 0x4b, 0x5f, 0x49, 0x44, 0x5f, 0x4d, 0x49, 0x53,
	0x4d, 0x41, 0x54, 0x43, 0x48, 0x10, 0xca, 0x01, 0x1a, 0xfa, 0x02, 0x0a, 0x04, 0x53, 0x74, 0x6f,
	0x70, 0x1a, 0x29, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x44, 0x61, 0x74, 0x61, 0x1a, 0xc6, 0x02, 0x0a,
	0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x53,
	0x74, 0x6f, 0x70, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0xf9, 0x01, 0x0a, 0x05, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x41, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x2d, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x8a, 0x01, 0x0a, 0x04, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d,
	0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x12, 0x1a, 0x0a,
	0x16, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x4e, 0x4f, 0x54, 0x5f,
	0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x65, 0x12, 0x17, 0x0a, 0x13, 0x46, 0x41, 0x49,
	0x4c, 0x45, 0x44, 0x5f, 0x54, 0x4f, 0x5f, 0x53, 0x54, 0x4f, 0x50, 0x5f, 0x4e, 0x4f, 0x44, 0x45,
	0x10, 0x66, 0x12, 0x21, 0x0a, 0x1d, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x5f, 0x54, 0x4f, 0x5f,
	0x52, 0x45, 0x4d, 0x4f, 0x56, 0x45, 0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x44,
	0x41, 0x54, 0x41, 0x10, 0x67, 0x1a, 0xd3, 0x03, 0x0a, 0x04, 0x4d, 0x6f, 0x76, 0x65, 0x1a, 0x23,
	0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x77,
	0x50, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x77, 0x50,
	0x61, 0x74, 0x68, 0x1a, 0xa5, 0x03, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3e, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x4d, 0x6f, 0x76, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x1a, 0xd8, 0x02, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x41, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x4d,
	0x6f, 0x76, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0xe9, 0x01, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c,
	0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52,
	0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50,
	0x55, 0x54, 0x10, 0x02, 0x12, 0x17, 0x0a, 0x13, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x5f, 0x54,
	0x4f, 0x5f, 0x53, 0x54, 0x4f, 0x50, 0x5f, 0x4e, 0x4f, 0x44, 0x45, 0x10, 0x65, 0x12, 0x22, 0x0a,
	0x1e, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x5f, 0x54, 0x4f, 0x5f, 0x49, 0x44, 0x45, 0x4e, 0x54,
	0x49, 0x46, 0x59, 0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x44, 0x49, 0x52, 0x10,
	0x66, 0x12, 0x21, 0x0a, 0x1d, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x5f, 0x54, 0x4f, 0x5f, 0x52,
	0x45, 0x4d, 0x4f, 0x56, 0x45, 0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x44, 0x41,
	0x54, 0x41, 0x10, 0x67, 0x12, 0x1f, 0x0a, 0x1b, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x5f, 0x54,
	0x4f, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x4c, 0x4f, 0x43, 0x41, 0x4c, 0x5f, 0x52,
	0x45, 0x50, 0x4f, 0x10, 0x68, 0x12, 0x1a, 0x0a, 0x16, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x5f,
	0x54, 0x4f, 0x5f, 0x57, 0x52, 0x49, 0x54, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x10,
	0x69, 0x12, 0x18, 0x0a, 0x14, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x5f, 0x54, 0x4f, 0x5f, 0x47,
	0x45, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x10, 0x6a, 0x1a, 0x85, 0x05, 0x0a, 0x0c,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x1a, 0x33, 0x0a, 0x07,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x49, 0x50, 0x46, 0x53, 0x53,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x41, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x49, 0x50, 0x46, 0x53, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x41, 0x64, 0x64,
	0x72, 0x1a, 0xb5, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e,
	0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0xe0, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x49, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x35,
	0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x6a, 0x0a,
	0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12,
	0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52,
	0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10,
	0x02, 0x12, 0x1a, 0x0a, 0x16, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x49, 0x53, 0x5f,
	0x4e, 0x4f, 0x54, 0x5f, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x65, 0x12, 0x1a, 0x0a,
	0x16, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x5f, 0x54, 0x4f, 0x5f, 0x57, 0x52, 0x49, 0x54, 0x45,
	0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x10, 0x66, 0x22, 0x87, 0x02, 0x0a, 0x09, 0x54, 0x69,
	0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x73, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x4d, 0x54, 0x10, 0x00,
	0x12, 0x07, 0x0a, 0x03, 0x45, 0x43, 0x54, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x45, 0x45, 0x54,
	0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x45, 0x41, 0x54, 0x10, 0x03, 0x12, 0x07, 0x0a, 0x03, 0x4d,
	0x45, 0x54, 0x10, 0x04, 0x12, 0x07, 0x0a, 0x03, 0x4e, 0x45, 0x54, 0x10, 0x05, 0x12, 0x07, 0x0a,
	0x03, 0x50, 0x4c, 0x54, 0x10, 0x06, 0x12, 0x07, 0x0a, 0x03, 0x49, 0x53, 0x54, 0x10, 0x07, 0x12,
	0x07, 0x0a, 0x03, 0x42, 0x53, 0x54, 0x10, 0x08, 0x12, 0x07, 0x0a, 0x03, 0x56, 0x53, 0x54, 0x10,
	0x09, 0x12, 0x07, 0x0a, 0x03, 0x43, 0x54, 0x54, 0x10, 0x0a, 0x12, 0x07, 0x0a, 0x03, 0x4a, 0x53,
	0x54, 0x10, 0x0b, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x43, 0x54, 0x10, 0x0c, 0x12, 0x07, 0x0a, 0x03,
	0x41, 0x45, 0x54, 0x10, 0x0d, 0x12, 0x07, 0x0a, 0x03, 0x53, 0x53, 0x54, 0x10, 0x0e, 0x12, 0x07,
	0x0a, 0x03, 0x4e, 0x53, 0x54, 0x10, 0x0f, 0x12, 0x07, 0x0a, 0x03, 0x4d, 0x49, 0x54, 0x10, 0x10,
	0x12, 0x07, 0x0a, 0x03, 0x48, 0x53, 0x54, 0x10, 0x11, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x53, 0x54,
	0x10, 0x12, 0x12, 0x07, 0x0a, 0x03, 0x50, 0x53, 0x54, 0x10, 0x13, 0x12, 0x07, 0x0a, 0x03, 0x4d,
	0x53, 0x54, 0x10, 0x14, 0x12, 0x07, 0x0a, 0x03, 0x43, 0x53, 0x54, 0x10, 0x15, 0x12, 0x07, 0x0a,
	0x03, 0x49, 0x45, 0x54, 0x10, 0x16, 0x12, 0x07, 0x0a, 0x03, 0x50, 0x52, 0x54, 0x10, 0x17, 0x12,
	0x07, 0x0a, 0x03, 0x43, 0x4e, 0x54, 0x10, 0x18, 0x12, 0x07, 0x0a, 0x03, 0x42, 0x45, 0x54, 0x10,
	0x19, 0x12, 0x07, 0x0a, 0x03, 0x42, 0x52, 0x54, 0x10, 0x1a, 0x12, 0x07, 0x0a, 0x03, 0x43, 0x41,
	0x54, 0x10, 0x1b, 0x1a, 0x1d, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x1a, 0x10, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x1a, 0x09, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x9e, 0x04, 0x0a, 0x17, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x46, 0x72,
	0x6f, 0x6d, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x1a, 0x8d,
	0x01, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x1a,
	0x0a, 0x08, 0x72, 0x6f, 0x6f, 0x74, 0x50, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x72, 0x6f, 0x6f, 0x74, 0x50, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x38,
	0x0a, 0x17, 0x66, 0x75, 0x6c, 0x6c, 0x74, 0x65, 0x78, 0x74, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72,
	0x79, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x17, 0x66, 0x75, 0x6c, 0x6c, 0x74, 0x65, 0x78, 0x74, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79,
	0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x3a, 0x04, 0x88, 0xe6, 0x03, 0x01, 0x1a, 0xf2,
	0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x70, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x53, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x53, 0x70, 0x61, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x51, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63,
	0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x46, 0x72, 0x6f, 0x6d, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0xca, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x54, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x40,
	0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d,
	0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x49, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e,
	0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a,
	0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11,
	0x44, 0x49, 0x46, 0x46, 0x45, 0x52, 0x45, 0x4e, 0x54, 0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e,
	0x54, 0x10, 0x03, 0x1a, 0xd3, 0x02, 0x0a, 0x16, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x6f,
	0x63, 0x61, 0x6c, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x79, 0x6e, 0x63, 0x1a, 0x09,
	0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0xad, 0x02, 0x0a, 0x08, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x52, 0x70, 0x63, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x79,
	0x6e, 0x63, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0xce, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x53, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x3f, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x6f, 0x63,
	0x61, 0x6c, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x79, 0x6e, 0x63, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x4e, 0x0a, 0x04, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d,
	0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x12, 0x1a, 0x0a,
	0x16, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x4e, 0x4f, 0x54, 0x5f,
	0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x04, 0x1a, 0xe4, 0x02, 0x0a, 0x11, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x4a, 0x73, 0x6f, 0x6e, 0x41, 0x70, 0x69, 0x41, 0x64, 0x64, 0x72, 0x1a,
	0x29, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x1a, 0xa3, 0x02, 0x0a, 0x08, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x52, 0x70, 0x63, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x4a, 0x73, 0x6f, 0x6e, 0x41, 0x70, 0x69, 0x41, 0x64, 0x64, 0x72, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x1a, 0xc9, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x4e,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3a, 0x2e, 0x61,
	0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4a, 0x73, 0x6f, 0x6e, 0x41, 0x70, 0x69,
	0x41, 0x64, 0x64, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x4e, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c,
	0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52,
	0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50,
	0x55, 0x54, 0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f,
	0x49, 0x53, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x04,
	0x1a, 0xe8, 0x04, 0x0a, 0x1d, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x1a, 0x8f, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x42,
	0x0a, 0x0b, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70,
	0x63, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x0b, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4d, 0x6f,
	0x64, 0x65, 0x12, 0x40, 0x0a, 0x1b, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74,
	0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1b, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65,
	0x50, 0x61, 0x74, 0x68, 0x1a, 0xb4, 0x03, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x57, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x41, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x6e, 0x64, 0x52, 0x65, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0xce, 0x02, 0x0a, 0x05, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x5a, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x46, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63,
	0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x6e, 0x64, 0x52,
	0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0xc6, 0x01, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e,
	0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e,
	0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f,
	0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16, 0x41, 0x43, 0x43, 0x4f, 0x55,
	0x4e, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e,
	0x47, 0x10, 0x04, 0x12, 0x1a, 0x0a, 0x16, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x46,
	0x41, 0x49, 0x4c, 0x45, 0x44, 0x5f, 0x54, 0x4f, 0x5f, 0x53, 0x54, 0x4f, 0x50, 0x10, 0x64, 0x12,
	0x1a, 0x0a, 0x15, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x4e,
	0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0xc8, 0x01, 0x12, 0x18, 0x0a, 0x13, 0x43,
	0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c,
	0x49, 0x44, 0x10, 0xc9, 0x01, 0x12, 0x24, 0x0a, 0x1f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f,
	0x46, 0x49, 0x4c, 0x45, 0x5f, 0x4e, 0x45, 0x54, 0x57, 0x4f, 0x52, 0x4b, 0x5f, 0x49, 0x44, 0x5f,
	0x4d, 0x49, 0x53, 0x4d, 0x41, 0x54, 0x43, 0x48, 0x10, 0xca, 0x01, 0x1a, 0x91, 0x08, 0x0a, 0x09,
	0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x4c, 0x69, 0x6e, 0x6b, 0x1a, 0xe3, 0x03, 0x0a, 0x0c, 0x4e, 0x65,
	0x77, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x1a, 0x6a, 0x0a, 0x07, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x3f, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29,
	0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x2e, 0x4c, 0x6f, 0x63, 0x61,
	0x6c, 0x41, 0x70, 0x69, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65,
	0x3a, 0x04, 0x88, 0xe6, 0x03, 0x01, 0x1a, 0xe6, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63,
	0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x4c, 0x69,
	0x6e, 0x6b, 0x2e, 0x4e, 0x65, 0x77, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e,
	0x67, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6c,
	0x6c, 0x65, 0x6e, 0x67, 0x65, 0x49, 0x64, 0x1a, 0xe5, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x53, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x3f, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x4c, 0x69, 0x6e, 0x6b, 0x2e,
	0x4e, 0x65, 0x77, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x65, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e,
	0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a,
	0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16,
	0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x49, 0x53, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x52,
	0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x54, 0x4f, 0x4f, 0x5f,
	0x4d, 0x41, 0x4e, 0x59, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x53, 0x10, 0x66, 0x1a,
	0x9d, 0x04, 0x0a, 0x0e, 0x53, 0x6f, 0x6c, 0x76, 0x65, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e,
	0x67, 0x65, 0x1a, 0x49, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a,
	0x0b, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x3a, 0x04, 0x88, 0xe6, 0x03, 0x01, 0x1a, 0xbf, 0x03,
	0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x61, 0x6e, 0x79, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e,
	0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x4c, 0x69, 0x6e, 0x6b, 0x2e, 0x53, 0x6f, 0x6c, 0x76, 0x65, 0x43,
	0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x22,
	0x0a, 0x0c, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x1a, 0xa2, 0x02, 0x0a, 0x05, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x55, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x41, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63,
	0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x4c, 0x69,
	0x6e, 0x6b, 0x2e, 0x53, 0x6f, 0x6c, 0x76, 0x65, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67,
	0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x9f, 0x01,
	0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00,
	0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f,
	0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54,
	0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x49, 0x53,
	0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x65, 0x12, 0x18,
	0x0a, 0x14, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x43, 0x48, 0x41, 0x4c, 0x4c, 0x45,
	0x4e, 0x47, 0x45, 0x5f, 0x49, 0x44, 0x10, 0x66, 0x12, 0x1f, 0x0a, 0x1b, 0x43, 0x48, 0x41, 0x4c,
	0x4c, 0x45, 0x4e, 0x47, 0x45, 0x5f, 0x41, 0x54, 0x54, 0x45, 0x4d, 0x50, 0x54, 0x53, 0x5f, 0x45,
	0x58, 0x43, 0x45, 0x45, 0x44, 0x45, 0x44, 0x10, 0x67, 0x12, 0x14, 0x0a, 0x10, 0x49, 0x4e, 0x43,
	0x4f, 0x52, 0x52, 0x45, 0x43, 0x54, 0x5f, 0x41, 0x4e, 0x53, 0x57, 0x45, 0x52, 0x10, 0x68, 0x22,
	0x41, 0x0a, 0x0b, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x11,
	0x0a, 0x0d, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x10,
	0x00, 0x12, 0x0d, 0x0a, 0x09, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x4f, 0x6e, 0x6c, 0x79, 0x10, 0x01,
	0x12, 0x10, 0x0a, 0x0c, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x10, 0x02, 0x1a, 0xb1, 0x1c, 0x0a, 0x09, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x1a, 0xb9, 0x02, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x1a,
	0x09, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x9f, 0x02, 0x0a, 0x08, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x52, 0x70, 0x63, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x47,
	0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x20, 0x0a, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49,
	0x64, 0x1a, 0xa8, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x49, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x35, 0x2e, 0x61, 0x6e, 0x79, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e,
	0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a,
	0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xaf, 0x02, 0x0a,
	0x06, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x1a, 0x09, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x99, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x42, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c,
	0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x57, 0x6f, 0x72,
	0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x73, 0x1a, 0xa4, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x45, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x31, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x57, 0x6f,
	0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d,
	0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12,
	0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xc2,
	0x03, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x1a, 0xa5, 0x01, 0x0a, 0x07, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52,
	0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x4b, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x43,
	0x61, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e, 0x61, 0x6e, 0x79, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x49,
	0x6d, 0x70, 0x6f, 0x72, 0x74, 0x55, 0x73, 0x65, 0x43, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x43, 0x61, 0x73, 0x65, 0x52, 0x07, 0x75, 0x73,
	0x65, 0x43, 0x61, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x69, 0x74, 0x68, 0x43, 0x68, 0x61,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x77, 0x69, 0x74, 0x68, 0x43, 0x68, 0x61,
	0x74, 0x1a, 0x8f, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e,
	0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x57, 0x6f, 0x72, 0x6b,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x1a, 0xa4, 0x01, 0x0a,
	0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x45, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52,
	0x70, 0x63, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10,
	0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52,
	0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55,
	0x54, 0x10, 0x02, 0x1a, 0xec, 0x02, 0x0a, 0x04, 0x4f, 0x70, 0x65, 0x6e, 0x1a, 0x3f, 0x0a, 0x07,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x69, 0x74, 0x68, 0x43, 0x68, 0x61, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x77, 0x69, 0x74, 0x68, 0x43, 0x68, 0x61, 0x74, 0x1a, 0xa2, 0x02,
	0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x6e, 0x79, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2f, 0x0a, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x6e, 0x79,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x1a, 0xa2, 0x01,
	0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x43, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2f, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x52, 0x70, 0x63, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x4f, 0x70,
	0x65, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32,
	0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00,
	0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f,
	0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54,
	0x10, 0x02, 0x1a, 0xed, 0x08, 0x0a, 0x06, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x1a, 0x95, 0x03,
	0x0a, 0x03, 0x41, 0x64, 0x64, 0x1a, 0x3f, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x1a, 0xcc, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x30, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63,
	0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x2e, 0x41, 0x64, 0x64, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x1a, 0xa8, 0x01, 0x0a, 0x05, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x49, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x35, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63,
	0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x2e, 0x41, 0x64, 0x64, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c,
	0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45,
	0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e,
	0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xf2, 0x02, 0x0a, 0x07, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x64,
	0x64, 0x1a, 0x41, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x73, 0x1a, 0xa3, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x4a, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x34, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x57,
	0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x41, 0x64, 0x64, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1c, 0x0a,
	0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x73, 0x1a, 0xac, 0x01, 0x0a, 0x05,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x4d, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x39, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70,
	0x63, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x64, 0x64, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08,
	0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42,
	0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xd5, 0x02, 0x0a, 0x0a, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x1a, 0x27, 0x0a, 0x07, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x64, 0x73, 0x1a, 0x9d, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4d, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37,
	0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x57, 0x6f, 0x72,
	0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x10,
	0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73,
	0x1a, 0xaf, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x50, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3c, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32,
	0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00,
	0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f,
	0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54,
	0x10, 0x02, 0x1a, 0xdb, 0x02, 0x0a, 0x07, 0x53, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x56,
	0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x07, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x1a, 0xf7, 0x01, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63,
	0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0xa5, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x46, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x32, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x57,
	0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11,
	0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10,
	0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02,
	0x1a, 0xad, 0x02, 0x0a, 0x06, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x1a, 0x2b, 0x0a, 0x07, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x77, 0x6f, 0x72,
	0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x1a, 0xf5, 0x01, 0x0a, 0x08, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52,
	0x70, 0x63, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0xa4, 0x01, 0x0a, 0x05, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x45, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x31, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e,
	0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11,
	0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10,
	0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02,
	0x1a, 0x83, 0x03, 0x0a, 0x06, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x1a, 0x3f, 0x0a, 0x07, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x20, 0x0a, 0x0b, 0x77, 0x6f,
	0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x1a, 0xb7, 0x02, 0x0a,
	0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a,
	0xa4, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x45, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e,
	0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55,
	0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f,
	0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49,
	0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xe8, 0x12, 0x0a, 0x0a, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x69, 0x6e, 0x67, 0x1a, 0xb2, 0x02, 0x0a, 0x0c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x72, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x3d,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25,
	0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6a, 0x6f, 0x69,
	0x6e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x6a, 0x6f,
	0x69, 0x6e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x31, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x1a, 0xc0, 0x03, 0x0a, 0x06, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x1a, 0x6f, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x1c, 0x0a, 0x09, 0x6a, 0x6f, 0x69, 0x6e,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x6a, 0x6f, 0x69,
	0x6e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x1a, 0xc4, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63,
	0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x1a, 0xe0, 0x01, 0x0a, 0x05, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x46, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x32, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63,
	0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x6d,
	0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00,
	0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f,
	0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54,
	0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x4e, 0x4f, 0x5f, 0x53, 0x55, 0x43, 0x48, 0x5f, 0x4f, 0x42,
	0x4a, 0x45, 0x43, 0x54, 0x10, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x4e, 0x4f, 0x5f, 0x53, 0x55, 0x43,
	0x48, 0x5f, 0x53, 0x50, 0x41, 0x43, 0x45, 0x10, 0x66, 0x12, 0x12, 0x0a, 0x0e, 0x4c, 0x49, 0x4d,
	0x49, 0x54, 0x5f, 0x45, 0x58, 0x43, 0x45, 0x45, 0x44, 0x45, 0x44, 0x10, 0x67, 0x1a, 0xea, 0x02,
	0x0a, 0x06, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x1a, 0x3f, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x1a, 0x9e, 0x02, 0x0a, 0x08, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x52, 0x70, 0x63, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0xcc, 0x01, 0x0a, 0x05,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x46, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70,
	0x63, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x59, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10,
	0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52,
	0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55,
	0x54, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x4e, 0x4f, 0x5f, 0x53, 0x55, 0x43, 0x48, 0x5f, 0x4f,
	0x42, 0x4a, 0x45, 0x43, 0x54, 0x10, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x4e, 0x4f, 0x5f, 0x53, 0x55,
	0x43, 0x48, 0x5f, 0x53, 0x50, 0x41, 0x43, 0x45, 0x10, 0x66, 0x1a, 0xf8, 0x02, 0x0a, 0x04, 0x4c,
	0x69, 0x73, 0x74, 0x1a, 0x23, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x1a, 0xca, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52,
	0x70, 0x63, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x42, 0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x6e,
	0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x73, 0x1a, 0xb6, 0x01, 0x0a,
	0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x44, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52,
	0x70, 0x63, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x45,
	0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00,
	0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f,
	0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54,
	0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x4e, 0x4f, 0x5f, 0x53, 0x55, 0x43, 0x48, 0x5f, 0x53, 0x50,
	0x41, 0x43, 0x45, 0x10, 0x66, 0x1a, 0xfc, 0x02, 0x0a, 0x0a, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76,
	0x65, 0x55, 0x72, 0x69, 0x1a, 0x1b, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72,
	0x69, 0x1a, 0xd0, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e,
	0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x55, 0x72,
	0x69, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x3e, 0x0a, 0x07, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x69, 0x6e,
	0x67, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x07,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x1a, 0xba, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x4a, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x36, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65,
	0x55, 0x72, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x43, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10,
	0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52,
	0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55,
	0x54, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x4e, 0x4f, 0x5f, 0x53, 0x55, 0x43, 0x48, 0x5f, 0x55,
	0x52, 0x49, 0x10, 0x65, 0x1a, 0xb3, 0x03, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x1a, 0x3f, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x1a, 0xe4, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x46, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x30, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x3e, 0x0a, 0x07, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x6e, 0x79, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x69,
	0x6e, 0x67, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x07, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x1a, 0xcf, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x49, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x35, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x59, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10,
	0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52,
	0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55,
	0x54, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x4e, 0x4f, 0x5f, 0x53, 0x55, 0x43, 0x48, 0x5f, 0x4f,
	0x42, 0x4a, 0x45, 0x43, 0x54, 0x10, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x4e, 0x4f, 0x5f, 0x53, 0x55,
	0x43, 0x48, 0x5f, 0x53, 0x50, 0x41, 0x43, 0x45, 0x10, 0x66, 0x22, 0x45, 0x0a, 0x0d, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x73, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x14, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x10,
	0x01, 0x1a, 0x92, 0xd8, 0x01, 0x0a, 0x06, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x1a, 0xb7, 0x04,
	0x0a, 0x04, 0x4f, 0x70, 0x65, 0x6e, 0x1a, 0xc7, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74,
	0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x4e, 0x0a, 0x22, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x41, 0x73, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x22, 0x69, 0x6e,
	0x63, 0x6c, 0x75, 0x64, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x73,
	0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73,
	0x1a, 0xe4, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61,
	0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x39, 0x0a, 0x0a,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x56, 0x69, 0x65, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x56, 0x69, 0x65, 0x77, 0x52, 0x0a, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x56, 0x69, 0x65, 0x77, 0x1a, 0xdd, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x40, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x2c, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x70, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a,
	0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f,
	0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41,
	0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x4f, 0x54,
	0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x03, 0x12, 0x19, 0x0a, 0x15, 0x41, 0x4e, 0x59, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x4e, 0x45, 0x45, 0x44, 0x53, 0x5f, 0x55, 0x50, 0x47, 0x52, 0x41, 0x44,
	0x45, 0x10, 0x0a, 0x12, 0x12, 0x0a, 0x0e, 0x4f, 0x42, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x44, 0x45,
	0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x04, 0x1a, 0xd6, 0x02, 0x0a, 0x05, 0x43, 0x6c, 0x6f, 0x73,
	0x65, 0x1a, 0x5d, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64,
	0x1a, 0xed, 0x01, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61,
	0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0xa0, 0x01,
	0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x41, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11,
	0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10,
	0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02,
	0x1a, 0xb7, 0x04, 0x0a, 0x04, 0x53, 0x68, 0x6f, 0x77, 0x1a, 0xc7, 0x01, 0x0a, 0x07, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x4e, 0x0a, 0x22, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x73, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65,
	0x6e, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x22, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x41, 0x73, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x73, 0x1a, 0xe4, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3d, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x2e, 0x53, 0x68, 0x6f, 0x77, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x39, 0x0a, 0x0a, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x56, 0x69, 0x65, 0x77, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x56, 0x69, 0x65, 0x77, 0x52, 0x0a,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x56, 0x69, 0x65, 0x77, 0x1a, 0xdd, 0x01, 0x0a, 0x05, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x40, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63,
	0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x53, 0x68, 0x6f, 0x77, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x70, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e,
	0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a,
	0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09,
	0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x03, 0x12, 0x12, 0x0a, 0x0e, 0x4f,
	0x42, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x04, 0x12,
	0x19, 0x0a, 0x15, 0x41, 0x4e, 0x59, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e, 0x45, 0x45, 0x44, 0x53,
	0x5f, 0x55, 0x50, 0x47, 0x52, 0x41, 0x44, 0x45, 0x10, 0x0a, 0x1a, 0xbf, 0x05, 0x0a, 0x06, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x1a, 0xc5, 0x02, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x31, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x07, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x12, 0x41, 0x0a, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x46, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x6e,
	0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x30, 0x0a, 0x13, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x55,
	0x6e, 0x69, 0x71, 0x75, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65,
	0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x69, 0x74, 0x68, 0x43, 0x68, 0x61, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x77, 0x69, 0x74, 0x68, 0x43, 0x68, 0x61, 0x74, 0x12,
	0x3c, 0x0a, 0x19, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x57, 0x69, 0x64,
	0x67, 0x65, 0x74, 0x49, 0x66, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x19, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x57, 0x69,
	0x64, 0x67, 0x65, 0x74, 0x49, 0x66, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x1a, 0xec, 0x02,
	0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x6e, 0x79, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x31, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52,
	0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x1a, 0xa1, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x42, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x2e, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e,
	0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a,
	0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xf6, 0x03, 0x0a,
	0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x1a,
	0x92, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x07, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x69, 0x74, 0x68,
	0x43, 0x68, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x77, 0x69, 0x74, 0x68,
	0x43, 0x68, 0x61, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x49, 0x64, 0x1a, 0xce, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x47, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x31, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x6f, 0x6b,
	0x6d, 0x61, 0x72, 0x6b, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x1a, 0xa9, 0x01, 0x0a, 0x05, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x4a, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x36, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x6f,
	0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c,
	0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45,
	0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e,
	0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xcb, 0x03, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x56, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x07, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64,
	0x1a, 0xe0, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x61,
	0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x31, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x07,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x1a, 0xa9, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x4a, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x36, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10,
	0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52,
	0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55,
	0x54, 0x10, 0x02, 0x1a, 0xcb, 0x03, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x56, 0x0a, 0x07,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x49, 0x64, 0x1a, 0xda, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x4d, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x37, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x07,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x1a,
	0xaf, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x50, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3c, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a,
	0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12,
	0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52,
	0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10,
	0x02, 0x1a, 0x8d, 0x05, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x74, 0x1a,
	0xed, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x12, 0x31, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x07, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x41, 0x0a, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x69, 0x74, 0x68, 0x43, 0x68, 0x61, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x77, 0x69, 0x74, 0x68, 0x43, 0x68, 0x61, 0x74, 0x1a,
	0x8f, 0x03, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x6e,
	0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x05,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x6e,
	0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x31, 0x0a, 0x07, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x1a, 0xc1, 0x01,
	0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x45, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x53, 0x65, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x4f, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c,
	0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52,
	0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50,
	0x55, 0x54, 0x10, 0x02, 0x12, 0x1b, 0x0a, 0x17, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f,
	0x4f, 0x42, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x52, 0x4c, 0x10,
	0x03, 0x1a, 0x83, 0x04, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x1a, 0x99, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x31, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x07, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x41, 0x0a, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61,
	0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x49, 0x64, 0x1a, 0xd2, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x49, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33,
	0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x31, 0x0a, 0x07, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x1a, 0xab, 0x01, 0x0a, 0x05, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x4c, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x38, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e,
	0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e,
	0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f,
	0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xf7, 0x04, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x55, 0x72, 0x6c, 0x1a, 0xfe, 0x01, 0x0a, 0x07, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x30, 0x0a, 0x13, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x55, 0x6e, 0x69,
	0x71, 0x75, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x4b, 0x65,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x75, 0x72, 0x6c, 0x12, 0x31, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x07, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x61, 0x64, 0x64, 0x50, 0x61, 0x67,
	0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e,
	0x61, 0x64, 0x64, 0x50, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x77, 0x69, 0x74, 0x68, 0x43, 0x68, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x77, 0x69, 0x74, 0x68, 0x43, 0x68, 0x61, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x1a, 0xe4, 0x02, 0x0a, 0x08, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x55, 0x72, 0x6c, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x1a, 0x0a, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x07, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x63, 0x68, 0x61, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x63, 0x68, 0x61, 0x74, 0x49, 0x64, 0x1a, 0xa8, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x49, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x35,
	0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x55, 0x72,
	0x6c, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a,
	0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12,
	0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52,
	0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10,
	0x02, 0x1a, 0xbc, 0x02, 0x0a, 0x07, 0x43, 0x68, 0x61, 0x74, 0x41, 0x64, 0x64, 0x1a, 0x25, 0x0a,
	0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x1a, 0x89, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x40, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2a, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x41, 0x64, 0x64, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x68, 0x61, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x68, 0x61, 0x74, 0x49, 0x64, 0x1a, 0xa2, 0x01, 0x0a, 0x05,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x43, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x2f, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70,
	0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x41, 0x64, 0x64,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11,
	0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10,
	0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02,
	0x1a, 0xca, 0x02, 0x0a, 0x0d, 0x42, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x46, 0x65, 0x74,
	0x63, 0x68, 0x1a, 0x39, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x1a, 0xfd, 0x01,
	0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x61, 0x6e, 0x79, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x42,
	0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x46, 0x65, 0x74, 0x63, 0x68, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x1a, 0xa8, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x49, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x35, 0x2e, 0x61, 0x6e, 0x79,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e,
	0x42, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x46, 0x65, 0x74, 0x63, 0x68, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d,
	0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xdd, 0x02,
	0x0a, 0x0a, 0x54, 0x6f, 0x42, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x1a, 0x39, 0x0a, 0x07,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x1a, 0x93, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70,
	0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x54, 0x6f, 0x42, 0x6f, 0x6f, 0x6b, 0x6d,
	0x61, 0x72, 0x6b, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x64, 0x1a, 0xa5, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x46, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e,
	0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x2e, 0x54, 0x6f, 0x42, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d,
	0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xbc, 0x02,
	0x0a, 0x09, 0x44, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x1a, 0x27, 0x0a, 0x07, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x49, 0x64, 0x1a, 0x85, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x42, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2c, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x44, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x1a, 0xa4, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x45, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e,
	0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x2e, 0x44, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e,
	0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a,
	0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xdd, 0x03, 0x0a,
	0x0f, 0x4f, 0x70, 0x65, 0x6e, 0x42, 0x72, 0x65, 0x61, 0x64, 0x63, 0x72, 0x75, 0x6d, 0x62, 0x73,
	0x1a, 0x41, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x72, 0x61,
	0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63,
	0x65, 0x49, 0x64, 0x1a, 0x86, 0x03, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x48, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x32, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x42, 0x72, 0x65, 0x61, 0x64, 0x63, 0x72,
	0x75, 0x6d, 0x62, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x56, 0x69,
	0x65, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x56,
	0x69, 0x65, 0x77, 0x52, 0x0a, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x56, 0x69, 0x65, 0x77, 0x1a,
	0xaa, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x4b, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x37, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x4f, 0x70, 0x65,
	0x6e, 0x42, 0x72, 0x65, 0x61, 0x64, 0x63, 0x72, 0x75, 0x6d, 0x62, 0x73, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e,
	0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a,
	0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0x83, 0x03, 0x0a,
	0x0e, 0x53, 0x65, 0x74, 0x42, 0x72, 0x65, 0x61, 0x64, 0x63, 0x72, 0x75, 0x6d, 0x62, 0x73, 0x1a,
	0x41, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x62, 0x72,
	0x65, 0x61, 0x64, 0x63, 0x72, 0x75, 0x6d, 0x62, 0x73, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x62, 0x72, 0x65, 0x61, 0x64, 0x63, 0x72, 0x75, 0x6d, 0x62, 0x73, 0x49, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69,
	0x64, 0x73, 0x1a, 0xad, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x47, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31,
	0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x42, 0x72, 0x65, 0x61, 0x64, 0x63, 0x72, 0x75, 0x6d,
	0x62, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52,
	0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0xa9, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x4a, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x36,
	0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x42, 0x72, 0x65, 0x61, 0x64, 0x63, 0x72, 0x75, 0x6d,
	0x62, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32,
	0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00,
	0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f,
	0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54,
	0x10, 0x02, 0x1a, 0xc4, 0x02, 0x0a, 0x0b, 0x53, 0x68, 0x61, 0x72, 0x65, 0x42, 0x79, 0x4c, 0x69,
	0x6e, 0x6b, 0x1a, 0x25, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x1a, 0x8d, 0x02, 0x0a, 0x08, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x44, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x61, 0x6e, 0x79, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x42, 0x79, 0x4c, 0x69, 0x6e, 0x6b, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x1a, 0xa6, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x47, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x42, 0x79, 0x4c, 0x69, 0x6e, 0x6b, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a,
	0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f,
	0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41,
	0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xe7, 0x04, 0x0a, 0x06, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x1a, 0xb7, 0x02, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x46, 0x0a, 0x07, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x6e,
	0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x76, 0x69,
	0x65, 0x77, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x73, 0x12, 0x40, 0x0a, 0x05, 0x73, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x52, 0x05, 0x73,
	0x6f, 0x72, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x54, 0x65, 0x78, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x54, 0x65, 0x78, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x2a,
	0x0a, 0x10, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x65,
	0x79, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x1a, 0xa2,
	0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x6e, 0x79,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x31, 0x0a, 0x07,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x1a,
	0xa1, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x42, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10,
	0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52,
	0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55,
	0x54, 0x10, 0x02, 0x1a, 0xb4, 0x06, 0x0a, 0x0e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x57, 0x69,
	0x74, 0x68, 0x4d, 0x65, 0x74, 0x61, 0x1a, 0xe7, 0x03, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x46, 0x0a, 0x07,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e,
	0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x61,
	0x76, 0x69, 0x65, 0x77, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x07, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x73, 0x12, 0x40, 0x0a, 0x05, 0x73, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x52,
	0x05, 0x73, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x54, 0x65,
	0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x54, 0x65,
	0x78, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x12, 0x2a, 0x0a, 0x10, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x6b, 0x65, 0x79, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73,
	0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x4d, 0x65, 0x74, 0x61,
	0x12, 0x3c, 0x0a, 0x19, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x19, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x52,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x50,
	0x0a, 0x23, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x48, 0x54, 0x4d, 0x4c, 0x48, 0x69, 0x67, 0x68,
	0x6c, 0x69, 0x67, 0x68, 0x74, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x65, 0x61, 0x64, 0x4f, 0x66, 0x52,
	0x61, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x23, 0x72, 0x65, 0x74,
	0x75, 0x72, 0x6e, 0x48, 0x54, 0x4d, 0x4c, 0x48, 0x69, 0x67, 0x68, 0x6c, 0x69, 0x67, 0x68, 0x74,
	0x73, 0x49, 0x6e, 0x73, 0x74, 0x65, 0x61, 0x64, 0x4f, 0x66, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x73,
	0x1a, 0xb7, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x61,
	0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x57, 0x69, 0x74, 0x68, 0x4d, 0x65, 0x74, 0x61,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x36, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x1a, 0xa9,
	0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x4a, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x36, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x57, 0x69, 0x74, 0x68, 0x4d, 0x65, 0x74, 0x61, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08,
	0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42,
	0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xfe, 0x06, 0x0a, 0x05, 0x47,
	0x72, 0x61, 0x70, 0x68, 0x1a, 0x83, 0x02, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x46, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52,
	0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x2a,
	0x0a, 0x10, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x65,
	0x79, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x65, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x65, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x1a, 0x99, 0x02, 0x0a, 0x04, 0x45,
	0x64, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x72, 0x61, 0x70, 0x68,
	0x2e, 0x45, 0x64, 0x67, 0x65, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x63, 0x6f, 0x6e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x63, 0x6f, 0x6e, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x69, 0x63, 0x6f, 0x6e, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x63, 0x6f, 0x6e, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x12, 0x16,
	0x0a, 0x06, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x22, 0x1e, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08,
	0x0a, 0x04, 0x4c, 0x69, 0x6e, 0x6b, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x10, 0x01, 0x1a, 0xd2, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63,
	0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x2d, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x05, 0x6e, 0x6f, 0x64,
	0x65, 0x73, 0x12, 0x34, 0x0a, 0x05, 0x65, 0x64, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x45, 0x64, 0x67,
	0x65, 0x52, 0x05, 0x65, 0x64, 0x67, 0x65, 0x73, 0x1a, 0xa0, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x41, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x2d, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b,
	0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09,
	0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0x8c, 0x07, 0x0a, 0x0f,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x1a,
	0xa5, 0x03, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x75, 0x62, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x75, 0x62, 0x49, 0x64, 0x12, 0x46, 0x0a, 0x07, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61,
	0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x76,
	0x69, 0x65, 0x77, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x73, 0x12, 0x40, 0x0a, 0x05, 0x73, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x52, 0x05,
	0x73, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x66, 0x74, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x66, 0x74, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x6e, 0x6f, 0x44, 0x65, 0x70, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x11, 0x6e, 0x6f, 0x44, 0x65, 0x70, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x1a, 0xd0, 0x03, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70,
	0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x31,
	0x0a, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x73, 0x12, 0x3b, 0x0a, 0x0c, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x69, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x52, 0x0c, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x75, 0x62, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73,
	0x75, 0x62, 0x49, 0x64, 0x12, 0x47, 0x0a, 0x08, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x65, 0x72, 0x73, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x1a, 0xaa, 0x01,
	0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x4b, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x37, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08,
	0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42,
	0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xac, 0x06, 0x0a, 0x19, 0x43,
	0x72, 0x6f, 0x73, 0x73, 0x53, 0x70, 0x61, 0x63, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x1a, 0xa7, 0x02, 0x0a, 0x07, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x75, 0x62, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x75, 0x62, 0x49, 0x64, 0x12, 0x46, 0x0a, 0x07, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x6e,
	0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x76, 0x69,
	0x65, 0x77, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x73, 0x12, 0x40, 0x0a, 0x05, 0x73, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x52, 0x05, 0x73,
	0x6f, 0x72, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x12, 0x2c, 0x0a, 0x11, 0x6e, 0x6f, 0x44, 0x65, 0x70, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x6e, 0x6f, 0x44,
	0x65, 0x70, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22,
	0x0a, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x1a, 0xe4, 0x03, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x52, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c,
	0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x2e, 0x43, 0x72, 0x6f, 0x73, 0x73, 0x53, 0x70, 0x61, 0x63, 0x65, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x31, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x07, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x3b, 0x0a, 0x0c, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64,
	0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63,
	0x69, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x75, 0x62, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x73, 0x75, 0x62, 0x49, 0x64, 0x12, 0x47, 0x0a, 0x08, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x6e,
	0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65,
	0x72, 0x73, 0x1a, 0xb4, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x55, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x41, 0x2e, 0x61, 0x6e, 0x79,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e,
	0x43, 0x72, 0x6f, 0x73, 0x73, 0x53, 0x70, 0x61, 0x63, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a,
	0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f,
	0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41,
	0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xda, 0x02, 0x0a, 0x1b, 0x43, 0x72,
	0x6f, 0x73, 0x73, 0x53, 0x70, 0x61, 0x63, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x55, 0x6e,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x1a, 0x1f, 0x0a, 0x07, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x75, 0x62, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x75, 0x62, 0x49, 0x64, 0x1a, 0x99, 0x02, 0x0a, 0x08, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x43, 0x72, 0x6f, 0x73,
	0x73, 0x53, 0x70, 0x61, 0x63, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x55, 0x6e, 0x73, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0xb6, 0x01,
	0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x57, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x43, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x43, 0x72, 0x6f, 0x73, 0x73,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x55, 0x6e, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55,
	0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f,
	0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49,
	0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xd2, 0x04, 0x0a, 0x0f, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x1a, 0xdf, 0x01, 0x0a, 0x07, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x75, 0x62, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x73, 0x75, 0x62, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x46, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x6e, 0x79, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x76, 0x69, 0x65, 0x77,
	0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x1a, 0xdc, 0x02, 0x0a,
	0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x43, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x75, 0x62, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x75, 0x62, 0x49, 0x64, 0x1a, 0xaa,
	0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x4b, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x37, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b,
	0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09,
	0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xa2, 0x04, 0x0a, 0x0c,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x49, 0x64, 0x73, 0x1a, 0x8d, 0x01, 0x0a,
	0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x49, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x75, 0x62, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x73, 0x75, 0x62, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x65,
	0x79, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x12, 0x2c,
	0x0a, 0x11, 0x6e, 0x6f, 0x44, 0x65, 0x70, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x6e, 0x6f, 0x44, 0x65, 0x70,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x81, 0x03, 0x0a,
	0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x49, 0x64, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x31, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x07, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x73, 0x12, 0x3b, 0x0a, 0x0c, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63,
	0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x75, 0x62, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x73, 0x75, 0x62, 0x49, 0x64, 0x1a, 0xa7, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x48, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x34,
	0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x49, 0x64, 0x73,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11,
	0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10,
	0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02,
	0x1a, 0xbe, 0x02, 0x0a, 0x11, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x55, 0x6e, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x1a, 0x21, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x75, 0x62, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x75, 0x62, 0x49, 0x64, 0x73, 0x1a, 0x85, 0x02, 0x0a, 0x08, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x1a, 0xac, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x4d, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x39, 0x2e, 0x61, 0x6e, 0x79,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a,
	0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12,
	0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52,
	0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10,
	0x02, 0x1a, 0x94, 0x03, 0x0a, 0x09, 0x53, 0x65, 0x74, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x1a,
	0x61, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x06, 0x6c, 0x61, 0x79, 0x6f,
	0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x2e, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x52, 0x06, 0x6c, 0x61, 0x79, 0x6f,
	0x75, 0x74, 0x1a, 0xa3, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x42, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c,
	0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x1a, 0xa4, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x45, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e, 0x61, 0x6e, 0x79, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x53,
	0x65, 0x74, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04,
	0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44,
	0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0x86, 0x03, 0x0a, 0x0d, 0x53, 0x65, 0x74,
	0x49, 0x73, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x1a, 0x47, 0x0a, 0x07, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x46, 0x61, 0x76, 0x6f, 0x72,
	0x69, 0x74, 0x65, 0x1a, 0xab, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x46, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x30, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x49, 0x73, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69,
	0x74, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52,
	0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0xa8, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x49, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x35,
	0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x49, 0x73, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74,
	0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a,
	0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12,
	0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52,
	0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10,
	0x02, 0x1a, 0xd8, 0x02, 0x0a, 0x0d, 0x53, 0x65, 0x74, 0x49, 0x73, 0x41, 0x72, 0x63, 0x68, 0x69,
	0x76, 0x65, 0x64, 0x1a, 0x47, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x69, 0x73, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x69, 0x73, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x1a, 0xfd, 0x01, 0x0a,
	0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x53, 0x65,
	0x74, 0x49, 0x73, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x1a, 0xa8, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x49, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x35, 0x2e, 0x61, 0x6e, 0x79, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x53,
	0x65, 0x74, 0x49, 0x73, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e,
	0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a,
	0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xf2, 0x02, 0x0a,
	0x09, 0x53, 0x65, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x1a, 0x3f, 0x0a, 0x07, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x1a, 0xa3, 0x02, 0x0a, 0x08,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x53, 0x65, 0x74,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x05,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x6e,
	0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0xa4, 0x01, 0x0a, 0x05, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x45, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x31, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63,
	0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a,
	0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12,
	0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52,
	0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10,
	0x02, 0x1a, 0xb6, 0x03, 0x0a, 0x15, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x53,
	0x65, 0x74, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x1a, 0x43, 0x0a, 0x07, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64,
	0x1a, 0xd7, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x61,
	0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x53, 0x65, 0x74, 0x44, 0x61,
	0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a,
	0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61,
	0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x1a, 0xb0, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x51, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x3d, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x53, 0x65,
	0x74, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08,
	0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42,
	0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0x98, 0x03, 0x0a, 0x0d, 0x53,
	0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x1a, 0x59, 0x0a, 0x07,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x13, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x13, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x55, 0x6e,
	0x69, 0x71, 0x75, 0x65, 0x4b, 0x65, 0x79, 0x1a, 0xab, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70,
	0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x05,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x6e,
	0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0xa8, 0x01, 0x0a, 0x05, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x49, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x35, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63,
	0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c,
	0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45,
	0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e,
	0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xb2, 0x03, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x1a, 0x6a, 0x0a, 0x07, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x49, 0x64, 0x12, 0x41, 0x0a, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x46,
	0x6c, 0x61, 0x67, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x6e, 0x79,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x1a, 0xb1, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x33, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63,
	0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c,
	0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0xab, 0x01, 0x0a,
	0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x4c, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x38, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52,
	0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08,
	0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42,
	0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0x8e, 0x03, 0x0a, 0x0a, 0x53,
	0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x1a, 0x58, 0x0a, 0x07, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x49, 0x64, 0x12, 0x2f, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x1a, 0xa5, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x43, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2d, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x1a, 0xa5, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x46, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e, 0x61, 0x6e,
	0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x2e, 0x53, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b,
	0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09,
	0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xb8, 0x02, 0x0a, 0x05,
	0x54, 0x6f, 0x53, 0x65, 0x74, 0x1a, 0x3f, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x1a, 0xed, 0x01, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63,
	0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x54, 0x6f, 0x53, 0x65, 0x74, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x1a, 0xa0, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x41, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x61, 0x6e,
	0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x2e, 0x54, 0x6f, 0x53, 0x65, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55,
	0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f,
	0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49,
	0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xb5, 0x02, 0x0a, 0x0c, 0x54, 0x6f, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x27, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64,
	0x1a, 0xfb, 0x01, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x61,
	0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x2e, 0x54, 0x6f, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x1a, 0xa7, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x48,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x34, 0x2e, 0x61,
	0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x2e, 0x54, 0x6f, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d,
	0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12,
	0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0x39,
	0x0a, 0x0f, 0x55, 0x6e, 0x64, 0x6f, 0x52, 0x65, 0x64, 0x6f, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65,
	0x72, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x6e, 0x64, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x75, 0x6e, 0x64, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x65, 0x64, 0x6f, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x65, 0x64, 0x6f, 0x1a, 0xe4, 0x03, 0x0a, 0x04, 0x55, 0x6e,
	0x64, 0x6f, 0x1a, 0x27, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x1a, 0xb2, 0x03, 0x0a, 0x08,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x55, 0x6e, 0x64,
	0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x3f, 0x0a, 0x08, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x55, 0x6e, 0x64,
	0x6f, 0x52, 0x65, 0x64, 0x6f, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x08, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64,
	0x12, 0x2a, 0x0a, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x1a, 0xb1, 0x01, 0x0a,
	0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x40, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52,
	0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x55, 0x6e, 0x64, 0x6f, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x44, 0x0a, 0x04, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d,
	0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12,
	0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x12, 0x10,
	0x0a, 0x0c, 0x43, 0x41, 0x4e, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x4d, 0x4f, 0x56, 0x45, 0x10, 0x03,
	0x1a, 0xe4, 0x03, 0x0a, 0x04, 0x52, 0x65, 0x64, 0x6f, 0x1a, 0x27, 0x0a, 0x07, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x49, 0x64, 0x1a, 0xb2, 0x03, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3d, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27,
	0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x2e, 0x52, 0x65, 0x64, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c,
	0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x3f, 0x0a, 0x08,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x2e, 0x55, 0x6e, 0x64, 0x6f, 0x52, 0x65, 0x64, 0x6f, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x65, 0x72, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x05, 0x72, 0x61,
	0x6e, 0x67, 0x65, 0x1a, 0xb1, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x40, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x61, 0x6e,
	0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x2e, 0x52, 0x65, 0x64, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x44, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c,
	0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45,
	0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e,
	0x50, 0x55, 0x54, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x41, 0x4e, 0x5f, 0x4e, 0x4f, 0x54,
	0x5f, 0x4d, 0x4f, 0x56, 0x45, 0x10, 0x03, 0x1a, 0xca, 0x02, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74,
	0x44, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x1a, 0x27, 0x0a, 0x07, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x64, 0x73, 0x1a, 0x8f, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x46, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30,
	0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x1a, 0xa8, 0x01, 0x0a, 0x05, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x49, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x35, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x75, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c,
	0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52,
	0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50,
	0x55, 0x54, 0x10, 0x02, 0x1a, 0xdd, 0x02, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x1a, 0x27, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x73, 0x1a, 0xa5, 0x02, 0x0a,
	0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c,
	0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0xa5, 0x01, 0x0a,
	0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x46, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52,
	0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c,
	0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52,
	0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50,
	0x55, 0x54, 0x10, 0x02, 0x1a, 0xe4, 0x02, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x74,
	0x49, 0x73, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x1a, 0x47, 0x0a, 0x07, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x41, 0x72, 0x63, 0x68, 0x69,
	0x76, 0x65, 0x64, 0x1a, 0x85, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4a, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x34, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x74, 0x49, 0x73, 0x41, 0x72,
	0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0xac, 0x01, 0x0a,
	0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x4d, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x39, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52,
	0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65,
	0x74, 0x49, 0x73, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b,
	0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09,
	0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xe4, 0x02, 0x0a, 0x11,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x74, 0x49, 0x73, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74,
	0x65, 0x1a, 0x47, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73,
	0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a,
	0x69, 0x73, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x1a, 0x85, 0x02, 0x0a, 0x08, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x53, 0x65, 0x74, 0x49, 0x73, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x1a, 0xac, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x4d, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x39, 0x2e, 0x61, 0x6e,
	0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x74, 0x49, 0x73, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69,
	0x74, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32,
	0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00,
	0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f,
	0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54,
	0x10, 0x02, 0x1a, 0xa4, 0x03, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x74, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x1a, 0x59, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64,
	0x73, 0x12, 0x30, 0x0a, 0x13, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x55,
	0x6e, 0x69, 0x71, 0x75, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65,
	0x4b, 0x65, 0x79, 0x1a, 0xb3, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4a, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x34, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x05,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x6e,
	0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0xac, 0x01, 0x0a, 0x05, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x4d, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x39, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63,
	0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x74, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a,
	0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f,
	0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41,
	0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0x9a, 0x03, 0x0a, 0x0e, 0x4c, 0x69,
	0x73, 0x74, 0x53, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x1a, 0x58, 0x0a, 0x07,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x73, 0x12, 0x2f, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x07, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x1a, 0xad, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x31, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63,
	0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x74, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x05,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x6e,
	0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0xa9, 0x01, 0x0a, 0x05, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x4a, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x36, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63,
	0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x74, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55,
	0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f,
	0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49,
	0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xe6, 0x04, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x4d,
	0x6f, 0x64, 0x69, 0x66, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x1a, 0xb9, 0x02, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x73, 0x12, 0x5c, 0x0a, 0x0a, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x3c, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0xb1, 0x01, 0x0a, 0x09, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x28, 0x0a, 0x03, 0x61, 0x64, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x03,
	0x61, 0x64, 0x64, 0x12, 0x28, 0x0a, 0x03, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x03, 0x73, 0x65, 0x74, 0x12, 0x2e, 0x0a,
	0x06, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x1a, 0x8f, 0x02,
	0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x61, 0x6e, 0x79, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0xb1, 0x01, 0x0a, 0x05,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x52, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x3e, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70,
	0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x64,
	0x69, 0x66, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a,
	0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01,
	0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a,
	0xd8, 0x02, 0x0a, 0x0d, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x1a, 0x47, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x1a, 0xfd, 0x01, 0x0a, 0x08, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x41, 0x70, 0x70, 0x6c,
	0x79, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a,
	0xa8, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x49, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x35, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x41, 0x70, 0x70,
	0x6c, 0x79, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08,
	0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42,
	0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xed, 0x08, 0x0a, 0x0a, 0x4c,
	0x69, 0x73, 0x74, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x1a, 0xf4, 0x03, 0x0a, 0x07, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64,
	0x73, 0x12, 0x34, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1c, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52,
	0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x7a, 0x69, 0x70, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x7a, 0x69, 0x70, 0x12, 0x24, 0x0a, 0x0d, 0x69, 0x6e, 0x63,
	0x6c, 0x75, 0x64, 0x65, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0d, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x12,
	0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x46, 0x69,
	0x6c, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x4a, 0x73, 0x6f, 0x6e, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x4a, 0x73, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x69,
	0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x41, 0x72, 0x63,
	0x68, 0x69, 0x76, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x6f, 0x50, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x6e, 0x6f, 0x50, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x59, 0x0a, 0x11, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2b, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x52, 0x11, 0x6c,
	0x69, 0x6e, 0x6b, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73,
	0x12, 0x2a, 0x0a, 0x10, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x6c,
	0x69, 0x6e, 0x6b, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x69, 0x6e, 0x63, 0x6c,
	0x75, 0x64, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x22, 0x0a, 0x0c,
	0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0c, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65,
	0x1a, 0x95, 0x01, 0x0a, 0x0c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x73, 0x12, 0x61, 0x0a, 0x12, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x57, 0x68,
	0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e,
	0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x57, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x12, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x57, 0x68, 0x69, 0x74, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x72, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x1a, 0x7a, 0x0a, 0x12, 0x52, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x57, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x38,
	0x0a, 0x06, 0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20,
	0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74,
	0x52, 0x06, 0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x61, 0x6c, 0x6c, 0x6f,
	0x77, 0x65, 0x64, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x10, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x1a, 0xd3, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x43, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2d, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x65, 0x64, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x1a, 0xa5, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x46, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e, 0x61, 0x6e, 0x79,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08,
	0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42,
	0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xc2, 0x15, 0x0a, 0x06, 0x49,
	0x6d, 0x70, 0x6f, 0x72, 0x74, 0x1a, 0x95, 0x0e, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x55, 0x0a, 0x0c, 0x6e,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2f, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x48, 0x00, 0x52, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x12, 0x5e, 0x0a, 0x0f, 0x62, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x61, 0x6e,
	0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x42, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x48,
	0x00, 0x52, 0x0f, 0x62, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x12, 0x5b, 0x0a, 0x0e, 0x6d, 0x61, 0x72, 0x6b, 0x64, 0x6f, 0x77, 0x6e, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x61, 0x6e, 0x79,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e,
	0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4d,
	0x61, 0x72, 0x6b, 0x64, 0x6f, 0x77, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x48, 0x00, 0x52,
	0x0e, 0x6d, 0x61, 0x72, 0x6b, 0x64, 0x6f, 0x77, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12,
	0x4f, 0x0a, 0x0a, 0x68, 0x74, 0x6d, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70,
	0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x48, 0x74, 0x6d, 0x6c, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x48, 0x00, 0x52, 0x0a, 0x68, 0x74, 0x6d, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x12, 0x4c, 0x0a, 0x09, 0x74, 0x78, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70,
	0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x54, 0x78, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x48, 0x00, 0x52, 0x09, 0x74, 0x78, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x49,
	0x0a, 0x08, 0x70, 0x62, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2b, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x62, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x48, 0x00, 0x52,
	0x08, 0x70, 0x62, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x4c, 0x0a, 0x09, 0x63, 0x73, 0x76,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61,
	0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x43, 0x73, 0x76, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x48, 0x00, 0x52, 0x09, 0x63, 0x73,
	0x76, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x49, 0x0a, 0x09, 0x73, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x6e, 0x79,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e,
	0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x09, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x73, 0x12, 0x34, 0x0a, 0x15, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x78, 0x69, 0x73,
	0x74, 0x69, 0x6e, 0x67, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x15, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x78, 0x69, 0x73, 0x74, 0x69, 0x6e,
	0x67, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x3b, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x49, 0x6d, 0x70, 0x6f,
	0x72, 0x74, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x52,
	0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x6f, 0x50, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x6e, 0x6f, 0x50, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x73, 0x4d, 0x69, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x4d, 0x69,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x4e, 0x65, 0x77,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x4e,
	0x65, 0x77, 0x53, 0x70, 0x61, 0x63, 0x65, 0x1a, 0x26, 0x0a, 0x0c, 0x4e, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x70, 0x69, 0x4b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x1a,
	0x24, 0x0a, 0x0e, 0x4d, 0x61, 0x72, 0x6b, 0x64, 0x6f, 0x77, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x1a, 0x23, 0x0a, 0x0f, 0x42, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72,
	0x6b, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x1a, 0x20, 0x0a, 0x0a, 0x48, 0x74,
	0x6d, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x1a, 0x1f, 0x0a, 0x09,
	0x54, 0x78, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x1a, 0xe1, 0x01,
	0x0a, 0x08, 0x50, 0x62, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x22,
	0x0a, 0x0c, 0x6e, 0x6f, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x6e, 0x6f, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x50, 0x0a, 0x0a,
	0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x30, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x62, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x0a, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x21,
	0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x50, 0x41, 0x43, 0x45, 0x10,
	0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x45, 0x58, 0x50, 0x45, 0x52, 0x49, 0x45, 0x4e, 0x43, 0x45, 0x10,
	0x01, 0x1a, 0x9b, 0x02, 0x0a, 0x09, 0x43, 0x73, 0x76, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x12, 0x45, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x31, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x73, 0x76, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e,
	0x4d, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x38, 0x0a, 0x17, 0x75, 0x73,
	0x65, 0x46, 0x69, 0x72, 0x73, 0x74, 0x52, 0x6f, 0x77, 0x46, 0x6f, 0x72, 0x52, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17, 0x75, 0x73, 0x65,
	0x46, 0x69, 0x72, 0x73, 0x74, 0x52, 0x6f, 0x77, 0x46, 0x6f, 0x72, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x65, 0x72, 0x12, 0x38, 0x0a, 0x17, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x52,
	0x6f, 0x77, 0x73, 0x41, 0x6e, 0x64, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x17, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x52, 0x6f,
	0x77, 0x73, 0x41, 0x6e, 0x64, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x22, 0x21, 0x0a, 0x04,
	0x4d, 0x6f, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x4f, 0x4c, 0x4c, 0x45, 0x43, 0x54, 0x49,
	0x4f, 0x4e, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x1a,
	0x5d, 0x0a, 0x08, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x41, 0x0a, 0x08, 0x73,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x53, 0x6d,
	0x61, 0x72, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x42, 0x61, 0x73, 0x65, 0x52, 0x08, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x22, 0x2d,
	0x0a, 0x04, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x41, 0x4c, 0x4c, 0x5f, 0x4f, 0x52,
	0x5f, 0x4e, 0x4f, 0x54, 0x48, 0x49, 0x4e, 0x47, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x49, 0x47,
	0x4e, 0x4f, 0x52, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x53, 0x10, 0x01, 0x3a, 0x04, 0x88,
	0xe6, 0x03, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0xda, 0x03,
	0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x6e, 0x79, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x49,
	0x6d, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x63,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x22, 0x0a, 0x0c, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x1a, 0xc4, 0x02, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x42, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x61, 0x6e,
	0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0xd4, 0x01, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04,
	0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44,
	0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x49, 0x4e, 0x54, 0x45,
	0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x03, 0x12, 0x18, 0x0a, 0x14,
	0x4e, 0x4f, 0x5f, 0x4f, 0x42, 0x4a, 0x45, 0x43, 0x54, 0x53, 0x5f, 0x54, 0x4f, 0x5f, 0x49, 0x4d,
	0x50, 0x4f, 0x52, 0x54, 0x10, 0x05, 0x12, 0x16, 0x0a, 0x12, 0x49, 0x4d, 0x50, 0x4f, 0x52, 0x54,
	0x5f, 0x49, 0x53, 0x5f, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x45, 0x44, 0x10, 0x06, 0x12, 0x27,
	0x0a, 0x23, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x5f, 0x4f, 0x46, 0x5f, 0x52, 0x4f, 0x57, 0x53, 0x5f,
	0x4f, 0x52, 0x5f, 0x52, 0x45, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x53, 0x5f, 0x45, 0x58, 0x43,
	0x45, 0x45, 0x44, 0x45, 0x44, 0x10, 0x07, 0x12, 0x13, 0x0a, 0x0f, 0x46, 0x49, 0x4c, 0x45, 0x5f,
	0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x08, 0x12, 0x1c, 0x0a, 0x18,
	0x49, 0x4e, 0x53, 0x55, 0x46, 0x46, 0x49, 0x43, 0x49, 0x45, 0x4e, 0x54, 0x5f, 0x50, 0x45, 0x52,
	0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x53, 0x10, 0x09, 0x1a, 0xc2, 0x03, 0x0a, 0x06, 0x4e,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0xb7, 0x03, 0x0a, 0x0d, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x1a, 0x1f, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x1a, 0x84, 0x03, 0x0a, 0x08, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52,
	0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74,
	0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0xa1, 0x02, 0x0a, 0x05,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x57, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x43, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70,
	0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x2e,
	0x4e, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x9c, 0x01, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c,
	0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45,
	0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e,
	0x50, 0x55, 0x54, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41,
	0x4c, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c, 0x55, 0x4e, 0x41,
	0x55, 0x54, 0x48, 0x4f, 0x52, 0x49, 0x5a, 0x45, 0x44, 0x10, 0x04, 0x12, 0x0d, 0x0a, 0x09, 0x46,
	0x4f, 0x52, 0x42, 0x49, 0x44, 0x44, 0x45, 0x4e, 0x10, 0x05, 0x12, 0x17, 0x0a, 0x13, 0x53, 0x45,
	0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x55, 0x4e, 0x41, 0x56, 0x41, 0x49, 0x4c, 0x41, 0x42, 0x4c,
	0x45, 0x10, 0x06, 0x12, 0x1a, 0x0a, 0x16, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x49,
	0x53, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x07, 0x1a,
	0x80, 0x04, 0x0a, 0x0a, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x09,
	0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0xd6, 0x02, 0x0a, 0x08, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x49, 0x0a, 0x08, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e,
	0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x2e, 0x49, 0x6d,
	0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0xb9, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x46, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x32,
	0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x46, 0x0a, 0x04, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d,
	0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12,
	0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x12, 0x12,
	0x0a, 0x0e, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52,
	0x10, 0x03, 0x1a, 0x8d, 0x01, 0x0a, 0x0e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70,
	0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x33, 0x0a,
	0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x4e, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x10,
	0x00, 0x12, 0x0c, 0x0a, 0x08, 0x4d, 0x61, 0x72, 0x6b, 0x64, 0x6f, 0x77, 0x6e, 0x10, 0x01, 0x12,
	0x08, 0x0a, 0x04, 0x48, 0x74, 0x6d, 0x6c, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x54, 0x78, 0x74,
	0x10, 0x03, 0x1a, 0xe1, 0x03, 0x0a, 0x0d, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x55, 0x73, 0x65,
	0x43, 0x61, 0x73, 0x65, 0x1a, 0xa1, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x4b, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x43, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e, 0x61, 0x6e,
	0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x55, 0x73, 0x65, 0x43, 0x61, 0x73, 0x65, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x43, 0x61, 0x73, 0x65, 0x52, 0x07,
	0x75, 0x73, 0x65, 0x43, 0x61, 0x73, 0x65, 0x22, 0x2f, 0x0a, 0x07, 0x55, 0x73, 0x65, 0x43, 0x61,
	0x73, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b,
	0x47, 0x45, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x09, 0x0a,
	0x05, 0x45, 0x4d, 0x50, 0x54, 0x59, 0x10, 0x02, 0x1a, 0xab, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52,
	0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74,
	0x55, 0x73, 0x65, 0x43, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a,
	0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61,
	0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0xa8, 0x01, 0x0a, 0x05,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x49, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x35, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70,
	0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x55,
	0x73, 0x65, 0x43, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55,
	0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f,
	0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49,
	0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xd0, 0x03, 0x0a, 0x10, 0x49, 0x6d, 0x70, 0x6f, 0x72,
	0x74, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x1a, 0x6b, 0x0a, 0x07, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x4e, 0x65,
	0x77, 0x53, 0x70, 0x61, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73,
	0x4e, 0x65, 0x77, 0x53, 0x70, 0x61, 0x63, 0x65, 0x1a, 0xce, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52,
	0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74,
	0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x2c, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0xc8,
	0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x4c, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x38, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x49, 0x6d, 0x70, 0x6f,
	0x72, 0x74, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x4f, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e,
	0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a,
	0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x12, 0x1b, 0x0a, 0x17,
	0x49, 0x4e, 0x53, 0x55, 0x46, 0x46, 0x49, 0x43, 0x49, 0x45, 0x4e, 0x54, 0x5f, 0x50, 0x45, 0x52,
	0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x10, 0x03, 0x1a, 0x8b, 0x03, 0x0a, 0x0f, 0x44, 0x61,
	0x74, 0x65, 0x42, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x1a, 0x41, 0x0a,
	0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x1a, 0xb4, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x61,
	0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x42, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x31, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x1a, 0xaa, 0x01, 0x0a, 0x05, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x4b, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x37, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63,
	0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x42, 0x79, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e,
	0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e,
	0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f,
	0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xaf, 0x09, 0x0a, 0x10, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x94, 0x03, 0x0a,
	0x03, 0x41, 0x64, 0x64, 0x1a, 0x5f, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x66, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x66, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x73, 0x1a, 0xab, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x46, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x30, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x41, 0x64, 0x64, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x6e, 0x79, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0xa8, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x49, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x35, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x41, 0x64, 0x64, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10,
	0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52,
	0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55,
	0x54, 0x10, 0x02, 0x1a, 0x83, 0x03, 0x0a, 0x06, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x1a, 0x45,
	0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x73, 0x1a, 0xb1, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x49, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x33, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a,
	0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61,
	0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0xab, 0x01, 0x0a, 0x05,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x4c, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x38, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70,
	0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a,
	0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f,
	0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41,
	0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xfd, 0x02, 0x0a, 0x04, 0x53, 0x6f,
	0x72, 0x74, 0x1a, 0x45, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x73, 0x1a, 0xad, 0x02, 0x0a, 0x08, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x2c, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0xa9, 0x01,
	0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x4a, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x36, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a,
	0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f,
	0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41,
	0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xc4, 0x0f, 0x0a, 0x0e, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0xfc, 0x02, 0x0a,
	0x03, 0x41, 0x64, 0x64, 0x1a, 0x4b, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a,
	0x0c, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79,
	0x73, 0x1a, 0xa7, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e,
	0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x64, 0x64, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x1a, 0xa6, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x47, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x61, 0x6e, 0x79,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x64, 0x64, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b,
	0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09,
	0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0x85, 0x03, 0x0a, 0x06,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x1a, 0x4b, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12,
	0x22, 0x0a, 0x0c, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4b,
	0x65, 0x79, 0x73, 0x1a, 0xad, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x47, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x31, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0xa9, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x4a, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x36, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10,
	0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52,
	0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55,
	0x54, 0x10, 0x02, 0x1a, 0xff, 0x02, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x6c, 0x65, 0x1a, 0x27, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x1a, 0xc4,
	0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x61, 0x6e, 0x79,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x35, 0x0a, 0x09, 0x72,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x52,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x1a, 0xb0, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x51, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3d, 0x2e, 0x61, 0x6e, 0x79,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c,
	0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45,
	0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e,
	0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0x8e, 0x03, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x46, 0x65, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x64, 0x1a, 0x45, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x09, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0xb7, 0x02, 0x0a,
	0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x64, 0x64, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x64, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0xae, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x4f, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3b, 0x2e,
	0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x64, 0x64, 0x46, 0x65,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x64, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55,
	0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f,
	0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49,
	0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0x97, 0x03, 0x0a, 0x0e, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x64, 0x1a, 0x45, 0x0a, 0x07, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x1a, 0xbd, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x61,
	0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x64, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c,
	0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0xb1, 0x01, 0x0a,
	0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x52, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x3e, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52,
	0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x64,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11,
	0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10,
	0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02,
	0x1a, 0x87, 0x11, 0x0a, 0x0a, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x1a,
	0xc4, 0x06, 0x0a, 0x08, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0xb1, 0x03, 0x0a,
	0x03, 0x41, 0x64, 0x64, 0x1a, 0x53, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x24, 0x0a, 0x0d, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x55, 0x72, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4b, 0x65, 0x79, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x73, 0x1a, 0xd4, 0x02, 0x0a, 0x08, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x52,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x64, 0x64, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x35, 0x0a, 0x09, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x72,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0xc5, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x4c, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x38, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x41, 0x64, 0x64, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x4c, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55,
	0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f,
	0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49,
	0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x12, 0x18, 0x0a, 0x14, 0x52, 0x45, 0x41, 0x44, 0x4f, 0x4e,
	0x4c, 0x59, 0x5f, 0x4f, 0x42, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x03,
	0x1a, 0x83, 0x03, 0x0a, 0x06, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x1a, 0x53, 0x0a, 0x07, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x22, 0x0a, 0x0c,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x73,
	0x1a, 0xa3, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x61,
	0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0xc8, 0x01, 0x0a, 0x05,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x4f, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x3b, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70,
	0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x4c, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e,
	0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a,
	0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x12, 0x18, 0x0a, 0x14,
	0x52, 0x45, 0x41, 0x44, 0x4f, 0x4e, 0x4c, 0x59, 0x5f, 0x4f, 0x42, 0x4a, 0x45, 0x43, 0x54, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x10, 0x03, 0x1a, 0xf1, 0x06, 0x0a, 0x0b, 0x52, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x1a, 0xa3, 0x03, 0x0a, 0x0c, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x53, 0x65, 0x74, 0x1a, 0x5b, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x79, 0x70, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x79, 0x70, 0x65, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x11, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x73, 0x1a, 0xb5, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x55, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x3f, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x64, 0x65, 0x64, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53,
	0x65, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0xd1, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x58, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x44, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x64, 0x65, 0x64, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53,
	0x65, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x4c,
	0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00,
	0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f,
	0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54,
	0x10, 0x02, 0x12, 0x18, 0x0a, 0x14, 0x52, 0x45, 0x41, 0x44, 0x4f, 0x4e, 0x4c, 0x59, 0x5f, 0x4f,
	0x42, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x03, 0x1a, 0xbb, 0x03, 0x0a,
	0x14, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x64, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x53, 0x65, 0x74, 0x1a, 0x5b, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x22, 0x0a, 0x0c, 0x74, 0x79, 0x70, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x79, 0x70, 0x65, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x11, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x64, 0x73, 0x1a, 0xc5, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x5d, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x47,
	0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x64, 0x65, 0x64, 0x2e, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x64, 0x52, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x65, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0xd9,
	0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x60, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x4c, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x2e,
	0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x2e, 0x46, 0x65, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x64, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x65, 0x74,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x4c, 0x0a, 0x04,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11,
	0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10,
	0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02,
	0x12, 0x18, 0x0a, 0x14, 0x52, 0x45, 0x41, 0x44, 0x4f, 0x4e, 0x4c, 0x59, 0x5f, 0x4f, 0x42, 0x4a,
	0x45, 0x43, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x03, 0x1a, 0xbd, 0x03, 0x0a, 0x18, 0x4c,
	0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x6c, 0x69, 0x63, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x47, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c,
	0x74, 0x79, 0x70, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x74, 0x79, 0x70, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64,
	0x1a, 0xd7, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x61,
	0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x6c, 0x69,
	0x63, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x1a, 0xd1, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x58, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x44,
	0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x6c, 0x69, 0x63, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x4c, 0x0a, 0x04,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11,
	0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10,
	0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02,
	0x12, 0x18, 0x0a, 0x14, 0x52, 0x45, 0x41, 0x44, 0x4f, 0x4e, 0x4c, 0x59, 0x5f, 0x4f, 0x42, 0x4a,
	0x45, 0x43, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x03, 0x1a, 0x85, 0x0a, 0x0a, 0x08, 0x52,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x89, 0x03, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x4f, 0x0a, 0x07,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x1a, 0xa3, 0x02,
	0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x61, 0x6e, 0x79, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0xc9, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x4e, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x3a, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x4e, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e,
	0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e,
	0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f,
	0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16, 0x4f, 0x50, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x55, 0x53, 0x45, 0x44, 0x5f, 0x42, 0x59, 0x5f, 0x4f, 0x42, 0x4a, 0x45, 0x43, 0x54,
	0x53, 0x10, 0x03, 0x1a, 0xe8, 0x02, 0x0a, 0x07, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a,
	0x2b, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x1a, 0xaf, 0x02, 0x0a,
	0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x38, 0x0a,
	0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x52,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x07,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0xa4, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x45, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x31, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d,
	0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12,
	0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0x81,
	0x04, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x69, 0x74, 0x68, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x1a, 0x51, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x1a, 0x9c, 0x03, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x48, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x32, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x69, 0x74, 0x68, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x4d, 0x0a, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x57, 0x69, 0x74, 0x68, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x1a, 0x4a, 0x0a, 0x0c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x65, 0x72, 0x1a, 0xaa, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x4b, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x37, 0x2e,
	0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x69, 0x74, 0x68, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32,
	0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00,
	0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f,
	0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54,
	0x10, 0x02, 0x1a, 0xf3, 0x0f, 0x0a, 0x07, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x1a, 0xa5,
	0x01, 0x0a, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72,
	0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0b, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x49, 0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x1a, 0xd7, 0x03, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x8f, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x24,
	0x0a, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x6e, 0x6f,
	0x74, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x6e, 0x6f, 0x74, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64,
	0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x1a, 0xb5, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52,
	0x70, 0x63, 0x2e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x38, 0x0a, 0x08,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0xa7, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x48, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x34,
	0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11,
	0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10,
	0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02,
	0x1a, 0xf7, 0x03, 0x0a, 0x0b, 0x53, 0x68, 0x6f, 0x77, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x1a, 0x5d, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x1a,
	0x88, 0x03, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x61, 0x6e,
	0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x2e, 0x53, 0x68, 0x6f, 0x77, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x39, 0x0a, 0x0a, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x56, 0x69, 0x65,
	0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x56, 0x69,
	0x65, 0x77, 0x52, 0x0a, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x56, 0x69, 0x65, 0x77, 0x12, 0x36,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64,
	0x1a, 0xa7, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x48, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x34, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x53,
	0x68, 0x6f, 0x77, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08,
	0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42,
	0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xcd, 0x02, 0x0a, 0x0a, 0x53,
	0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x1a, 0x43, 0x0a, 0x07, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x1a, 0xf9,
	0x01, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x61, 0x6e, 0x79,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x2e, 0x53, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x1a, 0xa6, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x47, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x61, 0x6e, 0x79, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x2e,
	0x53, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08,
	0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42,
	0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0x9b, 0x04, 0x0a, 0x0c, 0x44,
	0x69, 0x66, 0x66, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x91, 0x01, 0x0a, 0x07,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x26, 0x0a,
	0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75,
	0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x1a,
	0xf6, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x61, 0x6e,
	0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x2e, 0x44, 0x69, 0x66, 0x66, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x3c, 0x0a, 0x0d, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x6e,
	0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x0d, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x56, 0x69, 0x65, 0x77,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x56, 0x69, 0x65,
	0x77, 0x52, 0x0a, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x56, 0x69, 0x65, 0x77, 0x1a, 0xa8, 0x01,
	0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x49, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x35, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x52, 0x70, 0x63, 0x2e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x44, 0x69, 0x66, 0x66,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04,
	0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44,
	0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xd9, 0x22, 0x0a, 0x04, 0x46, 0x69, 0x6c,
	0x65, 0x1a, 0x8a, 0x02, 0x0a, 0x09, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x63, 0x69, 0x6c, 0x65, 0x1a,
	0x09, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0xf1, 0x01, 0x0a, 0x08, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x52, 0x70, 0x63, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x63,
	0x69, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0xa2, 0x01, 0x0a, 0x05, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x43, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x2f, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e,
	0x46, 0x69, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x63, 0x69, 0x6c, 0x65, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d,
	0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12,
	0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xfe,
	0x02, 0x0a, 0x07, 0x4f, 0x66, 0x66, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0x45, 0x0a, 0x07, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65,
	0x4e, 0x6f, 0x74, 0x50, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x10, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x4e, 0x6f, 0x74, 0x50, 0x69, 0x6e, 0x6e, 0x65,
	0x64, 0x1a, 0xab, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x46, 0x69, 0x6c, 0x65,
	0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x26,
	0x0a, 0x0e, 0x62, 0x79, 0x74, 0x65, 0x73, 0x4f, 0x66, 0x66, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x62, 0x79, 0x74, 0x65, 0x73, 0x4f, 0x66, 0x66,
	0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x1a, 0xb6, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x41, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2d,
	0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x46, 0x69, 0x6c,
	0x65, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x48, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a,
	0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f,
	0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41,
	0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x4e, 0x4f, 0x44,
	0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x45, 0x44, 0x10, 0x67, 0x1a,
	0x93, 0x03, 0x0a, 0x0c, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4f, 0x66, 0x66, 0x6c, 0x6f, 0x61, 0x64,
	0x1a, 0x23, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x49, 0x64, 0x1a, 0xdd, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x43, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2d, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e,
	0x46, 0x69, 0x6c, 0x65, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4f, 0x66, 0x66, 0x6c, 0x6f, 0x61,
	0x64, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x26, 0x0a, 0x0e, 0x66, 0x69, 0x6c, 0x65, 0x73,
	0x4f, 0x66, 0x66, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0e, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x4f, 0x66, 0x66, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x12,
	0x26, 0x0a, 0x0e, 0x62, 0x79, 0x74, 0x65, 0x73, 0x4f, 0x66, 0x66, 0x6c, 0x6f, 0x61, 0x64, 0x65,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x62, 0x79, 0x74, 0x65, 0x73, 0x4f, 0x66,
	0x66, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x1a, 0xbb, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x46, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x32, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x46, 0x69,
	0x6c, 0x65, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4f, 0x66, 0x66, 0x6c, 0x6f, 0x61, 0x64, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x48, 0x0a, 0x04, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a,
	0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01,
	0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x12,
	0x14, 0x0a, 0x10, 0x4e, 0x4f, 0x44, 0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x52,
	0x54, 0x45, 0x44, 0x10, 0x67, 0x1a, 0xbc, 0x03, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66,
	0x66, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0x4f, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x6f, 0x6e, 0x6c, 0x79, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x07, 0x6f, 0x6e, 0x6c, 0x79, 0x49, 0x64, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x69, 0x6e,
	0x63, 0x6c, 0x75, 0x64, 0x65, 0x4e, 0x6f, 0x74, 0x50, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x4e, 0x6f, 0x74,
	0x50, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x1a, 0xdb, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63,
	0x2e, 0x46, 0x69, 0x6c, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x66, 0x6c, 0x6f, 0x61,
	0x64, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x26, 0x0a, 0x0e, 0x66, 0x69, 0x6c, 0x65, 0x73,
	0x4f, 0x66, 0x66, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0e, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x4f, 0x66, 0x66, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x12,
	0x26, 0x0a, 0x0e, 0x62, 0x79, 0x74, 0x65, 0x73, 0x4f, 0x66, 0x66, 0x6c, 0x6f, 0x61, 0x64, 0x65,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x62, 0x79, 0x74, 0x65, 0x73, 0x4f, 0x66,
	0x66, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x1a, 0xba, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x45, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x31, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x46, 0x69,
	0x6c, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x66, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x48, 0x0a, 0x04, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d,
	0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12,
	0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x12, 0x14,
	0x0a, 0x10, 0x4e, 0x4f, 0x44, 0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54,
	0x45, 0x44, 0x10, 0x67, 0x1a, 0xa2, 0x06, 0x0a, 0x06, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x1a,
	0xda, 0x03, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x6c,
	0x50, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61,
	0x6c, 0x50, 0x61, 0x74, 0x68, 0x12, 0x3a, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x2c, 0x0a, 0x11, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x45, 0x6e, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x64, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x3d, 0x0a, 0x05, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27,
	0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x46, 0x69, 0x6c,
	0x65, 0x2e, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x52, 0x05, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x31,
	0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x12, 0x33, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1b, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x52, 0x06,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x36, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x4b,
	0x69, 0x6e, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x61, 0x6e, 0x79, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4b,
	0x69, 0x6e, 0x64, 0x52, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x3c,
	0x0a, 0x19, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x57, 0x69, 0x64, 0x67,
	0x65, 0x74, 0x49, 0x66, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x19, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x57, 0x69, 0x64,
	0x67, 0x65, 0x74, 0x49, 0x66, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x1a, 0xba, 0x02, 0x0a,
	0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x2e, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x07,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x1a, 0x9f, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x40, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x2c, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x46, 0x69,
	0x6c, 0x65, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a,
	0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f,
	0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41,
	0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xd5, 0x02, 0x0a, 0x08, 0x44, 0x6f,
	0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0x39, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x1a, 0x8d, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x46, 0x69, 0x6c, 0x65,
	0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x50, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x50, 0x61, 0x74, 0x68, 0x1a, 0xa1, 0x01,
	0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x42, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x52, 0x70, 0x63, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a,
	0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12,
	0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52,
	0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10,
	0x02, 0x1a, 0xcf, 0x03, 0x0a, 0x04, 0x44, 0x72, 0x6f, 0x70, 0x1a, 0xae, 0x01, 0x0a, 0x07, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x72, 0x6f, 0x70, 0x54, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x72, 0x6f, 0x70,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x61, 0x6e, 0x79,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x46, 0x69, 0x6c, 0x65,
	0x50, 0x61, 0x74, 0x68, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x6c, 0x6f, 0x63,
	0x61, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x73, 0x1a, 0x95, 0x02, 0x0a, 0x08,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x2e, 0x44, 0x72, 0x6f, 0x70, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x1a, 0x9d, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x3e, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x61, 0x6e,
	0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x2e, 0x44,
	0x72, 0x6f, 0x70, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10,
	0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52,
	0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55,
	0x54, 0x10, 0x02, 0x1a, 0xba, 0x04, 0x0a, 0x0a, 0x53, 0x70, 0x61, 0x63, 0x65, 0x55, 0x73, 0x61,
	0x67, 0x65, 0x1a, 0x23, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x1a, 0x86, 0x04, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70,
	0x63, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x55, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x41, 0x0a, 0x05, 0x75, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x52, 0x70, 0x63, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x55,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x55, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x05, 0x75, 0x73, 0x61, 0x67, 0x65, 0x1a, 0xcd, 0x01, 0x0a, 0x05, 0x55,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x69, 0x64, 0x73, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63, 0x69, 0x64, 0x73, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x79, 0x74, 0x65, 0x73, 0x55, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x62, 0x79, 0x74, 0x65, 0x73, 0x55, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x79, 0x74, 0x65, 0x73, 0x4c, 0x65, 0x66, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x62, 0x79, 0x74, 0x65, 0x73, 0x4c, 0x65, 0x66, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x79, 0x74, 0x65, 0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x62, 0x79, 0x74, 0x65, 0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x12, 0x28, 0x0a, 0x0f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x42, 0x79, 0x74, 0x65, 0x73, 0x55, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x6c, 0x6f, 0x63, 0x61, 0x6c,
	0x42, 0x79, 0x74, 0x65, 0x73, 0x55, 0x73, 0x61, 0x67, 0x65, 0x1a, 0xa3, 0x01, 0x0a, 0x05, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x44, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x30, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63,
	0x2e, 0x46, 0x69, 0x6c, 0x65, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x55, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11,
	0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10,
	0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02,
	0x1a, 0xe1, 0x05, 0x0a, 0x09, 0x4e, 0x6f, 0x64, 0x65, 0x55, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x09,
	0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0xc8, 0x05, 0x0a, 0x08, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x52, 0x70, 0x63, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x55, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x40, 0x0a, 0x05, 0x75, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x55,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x55, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x05, 0x75, 0x73, 0x61, 0x67, 0x65, 0x12, 0x42, 0x0a, 0x06, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x6e, 0x79,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x2e, 0x4e, 0x6f,
	0x64, 0x65, 0x55, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x06, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x1a, 0xcd,
	0x01, 0x0a, 0x05, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x69, 0x6c, 0x65,
	0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x66, 0x69,
	0x6c, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x69, 0x64, 0x73,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63, 0x69, 0x64,
	0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x79, 0x74, 0x65, 0x73, 0x55,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x62, 0x79, 0x74, 0x65,
	0x73, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x79, 0x74, 0x65, 0x73, 0x4c,
	0x65, 0x66, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x62, 0x79, 0x74, 0x65, 0x73,
	0x4c, 0x65, 0x66, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x79, 0x74, 0x65, 0x73, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x62, 0x79, 0x74, 0x65, 0x73, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x42, 0x79, 0x74,
	0x65, 0x73, 0x55, 0x73, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x6c,
	0x6f, 0x63, 0x61, 0x6c, 0x42, 0x79, 0x74, 0x65, 0x73, 0x55, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x7f,
	0x0a, 0x05, 0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x69, 0x64, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63, 0x69, 0x64, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x1e, 0x0a, 0x0a, 0x62, 0x79, 0x74, 0x65, 0x73, 0x55, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0a, 0x62, 0x79, 0x74, 0x65, 0x73, 0x55, 0x73, 0x61, 0x67, 0x65, 0x1a,
	0xa2, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x43, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2f, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x55,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c,
	0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52,
	0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50,
	0x55, 0x54, 0x10, 0x02, 0x1a, 0xec, 0x07, 0x0a, 0x0a, 0x4e, 0x61, 0x76, 0x69, 0x67, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x1a, 0xd7, 0x03, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x73, 0x1a, 0x8e, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x39, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1f, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4e,
	0x61, 0x76, 0x69, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x75,
	0x6c, 0x6c, 0x54, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75,
	0x6c, 0x6c, 0x54, 0x65, 0x78, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x1a, 0xb6, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x48, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x32, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4e,
	0x61, 0x76, 0x69, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x33, 0x0a, 0x07, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61,
	0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73,
	0x1a, 0xaa, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x4b, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x37, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4e, 0x61, 0x76, 0x69, 0x67, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d,
	0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xd0, 0x03,
	0x0a, 0x16, 0x47, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x57,
	0x69, 0x74, 0x68, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x1a, 0x60, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12,
	0x39, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1f, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4e,
	0x61, 0x76, 0x69, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x1a, 0xd3, 0x02, 0x0a, 0x08, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4e, 0x61, 0x76, 0x69, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x47, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x57, 0x69, 0x74,
	0x68, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x3a, 0x0a, 0x06,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61,
	0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x57, 0x69, 0x74, 0x68, 0x4c, 0x69, 0x6e, 0x6b, 0x73,
	0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x1a, 0xb5, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x56, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x42, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4e,
	0x61, 0x76, 0x69, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x57, 0x69, 0x74, 0x68, 0x4c, 0x69, 0x6e, 0x6b, 0x73,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11,
	0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10,
	0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02,
	0x22, 0x31, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x0e, 0x0a, 0x0a, 0x4e,
	0x61, 0x76, 0x69, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x4d,
	0x6f, 0x76, 0x65, 0x54, 0x6f, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x4c, 0x69, 0x6e, 0x6b, 0x54,
	0x6f, 0x10, 0x02, 0x1a, 0x9e, 0x08, 0x0a, 0x08, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x1a, 0xd5, 0x02, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x1a, 0x27, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x1a, 0x97,
	0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x61, 0x6e, 0x79,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x1a, 0xad, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x4e, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x3a, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x72,
	0x6f, 0x6d, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04,
	0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44,
	0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xce, 0x02, 0x0a, 0x05, 0x43, 0x6c, 0x6f,
	0x6e, 0x65, 0x1a, 0x41, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x49, 0x64, 0x1a, 0x81, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x40, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x43, 0x6c, 0x6f, 0x6e, 0x65, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x1a, 0xa2, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x43,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2f, 0x2e, 0x61,
	0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x2e, 0x43, 0x6c, 0x6f, 0x6e, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a,
	0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f,
	0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41,
	0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xe8, 0x02, 0x0a, 0x09, 0x45, 0x78,
	0x70, 0x6f, 0x72, 0x74, 0x41, 0x6c, 0x6c, 0x1a, 0x1d, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x1a, 0xbb, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63,
	0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74,
	0x41, 0x6c, 0x6c, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x2c, 0x0a,
	0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61,
	0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0xa6, 0x01, 0x0a, 0x05,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x47, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70,
	0x63, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72,
	0x74, 0x41, 0x6c, 0x6c, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c,
	0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52,
	0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50,
	0x55, 0x54, 0x10, 0x02, 0x1a, 0xd6, 0x02, 0x0a, 0x0b, 0x4c, 0x69, 0x6e, 0x6b, 0x50, 0x72, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x1a, 0x1b, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72,
	0x6c, 0x1a, 0xa9, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4c, 0x69, 0x6e, 0x6b,
	0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x3c, 0x0a,
	0x0b, 0x6c, 0x69, 0x6e, 0x6b, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x0b,
	0x6c, 0x69, 0x6e, 0x6b, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x1a, 0x9f, 0x01, 0x0a, 0x05,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x40, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70,
	0x63, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d,
	0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xc0, 0x07,
	0x0a, 0x08, 0x55, 0x6e, 0x73, 0x70, 0x6c, 0x61, 0x73, 0x68, 0x1a, 0xfc, 0x03, 0x0a, 0x06, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x1a, 0x35, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x1a, 0xba, 0x03, 0x0a,
	0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x55, 0x6e, 0x73, 0x70, 0x6c, 0x61, 0x73, 0x68, 0x2e,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x49, 0x0a, 0x08,
	0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d,
	0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x55, 0x6e, 0x73,
	0x70, 0x6c, 0x61, 0x73, 0x68, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x52, 0x08, 0x70,
	0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x1a, 0x61, 0x0a, 0x07, 0x50, 0x69, 0x63, 0x74, 0x75,
	0x72, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x75, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x55, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x55, 0x72, 0x6c, 0x1a, 0xbc, 0x01, 0x0a, 0x05, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x44, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x30, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63,
	0x2e, 0x55, 0x6e, 0x73, 0x70, 0x6c, 0x61, 0x73, 0x68, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x4b, 0x0a, 0x04,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11,
	0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10,
	0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02,
	0x12, 0x17, 0x0a, 0x13, 0x52, 0x41, 0x54, 0x45, 0x5f, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x5f, 0x45,
	0x58, 0x43, 0x45, 0x45, 0x44, 0x45, 0x44, 0x10, 0x64, 0x1a, 0xb4, 0x03, 0x0a, 0x08, 0x44, 0x6f,
	0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0x79, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x09, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x4b, 0x69, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x61,
	0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x4b, 0x69, 0x6e,
	0x64, 0x1a, 0xac, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e,
	0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x55, 0x6e, 0x73, 0x70,
	0x6c, 0x61, 0x73, 0x68, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x1a,
	0xbe, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x46, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x55, 0x6e, 0x73, 0x70, 0x6c, 0x61, 0x73, 0x68, 0x2e, 0x44,
	0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x4b, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e,
	0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e,
	0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f,
	0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x12, 0x17, 0x0a, 0x13, 0x52, 0x41, 0x54, 0x45, 0x5f,
	0x4c, 0x49, 0x4d, 0x49, 0x54, 0x5f, 0x45, 0x58, 0x43, 0x45, 0x45, 0x44, 0x45, 0x44, 0x10, 0x64,
	0x1a, 0xa7, 0x07, 0x0a, 0x07, 0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x1a, 0xe8, 0x02, 0x0a,
	0x10, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73,
	0x74, 0x1a, 0x1b, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x1a, 0xb6,
	0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x61, 0x6e, 0x79,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79,
	0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73,
	0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2f, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x1a, 0xac, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x4d, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x39, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x47,
	0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x4d,
	0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e,
	0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e,
	0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f,
	0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xb0, 0x04, 0x0a, 0x0d, 0x44, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x1a, 0x09, 0x0a, 0x07, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x93, 0x04, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x47, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x31, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x47,
	0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x54, 0x0a, 0x0a, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34,
	0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x47, 0x61, 0x6c,
	0x6c, 0x65, 0x72, 0x79, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73,
	0x12, 0x3d, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x1a,
	0xd6, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x4a, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x36, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x2e, 0x44, 0x6f,
	0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x5f, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b,
	0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09,
	0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x12, 0x17, 0x0a, 0x13, 0x55,
	0x4e, 0x4d, 0x41, 0x52, 0x53, 0x48, 0x41, 0x4c, 0x4c, 0x49, 0x4e, 0x47, 0x5f, 0x45, 0x52, 0x52,
	0x4f, 0x52, 0x10, 0x03, 0x12, 0x12, 0x0a, 0x0e, 0x44, 0x4f, 0x57, 0x4e, 0x4c, 0x4f, 0x41, 0x44,
	0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x04, 0x1a, 0x50, 0x0a, 0x08, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e,
	0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x65, 0x72,
	0x69, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x1a, 0xcb, 0x61, 0x0a, 0x05, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x1a, 0xb2, 0x03, 0x0a, 0x07, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65,
	0x1a, 0x6d, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x1a,
	0xb7, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x6e,
	0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e,
	0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a,
	0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0xa1, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x42, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e,
	0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a,
	0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f,
	0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41,
	0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xda, 0x04, 0x0a, 0x05, 0x53, 0x70,
	0x6c, 0x69, 0x74, 0x1a, 0x9a, 0x02, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x05, 0x72, 0x61,
	0x6e, 0x67, 0x65, 0x12, 0x3d, 0x0a, 0x05, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x27, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x2e, 0x54, 0x65, 0x78, 0x74, 0x2e, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x52, 0x05, 0x73, 0x74, 0x79,
	0x6c, 0x65, 0x12, 0x39, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x25, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x22, 0x31, 0x0a,
	0x04, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x42, 0x4f, 0x54, 0x54, 0x4f, 0x4d, 0x10,
	0x00, 0x12, 0x07, 0x0a, 0x03, 0x54, 0x4f, 0x50, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x49, 0x4e,
	0x4e, 0x45, 0x52, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x54, 0x49, 0x54, 0x4c, 0x45, 0x10, 0x03,
	0x1a, 0xb3, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61,
	0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x2e, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x1a, 0x9f, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x40,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x61,
	0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x2e, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55,
	0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f,
	0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49,
	0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0x96, 0x03, 0x0a, 0x05, 0x4d, 0x65, 0x72, 0x67, 0x65,
	0x1a, 0x71, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x69, 0x72,
	0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x66, 0x69, 0x72, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x24, 0x0a,
	0x0d, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x49, 0x64, 0x1a, 0x99, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3d, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x2e, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x2c, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0x9f, 0x01,
	0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x40, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a,
	0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01,
	0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a,
	0xf6, 0x03, 0x0a, 0x04, 0x43, 0x6f, 0x70, 0x79, 0x1a, 0x99, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x49, 0x64, 0x12, 0x2c, 0x0a, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73,
	0x12, 0x42, 0x0a, 0x11, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x54, 0x65, 0x78, 0x74,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x6e,
	0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x52, 0x61, 0x6e, 0x67,
	0x65, 0x52, 0x11, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x54, 0x65, 0x78, 0x74, 0x52,
	0x61, 0x6e, 0x67, 0x65, 0x1a, 0xd1, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3c, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x43, 0x6f, 0x70, 0x79, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x1a, 0x0a, 0x08, 0x74, 0x65, 0x78, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x74, 0x65, 0x78, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x68,
	0x74, 0x6d, 0x6c, 0x53, 0x6c, 0x6f, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68,
	0x74, 0x6d, 0x6c, 0x53, 0x6c, 0x6f, 0x74, 0x12, 0x2e, 0x0a, 0x07, 0x61, 0x6e, 0x79, 0x53, 0x6c,
	0x6f, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x07,
	0x61, 0x6e, 0x79, 0x53, 0x6c, 0x6f, 0x74, 0x1a, 0x9e, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x3f, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x2b, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x2e, 0x43, 0x6f, 0x70, 0x79, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04,
	0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44,
	0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0x84, 0x07, 0x0a, 0x05, 0x50, 0x61, 0x73,
	0x74, 0x65, 0x1a, 0xf0, 0x03, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e,
	0x66, 0x6f, 0x63, 0x75, 0x73, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x66, 0x6f, 0x63, 0x75, 0x73, 0x65, 0x64, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x49, 0x64, 0x12, 0x42, 0x0a, 0x11, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64,
	0x54, 0x65, 0x78, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x11, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x54,
	0x65, 0x78, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x10, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x49, 0x64, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x69, 0x73, 0x50, 0x61, 0x72, 0x74, 0x4f, 0x66,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x50,
	0x61, 0x72, 0x74, 0x4f, 0x66, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65,
	0x78, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65,
	0x78, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x74, 0x6d, 0x6c, 0x53, 0x6c,
	0x6f, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x74, 0x6d, 0x6c, 0x53, 0x6c,
	0x6f, 0x74, 0x12, 0x2e, 0x0a, 0x07, 0x61, 0x6e, 0x79, 0x53, 0x6c, 0x6f, 0x74, 0x18, 0x08, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x07, 0x61, 0x6e, 0x79, 0x53, 0x6c,
	0x6f, 0x74, 0x12, 0x41, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x18, 0x09,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52,
	0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x50, 0x61, 0x73, 0x74, 0x65, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x53, 0x6c, 0x6f, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x1a, 0x4c, 0x0a, 0x04, 0x46, 0x69, 0x6c, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x6c,
	0x50, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61,
	0x6c, 0x50, 0x61, 0x74, 0x68, 0x1a, 0x87, 0x03, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3d, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x50, 0x61, 0x73, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x73, 0x12, 0x24, 0x0a,
	0x0d, 0x63, 0x61, 0x72, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x63, 0x61, 0x72, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x10, 0x69, 0x73, 0x53, 0x61, 0x6d, 0x65, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x43, 0x61, 0x72, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x69,
	0x73, 0x53, 0x61, 0x6d, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x61, 0x72, 0x65, 0x74, 0x12,
	0x2c, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0x9f, 0x01,
	0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x40, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x50, 0x61, 0x73, 0x74, 0x65, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a,
	0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01,
	0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a,
	0xa1, 0x04, 0x0a, 0x03, 0x43, 0x75, 0x74, 0x1a, 0x99, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49,
	0x64, 0x12, 0x2c, 0x0a, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12,
	0x42, 0x0a, 0x11, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x54, 0x65, 0x78, 0x74, 0x52,
	0x61, 0x6e, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x6e, 0x79,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x52, 0x61, 0x6e, 0x67, 0x65,
	0x52, 0x11, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x54, 0x65, 0x78, 0x74, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x1a, 0xfd, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3b, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x2e, 0x43, 0x75, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1a, 0x0a,
	0x08, 0x74, 0x65, 0x78, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x74, 0x65, 0x78, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x74, 0x6d,
	0x6c, 0x53, 0x6c, 0x6f, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x74, 0x6d,
	0x6c, 0x53, 0x6c, 0x6f, 0x74, 0x12, 0x2e, 0x0a, 0x07, 0x61, 0x6e, 0x79, 0x53, 0x6c, 0x6f, 0x74,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x07, 0x61, 0x6e,
	0x79, 0x53, 0x6c, 0x6f, 0x74, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x1a, 0x9d, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x3e, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x61, 0x6e,
	0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e,
	0x43, 0x75, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10,
	0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52,
	0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55,
	0x54, 0x10, 0x02, 0x1a, 0xae, 0x03, 0x0a, 0x06, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0x85,
	0x01, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c,
	0x12, 0x14, 0x0a, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x1a, 0x9b, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63,
	0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x1a, 0xa0, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x41, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x61, 0x6e, 0x79, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c,
	0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52,
	0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50,
	0x55, 0x54, 0x10, 0x02, 0x1a, 0xef, 0x02, 0x0a, 0x08, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x1a, 0x41, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x49, 0x64, 0x1a, 0x9f, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x40, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2a, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x1a, 0xa2, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x43, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2f, 0x2e, 0x61, 0x6e, 0x79, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x44, 0x6f,
	0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55,
	0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f,
	0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49,
	0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xed, 0x03, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x1a, 0xaa, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x05, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x12, 0x39, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x50, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0xb5,
	0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x6e, 0x79,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x1a, 0xa0, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x41, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x61, 0x6e,
	0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55,
	0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f,
	0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49,
	0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0x89, 0x05, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x1a, 0xb4, 0x02, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x2a, 0x0a,
	0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61,
	0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x52, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x39, 0x0a, 0x08, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x61, 0x6e,
	0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4e, 0x0a, 0x0c, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x4c, 0x61,
	0x79, 0x6f, 0x75, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x61, 0x6e, 0x79,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x2e,
	0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x52, 0x0c, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x4c, 0x61,
	0x79, 0x6f, 0x75, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x69, 0x65, 0x77, 0x49, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x76, 0x69, 0x65, 0x77, 0x49, 0x64, 0x1a, 0xc1,
	0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x61, 0x6e, 0x79,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x05, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x6e, 0x79,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0xa6, 0x01, 0x0a, 0x05, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x47, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x33, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x69, 0x64, 0x67,
	0x65, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32,
	0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00,
	0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f,
	0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54,
	0x10, 0x02, 0x1a, 0xf7, 0x02, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x1a, 0x43, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x49, 0x64, 0x73, 0x1a, 0xa3, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63,
	0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0xa4, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x45, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e,
	0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e,
	0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a,
	0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xa3, 0x03, 0x0a,
	0x09, 0x53, 0x65, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x1a, 0x72, 0x0a, 0x07, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x2f, 0x0a,
	0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x1a, 0xa1,
	0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x6e, 0x79,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x53,
	0x65, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c,
	0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0xa3, 0x01, 0x0a,
	0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x44, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52,
	0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x53, 0x65, 0x74, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32,
	0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00,
	0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f,
	0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54,
	0x10, 0x02, 0x1a, 0xaf, 0x03, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x74, 0x41, 0x6c,
	0x69, 0x67, 0x6e, 0x1a, 0x75, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x73, 0x12, 0x30, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x67,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x41, 0x6c,
	0x69, 0x67, 0x6e, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x67, 0x6e, 0x1a, 0xa7, 0x02, 0x0a, 0x08, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53,
	0x65, 0x74, 0x41, 0x6c, 0x69, 0x67, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a,
	0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61,
	0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0xa6, 0x01, 0x0a, 0x05,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x47, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70,
	0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x74, 0x41,
	0x6c, 0x69, 0x67, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c,
	0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52,
	0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50,
	0x55, 0x54, 0x10, 0x02, 0x1a, 0xe0, 0x03, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x74,
	0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x41, 0x6c, 0x69, 0x67, 0x6e, 0x1a, 0x8d, 0x01,
	0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x49, 0x64, 0x73, 0x12, 0x48, 0x0a, 0x0d, 0x76, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x41,
	0x6c, 0x69, 0x67, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x61, 0x6e, 0x79,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x2e, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x41, 0x6c, 0x69, 0x67, 0x6e, 0x52, 0x0d,
	0x76, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x41, 0x6c, 0x69, 0x67, 0x6e, 0x1a, 0xb7, 0x02,
	0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x61, 0x6e, 0x79, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x53, 0x65, 0x74, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x41, 0x6c, 0x69,
	0x67, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52,
	0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0xae, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x4f, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3b,
	0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x74, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63,
	0x61, 0x6c, 0x41, 0x6c, 0x69, 0x67, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e,
	0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e,
	0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f,
	0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0x95, 0x04, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74,
	0x53, 0x65, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x1a, 0xd7, 0x01, 0x0a, 0x07, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x49, 0x64, 0x12, 0x55, 0x0a, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x65, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x0b, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x1a, 0x57, 0x0a, 0x0a, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x49, 0x64, 0x12, 0x2f, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x06, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x73, 0x1a, 0xa9, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x45, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2f, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0xa7, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x48, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x34, 0x2e,
	0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a,
	0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01,
	0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a,
	0x9e, 0x04, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x65, 0x1a, 0xc4, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x49, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x49, 0x64, 0x73, 0x12, 0x39, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x50, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28,
	0x0a, 0x0f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x1a, 0xc5, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52,
	0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x75, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1a, 0x0a, 0x08,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x73, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52,
	0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0xa7, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x48, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x34,
	0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11,
	0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10,
	0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02,
	0x1a, 0xe8, 0x04, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x1a,
	0xd9, 0x04, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x49, 0x64, 0x73, 0x12, 0x40, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70,
	0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x48,
	0x00, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x2a, 0x0a, 0x0f, 0x62, 0x61, 0x63, 0x6b, 0x67,
	0x72, 0x6f, 0x75, 0x6e, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x0f, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x43, 0x6f,
	0x6c, 0x6f, 0x72, 0x12, 0x32, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x67, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x41, 0x6c, 0x69, 0x67, 0x6e, 0x48, 0x00,
	0x52, 0x05, 0x61, 0x6c, 0x69, 0x67, 0x6e, 0x12, 0x31, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x48, 0x00, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x44, 0x0a, 0x08, 0x64, 0x69,
	0x76, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x61,
	0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x69, 0x76, 0x2e, 0x53,
	0x74, 0x79, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x08, 0x64, 0x69, 0x76, 0x53, 0x74, 0x79, 0x6c, 0x65,
	0x12, 0x47, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x2e, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x09,
	0x66, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x1a, 0xa6, 0x01, 0x0a, 0x04, 0x54, 0x65,
	0x78, 0x74, 0x12, 0x3f, 0x0a, 0x05, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x27, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e,
	0x54, 0x65, 0x78, 0x74, 0x2e, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x05, 0x73, 0x74,
	0x79, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x3c, 0x0a, 0x04, 0x6d,
	0x61, 0x72, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61, 0x6e, 0x79, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x2e, 0x4d, 0x61, 0x72,
	0x6b, 0x48, 0x00, 0x52, 0x04, 0x6d, 0x61, 0x72, 0x6b, 0x42, 0x07, 0x0a, 0x05, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x1a, 0xae, 0x04, 0x0a, 0x14,
	0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x54, 0x6f, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x73, 0x1a, 0xc1, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x73, 0x12, 0x30, 0x0a, 0x13, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x4b, 0x65,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x1e, 0x0a, 0x0a,
	0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x05,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x6e,
	0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x52, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x1a, 0xd1, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52,
	0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e,
	0x76, 0x65, 0x72, 0x74, 0x54, 0x6f, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x69, 0x6e, 0x6b, 0x49, 0x64, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x69, 0x6e, 0x6b, 0x49, 0x64, 0x73, 0x12, 0x2c, 0x0a,
	0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61,
	0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0xae, 0x01, 0x0a, 0x05,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x4f, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x3b, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70,
	0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x74, 0x54, 0x6f, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e,
	0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a,
	0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xab, 0x04, 0x0a,
	0x18, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x76, 0x65, 0x54, 0x6f, 0x45, 0x78, 0x69, 0x73, 0x74,
	0x69, 0x6e, 0x67, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x1a, 0xcc, 0x01, 0x0a, 0x07, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x73, 0x12,
	0x28, 0x0a, 0x0f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x72, 0x6f,
	0x70, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x64, 0x72, 0x6f, 0x70, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x39, 0x0a,
	0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1d, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0xbf, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52,
	0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x76,
	0x65, 0x54, 0x6f, 0x45, 0x78, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0xb2, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x53, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3f, 0x2e,
	0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x76, 0x65, 0x54, 0x6f, 0x45, 0x78, 0x69, 0x73,
	0x74, 0x69, 0x6e, 0x67, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08,
	0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42,
	0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xbd, 0x04, 0x0a, 0x13, 0x4c,
	0x69, 0x73, 0x74, 0x4d, 0x6f, 0x76, 0x65, 0x54, 0x6f, 0x4e, 0x65, 0x77, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x1a, 0xd5, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x73, 0x12, 0x31, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x64,
	0x72, 0x6f, 0x70, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x64, 0x72, 0x6f, 0x70, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12,
	0x39, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1d, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0xcd, 0x02, 0x0a, 0x08, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d,
	0x6f, 0x76, 0x65, 0x54, 0x6f, 0x4e, 0x65, 0x77, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x69, 0x6e, 0x6b, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x69, 0x6e, 0x6b, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x05,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x6e,
	0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0xad, 0x01, 0x0a, 0x05, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x4e, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x3a, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63,
	0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x76, 0x65, 0x54,
	0x6f, 0x4e, 0x65, 0x77, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08,
	0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42,
	0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xbd, 0x03, 0x0a, 0x0c, 0x4c,
	0x69, 0x73, 0x74, 0x54, 0x75, 0x72, 0x6e, 0x49, 0x6e, 0x74, 0x6f, 0x1a, 0x82, 0x01, 0x0a, 0x07,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64,
	0x73, 0x12, 0x3d, 0x0a, 0x05, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x27, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x54,
	0x65, 0x78, 0x74, 0x2e, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x52, 0x05, 0x73, 0x74, 0x79, 0x6c, 0x65,
	0x1a, 0xa7, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x61,
	0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x75, 0x72, 0x6e, 0x49, 0x6e, 0x74, 0x6f, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x1a, 0xa6, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x47, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x61, 0x6e, 0x79, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x54, 0x75, 0x72, 0x6e, 0x49, 0x6e, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08,
	0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42,
	0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xb1, 0x03, 0x0a, 0x16, 0x4c,
	0x69, 0x73, 0x74, 0x53, 0x65, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64,
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x1a, 0x59, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f,
	0x6c, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72,
	0x1a, 0xbb, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x61,
	0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75,
	0x6e, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a,
	0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61,
	0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0xb0, 0x01, 0x0a, 0x05,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x51, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x3d, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70,
	0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x74, 0x42,
	0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d,
	0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12,
	0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0x91,
	0x03, 0x0a, 0x06, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x1a, 0x55, 0x0a, 0x07, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x49, 0x64, 0x12, 0x2c, 0x0a, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73,
	0x1a, 0xaf, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61,
	0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a,
	0xa0, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x41, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x45, 0x78, 0x70, 0x6f,
	0x72, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32,
	0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00,
	0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f,
	0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54,
	0x10, 0x02, 0x1a, 0xf6, 0x02, 0x0a, 0x0b, 0x53, 0x65, 0x74, 0x43, 0x61, 0x72, 0x72, 0x69, 0x61,
	0x67, 0x65, 0x1a, 0x6d, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x05, 0x72, 0x61, 0x6e, 0x67,
	0x65, 0x1a, 0xf7, 0x01, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e,
	0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x61, 0x72, 0x72, 0x69, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x1a, 0xa5, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x46, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e, 0x61, 0x6e,
	0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e,
	0x53, 0x65, 0x74, 0x43, 0x61, 0x72, 0x72, 0x69, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b,
	0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09,
	0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xda, 0x02, 0x0a, 0x07,
	0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x1a, 0x2f, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x74, 0x6d, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x68, 0x74, 0x6d, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x1a, 0x9d, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52,
	0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x06, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x73, 0x1a, 0xa1, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x42,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x61,
	0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x2e, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04,
	0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44,
	0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xbb, 0x07, 0x0a, 0x0a, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x4c, 0x61, 0x74, 0x65, 0x78, 0x1a, 0xd7, 0x03, 0x0a, 0x07, 0x53, 0x65, 0x74, 0x54,
	0x65, 0x78, 0x74, 0x1a, 0xa1, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x4a, 0x0a, 0x09, 0x70,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c,
	0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x61, 0x74,
	0x65, 0x78, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x1a, 0xa7, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70,
	0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4c, 0x61, 0x74, 0x65, 0x78, 0x2e, 0x53, 0x65, 0x74,
	0x54, 0x65, 0x78, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x6e, 0x79, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0xa6, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x47, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x33, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x4c, 0x61, 0x74, 0x65, 0x78, 0x2e, 0x53, 0x65, 0x74, 0x54, 0x65, 0x78,
	0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a,
	0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12,
	0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52,
	0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10,
	0x02, 0x1a, 0xd2, 0x03, 0x0a, 0x0c, 0x53, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x6f, 0x72, 0x1a, 0x8d, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x4a, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x61, 0x6e, 0x79, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x61, 0x74, 0x65, 0x78, 0x2e, 0x50, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x6f, 0x72, 0x1a, 0xb1, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x49, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33,
	0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x4c, 0x61, 0x74, 0x65, 0x78, 0x2e, 0x53, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x6f, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x6e, 0x79, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0xab, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x4c, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x38, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x4c, 0x61, 0x74, 0x65, 0x78, 0x2e, 0x53, 0x65, 0x74, 0x50, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55,
	0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f,
	0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49,
	0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xb0, 0x25, 0x0a, 0x09, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x54, 0x65, 0x78, 0x74, 0x1a, 0x8c, 0x04, 0x0a, 0x07, 0x53, 0x65, 0x74, 0x54, 0x65, 0x78, 0x74,
	0x1a, 0xd8, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x3d, 0x0a, 0x05, 0x6d, 0x61, 0x72, 0x6b,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x73,
	0x52, 0x05, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x12, 0x42, 0x0a, 0x11, 0x73, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x54, 0x65, 0x78, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x11, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x54, 0x65, 0x78, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x1a, 0xa5, 0x02, 0x0a, 0x08,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x65, 0x78, 0x74, 0x2e,
	0x53, 0x65, 0x74, 0x54, 0x65, 0x78, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a,
	0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61,
	0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0xa5, 0x01, 0x0a, 0x05,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x46, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70,
	0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x65, 0x78, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x54,
	0x65, 0x78, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10,
	0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52,
	0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55,
	0x54, 0x10, 0x02, 0x1a, 0x8d, 0x03, 0x0a, 0x08, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72,
	0x1a, 0x57, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x1a, 0xa7, 0x02, 0x0a, 0x08, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x65, 0x78, 0x74, 0x2e, 0x53, 0x65,
	0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x05,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x6e,
	0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0xa6, 0x01, 0x0a, 0x05, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x47, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x33, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63,
	0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x65, 0x78, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x6f,
	0x6c, 0x6f, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10,
	0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52,
	0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55,
	0x54, 0x10, 0x02, 0x1a, 0xb3, 0x03, 0x0a, 0x08, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x73,
	0x1a, 0xa6, 0x03, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x1a, 0x6d, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x05, 0x72,
	0x61, 0x6e, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x6e, 0x79,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x52, 0x61, 0x6e, 0x67, 0x65,
	0x52, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x1a, 0xaf, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70,
	0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x65, 0x78, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x4d,
	0x61, 0x72, 0x6b, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c,
	0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0xaa, 0x01, 0x0a,
	0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x4b, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x37, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52,
	0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x65, 0x78, 0x74, 0x2e, 0x53, 0x65, 0x74,
	0x4d, 0x61, 0x72, 0x6b, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a,
	0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f,
	0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41,
	0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xb7, 0x03, 0x0a, 0x08, 0x53, 0x65,
	0x74, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x1a, 0x80, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x3d, 0x0a, 0x05, 0x73, 0x74,
	0x79, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x61, 0x6e, 0x79, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x2e, 0x53, 0x74, 0x79,
	0x6c, 0x65, 0x52, 0x05, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x1a, 0xa7, 0x02, 0x0a, 0x08, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x65, 0x78, 0x74, 0x2e, 0x53, 0x65,
	0x74, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x05,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x6e,
	0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0xa6, 0x01, 0x0a, 0x05, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x47, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x33, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63,
	0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x65, 0x78, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x53, 0x74,
	0x79, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10,
	0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52,
	0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55,
	0x54, 0x10, 0x02, 0x1a, 0x97, 0x03, 0x0a, 0x0a, 0x53, 0x65, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x65, 0x64, 0x1a, 0x5b, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x1a,
	0xab, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x61, 0x6e,
	0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54,
	0x65, 0x78, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x1a, 0xa8, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x49, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x35, 0x2e, 0x61, 0x6e, 0x79,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x65,
	0x78, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d,
	0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xb0, 0x03,
	0x0a, 0x07, 0x53, 0x65, 0x74, 0x49, 0x63, 0x6f, 0x6e, 0x1a, 0x7d, 0x0a, 0x07, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x69, 0x63, 0x6f, 0x6e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x69, 0x63, 0x6f, 0x6e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x63,
	0x6f, 0x6e, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69,
	0x63, 0x6f, 0x6e, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x1a, 0xa5, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52,
	0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x65, 0x78, 0x74, 0x2e, 0x53, 0x65, 0x74,
	0x49, 0x63, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x6e, 0x79, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0xa5, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x46, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x32, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x65, 0x78, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x49, 0x63, 0x6f, 0x6e,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11,
	0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10,
	0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02,
	0x1a, 0xc5, 0x03, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x74, 0x53, 0x74, 0x79, 0x6c,
	0x65, 0x1a, 0x82, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x73, 0x12, 0x3d, 0x0a, 0x05, 0x73, 0x74, 0x79, 0x6c, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x2e, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x52,
	0x05, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x1a, 0xaf, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x32, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63,
	0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x65, 0x78, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53,
	0x65, 0x74, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a,
	0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61,
	0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0xaa, 0x01, 0x0a, 0x05,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x4b, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x37, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70,
	0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x65, 0x78, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x53, 0x65, 0x74, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04,
	0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44,
	0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0x9b, 0x03, 0x0a, 0x0c, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x1a, 0x59, 0x0a, 0x07, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x1a, 0xaf, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x48, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x32, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x65, 0x78, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x74,
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x05, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x6e, 0x79,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0xaa, 0x01, 0x0a, 0x05, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x4b, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x37, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x65, 0x78, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65,
	0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55,
	0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f,
	0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49,
	0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xbe, 0x03, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x53,
	0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x1a, 0x7f, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x73, 0x12, 0x3a, 0x0a, 0x04, 0x6d,
	0x61, 0x72, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61, 0x6e, 0x79, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x2e, 0x4d, 0x61, 0x72,
	0x6b, 0x52, 0x04, 0x6d, 0x61, 0x72, 0x6b, 0x1a, 0xad, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70,
	0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x65, 0x78, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x53, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a,
	0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61,
	0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0xa9, 0x01, 0x0a, 0x05,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x4a, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x36, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70,
	0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x65, 0x78, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x53, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e,
	0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e,
	0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f,
	0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0x8b, 0x03, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74,
	0x43, 0x6c, 0x65, 0x61, 0x72, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x1a, 0x43, 0x0a, 0x07, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x73, 0x1a,
	0xb3, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x61, 0x6e,
	0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54,
	0x65, 0x78, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x53, 0x74, 0x79,
	0x6c, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52,
	0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0xac, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x4d, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x39,
	0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x54, 0x65, 0x78, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x65, 0x61, 0x72,
	0x53, 0x74, 0x79, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c,
	0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45,
	0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e,
	0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0x91, 0x03, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c,
	0x65, 0x61, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x1a, 0x43, 0x0a, 0x07, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x73, 0x1a,
	0xb7, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x61, 0x6e,
	0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54,
	0x65, 0x78, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x6e, 0x79, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0xae, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x4f, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x3b, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x65, 0x78, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x65,
	0x61, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a,
	0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f,
	0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41,
	0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xa6, 0x30, 0x0a, 0x0a, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x1a, 0x9f, 0x04, 0x0a, 0x06, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x1a, 0xd2, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x08, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x61, 0x6e,
	0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6c, 0x75,
	0x6d, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d,
	0x6e, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x77, 0x69, 0x74, 0x68, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x52, 0x6f, 0x77, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x77, 0x69, 0x74, 0x68, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x6f, 0x77, 0x1a, 0xbf, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52,
	0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x1a, 0xa5, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x46, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e, 0x61, 0x6e, 0x79,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08,
	0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42,
	0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xb9, 0x03, 0x0a, 0x09, 0x52,
	0x6f, 0x77, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x1a, 0x7e, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x39, 0x0a,
	0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1d, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0xab, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52,
	0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x52, 0x6f,
	0x77, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a,
	0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61,
	0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0xa8, 0x01, 0x0a, 0x05,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x49, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x35, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70,
	0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x52, 0x6f, 0x77,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55,
	0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f,
	0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49,
	0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xa3, 0x03, 0x0a, 0x0c, 0x52, 0x6f, 0x77, 0x53, 0x65,
	0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x1a, 0x5f, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x69, 0x73, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x69, 0x73, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x1a, 0xb1, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52,
	0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x52, 0x6f,
	0x77, 0x53, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x2c, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0xab,
	0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x4c, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x38, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x2e,
	0x52, 0x6f, 0x77, 0x53, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e,
	0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a,
	0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0x84, 0x03, 0x0a,
	0x0b, 0x52, 0x6f, 0x77, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x6c, 0x1a, 0x43, 0x0a, 0x07,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64,
	0x73, 0x1a, 0xaf, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e,
	0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x52, 0x6f, 0x77, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69,
	0x6c, 0x6c, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52,
	0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0xaa, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x4b, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x37,
	0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x52, 0x6f, 0x77, 0x4c, 0x69, 0x73, 0x74, 0x46,
	0x69, 0x6c, 0x6c, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10,
	0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52,
	0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55,
	0x54, 0x10, 0x02, 0x1a, 0x87, 0x03, 0x0a, 0x0c, 0x52, 0x6f, 0x77, 0x4c, 0x69, 0x73, 0x74, 0x43,
	0x6c, 0x65, 0x61, 0x6e, 0x1a, 0x43, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x73, 0x1a, 0xb1, 0x02, 0x0a, 0x08, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x52,
	0x6f, 0x77, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a,
	0xab, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x4c, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x38, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x2e, 0x52, 0x6f, 0x77, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d,
	0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0x8d, 0x03,
	0x0a, 0x0e, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x6c,
	0x1a, 0x43, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x49, 0x64, 0x73, 0x1a, 0xb5, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4b, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x35, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d,
	0x6e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x6c, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x2c, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0xad, 0x01,
	0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x4e, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3a, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x43,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x6c, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d,
	0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xc2, 0x03,
	0x0a, 0x0c, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x1a, 0x7e,
	0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x50, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0xb1,
	0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x61, 0x6e, 0x79,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x1a, 0xab, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x4c,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x38, 0x2e, 0x61,
	0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32,
	0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00,
	0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f,
	0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54,
	0x10, 0x02, 0x1a, 0xfe, 0x02, 0x0a, 0x09, 0x52, 0x6f, 0x77, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x1a, 0x43, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x49, 0x64, 0x1a, 0xab, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x46, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x30, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x52, 0x6f, 0x77, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x6e, 0x79, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0xa8, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x49, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x35, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x52, 0x6f, 0x77, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10,
	0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52,
	0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55,
	0x54, 0x10, 0x02, 0x1a, 0x87, 0x03, 0x0a, 0x0c, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x1a, 0x43, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x1a, 0xb1, 0x02, 0x0a, 0x08, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x43,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a,
	0xab, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x4c, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x38, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d,
	0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xe1, 0x03,
	0x0a, 0x0a, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4d, 0x6f, 0x76, 0x65, 0x1a, 0xa2, 0x01, 0x0a,
	0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x72, 0x6f, 0x70, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x72, 0x6f, 0x70, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x50,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x1a, 0xad, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e,
	0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4d, 0x6f, 0x76,
	0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0xa9, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x4a, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x36, 0x2e,
	0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4d, 0x6f, 0x76,
	0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a,
	0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12,
	0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52,
	0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10,
	0x02, 0x1a, 0xdd, 0x03, 0x0a, 0x0c, 0x52, 0x6f, 0x77, 0x44, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x65, 0x1a, 0x98, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x49, 0x64, 0x12, 0x39, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0xb1, 0x02,
	0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x61, 0x6e, 0x79, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x2e, 0x52, 0x6f, 0x77, 0x44, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x1a, 0xab, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x4c, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x38, 0x2e, 0x61, 0x6e,
	0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x2e, 0x52, 0x6f, 0x77, 0x44, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a,
	0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12,
	0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52,
	0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10,
	0x02, 0x1a, 0x80, 0x04, 0x0a, 0x0f, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x44, 0x75, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x65, 0x1a, 0x98, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x50, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x1a, 0xd1, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x61,
	0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x44, 0x75, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x1a, 0xae, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x4f, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3b, 0x2e, 0x61, 0x6e,
	0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x44, 0x75, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c,
	0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52,
	0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50,
	0x55, 0x54, 0x10, 0x02, 0x1a, 0xa3, 0x03, 0x0a, 0x06, 0x45, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x1a,
	0x71, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x72, 0x6f,
	0x77, 0x73, 0x1a, 0xa5, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x43, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d,
	0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x45, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x1a, 0xa5, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x46, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e, 0x61, 0x6e, 0x79,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x2e, 0x45, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08,
	0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42,
	0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xb5, 0x03, 0x0a, 0x04, 0x53,
	0x6f, 0x72, 0x74, 0x1a, 0x88, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x49, 0x64, 0x12, 0x43, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2f, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x53,
	0x6f, 0x72, 0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x1a, 0xa1,
	0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x6e, 0x79,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c,
	0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0xa3, 0x01, 0x0a,
	0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x44, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52,
	0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x53, 0x6f,
	0x72, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32,
	0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00,
	0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f,
	0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54,
	0x10, 0x02, 0x1a, 0xa2, 0x0f, 0x0a, 0x09, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x46, 0x69, 0x6c, 0x65,
	0x1a, 0x88, 0x03, 0x0a, 0x07, 0x53, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x55, 0x0a, 0x07,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x1a, 0xa5, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x43, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2d, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x46, 0x69, 0x6c, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x1a, 0xa5, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x46, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e, 0x61, 0x6e,
	0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x46,
	0x69, 0x6c, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b,
	0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09,
	0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xae, 0x03, 0x0a, 0x11,
	0x53, 0x65, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x64, 0x1a, 0x5d, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64,
	0x1a, 0xb9, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x61,
	0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x46, 0x69, 0x6c, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x05,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x6e,
	0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0xaf, 0x01, 0x0a, 0x05, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x50, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x3c, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63,
	0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x46, 0x69, 0x6c, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e,
	0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a,
	0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0x90, 0x05, 0x0a,
	0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x64, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x1a, 0xaa, 0x02, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x50,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x75, 0x72, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x50, 0x61, 0x74, 0x68,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x50, 0x61, 0x74,
	0x68, 0x12, 0x42, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x36, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x4b, 0x69,
	0x6e, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4b, 0x69,
	0x6e, 0x64, 0x52, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x4b, 0x69, 0x6e, 0x64, 0x1a, 0xcf, 0x02,
	0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x61, 0x6e, 0x79, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x46, 0x69, 0x6c,
	0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x64, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49,
	0x64, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a,
	0xad, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x4e, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3a, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x46, 0x69, 0x6c, 0x65, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x64, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a,
	0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01,
	0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a,
	0xc5, 0x03, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x74, 0x53, 0x74, 0x79, 0x6c, 0x65,
	0x1a, 0x82, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x49, 0x64, 0x73, 0x12, 0x3d, 0x0a, 0x05, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x2e, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x52, 0x05,
	0x73, 0x74, 0x79, 0x6c, 0x65, 0x1a, 0xaf, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x48, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x32, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x46, 0x69, 0x6c, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65,
	0x74, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x05,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x6e,
	0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0xaa, 0x01, 0x0a, 0x05, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x4b, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x37, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63,
	0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x46, 0x69, 0x6c, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53,
	0x65, 0x74, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e,
	0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e,
	0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f,
	0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xcf, 0x05, 0x0a, 0x0a, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x1a, 0xdc, 0x02, 0x0a, 0x07, 0x53, 0x65, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x1a, 0x55, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x1a, 0xf9, 0x01, 0x0a, 0x08, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x2e, 0x53,
	0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0xa6, 0x01, 0x0a,
	0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x47, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52,
	0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x65,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c,
	0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45,
	0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e,
	0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xe1, 0x02, 0x0a, 0x08, 0x53, 0x65, 0x74, 0x57, 0x69, 0x64,
	0x74, 0x68, 0x1a, 0x57, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x1a, 0xfb, 0x01, 0x0a, 0x08,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x2e, 0x53, 0x65, 0x74, 0x57, 0x69, 0x64, 0x74, 0x68, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a,
	0xa7, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x48, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x34, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x2e, 0x53, 0x65, 0x74, 0x57, 0x69, 0x64, 0x74, 0x68, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a,
	0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f,
	0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41,
	0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xcf, 0x05, 0x0a, 0x0a, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x1a, 0xdc, 0x02, 0x0a, 0x07, 0x53, 0x65, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x55, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x1a, 0xf9, 0x01, 0x0a, 0x08,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x2e, 0x53, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0xa6,
	0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x47, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x2e,
	0x53, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e,
	0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e,
	0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f,
	0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xe1, 0x02, 0x0a, 0x08, 0x53, 0x65, 0x74, 0x57,
	0x69, 0x64, 0x74, 0x68, 0x1a, 0x57, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x1a, 0xfb, 0x01,
	0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x61, 0x6e, 0x79, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x2e, 0x53, 0x65, 0x74, 0x57, 0x69, 0x64, 0x74, 0x68, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x1a, 0xa7, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x48, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x34, 0x2e, 0x61, 0x6e, 0x79, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x2e, 0x53, 0x65, 0x74, 0x57, 0x69, 0x64, 0x74, 0x68, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b,
	0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09,
	0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0x9d, 0x0c, 0x0a, 0x09,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4c, 0x69, 0x6e, 0x6b, 0x1a, 0xf5, 0x06, 0x0a, 0x10, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x57, 0x69, 0x74, 0x68, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x1a, 0xbd,
	0x03, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x41, 0x0a, 0x0d, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x52,
	0x0d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x13, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x4b, 0x65, 0x79, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x6e, 0x79, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52,
	0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x49, 0x64, 0x12, 0x39, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x0a,
	0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x1a, 0xa0,
	0x03, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x61, 0x6e, 0x79,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4c, 0x69,
	0x6e, 0x6b, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x69, 0x74, 0x68, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12,
	0x2c, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x31, 0x0a,
	0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x1a, 0xae, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x4f, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3b, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4c, 0x69, 0x6e, 0x6b,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x69, 0x74, 0x68, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a,
	0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12,
	0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52,
	0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10,
	0x02, 0x1a, 0x97, 0x05, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x74, 0x41, 0x70, 0x70,
	0x65, 0x61, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x1a, 0xc5, 0x02, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x73, 0x12, 0x46, 0x0a,
	0x08, 0x69, 0x63, 0x6f, 0x6e, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x2a, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69,
	0x6e, 0x6b, 0x2e, 0x49, 0x63, 0x6f, 0x6e, 0x53, 0x69, 0x7a, 0x65, 0x52, 0x08, 0x69, 0x63, 0x6f,
	0x6e, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x49, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x64, 0x53, 0x74, 0x79,
	0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x2e, 0x43, 0x61, 0x72, 0x64,
	0x53, 0x74, 0x79, 0x6c, 0x65, 0x52, 0x09, 0x63, 0x61, 0x72, 0x64, 0x53, 0x74, 0x79, 0x6c, 0x65,
	0x12, 0x4f, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x07,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a,
	0xb9, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x61, 0x6e,
	0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4c,
	0x69, 0x6e, 0x6b, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x74, 0x41, 0x70, 0x70, 0x65, 0x61,
	0x72, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x05, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x6e, 0x79,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0xaf, 0x01, 0x0a, 0x05, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x50, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x3c, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4c, 0x69, 0x6e, 0x6b, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65,
	0x74, 0x41, 0x70, 0x70, 0x65, 0x61, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b,
	0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09,
	0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xb2, 0x06, 0x0a, 0x0d,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x8b, 0x03,
	0x0a, 0x06, 0x53, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x1a, 0x53, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x1a, 0xab, 0x02,
	0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x61, 0x6e, 0x79, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x1a, 0xa8, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x49, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x35, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b,
	0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09,
	0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0x92, 0x03, 0x0a, 0x03,
	0x41, 0x64, 0x64, 0x1a, 0x63, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x1a, 0xa5, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52,
	0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x41, 0x64, 0x64, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x6e, 0x79, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0xa5, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x46, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x32, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x64, 0x64,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11,
	0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10,
	0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02,
	0x1a, 0xd8, 0x07, 0x0a, 0x0d, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x6f, 0x6f, 0x6b, 0x6d, 0x61,
	0x72, 0x6b, 0x1a, 0xa8, 0x03, 0x0a, 0x05, 0x46, 0x65, 0x74, 0x63, 0x68, 0x1a, 0x73, 0x0a, 0x07,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72,
	0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49,
	0x64, 0x1a, 0xa9, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e,
	0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x42, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x1a, 0xa7, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x48, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x34, 0x2e, 0x61, 0x6e,
	0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x42,
	0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d,
	0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0x9b, 0x04,
	0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x64, 0x46, 0x65, 0x74, 0x63, 0x68,
	0x1a, 0xb0, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x50,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x75, 0x72, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x49, 0x64, 0x1a, 0xd5, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4e, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x38, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x42, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x6e, 0x64, 0x46, 0x65, 0x74, 0x63, 0x68, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x18, 0x0a, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x6e, 0x79, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0xb0, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x51, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x3d, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x41, 0x6e, 0x64, 0x46, 0x65, 0x74, 0x63, 0x68, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b,
	0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09,
	0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xcf, 0x03, 0x0a, 0x08,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x69, 0x76, 0x1a, 0xc2, 0x03, 0x0a, 0x0c, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x65, 0x74, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x1a, 0x81, 0x01, 0x0a, 0x07, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x73, 0x12,
	0x3c, 0x0a, 0x05, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26,
	0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x69, 0x76,
	0x2e, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x52, 0x05, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x1a, 0xad, 0x02,
	0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x61, 0x6e, 0x79, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x69, 0x76,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x74, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x1a, 0xa9, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x4a, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x36, 0x2e, 0x61, 0x6e, 0x79, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x69, 0x76,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x74, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d,
	0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xfe, 0x58,
	0x0a, 0x0d, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x76, 0x69, 0x65, 0x77, 0x1a,
	0xea, 0x11, 0x0a, 0x04, 0x56, 0x69, 0x65, 0x77, 0x1a, 0xf4, 0x03, 0x0a, 0x06, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x1a, 0x99, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x56, 0x69, 0x65,
	0x77, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x1a,
	0xcd, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x61, 0x6e,
	0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44,
	0x61, 0x74, 0x61, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x69, 0x65, 0x77, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x76, 0x69, 0x65, 0x77, 0x49, 0x64, 0x1a,
	0xad, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x4e, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3a, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x76,
	0x69, 0x65, 0x77, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a,
	0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01,
	0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a,
	0xdc, 0x03, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x1a, 0x99, 0x01, 0x0a, 0x07, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x76, 0x69, 0x65, 0x77, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x76, 0x69, 0x65, 0x77, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x56, 0x69, 0x65, 0x77,
	0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x1a, 0xb5, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x35, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63,
	0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x56,
	0x69, 0x65, 0x77, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x2c, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0xad,
	0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x4e, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3a, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x76, 0x69,
	0x65, 0x77, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d,
	0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12,
	0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0x9b,
	0x03, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x1a, 0x59, 0x0a, 0x07, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x76, 0x69, 0x65, 0x77, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x76, 0x69,
	0x65, 0x77, 0x49, 0x64, 0x1a, 0xb5, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x4b, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x35, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x56, 0x69, 0x65,
	0x77, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c,
	0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0xad, 0x01, 0x0a,
	0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x4e, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x3a, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52,
	0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x76, 0x69, 0x65, 0x77,
	0x2e, 0x56, 0x69, 0x65, 0x77, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e,
	0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a,
	0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xc6, 0x03, 0x0a,
	0x0b, 0x53, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x75, 0x0a, 0x07,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x76, 0x69, 0x65, 0x77, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x76, 0x69, 0x65, 0x77, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x1a, 0xbf, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x50, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x3a, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x56, 0x69, 0x65, 0x77,
	0x2e, 0x53, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x1a, 0xb2, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x53, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3f, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61,
	0x76, 0x69, 0x65, 0x77, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x2e, 0x53, 0x65, 0x74, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c,
	0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45,
	0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e,
	0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xa4, 0x03, 0x0a, 0x09, 0x53, 0x65, 0x74, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x1a, 0x59, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x69, 0x65, 0x77, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x76, 0x69, 0x65, 0x77, 0x49, 0x64, 0x1a, 0xbb,
	0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x61, 0x6e, 0x79,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x61,
	0x74, 0x61, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x2e, 0x53, 0x65, 0x74, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x05, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x6e, 0x79,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0xb0, 0x01, 0x0a, 0x05, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x51, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x3d, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x56, 0x69,
	0x65, 0x77, 0x2e, 0x53, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e,
	0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a,
	0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xe5, 0x06, 0x0a,
	0x08, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0xa6, 0x03, 0x0a, 0x03, 0x41, 0x64,
	0x64, 0x1a, 0x65, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4b, 0x65, 0x79, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x73, 0x1a, 0xb7, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52,
	0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x76, 0x69, 0x65, 0x77,
	0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x64, 0x64, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x1a, 0xae, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x4f, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3b, 0x2e, 0x61, 0x6e, 0x79, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x61, 0x74,
	0x61, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41,
	0x64, 0x64, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32,
	0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00,
	0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f,
	0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54,
	0x10, 0x02, 0x1a, 0xaf, 0x03, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x1a, 0x65, 0x0a,
	0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64,
	0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4b, 0x65, 0x79, 0x73, 0x1a, 0xbd, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x4f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x39, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x52, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x1a, 0xb1, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x52, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3e, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61,
	0x76, 0x69, 0x65, 0x77, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c,
	0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52,
	0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50,
	0x55, 0x54, 0x10, 0x02, 0x1a, 0x9a, 0x03, 0x0a, 0x09, 0x53, 0x65, 0x74, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x1a, 0x59, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x1a, 0xb1, 0x02,
	0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x61, 0x6e, 0x79, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x61, 0x74,
	0x61, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x53, 0x65, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x1a, 0xab, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x4c, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x38, 0x2e, 0x61, 0x6e,
	0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44,
	0x61, 0x74, 0x61, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x53, 0x65, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a,
	0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12,
	0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52,
	0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10,
	0x02, 0x1a, 0xf1, 0x03, 0x0a, 0x0a, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x1a, 0xe2, 0x03, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x1a, 0x93, 0x01, 0x0a, 0x07,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12,
	0x50, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x1a, 0xc1, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e,
	0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x44, 0x61, 0x74, 0x61, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a,
	0xb3, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x54, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x40, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x76,
	0x69, 0x65, 0x77, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c,
	0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45,
	0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e,
	0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xf2, 0x07, 0x0a, 0x0b, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x1a, 0xe9, 0x03, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x1a, 0x98, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x49, 0x64, 0x12, 0x55, 0x0a, 0x0c, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x61, 0x6e, 0x79,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x76, 0x69, 0x65,
	0x77, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x0c, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x1a, 0xc3, 0x02, 0x0a, 0x08,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x76,
	0x69, 0x65, 0x77, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x05,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x6e,
	0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0xb4, 0x01, 0x0a, 0x05, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x55, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x41, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63,
	0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a,
	0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12,
	0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52,
	0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10,
	0x02, 0x1a, 0xf6, 0x03, 0x0a, 0x04, 0x4d, 0x6f, 0x76, 0x65, 0x1a, 0xab, 0x01, 0x0a, 0x07, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x76, 0x69, 0x65, 0x77, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x76, 0x69, 0x65, 0x77, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x66, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x66, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x73, 0x1a, 0xbf, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52,
	0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x76, 0x69, 0x65, 0x77,
	0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4d, 0x6f, 0x76,
	0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0xb2, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x53, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3f, 0x2e,
	0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x44, 0x61, 0x74, 0x61, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4d, 0x6f, 0x76, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08,
	0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42,
	0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xd9, 0x04, 0x0a, 0x18, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x45, 0x78, 0x69, 0x73, 0x74, 0x69, 0x6e,
	0x67, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x1a, 0x69, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x1a, 0xd1, 0x03, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x58, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x42,
	0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x46, 0x72, 0x6f, 0x6d, 0x45, 0x78, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x04, 0x76,
	0x69, 0x65, 0x77, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x6e, 0x79, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x76, 0x69, 0x65, 0x77,
	0x2e, 0x56, 0x69, 0x65, 0x77, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x12, 0x2c, 0x0a, 0x05, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x6e, 0x79,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0xba, 0x01, 0x0a, 0x05, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x5b, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x47, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x45, 0x78, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55,
	0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f,
	0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49,
	0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xc6, 0x0e, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x1a, 0xdd, 0x03, 0x0a, 0x03, 0x41, 0x64, 0x64, 0x1a, 0x9f, 0x01, 0x0a, 0x07, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x76, 0x69, 0x65, 0x77, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x76,
	0x69, 0x65, 0x77, 0x49, 0x64, 0x12, 0x44, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x1a, 0xb3, 0x02, 0x0a, 0x08,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x76,
	0x69, 0x65, 0x77, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x41, 0x64, 0x64, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x1a, 0xac, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x4d, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x39, 0x2e, 0x61, 0x6e, 0x79,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x61,
	0x74, 0x61, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x41, 0x64,
	0x64, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a,
	0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12,
	0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52,
	0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10,
	0x02, 0x1a, 0xb1, 0x03, 0x0a, 0x06, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x1a, 0x6b, 0x0a, 0x07,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x76, 0x69, 0x65, 0x77, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x76, 0x69, 0x65, 0x77, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x1a, 0xb9, 0x02, 0x0a, 0x08, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x76, 0x69, 0x65,
	0x77, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x1a, 0xaf, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x50, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3c, 0x2e, 0x61, 0x6e,
	0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44,
	0x61, 0x74, 0x61, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c,
	0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45,
	0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e,
	0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xf9, 0x03, 0x0a, 0x07, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63,
	0x65, 0x1a, 0xaf, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x69, 0x65, 0x77, 0x49, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x76, 0x69, 0x65, 0x77, 0x49, 0x64, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x44, 0x0a,
	0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e,
	0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x61,
	0x76, 0x69, 0x65, 0x77, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x1a, 0xbb, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4e, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x38, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x2c, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0xb0,
	0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x51, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3d, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x76, 0x69,
	0x65, 0x77, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63,
	0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a,
	0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12,
	0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52,
	0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10,
	0x02, 0x1a, 0xab, 0x03, 0x0a, 0x04, 0x53, 0x6f, 0x72, 0x74, 0x1a, 0x6b, 0x0a, 0x07, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x76, 0x69, 0x65, 0x77, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x76,
	0x69, 0x65, 0x77, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x1a, 0xb5, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70,
	0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x76, 0x69, 0x65, 0x77, 0x2e,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a,
	0xad, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x4e, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3a, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x76,
	0x69, 0x65, 0x77, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a,
	0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01,
	0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a,
	0xab, 0x0e, 0x0a, 0x04, 0x53, 0x6f, 0x72, 0x74, 0x1a, 0xd3, 0x03, 0x0a, 0x03, 0x41, 0x64, 0x64,
	0x1a, 0x99, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x69, 0x65, 0x77, 0x49, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x76, 0x69, 0x65, 0x77, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x04,
	0x73, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x6e, 0x79,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x76, 0x69, 0x65,
	0x77, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x1a, 0xaf, 0x02, 0x0a,
	0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61,
	0x76, 0x69, 0x65, 0x77, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x1a, 0xaa, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x4b, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x37, 0x2e, 0x61, 0x6e, 0x79, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x61, 0x74,
	0x61, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d,
	0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12,
	0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xad,
	0x03, 0x0a, 0x06, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x1a, 0x6b, 0x0a, 0x07, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x76, 0x69, 0x65, 0x77, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x76, 0x69,
	0x65, 0x77, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x1a, 0xb5, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x35, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63,
	0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x53,
	0x6f, 0x72, 0x74, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x2c, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0xad,
	0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x4e, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3a, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x76, 0x69,
	0x65, 0x77, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d,
	0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12,
	0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xef,
	0x03, 0x0a, 0x07, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x1a, 0xa9, 0x01, 0x0a, 0x07, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x76, 0x69, 0x65, 0x77, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x76, 0x69, 0x65, 0x77, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3e, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x53, 0x6f, 0x72, 0x74,
	0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x1a, 0xb7, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x36, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63,
	0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x53,
	0x6f, 0x72, 0x74, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a,
	0xae, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x4f, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3b, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x76,
	0x69, 0x65, 0x77, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11,
	0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10,
	0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02,
	0x1a, 0xaa, 0x03, 0x0a, 0x05, 0x53, 0x53, 0x6f, 0x72, 0x74, 0x1a, 0x6b, 0x0a, 0x07, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x76, 0x69, 0x65, 0x77, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x76,
	0x69, 0x65, 0x77, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x1a, 0xb3, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70,
	0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x76, 0x69, 0x65, 0x77, 0x2e,
	0x53, 0x6f, 0x72, 0x74, 0x2e, 0x53, 0x53, 0x6f, 0x72, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x2c, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0xac,
	0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x4d, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x39, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x76, 0x69,
	0x65, 0x77, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x2e, 0x53, 0x53, 0x6f, 0x72, 0x74, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d,
	0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xbe, 0x0f,
	0x0a, 0x0c, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0xef,
	0x03, 0x0a, 0x03, 0x41, 0x64, 0x64, 0x1a, 0xa5, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x69,
	0x65, 0x77, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x76, 0x69, 0x65, 0x77,
	0x49, 0x64, 0x12, 0x4a, 0x0a, 0x08, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x52, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0xbf,
	0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x61, 0x6e, 0x79,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x61,
	0x74, 0x61, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x64, 0x64, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a,
	0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61,
	0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0xb2, 0x01, 0x0a, 0x05,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x53, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x3f, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70,
	0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x76, 0x69, 0x65, 0x77, 0x2e,
	0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x64, 0x64,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11,
	0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10,
	0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02,
	0x1a, 0xcf, 0x03, 0x0a, 0x06, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x1a, 0x7d, 0x0a, 0x07, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x76, 0x69, 0x65, 0x77, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x76, 0x69, 0x65, 0x77, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x73, 0x1a, 0xc5, 0x02, 0x0a, 0x08, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x76, 0x69,
	0x65, 0x77, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x05,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x6e,
	0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0xb5, 0x01, 0x0a, 0x05, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x56, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x42, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63,
	0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x56,
	0x69, 0x65, 0x77, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32,
	0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00,
	0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f,
	0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54,
	0x10, 0x02, 0x1a, 0x9d, 0x04, 0x0a, 0x07, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x1a, 0xc7,
	0x01, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x69, 0x65, 0x77, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x76, 0x69, 0x65, 0x77, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x4a, 0x0a, 0x08,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e,
	0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0xc7, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52,
	0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x76, 0x69, 0x65, 0x77,
	0x2e, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65,
	0x70, 0x6c, 0x61, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x05, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x6e, 0x79,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0xb6, 0x01, 0x0a, 0x05, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x57, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x43, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x56, 0x69,
	0x65, 0x77, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x61,
	0x63, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32,
	0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00,
	0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f,
	0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54,
	0x10, 0x02, 0x1a, 0xc9, 0x03, 0x0a, 0x04, 0x53, 0x6f, 0x72, 0x74, 0x1a, 0x7d, 0x0a, 0x07, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x76, 0x69, 0x65, 0x77, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x76, 0x69, 0x65, 0x77, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x73, 0x1a, 0xc1, 0x02, 0x0a, 0x08, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x76, 0x69,
	0x65, 0x77, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x53, 0x6f, 0x72, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x6e, 0x79, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0xb3, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x54, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x40, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x76, 0x69, 0x65, 0x77, 0x2e, 0x56, 0x69, 0x65,
	0x77, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d,
	0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12,
	0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xa3,
	0x0d, 0x0a, 0x0b, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x1a, 0xa0,
	0x03, 0x0a, 0x0b, 0x53, 0x65, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x1a, 0x5d,
	0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x1a, 0xb1, 0x02,
	0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x61, 0x6e, 0x79, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x57, 0x69, 0x64,
	0x67, 0x65, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x1a, 0xab, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x4c, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x38, 0x2e, 0x61, 0x6e,
	0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x57,
	0x69, 0x64, 0x67, 0x65, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49,
	0x64, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a,
	0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12,
	0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52,
	0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10,
	0x02, 0x1a, 0xc3, 0x03, 0x0a, 0x09, 0x53, 0x65, 0x74, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x1a,
	0x85, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x49, 0x64, 0x12, 0x42, 0x0a, 0x06, 0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x2e, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x2e, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x52,
	0x06, 0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x1a, 0xad, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70,
	0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x2e, 0x53, 0x65,
	0x74, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a,
	0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61,
	0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0xa9, 0x01, 0x0a, 0x05,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x4a, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x36, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70,
	0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x2e, 0x53, 0x65,
	0x74, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e,
	0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e,
	0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f,
	0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0x91, 0x03, 0x0a, 0x08, 0x53, 0x65, 0x74, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x1a, 0x57, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x1a, 0xab, 0x02,
	0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x61, 0x6e, 0x79, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x57, 0x69, 0x64,
	0x67, 0x65, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x1a, 0xa8, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x49, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x35, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x57, 0x69, 0x64, 0x67,
	0x65, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b,
	0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09,
	0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0x96, 0x03, 0x0a, 0x09,
	0x53, 0x65, 0x74, 0x56, 0x69, 0x65, 0x77, 0x49, 0x64, 0x1a, 0x59, 0x0a, 0x07, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x76, 0x69, 0x65, 0x77, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x76, 0x69,
	0x65, 0x77, 0x49, 0x64, 0x1a, 0xad, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x47, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x31, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x56, 0x69,
	0x65, 0x77, 0x49, 0x64, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x6e, 0x79, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0xa9, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x4a, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x36, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x56, 0x69,
	0x65, 0x77, 0x49, 0x64, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c,
	0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52,
	0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50,
	0x55, 0x54, 0x10, 0x02, 0x1a, 0xa8, 0x29, 0x0a, 0x05, 0x44, 0x65, 0x62, 0x75, 0x67, 0x1a, 0x3c,
	0x0a, 0x08, 0x54, 0x72, 0x65, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x72,
	0x65, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x72, 0x65, 0x65,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x49, 0x64, 0x73, 0x1a, 0x99, 0x02, 0x0a,
	0x04, 0x53, 0x74, 0x61, 0x74, 0x1a, 0x09, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x85, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61,
	0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x62, 0x75, 0x67,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6a,
	0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6a,
	0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x1a, 0x9e, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x3f, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x2b, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x44, 0x65,
	0x62, 0x75, 0x67, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04,
	0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44,
	0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xef, 0x02, 0x0a, 0x09, 0x54, 0x72, 0x65,
	0x65, 0x48, 0x65, 0x61, 0x64, 0x73, 0x1a, 0x21, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x72, 0x65, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x74, 0x72, 0x65, 0x65, 0x49, 0x64, 0x1a, 0xbe, 0x02, 0x0a, 0x08, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x52, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x62, 0x75, 0x67, 0x2e, 0x54, 0x72, 0x65, 0x65, 0x48, 0x65,
	0x61, 0x64, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e,
	0x44, 0x65, 0x62, 0x75, 0x67, 0x2e, 0x54, 0x72, 0x65, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x1a, 0xa3, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x44,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x61,
	0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x62, 0x75, 0x67,
	0x2e, 0x54, 0x72, 0x65, 0x65, 0x48, 0x65, 0x61, 0x64, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08,
	0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42,
	0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0x8b, 0x03, 0x0a, 0x04, 0x54,
	0x72, 0x65, 0x65, 0x1a, 0x7b, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x74, 0x72, 0x65, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x74, 0x72, 0x65, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x22, 0x0a, 0x0c, 0x75, 0x6e,
	0x61, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0c, 0x75, 0x6e, 0x61, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x12, 0x20,
	0x0a, 0x0b, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x53, 0x76, 0x67, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0b, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x53, 0x76, 0x67,
	0x1a, 0x85, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61,
	0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x62, 0x75, 0x67,
	0x2e, 0x54, 0x72, 0x65, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x1a, 0x9e, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x3f, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x2b, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x44, 0x65,
	0x62, 0x75, 0x67, 0x2e, 0x54, 0x72, 0x65, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04,
	0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44,
	0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xfc, 0x02, 0x0a, 0x0c, 0x53, 0x70, 0x61,
	0x63, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x1a, 0x23, 0x0a, 0x07, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x1a, 0xc6,
	0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x61, 0x6e, 0x79,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x62, 0x75, 0x67, 0x2e, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x05, 0x69,
	0x6e, 0x66, 0x6f, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x6e, 0x79,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x62, 0x75, 0x67, 0x2e, 0x54,
	0x72, 0x65, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x1a, 0xa6,
	0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x47, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x52, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x62, 0x75, 0x67, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65,
	0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e,
	0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e,
	0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f,
	0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xb2, 0x02, 0x0a, 0x0f, 0x53, 0x74, 0x61, 0x63,
	0x6b, 0x47, 0x6f, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x73, 0x1a, 0x1d, 0x0a, 0x07, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x1a, 0xff, 0x01, 0x0a, 0x08, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x52, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x62, 0x75, 0x67, 0x2e, 0x53, 0x74, 0x61, 0x63, 0x6b,
	0x47, 0x6f, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x1a, 0xa9, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x4a, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x36, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x62, 0x75, 0x67, 0x2e, 0x53, 0x74, 0x61,
	0x63, 0x6b, 0x47, 0x6f, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e,
	0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a,
	0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xa9, 0x03, 0x0a,
	0x10, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x1a, 0x4f, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x63, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x06, 0x64, 0x6f, 0x63, 0x49, 0x64, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x49, 0x64, 0x1a, 0xc3, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x48, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32,
	0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x62,
	0x75, 0x67, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x2c, 0x0a,
	0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61,
	0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0xaa, 0x01, 0x0a, 0x05,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x4b, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x37, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70,
	0x63, 0x2e, 0x44, 0x65, 0x62, 0x75, 0x67, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x4c, 0x6f,
	0x63, 0x61, 0x6c, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04,
	0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44,
	0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xbe, 0x02, 0x0a, 0x0d, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x09, 0x0a, 0x07, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0xa1, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x45, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2f, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e,
	0x44, 0x65, 0x62, 0x75, 0x67, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0d, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a,
	0xa7, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x48, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x34, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x62, 0x75, 0x67, 0x2e, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a,
	0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f,
	0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41,
	0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xb6, 0x02, 0x0a, 0x0d, 0x4f, 0x70,
	0x65, 0x6e, 0x65, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x1a, 0x09, 0x0a, 0x07, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x99, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63,
	0x2e, 0x44, 0x65, 0x62, 0x75, 0x67, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x65, 0x64, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x73, 0x1a, 0xa7, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x48, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x34, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x44,
	0x65, 0x62, 0x75, 0x67, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x65, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32,
	0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00,
	0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f,
	0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54,
	0x10, 0x02, 0x1a, 0xda, 0x02, 0x0a, 0x0b, 0x52, 0x75, 0x6e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x72, 0x1a, 0x3d, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a,
	0x11, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x53, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x3a, 0x04, 0x88, 0xe6, 0x03,
	0x01, 0x1a, 0x8b, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e,
	0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x62, 0x75,
	0x67, 0x2e, 0x52, 0x75, 0x6e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x1a, 0xa5, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x46, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x32, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x44, 0x65,
	0x62, 0x75, 0x67, 0x2e, 0x52, 0x75, 0x6e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a,
	0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01,
	0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a,
	0xd3, 0x02, 0x0a, 0x12, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x54, 0x72, 0x61, 0x63, 0x65, 0x1a, 0x21, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x69, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x64, 0x69, 0x72, 0x3a, 0x04, 0x88, 0xe6, 0x03, 0x01, 0x1a, 0x99, 0x02, 0x0a, 0x08, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x52, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x62, 0x75, 0x67, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x54, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x1a, 0xac, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x4d, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x39,
	0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x62,
	0x75, 0x67, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x54, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c,
	0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45,
	0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e,
	0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xc7, 0x02, 0x0a, 0x09, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74,
	0x4c, 0x6f, 0x67, 0x1a, 0x21, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x64, 0x69, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x69, 0x72,
	0x3a, 0x04, 0x88, 0xe6, 0x03, 0x01, 0x1a, 0x96, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63,
	0x2e, 0x44, 0x65, 0x62, 0x75, 0x67, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x4c, 0x6f, 0x67,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x1a, 0xb2, 0x01, 0x0a, 0x05, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x44, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x30, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63,
	0x2e, 0x44, 0x65, 0x62, 0x75, 0x67, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x4c, 0x6f, 0x67,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x41, 0x0a, 0x04,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11,
	0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10,
	0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02,
	0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x4f, 0x5f, 0x46, 0x4f, 0x4c, 0x44, 0x45, 0x52, 0x10, 0x03, 0x1a,
	0xdd, 0x02, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x1a, 0x53, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x32, 0x0a, 0x14, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x4f, 0x66, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x54, 0x6f, 0x53, 0x65, 0x6e,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f,
	0x66, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x54, 0x6f, 0x53, 0x65, 0x6e, 0x64, 0x1a, 0xff, 0x01,
	0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61, 0x6e, 0x79, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x62, 0x75, 0x67, 0x2e, 0x50, 0x69,
	0x6e, 0x67, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x1a, 0x9e,
	0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x3f, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x52, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x62, 0x75, 0x67, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a,
	0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01,
	0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a,
	0xcb, 0x05, 0x0a, 0x15, 0x41, 0x6e, 0x79, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x1a, 0xa7, 0x01, 0x0a, 0x07, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x64, 0x12, 0x52, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x38, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63,
	0x2e, 0x44, 0x65, 0x62, 0x75, 0x67, 0x2e, 0x41, 0x6e, 0x79, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x52, 0x07, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x42, 0x79, 0x22, 0x2c, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79,
	0x12, 0x0c, 0x0a, 0x08, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x49, 0x44, 0x10, 0x00, 0x12, 0x13,
	0x0a, 0x0f, 0x49, 0x54, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4f, 0x52, 0x44, 0x45,
	0x52, 0x10, 0x01, 0x1a, 0x87, 0x04, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4d, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x37, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x44, 0x65,
	0x62, 0x75, 0x67, 0x2e, 0x41, 0x6e, 0x79, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x52, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x38, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x44,
	0x65, 0x62, 0x75, 0x67, 0x2e, 0x41, 0x6e, 0x79, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x77, 0x72, 0x6f, 0x6e, 0x67, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x77, 0x72, 0x6f, 0x6e, 0x67, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x1a, 0x85, 0x01, 0x0a, 0x06, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2f, 0x0a, 0x06, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x52, 0x06, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x1a, 0xaf, 0x01, 0x0a, 0x05,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x50, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x3c, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70,
	0x63, 0x2e, 0x44, 0x65, 0x62, 0x75, 0x67, 0x2e, 0x41, 0x6e, 0x79, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d,
	0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xbf, 0x02,
	0x0a, 0x08, 0x4e, 0x65, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x1a, 0x27, 0x0a, 0x07, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x59,
	0x6d, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x59, 0x6d, 0x6c, 0x1a, 0x89, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x40, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2a, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x44, 0x65,
	0x62, 0x75, 0x67, 0x2e, 0x4e, 0x65, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x1a, 0xa2, 0x01, 0x0a, 0x05, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x43, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x2f, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63,
	0x2e, 0x44, 0x65, 0x62, 0x75, 0x67, 0x2e, 0x4e, 0x65, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a,
	0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01,
	0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a,
	0x97, 0x04, 0x0a, 0x07, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x1a, 0x8b, 0x04, 0x0a, 0x0d,
	0x53, 0x65, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x1a, 0xf7, 0x01,
	0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x18, 0x0a, 0x07, 0x77, 0x6f, 0x72, 0x6b, 0x64, 0x69, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x77, 0x6f, 0x72, 0x6b, 0x64, 0x69, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x67,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x67,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x6f, 0x4e, 0x6f, 0x74, 0x53, 0x65,
	0x6e, 0x64, 0x4c, 0x6f, 0x67, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x64, 0x6f,
	0x4e, 0x6f, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x4c, 0x6f, 0x67, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x64,
	0x6f, 0x4e, 0x6f, 0x74, 0x53, 0x61, 0x76, 0x65, 0x4c, 0x6f, 0x67, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0d, 0x64, 0x6f, 0x4e, 0x6f, 0x74, 0x53, 0x61, 0x76, 0x65, 0x4c, 0x6f, 0x67,
	0x73, 0x12, 0x2e, 0x0a, 0x12, 0x64, 0x6f, 0x4e, 0x6f, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x65,
	0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x64,
	0x6f, 0x4e, 0x6f, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72,
	0x79, 0x3a, 0x04, 0x88, 0xe6, 0x03, 0x01, 0x1a, 0xff, 0x01, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70,
	0x63, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x53, 0x65, 0x74, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0xa9, 0x01,
	0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x4a, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x36, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x52, 0x70, 0x63, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x53, 0x65, 0x74, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a,
	0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f,
	0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41,
	0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xa3, 0x03, 0x0a, 0x03, 0x4c, 0x6f,
	0x67, 0x1a, 0x9b, 0x03, 0x0a, 0x04, 0x53, 0x65, 0x6e, 0x64, 0x1a, 0xaa, 0x01, 0x0a, 0x07, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x39, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x23, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4c, 0x6f,
	0x67, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x4a, 0x0a, 0x05, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x12, 0x09, 0x0a, 0x05, 0x44, 0x45, 0x42, 0x55, 0x47, 0x10, 0x00, 0x12,
	0x09, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x46, 0x41,
	0x54, 0x41, 0x4c, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x4e, 0x46, 0x4f, 0x10, 0x03, 0x12,
	0x09, 0x0a, 0x05, 0x50, 0x41, 0x4e, 0x49, 0x43, 0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07, 0x57, 0x41,
	0x52, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x05, 0x1a, 0xe5, 0x01, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70,
	0x63, 0x2e, 0x4c, 0x6f, 0x67, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x1a, 0x9c, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x3d, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4c, 0x6f, 0x67, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a,
	0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01,
	0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a,
	0xcf, 0x06, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x1a, 0x97, 0x02, 0x0a, 0x06,
	0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x1a, 0x19, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x1a, 0xf1, 0x01, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e,
	0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x1a, 0xa2, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x43, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2f, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x43,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c,
	0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45,
	0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e,
	0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0x90, 0x02, 0x0a, 0x09, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x1a, 0x09, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0xf7,
	0x01, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x61, 0x6e, 0x79,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x1a, 0xa5, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x46, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04,
	0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44,
	0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0x96, 0x02, 0x0a, 0x0b, 0x55, 0x6e, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x1a, 0x09, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0xfb, 0x01, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x45, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2f, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x50, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0xa7, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x48, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x34, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x50, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a,
	0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12,
	0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52,
	0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10,
	0x02, 0x1a, 0xf7, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x6e, 0x79, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0x9f, 0x01, 0x0a, 0x05, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x40, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x2c, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b,
	0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09,
	0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0x8d, 0x09, 0x0a, 0x0c,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x9a, 0x03, 0x0a,
	0x04, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x41, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x20, 0x0a, 0x0b, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x52, 0x65, 0x61, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x52, 0x65,
	0x61, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x1a, 0xce, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52,
	0x70, 0x63, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x41, 0x0a, 0x0d, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0xb9, 0x01,
	0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x46, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x52, 0x70, 0x63, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x46, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c,
	0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45,
	0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e,
	0x50, 0x55, 0x54, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41,
	0x4c, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x03, 0x1a, 0xfc, 0x02, 0x0a, 0x05, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x1a, 0x63, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73,
	0x12, 0x46, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x1a, 0x8d, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52,
	0x70, 0x63, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0xba, 0x01, 0x0a, 0x05,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x47, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70,
	0x63, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x46, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c,
	0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52,
	0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50,
	0x55, 0x54, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c,
	0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x03, 0x1a, 0xe0, 0x02, 0x0a, 0x04, 0x54, 0x65, 0x73,
	0x74, 0x1a, 0x09, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0xcc, 0x02, 0x0a,
	0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x3f,
	0x0a, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a,
	0xb9, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x46, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x46, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e,
	0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e,
	0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f,
	0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x49, 0x4e, 0x54, 0x45, 0x52,
	0x4e, 0x41, 0x4c, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x03, 0x1a, 0xc8, 0x2b, 0x0a, 0x0a,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x1a, 0xe7, 0x03, 0x0a, 0x09, 0x47,
	0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x1a, 0x23, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x6f, 0x43, 0x61, 0x63, 0x68, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x6e, 0x6f, 0x43, 0x61, 0x63, 0x68, 0x65, 0x1a, 0xb4, 0x03,
	0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x61, 0x6e, 0x79, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68,
	0x69, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x2d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x1a, 0xb0, 0x02, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x49, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x35, 0x2e, 0x61, 0x6e, 0x79, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68,
	0x69, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xb9, 0x01, 0x0a, 0x04, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d,
	0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x12, 0x11, 0x0a,
	0x0d, 0x4e, 0x4f, 0x54, 0x5f, 0x4c, 0x4f, 0x47, 0x47, 0x45, 0x44, 0x5f, 0x49, 0x4e, 0x10, 0x03,
	0x12, 0x16, 0x0a, 0x12, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x4e, 0x4f, 0x44, 0x45,
	0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x04, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x41, 0x43, 0x48,
	0x45, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x05, 0x12, 0x18, 0x0a, 0x14, 0x4d, 0x45, 0x4d,
	0x42, 0x45, 0x52, 0x53, 0x48, 0x49, 0x50, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e,
	0x44, 0x10, 0x06, 0x12, 0x1a, 0x0a, 0x16, 0x4d, 0x45, 0x4d, 0x42, 0x45, 0x52, 0x53, 0x48, 0x49,
	0x50, 0x5f, 0x57, 0x52, 0x4f, 0x4e, 0x47, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x10, 0x07, 0x12,
	0x13, 0x0a, 0x0f, 0x43, 0x41, 0x4e, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x4e, 0x45,
	0x43, 0x54, 0x10, 0x08, 0x1a, 0xff, 0x04, 0x0a, 0x0b, 0x49, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x1a, 0x8b, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x54, 0x69, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x65, 0x64, 0x54, 0x69, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x73, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x42,
	0x0a, 0x0a, 0x6e, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x22, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x6e, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x1a, 0xe1, 0x03, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x48, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32,
	0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x49, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0x8a, 0x03, 0x0a, 0x05, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x4b, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x37, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x49, 0x73, 0x4e, 0x61, 0x6d,
	0x65, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x91, 0x02, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e,
	0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e,
	0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f,
	0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x4f, 0x4f, 0x5f, 0x53,
	0x48, 0x4f, 0x52, 0x54, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x54, 0x4f, 0x4f, 0x5f, 0x4c, 0x4f,
	0x4e, 0x47, 0x10, 0x04, 0x12, 0x15, 0x0a, 0x11, 0x48, 0x41, 0x53, 0x5f, 0x49, 0x4e, 0x56, 0x41,
	0x4c, 0x49, 0x44, 0x5f, 0x43, 0x48, 0x41, 0x52, 0x53, 0x10, 0x05, 0x12, 0x19, 0x0a, 0x15, 0x54,
	0x49, 0x45, 0x52, 0x5f, 0x46, 0x45, 0x41, 0x54, 0x55, 0x52, 0x45, 0x53, 0x5f, 0x4e, 0x4f, 0x5f,
	0x4e, 0x41, 0x4d, 0x45, 0x10, 0x06, 0x12, 0x12, 0x0a, 0x0e, 0x54, 0x49, 0x45, 0x52, 0x5f, 0x4e,
	0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x07, 0x12, 0x11, 0x0a, 0x0d, 0x4e, 0x4f,
	0x54, 0x5f, 0x4c, 0x4f, 0x47, 0x47, 0x45, 0x44, 0x5f, 0x49, 0x4e, 0x10, 0x08, 0x12, 0x16, 0x0a,
	0x12, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x4e, 0x4f, 0x44, 0x45, 0x5f, 0x45, 0x52,
	0x52, 0x4f, 0x52, 0x10, 0x09, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x41, 0x43, 0x48, 0x45, 0x5f, 0x45,
	0x52, 0x52, 0x4f, 0x52, 0x10, 0x0a, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x41, 0x4e, 0x5f, 0x4e, 0x4f,
	0x54, 0x5f, 0x52, 0x45, 0x53, 0x45, 0x52, 0x56, 0x45, 0x10, 0x0b, 0x12, 0x13, 0x0a, 0x0f, 0x43,
	0x41, 0x4e, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x10, 0x0c,
	0x12, 0x14, 0x0a, 0x10, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x53, 0x45,
	0x52, 0x56, 0x45, 0x44, 0x10, 0x0d, 0x1a, 0xc7, 0x06, 0x0a, 0x16, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0xf8, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a,
	0x0d, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x54, 0x69, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x54,
	0x69, 0x65, 0x72, 0x12, 0x4d, 0x0a, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x61, 0x6e, 0x79,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6e, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x42, 0x0a, 0x0a, 0x6e, 0x73,
	0x4e, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22,
	0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4e,
	0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x0a, 0x6e, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x1a, 0xb1, 0x04, 0x0a,
	0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69,
	0x70, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1e,
	0x0a, 0x0a, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x1c,
	0x0a, 0x09, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x1a, 0x91, 0x03, 0x0a,
	0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x56, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x42, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52,
	0x70, 0x63, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x8d, 0x02, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c,
	0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45,
	0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e,
	0x50, 0x55, 0x54, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x4e, 0x4f, 0x54, 0x5f, 0x4c, 0x4f, 0x47,
	0x47, 0x45, 0x44, 0x5f, 0x49, 0x4e, 0x10, 0x03, 0x12, 0x16, 0x0a, 0x12, 0x50, 0x41, 0x59, 0x4d,
	0x45, 0x4e, 0x54, 0x5f, 0x4e, 0x4f, 0x44, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x04,
	0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x41, 0x43, 0x48, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10,
	0x05, 0x12, 0x12, 0x0a, 0x0e, 0x54, 0x49, 0x45, 0x52, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f,
	0x55, 0x4e, 0x44, 0x10, 0x06, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x49, 0x45, 0x52, 0x5f, 0x49, 0x4e,
	0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x07, 0x12, 0x1a, 0x0a, 0x16, 0x50, 0x41, 0x59, 0x4d, 0x45,
	0x4e, 0x54, 0x5f, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49,
	0x44, 0x10, 0x08, 0x12, 0x0f, 0x0a, 0x0b, 0x42, 0x41, 0x44, 0x5f, 0x41, 0x4e, 0x59, 0x4e, 0x41,
	0x4d, 0x45, 0x10, 0x09, 0x12, 0x1d, 0x0a, 0x19, 0x4d, 0x45, 0x4d, 0x42, 0x45, 0x52, 0x53, 0x48,
	0x49, 0x50, 0x5f, 0x41, 0x4c, 0x52, 0x45, 0x41, 0x44, 0x59, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54,
	0x53, 0x10, 0x0a, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x41, 0x4e, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x43,
	0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x10, 0x0b, 0x12, 0x16, 0x0a, 0x12, 0x45, 0x4d, 0x41, 0x49,
	0x4c, 0x5f, 0x57, 0x52, 0x4f, 0x4e, 0x47, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x10, 0x0c,
	0x1a, 0x9b, 0x03, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x4c, 0x69,
	0x6e, 0x6b, 0x55, 0x72, 0x6c, 0x1a, 0x09, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0xfb, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x61,
	0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x4c,
	0x69, 0x6e, 0x6b, 0x55, 0x72, 0x6c, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09,
	0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x55, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x6c, 0x55, 0x72, 0x6c, 0x1a, 0x81, 0x02, 0x0a, 0x05, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x50, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x3c, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63,
	0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x50,
	0x6f, 0x72, 0x74, 0x61, 0x6c, 0x4c, 0x69, 0x6e, 0x6b, 0x55, 0x72, 0x6c, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x83, 0x01, 0x0a, 0x04, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d,
	0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x12, 0x11, 0x0a,
	0x0d, 0x4e, 0x4f, 0x54, 0x5f, 0x4c, 0x4f, 0x47, 0x47, 0x45, 0x44, 0x5f, 0x49, 0x4e, 0x10, 0x03,
	0x12, 0x16, 0x0a, 0x12, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x4e, 0x4f, 0x44, 0x45,
	0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x04, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x41, 0x43, 0x48,
	0x45, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x05, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x41, 0x4e,
	0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x10, 0x06, 0x1a, 0x88,
	0x04, 0x0a, 0x08, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x1a, 0x65, 0x0a, 0x07, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x73, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x42,
	0x0a, 0x0a, 0x6e, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x22, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x6e, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x1a, 0x94, 0x03, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x45, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f,
	0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0xc0, 0x02, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x48, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x34,
	0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xca, 0x01, 0x0a,
	0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12,
	0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52,
	0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10,
	0x02, 0x12, 0x11, 0x0a, 0x0d, 0x4e, 0x4f, 0x54, 0x5f, 0x4c, 0x4f, 0x47, 0x47, 0x45, 0x44, 0x5f,
	0x49, 0x4e, 0x10, 0x03, 0x12, 0x16, 0x0a, 0x12, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f,
	0x4e, 0x4f, 0x44, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x04, 0x12, 0x0f, 0x0a, 0x0b,
	0x43, 0x41, 0x43, 0x48, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x05, 0x12, 0x18, 0x0a,
	0x14, 0x4d, 0x45, 0x4d, 0x42, 0x45, 0x52, 0x53, 0x48, 0x49, 0x50, 0x5f, 0x4e, 0x4f, 0x54, 0x5f,
	0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x06, 0x12, 0x1a, 0x0a, 0x16, 0x4d, 0x45, 0x4d, 0x42, 0x45,
	0x52, 0x53, 0x48, 0x49, 0x50, 0x5f, 0x57, 0x52, 0x4f, 0x4e, 0x47, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x45, 0x10, 0x07, 0x12, 0x0f, 0x0a, 0x0b, 0x42, 0x41, 0x44, 0x5f, 0x41, 0x4e, 0x59, 0x4e, 0x41,
	0x4d, 0x45, 0x10, 0x08, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x41, 0x4e, 0x5f, 0x4e, 0x4f, 0x54, 0x5f,
	0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x10, 0x09, 0x1a, 0xd4, 0x03, 0x0a, 0x1a, 0x47, 0x65,
	0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x1a, 0x09, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0xaa, 0x03, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x57, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x41, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x49, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e, 0x61, 0x6e, 0x79, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x73, 0x68, 0x69, 0x70, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x1a, 0xf9, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x5a,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x46, 0x2e, 0x61,
	0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x72, 0x0a, 0x04,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11,
	0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10,
	0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02,
	0x12, 0x11, 0x0a, 0x0d, 0x4e, 0x4f, 0x54, 0x5f, 0x4c, 0x4f, 0x47, 0x47, 0x45, 0x44, 0x5f, 0x49,
	0x4e, 0x10, 0x03, 0x12, 0x16, 0x0a, 0x12, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x4e,
	0x4f, 0x44, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x04, 0x12, 0x13, 0x0a, 0x0f, 0x43,
	0x41, 0x4e, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x10, 0x0c,
	0x1a, 0xc0, 0x05, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x1a, 0xbb, 0x01, 0x0a, 0x07, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x34, 0x0a, 0x15, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x6f, 0x4e, 0x65, 0x77, 0x73, 0x6c, 0x65,
	0x74, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x6f, 0x4e, 0x65, 0x77, 0x73, 0x6c, 0x65, 0x74, 0x74, 0x65,
	0x72, 0x12, 0x38, 0x0a, 0x17, 0x69, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x72, 0x54, 0x69, 0x70, 0x73,
	0x41, 0x6e, 0x64, 0x54, 0x75, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x17, 0x69, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x72, 0x54, 0x69, 0x70, 0x73, 0x41,
	0x6e, 0x64, 0x54, 0x75, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x69,
	0x73, 0x4f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x69, 0x73, 0x4f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0xe9, 0x03, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70,
	0x63, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x47, 0x65, 0x74,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0x89, 0x03, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x54, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x40, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x87, 0x02, 0x0a, 0x04, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d,
	0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12,
	0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x12, 0x11,
	0x0a, 0x0d, 0x4e, 0x4f, 0x54, 0x5f, 0x4c, 0x4f, 0x47, 0x47, 0x45, 0x44, 0x5f, 0x49, 0x4e, 0x10,
	0x03, 0x12, 0x16, 0x0a, 0x12, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x4e, 0x4f, 0x44,
	0x45, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x04, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x41, 0x43,
	0x48, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x05, 0x12, 0x16, 0x0a, 0x12, 0x45, 0x4d,
	0x41, 0x49, 0x4c, 0x5f, 0x57, 0x52, 0x4f, 0x4e, 0x47, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54,
	0x10, 0x06, 0x12, 0x1a, 0x0a, 0x16, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x41, 0x4c, 0x52, 0x45,
	0x41, 0x44, 0x59, 0x5f, 0x56, 0x45, 0x52, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x07, 0x12, 0x15,
	0x0a, 0x11, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x41, 0x4c, 0x52, 0x45, 0x44, 0x59, 0x5f, 0x53,
	0x45, 0x4e, 0x54, 0x10, 0x08, 0x12, 0x18, 0x0a, 0x14, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x46,
	0x41, 0x49, 0x4c, 0x45, 0x44, 0x5f, 0x54, 0x4f, 0x5f, 0x53, 0x45, 0x4e, 0x44, 0x10, 0x09, 0x12,
	0x1d, 0x0a, 0x19, 0x4d, 0x45, 0x4d, 0x42, 0x45, 0x52, 0x53, 0x48, 0x49, 0x50, 0x5f, 0x41, 0x4c,
	0x52, 0x45, 0x41, 0x44, 0x59, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x53, 0x10, 0x0a, 0x12, 0x13,
	0x0a, 0x0f, 0x43, 0x41, 0x4e, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43,
	0x54, 0x10, 0x0b, 0x1a, 0x85, 0x04, 0x0a, 0x0f, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x1a, 0x1d, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x1a, 0xd2, 0x03, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x36, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63,
	0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x1a, 0xf7, 0x02, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x4f, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3b, 0x2e, 0x61, 0x6e, 0x79, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68,
	0x69, 0x70, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f,
	0x64, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xfa,
	0x01, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10,
	0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52,
	0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55,
	0x54, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x4e, 0x4f, 0x54, 0x5f, 0x4c, 0x4f, 0x47, 0x47, 0x45,
	0x44, 0x5f, 0x49, 0x4e, 0x10, 0x03, 0x12, 0x16, 0x0a, 0x12, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e,
	0x54, 0x5f, 0x4e, 0x4f, 0x44, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x04, 0x12, 0x0f,
	0x0a, 0x0b, 0x43, 0x41, 0x43, 0x48, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x05, 0x12,
	0x1a, 0x0a, 0x16, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x41, 0x4c, 0x52, 0x45, 0x41, 0x44, 0x59,
	0x5f, 0x56, 0x45, 0x52, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x06, 0x12, 0x10, 0x0a, 0x0c, 0x43,
	0x4f, 0x44, 0x45, 0x5f, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x44, 0x10, 0x07, 0x12, 0x0e, 0x0a,
	0x0a, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x57, 0x52, 0x4f, 0x4e, 0x47, 0x10, 0x08, 0x12, 0x18, 0x0a,
	0x14, 0x4d, 0x45, 0x4d, 0x42, 0x45, 0x52, 0x53, 0x48, 0x49, 0x50, 0x5f, 0x4e, 0x4f, 0x54, 0x5f,
	0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x09, 0x12, 0x1d, 0x0a, 0x19, 0x4d, 0x45, 0x4d, 0x42, 0x45,
	0x52, 0x53, 0x48, 0x49, 0x50, 0x5f, 0x41, 0x4c, 0x52, 0x45, 0x41, 0x44, 0x59, 0x5f, 0x41, 0x43,
	0x54, 0x49, 0x56, 0x45, 0x10, 0x0a, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x41, 0x4e, 0x5f, 0x4e, 0x4f,
	0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x10, 0x0b, 0x1a, 0xd0, 0x03, 0x0a, 0x08,
	0x47, 0x65, 0x74, 0x54, 0x69, 0x65, 0x72, 0x73, 0x1a, 0x3b, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x6f, 0x43, 0x61, 0x63, 0x68, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x6e, 0x6f, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c,
	0x6f, 0x63, 0x61, 0x6c, 0x65, 0x1a, 0x86, 0x03, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x45, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2f, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x69,
	0x65, 0x72, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x37, 0x0a, 0x05, 0x74, 0x69, 0x65,
	0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73,
	0x68, 0x69, 0x70, 0x54, 0x69, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x74, 0x69, 0x65,
	0x72, 0x73, 0x1a, 0xf9, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x48, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x34, 0x2e, 0x61, 0x6e, 0x79,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73,
	0x68, 0x69, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x69, 0x65, 0x72, 0x73, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x83, 0x01, 0x0a, 0x04, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d,
	0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x12, 0x11, 0x0a,
	0x0d, 0x4e, 0x4f, 0x54, 0x5f, 0x4c, 0x4f, 0x47, 0x47, 0x45, 0x44, 0x5f, 0x49, 0x4e, 0x10, 0x03,
	0x12, 0x16, 0x0a, 0x12, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x4e, 0x4f, 0x44, 0x45,
	0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x04, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x41, 0x43, 0x48,
	0x45, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x05, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x41, 0x4e,
	0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x10, 0x06, 0x1a, 0xe5,
	0x03, 0x0a, 0x15, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x41, 0x70, 0x70, 0x53, 0x74, 0x6f, 0x72,
	0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x1a, 0x23, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x1a, 0xa6, 0x03,
	0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x61, 0x6e, 0x79, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68,
	0x69, 0x70, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x41, 0x70, 0x70, 0x53, 0x74, 0x6f, 0x72,
	0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0xc5,
	0x02, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x55, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x41, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x2e,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x41, 0x70, 0x70, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65,
	0x63, 0x65, 0x69, 0x70, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0xc2, 0x01, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55,
	0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f,
	0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49,
	0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x4e, 0x4f, 0x54, 0x5f, 0x4c, 0x4f,
	0x47, 0x47, 0x45, 0x44, 0x5f, 0x49, 0x4e, 0x10, 0x03, 0x12, 0x16, 0x0a, 0x12, 0x50, 0x41, 0x59,
	0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x4e, 0x4f, 0x44, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10,
	0x04, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x41, 0x43, 0x48, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52,
	0x10, 0x05, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x52, 0x45,
	0x43, 0x45, 0x49, 0x50, 0x54, 0x10, 0x06, 0x12, 0x1f, 0x0a, 0x1b, 0x50, 0x55, 0x52, 0x43, 0x48,
	0x41, 0x53, 0x45, 0x5f, 0x52, 0x45, 0x47, 0x49, 0x53, 0x54, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x07, 0x12, 0x1c, 0x0a, 0x18, 0x53, 0x55, 0x42, 0x53,
	0x43, 0x52, 0x49, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x4e, 0x45, 0x57, 0x5f, 0x45,
	0x52, 0x52, 0x4f, 0x52, 0x10, 0x08, 0x1a, 0xbe, 0x10, 0x0a, 0x0b, 0x4e, 0x61, 0x6d, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0xed, 0x04, 0x0a, 0x0b, 0x52, 0x65, 0x73, 0x6f, 0x6c,
	0x76, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x65, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6e, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x42, 0x0a, 0x0a, 0x6e, 0x73, 0x4e,
	0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e,
	0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4e, 0x61,
	0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0a, 0x6e, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x1a, 0xf6, 0x03,
	0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x61, 0x6e, 0x79, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x53, 0x63, 0x77, 0x45,
	0x74, 0x68, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x12, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x53, 0x63, 0x77, 0x45, 0x74, 0x68, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x45, 0x74, 0x68, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x45, 0x74, 0x68, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x28, 0x0a,
	0x0f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x41, 0x6e, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x41, 0x6e, 0x79,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x45, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x73, 0x1a, 0xc0, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x4c, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x38, 0x2e, 0x61, 0x6e,
	0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x47, 0x0a,
	0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12,
	0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52,
	0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10,
	0x02, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x41, 0x4e, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x43, 0x4f, 0x4e,
	0x4e, 0x45, 0x43, 0x54, 0x10, 0x03, 0x1a, 0xbe, 0x03, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x6f, 0x6c,
	0x76, 0x65, 0x41, 0x6e, 0x79, 0x49, 0x64, 0x1a, 0x1f, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x1a, 0x8c, 0x03, 0x0a, 0x08, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52,
	0x70, 0x63, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52,
	0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x41, 0x6e, 0x79, 0x49, 0x64, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x05, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x73, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x42, 0x0a, 0x0a, 0x6e, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x6e, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x1a, 0xc1, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x4d, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x39, 0x2e, 0x61, 0x6e,
	0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x41, 0x6e, 0x79,
	0x49, 0x64, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x47,
	0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00,
	0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f,
	0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54,
	0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x41, 0x4e, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x43, 0x4f,
	0x4e, 0x4e, 0x45, 0x43, 0x54, 0x10, 0x03, 0x1a, 0xc8, 0x03, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x6f,
	0x6c, 0x76, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x1a, 0x23, 0x0a, 0x07, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x1a,
	0x90, 0x03, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x61, 0x6e,
	0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x53, 0x70, 0x61,
	0x63, 0x65, 0x49, 0x64, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6f,
	0x75, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x66, 0x6f, 0x75, 0x6e, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x6e, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6e, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x42, 0x0a, 0x0a, 0x6e, 0x73, 0x4e, 0x61,
	0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x61,
	0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x0a, 0x6e, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x1a, 0xc3, 0x01, 0x0a,
	0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x4f, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x3b, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52,
	0x70, 0x63, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52,
	0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x47, 0x0a, 0x04, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d,
	0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x12, 0x13, 0x0a,
	0x0f, 0x43, 0x41, 0x4e, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54,
	0x10, 0x03, 0x1a, 0xb2, 0x04, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x1a, 0xa2, 0x04, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x1a, 0x09, 0x0a, 0x07, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x8f, 0x04, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4d, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x37, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e,
	0x4e, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x26, 0x0a, 0x0e, 0x6e, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6e, 0x73, 0x4e, 0x61, 0x6d,
	0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x65, 0x64, 0x12, 0x42, 0x0a, 0x0a, 0x6e, 0x73, 0x4e,
	0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e,
	0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4e, 0x61,
	0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0a, 0x6e, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a,
	0x0e, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x65, 0x66, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x4c, 0x65, 0x66, 0x74, 0x12, 0x30, 0x0a, 0x13, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x65, 0x66, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x13, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x4c, 0x65, 0x66, 0x74, 0x1a, 0xed, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x50, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x3c, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x4e, 0x61,
	0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x70, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a,
	0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f,
	0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41,
	0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x4e, 0x4f, 0x54,
	0x5f, 0x4c, 0x4f, 0x47, 0x47, 0x45, 0x44, 0x5f, 0x49, 0x4e, 0x10, 0x03, 0x12, 0x14, 0x0a, 0x10,
	0x42, 0x41, 0x44, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x52, 0x45, 0x53, 0x4f, 0x4c, 0x56, 0x45,
	0x10, 0x04, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x41, 0x4e, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x43, 0x4f,
	0x4e, 0x4e, 0x45, 0x43, 0x54, 0x10, 0x05, 0x1a, 0x87, 0x03, 0x0a, 0x09, 0x42, 0x72, 0x6f, 0x61,
	0x64, 0x63, 0x61, 0x73, 0x74, 0x1a, 0xf9, 0x02, 0x0a, 0x0c, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0x23, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0xc3, 0x02, 0x0a, 0x08,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52,
	0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x48, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x52, 0x70, 0x63, 0x2e, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x2e, 0x50, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x1a, 0xbe, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x4b, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x37, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74,
	0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x46, 0x0a, 0x04, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d,
	0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x12, 0x12, 0x0a,
	0x0e, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10,
	0x03, 0x1a, 0x88, 0x08, 0x0a, 0x06, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x1a, 0xb8, 0x02, 0x0a,
	0x07, 0x53, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x39, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x1a, 0xf1, 0x01, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x40, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2a, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x1a, 0xa2, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x43, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2f, 0x2e, 0x61, 0x6e, 0x79,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x53, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e,
	0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e,
	0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f,
	0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xb4, 0x02, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74,
	0x1a, 0x09, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0xa0, 0x02, 0x0a, 0x08,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x07, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x1a, 0x9f, 0x01, 0x0a,
	0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x40, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52,
	0x70, 0x63, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d,
	0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12,
	0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0x8b,
	0x03, 0x0a, 0x0c, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x1a,
	0xfa, 0x02, 0x0a, 0x03, 0x53, 0x65, 0x74, 0x1a, 0x59, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x4e, 0x0a, 0x11, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e,
	0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x11, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x54, 0x79,
	0x70, 0x65, 0x1a, 0x97, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x49, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33,
	0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x2e, 0x53, 0x65, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0xbf, 0x01, 0x0a, 0x05, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x4c, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x38, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63,
	0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x46, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04,
	0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44,
	0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x49, 0x4e, 0x54, 0x45,
	0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x03, 0x1a, 0xb2, 0x25, 0x0a,
	0x04, 0x43, 0x68, 0x61, 0x74, 0x1a, 0xb3, 0x03, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x1a, 0x63, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x22, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x68, 0x61, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0xbf, 0x02, 0x0a, 0x08, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x52, 0x70, 0x63, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0xa3, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x44, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e,
	0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x43, 0x68, 0x61, 0x74,
	0x2e, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b,
	0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09,
	0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xaa, 0x03, 0x0a, 0x12,
	0x45, 0x64, 0x69, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x1a, 0x8d, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22,
	0x0a, 0x0c, 0x63, 0x68, 0x61, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x68, 0x61, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64,
	0x12, 0x40, 0x0a, 0x0d, 0x65, 0x64, 0x69, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x0d, 0x65, 0x64, 0x69, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x1a, 0x83, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x49, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33,
	0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x43, 0x68, 0x61,
	0x74, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0xab, 0x01, 0x0a, 0x05, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x4c, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x38, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63,
	0x2e, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04,
	0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44,
	0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0x86, 0x03, 0x0a, 0x15, 0x54, 0x6f, 0x67,
	0x67, 0x6c, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x1a, 0x61, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a,
	0x0c, 0x63, 0x68, 0x61, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x68, 0x61, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x1a, 0x89, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4c, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x36, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e,
	0x43, 0x68, 0x61, 0x74, 0x2e, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x1a, 0xae, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x4f, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3b, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x54, 0x6f, 0x67, 0x67,
	0x6c, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a,
	0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12,
	0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52,
	0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10,
	0x02, 0x1a, 0xd8, 0x02, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x1a, 0x4b, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22,
	0x0a, 0x0c, 0x63, 0x68, 0x61, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x68, 0x61, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64,
	0x1a, 0xf9, 0x01, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x61,
	0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x1a, 0xa6, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x47, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x61, 0x6e,
	0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e,
	0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a,
	0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xaf, 0x04, 0x0a,
	0x0b, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x1a, 0xb7, 0x01, 0x0a,
	0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x74,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x63, 0x68, 0x61, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c,
	0x61, 0x66, 0x74, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x61, 0x66, 0x74, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x24, 0x0a, 0x0d, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x28, 0x0a, 0x0f,
	0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x42, 0x6f,
	0x75, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x1a, 0xe5, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63,
	0x2e, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x36, 0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x6e, 0x79, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12,
	0x36, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x09, 0x63, 0x68,
	0x61, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x1a, 0xa4, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x45, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x31, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x43, 0x68,
	0x61, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d,
	0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12,
	0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0x9b,
	0x03, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x42, 0x79,
	0x49, 0x64, 0x73, 0x1a, 0x4d, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22,
	0x0a, 0x0c, 0x63, 0x68, 0x61, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x68, 0x61, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49,
	0x64, 0x73, 0x1a, 0xb7, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x47, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31,
	0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x43, 0x68, 0x61,
	0x74, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x42, 0x79, 0x49,
	0x64, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x36, 0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x6e, 0x79,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x1a, 0xa9, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x4a, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x36, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x42, 0x79, 0x49, 0x64, 0x73, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e,
	0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a,
	0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0x9c, 0x04, 0x0a,
	0x15, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4c, 0x61, 0x73, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x1a, 0x59, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x68, 0x61, 0x74, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x75, 0x62, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x75, 0x62, 0x49,
	0x64, 0x1a, 0xa7, 0x03, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e,
	0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x43, 0x68, 0x61, 0x74,
	0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4c, 0x61, 0x73, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x36, 0x0a, 0x08,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x43,
	0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x08, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x6e, 0x75, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x11, 0x6e, 0x75, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x42, 0x65, 0x66, 0x6f,
	0x72, 0x65, 0x12, 0x36, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x09, 0x63, 0x68, 0x61, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x1a, 0xae, 0x01, 0x0a, 0x05, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x4f, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x3b, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63,
	0x2e, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4c,
	0x61, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b,
	0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09,
	0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xca, 0x02, 0x0a, 0x0b,
	0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x1a, 0x43, 0x0a, 0x07, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x74, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x68,
	0x61, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x75,
	0x62, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x75, 0x62, 0x49, 0x64,
	0x1a, 0xf5, 0x01, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61,
	0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x2e,
	0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x1a, 0xa4, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x45, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e, 0x61, 0x6e, 0x79, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x55, 0x6e, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04,
	0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44,
	0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xd3, 0x02, 0x0a, 0x1a, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x50,
	0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x1a, 0x09, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0xa9, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x51, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b,
	0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x43, 0x68, 0x61,
	0x74, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x6f, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x75, 0x62, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x73, 0x75, 0x62, 0x49, 0x64, 0x1a, 0xb3, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x54, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x40, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x43,
	0x68, 0x61, 0x74, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x6f, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x04, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d,
	0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12,
	0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x1a, 0xd6,
	0x04, 0x0a, 0x0c, 0x52, 0x65, 0x61, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x1a,
	0xde, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x61, 0x6e, 0x79, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x61,
	0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x74,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x63, 0x68, 0x61, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c,
	0x61, 0x66, 0x74, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x61, 0x66, 0x74, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x24, 0x0a, 0x0d, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x44, 0x62,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0f, 0x6c, 0x61, 0x73, 0x74, 0x44, 0x62, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x1a, 0xbd, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x61,
	0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x2e,
	0x52, 0x65, 0x61, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x1a, 0xbd, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x46, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x61, 0x64,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x4a, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04,
	0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44,
	0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x12, 0x16, 0x0a, 0x12, 0x4d, 0x45, 0x53, 0x53,
	0x41, 0x47, 0x45, 0x53, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x64,
	0x22, 0x25, 0x0a, 0x08, 0x52, 0x65, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a, 0x08,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x72, 0x65,
	0x70, 0x6c, 0x69, 0x65, 0x73, 0x10, 0x01, 0x1a, 0xf7, 0x02, 0x0a, 0x06, 0x55, 0x6e, 0x72, 0x65,
	0x61, 0x64, 0x1a, 0x51, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a,
	0x0c, 0x63, 0x68, 0x61, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x68, 0x61, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x64, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x66, 0x74, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x66, 0x74, 0x65, 0x72, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x49, 0x64, 0x1a, 0x99, 0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3d, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e,
	0x43, 0x68, 0x61, 0x74, 0x2e, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a,
	0x9f, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x40, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x52, 0x70, 0x63, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x55, 0x6e, 0x72, 0x65, 0x61,
	0x64, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a,
	0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12,
	0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52,
	0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10,
	0x02, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x25, 0x0a, 0x0d, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x3a, 0x39, 0x0a, 0x07, 0x6e, 0x6f, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x12, 0x1f, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xe1, 0x3c,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x6e, 0x6f, 0x41, 0x75, 0x74, 0x68, 0x42, 0x26, 0x5a, 0x24,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6e, 0x79, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2d, 0x68, 0x65, 0x61, 0x72,
	0x74, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_pb_protos_commands_proto_rawDescOnce sync.Once
	file_pb_protos_commands_proto_rawDescData []byte
)

func file_pb_protos_commands_proto_rawDescGZIP() []byte {
	file_pb_protos_commands_proto_rawDescOnce.Do(func() {
		file_pb_protos_commands_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pb_protos_commands_proto_rawDesc), len(file_pb_protos_commands_proto_rawDesc)))
	})
	return file_pb_protos_commands_proto_rawDescData
}

var file_pb_protos_commands_proto_enumTypes = make([]protoimpl.EnumInfo, 308)
var file_pb_protos_commands_proto_msgTypes = make([]protoimpl.MessageInfo, 1261)
var file_pb_protos_commands_proto_goTypes = []any{
	(RpcAppGetVersionResponseErrorCode)(0),                             // 0: anytype.Rpc.App.GetVersion.Response.Error.Code
	(RpcAppSetDeviceStateRequestDeviceState)(0),                        // 1: anytype.Rpc.App.SetDeviceState.Request.DeviceState
	(RpcAppSetDeviceStateResponseErrorCode)(0),                         // 2: anytype.Rpc.App.SetDeviceState.Response.Error.Code
	(RpcAppShutdownResponseErrorCode)(0),                               // 3: anytype.Rpc.App.Shutdown.Response.Error.Code
	(RpcSpaceLeaveApproveResponseErrorCode)(0),                         // 4: anytype.Rpc.Space.LeaveApprove.Response.Error.Code
	(RpcSpaceMakeShareableResponseErrorCode)(0),                        // 5: anytype.Rpc.Space.MakeShareable.Response.Error.Code
	(RpcSpaceInviteGenerateResponseErrorCode)(0),                       // 6: anytype.Rpc.Space.InviteGenerate.Response.Error.Code
	(RpcSpaceStopSharingResponseErrorCode)(0),                          // 7: anytype.Rpc.Space.StopSharing.Response.Error.Code
	(RpcSpaceInviteGetCurrentResponseErrorCode)(0),                     // 8: anytype.Rpc.Space.InviteGetCurrent.Response.Error.Code
	(RpcSpaceInviteRevokeResponseErrorCode)(0),                         // 9: anytype.Rpc.Space.InviteRevoke.Response.Error.Code
	(RpcSpaceInviteViewResponseErrorCode)(0),                           // 10: anytype.Rpc.Space.InviteView.Response.Error.Code
	(RpcSpaceJoinResponseErrorCode)(0),                                 // 11: anytype.Rpc.Space.Join.Response.Error.Code
	(RpcSpaceJoinCancelResponseErrorCode)(0),                           // 12: anytype.Rpc.Space.JoinCancel.Response.Error.Code
	(RpcSpaceRequestApproveResponseErrorCode)(0),                       // 13: anytype.Rpc.Space.RequestApprove.Response.Error.Code
	(RpcSpaceRequestDeclineResponseErrorCode)(0),                       // 14: anytype.Rpc.Space.RequestDecline.Response.Error.Code
	(RpcSpaceParticipantRemoveResponseErrorCode)(0),                    // 15: anytype.Rpc.Space.ParticipantRemove.Response.Error.Code
	(RpcSpaceParticipantPermissionsChangeResponseErrorCode)(0),         // 16: anytype.Rpc.Space.ParticipantPermissionsChange.Response.Error.Code
	(RpcSpaceDeleteResponseErrorCode)(0),                               // 17: anytype.Rpc.Space.Delete.Response.Error.Code
	(RpcSpaceSetOrderResponseErrorCode)(0),                             // 18: anytype.Rpc.Space.SetOrder.Response.Error.Code
	(RpcSpaceUnsetOrderResponseErrorCode)(0),                           // 19: anytype.Rpc.Space.UnsetOrder.Response.Error.Code
	(RpcWalletCreateResponseErrorCode)(0),                              // 20: anytype.Rpc.Wallet.Create.Response.Error.Code
	(RpcWalletRecoverResponseErrorCode)(0),                             // 21: anytype.Rpc.Wallet.Recover.Response.Error.Code
	(RpcWalletConvertResponseErrorCode)(0),                             // 22: anytype.Rpc.Wallet.Convert.Response.Error.Code
	(RpcWalletCreateSessionResponseErrorCode)(0),                       // 23: anytype.Rpc.Wallet.CreateSession.Response.Error.Code
	(RpcWalletCloseSessionResponseErrorCode)(0),                        // 24: anytype.Rpc.Wallet.CloseSession.Response.Error.Code
	(RpcAccountNetworkMode)(0),                                         // 25: anytype.Rpc.Account.NetworkMode
	(RpcAccountCreateResponseErrorCode)(0),                             // 26: anytype.Rpc.Account.Create.Response.Error.Code
	(RpcAccountRecoverResponseErrorCode)(0),                            // 27: anytype.Rpc.Account.Recover.Response.Error.Code
	(RpcAccountDeleteResponseErrorCode)(0),                             // 28: anytype.Rpc.Account.Delete.Response.Error.Code
	(RpcAccountRevertDeletionResponseErrorCode)(0),                     // 29: anytype.Rpc.Account.RevertDeletion.Response.Error.Code
	(RpcAccountMigrateResponseErrorCode)(0),                            // 30: anytype.Rpc.Account.Migrate.Response.Error.Code
	(RpcAccountMigrateCancelResponseErrorCode)(0),                      // 31: anytype.Rpc.Account.MigrateCancel.Response.Error.Code
	(RpcAccountSelectResponseErrorCode)(0),                             // 32: anytype.Rpc.Account.Select.Response.Error.Code
	(RpcAccountStopResponseErrorCode)(0),                               // 33: anytype.Rpc.Account.Stop.Response.Error.Code
	(RpcAccountMoveResponseErrorCode)(0),                               // 34: anytype.Rpc.Account.Move.Response.Error.Code
	(RpcAccountConfigUpdateTimezones)(0),                               // 35: anytype.Rpc.Account.ConfigUpdate.Timezones
	(RpcAccountConfigUpdateResponseErrorCode)(0),                       // 36: anytype.Rpc.Account.ConfigUpdate.Response.Error.Code
	(RpcAccountRecoverFromLegacyExportResponseErrorCode)(0),            // 37: anytype.Rpc.Account.RecoverFromLegacyExport.Response.Error.Code
	(RpcAccountEnableLocalNetworkSyncResponseErrorCode)(0),             // 38: anytype.Rpc.Account.EnableLocalNetworkSync.Response.Error.Code
	(RpcAccountChangeJsonApiAddrResponseErrorCode)(0),                  // 39: anytype.Rpc.Account.ChangeJsonApiAddr.Response.Error.Code
	(RpcAccountChangeNetworkConfigAndRestartResponseErrorCode)(0),      // 40: anytype.Rpc.Account.ChangeNetworkConfigAndRestart.Response.Error.Code
	(RpcAccountLocalLinkNewChallengeResponseErrorCode)(0),              // 41: anytype.Rpc.Account.LocalLink.NewChallenge.Response.Error.Code
	(RpcAccountLocalLinkSolveChallengeResponseErrorCode)(0),            // 42: anytype.Rpc.Account.LocalLink.SolveChallenge.Response.Error.Code
	(RpcWorkspaceGetCurrentResponseErrorCode)(0),                       // 43: anytype.Rpc.Workspace.GetCurrent.Response.Error.Code
	(RpcWorkspaceGetAllResponseErrorCode)(0),                           // 44: anytype.Rpc.Workspace.GetAll.Response.Error.Code
	(RpcWorkspaceCreateResponseErrorCode)(0),                           // 45: anytype.Rpc.Workspace.Create.Response.Error.Code
	(RpcWorkspaceOpenResponseErrorCode)(0),                             // 46: anytype.Rpc.Workspace.Open.Response.Error.Code
	(RpcWorkspaceObjectAddResponseErrorCode)(0),                        // 47: anytype.Rpc.Workspace.Object.Add.Response.Error.Code
	(RpcWorkspaceObjectListAddResponseErrorCode)(0),                    // 48: anytype.Rpc.Workspace.Object.ListAdd.Response.Error.Code
	(RpcWorkspaceObjectListRemoveResponseErrorCode)(0),                 // 49: anytype.Rpc.Workspace.Object.ListRemove.Response.Error.Code
	(RpcWorkspaceSetInfoResponseErrorCode)(0),                          // 50: anytype.Rpc.Workspace.SetInfo.Response.Error.Code
	(RpcWorkspaceSelectResponseErrorCode)(0),                           // 51: anytype.Rpc.Workspace.Select.Response.Error.Code
	(RpcWorkspaceExportResponseErrorCode)(0),                           // 52: anytype.Rpc.Workspace.Export.Response.Error.Code
	(RpcPublishingPublishStatus)(0),                                    // 53: anytype.Rpc.Publishing.PublishStatus
	(RpcPublishingCreateResponseErrorCode)(0),                          // 54: anytype.Rpc.Publishing.Create.Response.Error.Code
	(RpcPublishingRemoveResponseErrorCode)(0),                          // 55: anytype.Rpc.Publishing.Remove.Response.Error.Code
	(RpcPublishingListResponseErrorCode)(0),                            // 56: anytype.Rpc.Publishing.List.Response.Error.Code
	(RpcPublishingResolveUriResponseErrorCode)(0),                      // 57: anytype.Rpc.Publishing.ResolveUri.Response.Error.Code
	(RpcPublishingGetStatusResponseErrorCode)(0),                       // 58: anytype.Rpc.Publishing.GetStatus.Response.Error.Code
	(RpcObjectOpenResponseErrorCode)(0),                                // 59: anytype.Rpc.Object.Open.Response.Error.Code
	(RpcObjectCloseResponseErrorCode)(0),                               // 60: anytype.Rpc.Object.Close.Response.Error.Code
	(RpcObjectShowResponseErrorCode)(0),                                // 61: anytype.Rpc.Object.Show.Response.Error.Code
	(RpcObjectCreateResponseErrorCode)(0),                              // 62: anytype.Rpc.Object.Create.Response.Error.Code
	(RpcObjectCreateBookmarkResponseErrorCode)(0),                      // 63: anytype.Rpc.Object.CreateBookmark.Response.Error.Code
	(RpcObjectCreateRelationResponseErrorCode)(0),                      // 64: anytype.Rpc.Object.CreateRelation.Response.Error.Code
	(RpcObjectCreateRelationOptionResponseErrorCode)(0),                // 65: anytype.Rpc.Object.CreateRelationOption.Response.Error.Code
	(RpcObjectCreateSetResponseErrorCode)(0),                           // 66: anytype.Rpc.Object.CreateSet.Response.Error.Code
	(RpcObjectCreateObjectTypeResponseErrorCode)(0),                    // 67: anytype.Rpc.Object.CreateObjectType.Response.Error.Code
	(RpcObjectCreateFromUrlResponseErrorCode)(0),                       // 68: anytype.Rpc.Object.CreateFromUrl.Response.Error.Code
	(RpcObjectChatAddResponseErrorCode)(0),                             // 69: anytype.Rpc.Object.ChatAdd.Response.Error.Code
	(RpcObjectBookmarkFetchResponseErrorCode)(0),                       // 70: anytype.Rpc.Object.BookmarkFetch.Response.Error.Code
	(RpcObjectToBookmarkResponseErrorCode)(0),                          // 71: anytype.Rpc.Object.ToBookmark.Response.Error.Code
	(RpcObjectDuplicateResponseErrorCode)(0),                           // 72: anytype.Rpc.Object.Duplicate.Response.Error.Code
	(RpcObjectOpenBreadcrumbsResponseErrorCode)(0),                     // 73: anytype.Rpc.Object.OpenBreadcrumbs.Response.Error.Code
	(RpcObjectSetBreadcrumbsResponseErrorCode)(0),                      // 74: anytype.Rpc.Object.SetBreadcrumbs.Response.Error.Code
	(RpcObjectShareByLinkResponseErrorCode)(0),                         // 75: anytype.Rpc.Object.ShareByLink.Response.Error.Code
	(RpcObjectSearchResponseErrorCode)(0),                              // 76: anytype.Rpc.Object.Search.Response.Error.Code
	(RpcObjectSearchWithMetaResponseErrorCode)(0),                      // 77: anytype.Rpc.Object.SearchWithMeta.Response.Error.Code
	(RpcObjectGraphEdgeType)(0),                                        // 78: anytype.Rpc.Object.Graph.Edge.Type
	(RpcObjectGraphResponseErrorCode)(0),                               // 79: anytype.Rpc.Object.Graph.Response.Error.Code
	(RpcObjectSearchSubscribeResponseErrorCode)(0),                     // 80: anytype.Rpc.Object.SearchSubscribe.Response.Error.Code
	(RpcObjectCrossSpaceSearchSubscribeResponseErrorCode)(0),           // 81: anytype.Rpc.Object.CrossSpaceSearchSubscribe.Response.Error.Code
	(RpcObjectCrossSpaceSearchUnsubscribeResponseErrorCode)(0),         // 82: anytype.Rpc.Object.CrossSpaceSearchUnsubscribe.Response.Error.Code
	(RpcObjectGroupsSubscribeResponseErrorCode)(0),                     // 83: anytype.Rpc.Object.GroupsSubscribe.Response.Error.Code
	(RpcObjectSubscribeIdsResponseErrorCode)(0),                        // 84: anytype.Rpc.Object.SubscribeIds.Response.Error.Code
	(RpcObjectSearchUnsubscribeResponseErrorCode)(0),                   // 85: anytype.Rpc.Object.SearchUnsubscribe.Response.Error.Code
	(RpcObjectSetLayoutResponseErrorCode)(0),                           // 86: anytype.Rpc.Object.SetLayout.Response.Error.Code
	(RpcObjectSetIsFavoriteResponseErrorCode)(0),                       // 87: anytype.Rpc.Object.SetIsFavorite.Response.Error.Code
	(RpcObjectSetIsArchivedResponseErrorCode)(0),                       // 88: anytype.Rpc.Object.SetIsArchived.Response.Error.Code
	(RpcObjectSetSourceResponseErrorCode)(0),                           // 89: anytype.Rpc.Object.SetSource.Response.Error.Code
	(RpcObjectWorkspaceSetDashboardResponseErrorCode)(0),               // 90: anytype.Rpc.Object.WorkspaceSetDashboard.Response.Error.Code
	(RpcObjectSetObjectTypeResponseErrorCode)(0),                       // 91: anytype.Rpc.Object.SetObjectType.Response.Error.Code
	(RpcObjectSetInternalFlagsResponseErrorCode)(0),                    // 92: anytype.Rpc.Object.SetInternalFlags.Response.Error.Code
	(RpcObjectSetDetailsResponseErrorCode)(0),                          // 93: anytype.Rpc.Object.SetDetails.Response.Error.Code
	(RpcObjectToSetResponseErrorCode)(0),                               // 94: anytype.Rpc.Object.ToSet.Response.Error.Code
	(RpcObjectToCollectionResponseErrorCode)(0),                        // 95: anytype.Rpc.Object.ToCollection.Response.Error.Code
	(RpcObjectUndoResponseErrorCode)(0),                                // 96: anytype.Rpc.Object.Undo.Response.Error.Code
	(RpcObjectRedoResponseErrorCode)(0),                                // 97: anytype.Rpc.Object.Redo.Response.Error.Code
	(RpcObjectListDuplicateResponseErrorCode)(0),                       // 98: anytype.Rpc.Object.ListDuplicate.Response.Error.Code
	(RpcObjectListDeleteResponseErrorCode)(0),                          // 99: anytype.Rpc.Object.ListDelete.Response.Error.Code
	(RpcObjectListSetIsArchivedResponseErrorCode)(0),                   // 100: anytype.Rpc.Object.ListSetIsArchived.Response.Error.Code
	(RpcObjectListSetIsFavoriteResponseErrorCode)(0),                   // 101: anytype.Rpc.Object.ListSetIsFavorite.Response.Error.Code
	(RpcObjectListSetObjectTypeResponseErrorCode)(0),                   // 102: anytype.Rpc.Object.ListSetObjectType.Response.Error.Code
	(RpcObjectListSetDetailsResponseErrorCode)(0),                      // 103: anytype.Rpc.Object.ListSetDetails.Response.Error.Code
	(RpcObjectListModifyDetailValuesResponseErrorCode)(0),              // 104: anytype.Rpc.Object.ListModifyDetailValues.Response.Error.Code
	(RpcObjectApplyTemplateResponseErrorCode)(0),                       // 105: anytype.Rpc.Object.ApplyTemplate.Response.Error.Code
	(RpcObjectListExportResponseErrorCode)(0),                          // 106: anytype.Rpc.Object.ListExport.Response.Error.Code
	(RpcObjectImportRequestMode)(0),                                    // 107: anytype.Rpc.Object.Import.Request.Mode
	(RpcObjectImportRequestPbParamsType)(0),                            // 108: anytype.Rpc.Object.Import.Request.PbParams.Type
	(RpcObjectImportRequestCsvParamsMode)(0),                           // 109: anytype.Rpc.Object.Import.Request.CsvParams.Mode
	(RpcObjectImportResponseErrorCode)(0),                              // 110: anytype.Rpc.Object.Import.Response.Error.Code
	(RpcObjectImportNotionValidateTokenResponseErrorCode)(0),           // 111: anytype.Rpc.Object.Import.Notion.ValidateToken.Response.Error.Code
	(RpcObjectImportListResponseErrorCode)(0),                          // 112: anytype.Rpc.Object.ImportList.Response.Error.Code
	(RpcObjectImportListImportResponseType)(0),                         // 113: anytype.Rpc.Object.ImportList.ImportResponse.Type
	(RpcObjectImportUseCaseRequestUseCase)(0),                          // 114: anytype.Rpc.Object.ImportUseCase.Request.UseCase
	(RpcObjectImportUseCaseResponseErrorCode)(0),                       // 115: anytype.Rpc.Object.ImportUseCase.Response.Error.Code
	(RpcObjectImportExperienceResponseErrorCode)(0),                    // 116: anytype.Rpc.Object.ImportExperience.Response.Error.Code
	(RpcObjectDateByTimestampResponseErrorCode)(0),                     // 117: anytype.Rpc.Object.DateByTimestamp.Response.Error.Code
	(RpcObjectCollectionAddResponseErrorCode)(0),                       // 118: anytype.Rpc.ObjectCollection.Add.Response.Error.Code
	(RpcObjectCollectionRemoveResponseErrorCode)(0),                    // 119: anytype.Rpc.ObjectCollection.Remove.Response.Error.Code
	(RpcObjectCollectionSortResponseErrorCode)(0),                      // 120: anytype.Rpc.ObjectCollection.Sort.Response.Error.Code
	(RpcObjectRelationAddResponseErrorCode)(0),                         // 121: anytype.Rpc.ObjectRelation.Add.Response.Error.Code
	(RpcObjectRelationDeleteResponseErrorCode)(0),                      // 122: anytype.Rpc.ObjectRelation.Delete.Response.Error.Code
	(RpcObjectRelationListAvailableResponseErrorCode)(0),               // 123: anytype.Rpc.ObjectRelation.ListAvailable.Response.Error.Code
	(RpcObjectRelationAddFeaturedResponseErrorCode)(0),                 // 124: anytype.Rpc.ObjectRelation.AddFeatured.Response.Error.Code
	(RpcObjectRelationRemoveFeaturedResponseErrorCode)(0),              // 125: anytype.Rpc.ObjectRelation.RemoveFeatured.Response.Error.Code
	(RpcObjectTypeRelationAddResponseErrorCode)(0),                     // 126: anytype.Rpc.ObjectType.Relation.Add.Response.Error.Code
	(RpcObjectTypeRelationRemoveResponseErrorCode)(0),                  // 127: anytype.Rpc.ObjectType.Relation.Remove.Response.Error.Code
	(RpcObjectTypeRecommendedRelationsSetResponseErrorCode)(0),         // 128: anytype.Rpc.ObjectType.Recommended.RelationsSet.Response.Error.Code
	(RpcObjectTypeRecommendedFeaturedRelationsSetResponseErrorCode)(0), // 129: anytype.Rpc.ObjectType.Recommended.FeaturedRelationsSet.Response.Error.Code
	(RpcObjectTypeListConflictingRelationsResponseErrorCode)(0),        // 130: anytype.Rpc.ObjectType.ListConflictingRelations.Response.Error.Code
	(RpcRelationListRemoveOptionResponseErrorCode)(0),                  // 131: anytype.Rpc.Relation.ListRemoveOption.Response.Error.Code
	(RpcRelationOptionsResponseErrorCode)(0),                           // 132: anytype.Rpc.Relation.Options.Response.Error.Code
	(RpcRelationListWithValueResponseErrorCode)(0),                     // 133: anytype.Rpc.Relation.ListWithValue.Response.Error.Code
	(RpcHistoryGetVersionsResponseErrorCode)(0),                        // 134: anytype.Rpc.History.GetVersions.Response.Error.Code
	(RpcHistoryShowVersionResponseErrorCode)(0),                        // 135: anytype.Rpc.History.ShowVersion.Response.Error.Code
	(RpcHistorySetVersionResponseErrorCode)(0),                         // 136: anytype.Rpc.History.SetVersion.Response.Error.Code
	(RpcHistoryDiffVersionsResponseErrorCode)(0),                       // 137: anytype.Rpc.History.DiffVersions.Response.Error.Code
	(RpcFileReconcileResponseErrorCode)(0),                             // 138: anytype.Rpc.File.Reconcile.Response.Error.Code
	(RpcFileOffloadResponseErrorCode)(0),                               // 139: anytype.Rpc.File.Offload.Response.Error.Code
	(RpcFileSpaceOffloadResponseErrorCode)(0),                          // 140: anytype.Rpc.File.SpaceOffload.Response.Error.Code
	(RpcFileListOffloadResponseErrorCode)(0),                           // 141: anytype.Rpc.File.ListOffload.Response.Error.Code
	(RpcFileUploadResponseErrorCode)(0),                                // 142: anytype.Rpc.File.Upload.Response.Error.Code
	(RpcFileDownloadResponseErrorCode)(0),                              // 143: anytype.Rpc.File.Download.Response.Error.Code
	(RpcFileDropResponseErrorCode)(0),                                  // 144: anytype.Rpc.File.Drop.Response.Error.Code
	(RpcFileSpaceUsageResponseErrorCode)(0),                            // 145: anytype.Rpc.File.SpaceUsage.Response.Error.Code
	(RpcFileNodeUsageResponseErrorCode)(0),                             // 146: anytype.Rpc.File.NodeUsage.Response.Error.Code
	(RpcNavigationContext)(0),                                          // 147: anytype.Rpc.Navigation.Context
	(RpcNavigationListObjectsResponseErrorCode)(0),                     // 148: anytype.Rpc.Navigation.ListObjects.Response.Error.Code
	(RpcNavigationGetObjectInfoWithLinksResponseErrorCode)(0),          // 149: anytype.Rpc.Navigation.GetObjectInfoWithLinks.Response.Error.Code
	(RpcTemplateCreateFromObjectResponseErrorCode)(0),                  // 150: anytype.Rpc.Template.CreateFromObject.Response.Error.Code
	(RpcTemplateCloneResponseErrorCode)(0),                             // 151: anytype.Rpc.Template.Clone.Response.Error.Code
	(RpcTemplateExportAllResponseErrorCode)(0),                         // 152: anytype.Rpc.Template.ExportAll.Response.Error.Code
	(RpcLinkPreviewResponseErrorCode)(0),                               // 153: anytype.Rpc.LinkPreview.Response.Error.Code
	(RpcUnsplashSearchResponseErrorCode)(0),                            // 154: anytype.Rpc.Unsplash.Search.Response.Error.Code
	(RpcUnsplashDownloadResponseErrorCode)(0),                          // 155: anytype.Rpc.Unsplash.Download.Response.Error.Code
	(RpcGalleryDownloadManifestResponseErrorCode)(0),                   // 156: anytype.Rpc.Gallery.DownloadManifest.Response.Error.Code
	(RpcGalleryDownloadIndexResponseErrorCode)(0),                      // 157: anytype.Rpc.Gallery.DownloadIndex.Response.Error.Code
	(RpcBlockReplaceResponseErrorCode)(0),                              // 158: anytype.Rpc.Block.Replace.Response.Error.Code
	(RpcBlockSplitRequestMode)(0),                                      // 159: anytype.Rpc.Block.Split.Request.Mode
	(RpcBlockSplitResponseErrorCode)(0),                                // 160: anytype.Rpc.Block.Split.Response.Error.Code
	(RpcBlockMergeResponseErrorCode)(0),                                // 161: anytype.Rpc.Block.Merge.Response.Error.Code
	(RpcBlockCopyResponseErrorCode)(0),                                 // 162: anytype.Rpc.Block.Copy.Response.Error.Code
	(RpcBlockPasteResponseErrorCode)(0),                                // 163: anytype.Rpc.Block.Paste.Response.Error.Code
	(RpcBlockCutResponseErrorCode)(0),                                  // 164: anytype.Rpc.Block.Cut.Response.Error.Code
	(RpcBlockUploadResponseErrorCode)(0),                               // 165: anytype.Rpc.Block.Upload.Response.Error.Code
	(RpcBlockDownloadResponseErrorCode)(0),                             // 166: anytype.Rpc.Block.Download.Response.Error.Code
	(RpcBlockCreateResponseErrorCode)(0),                               // 167: anytype.Rpc.Block.Create.Response.Error.Code
	(RpcBlockCreateWidgetResponseErrorCode)(0),                         // 168: anytype.Rpc.Block.CreateWidget.Response.Error.Code
	(RpcBlockListDeleteResponseErrorCode)(0),                           // 169: anytype.Rpc.Block.ListDelete.Response.Error.Code
	(RpcBlockSetFieldsResponseErrorCode)(0),                            // 170: anytype.Rpc.Block.SetFields.Response.Error.Code
	(RpcBlockListSetAlignResponseErrorCode)(0),                         // 171: anytype.Rpc.Block.ListSetAlign.Response.Error.Code
	(RpcBlockListSetVerticalAlignResponseErrorCode)(0),                 // 172: anytype.Rpc.Block.ListSetVerticalAlign.Response.Error.Code
	(RpcBlockListSetFieldsResponseErrorCode)(0),                        // 173: anytype.Rpc.Block.ListSetFields.Response.Error.Code
	(RpcBlockListDuplicateResponseErrorCode)(0),                        // 174: anytype.Rpc.Block.ListDuplicate.Response.Error.Code
	(RpcBlockListConvertToObjectsResponseErrorCode)(0),                 // 175: anytype.Rpc.Block.ListConvertToObjects.Response.Error.Code
	(RpcBlockListMoveToExistingObjectResponseErrorCode)(0),             // 176: anytype.Rpc.Block.ListMoveToExistingObject.Response.Error.Code
	(RpcBlockListMoveToNewObjectResponseErrorCode)(0),                  // 177: anytype.Rpc.Block.ListMoveToNewObject.Response.Error.Code
	(RpcBlockListTurnIntoResponseErrorCode)(0),                         // 178: anytype.Rpc.Block.ListTurnInto.Response.Error.Code
	(RpcBlockListSetBackgroundColorResponseErrorCode)(0),               // 179: anytype.Rpc.Block.ListSetBackgroundColor.Response.Error.Code
	(RpcBlockExportResponseErrorCode)(0),                               // 180: anytype.Rpc.Block.Export.Response.Error.Code
	(RpcBlockSetCarriageResponseErrorCode)(0),                          // 181: anytype.Rpc.Block.SetCarriage.Response.Error.Code
	(RpcBlockPreviewResponseErrorCode)(0),                              // 182: anytype.Rpc.Block.Preview.Response.Error.Code
	(RpcBlockLatexSetTextResponseErrorCode)(0),                         // 183: anytype.Rpc.BlockLatex.SetText.Response.Error.Code
	(RpcBlockLatexSetProcessorResponseErrorCode)(0),                    // 184: anytype.Rpc.BlockLatex.SetProcessor.Response.Error.Code
	(RpcBlockTextSetTextResponseErrorCode)(0),                          // 185: anytype.Rpc.BlockText.SetText.Response.Error.Code
	(RpcBlockTextSetColorResponseErrorCode)(0),                         // 186: anytype.Rpc.BlockText.SetColor.Response.Error.Code
	(RpcBlockTextSetMarksGetResponseErrorCode)(0),                      // 187: anytype.Rpc.BlockText.SetMarks.Get.Response.Error.Code
	(RpcBlockTextSetStyleResponseErrorCode)(0),                         // 188: anytype.Rpc.BlockText.SetStyle.Response.Error.Code
	(RpcBlockTextSetCheckedResponseErrorCode)(0),                       // 189: anytype.Rpc.BlockText.SetChecked.Response.Error.Code
	(RpcBlockTextSetIconResponseErrorCode)(0),                          // 190: anytype.Rpc.BlockText.SetIcon.Response.Error.Code
	(RpcBlockTextListSetStyleResponseErrorCode)(0),                     // 191: anytype.Rpc.BlockText.ListSetStyle.Response.Error.Code
	(RpcBlockTextListSetColorResponseErrorCode)(0),                     // 192: anytype.Rpc.BlockText.ListSetColor.Response.Error.Code
	(RpcBlockTextListSetMarkResponseErrorCode)(0),                      // 193: anytype.Rpc.BlockText.ListSetMark.Response.Error.Code
	(RpcBlockTextListClearStyleResponseErrorCode)(0),                   // 194: anytype.Rpc.BlockText.ListClearStyle.Response.Error.Code
	(RpcBlockTextListClearContentResponseErrorCode)(0),                 // 195: anytype.Rpc.BlockText.ListClearContent.Response.Error.Code
	(RpcBlockTableCreateResponseErrorCode)(0),                          // 196: anytype.Rpc.BlockTable.Create.Response.Error.Code
	(RpcBlockTableRowCreateResponseErrorCode)(0),                       // 197: anytype.Rpc.BlockTable.RowCreate.Response.Error.Code
	(RpcBlockTableRowSetHeaderResponseErrorCode)(0),                    // 198: anytype.Rpc.BlockTable.RowSetHeader.Response.Error.Code
	(RpcBlockTableRowListFillResponseErrorCode)(0),                     // 199: anytype.Rpc.BlockTable.RowListFill.Response.Error.Code
	(RpcBlockTableRowListCleanResponseErrorCode)(0),                    // 200: anytype.Rpc.BlockTable.RowListClean.Response.Error.Code
	(RpcBlockTableColumnListFillResponseErrorCode)(0),                  // 201: anytype.Rpc.BlockTable.ColumnListFill.Response.Error.Code
	(RpcBlockTableColumnCreateResponseErrorCode)(0),                    // 202: anytype.Rpc.BlockTable.ColumnCreate.Response.Error.Code
	(RpcBlockTableRowDeleteResponseErrorCode)(0),                       // 203: anytype.Rpc.BlockTable.RowDelete.Response.Error.Code
	(RpcBlockTableColumnDeleteResponseErrorCode)(0),                    // 204: anytype.Rpc.BlockTable.ColumnDelete.Response.Error.Code
	(RpcBlockTableColumnMoveResponseErrorCode)(0),                      // 205: anytype.Rpc.BlockTable.ColumnMove.Response.Error.Code
	(RpcBlockTableRowDuplicateResponseErrorCode)(0),                    // 206: anytype.Rpc.BlockTable.RowDuplicate.Response.Error.Code
	(RpcBlockTableColumnDuplicateResponseErrorCode)(0),                 // 207: anytype.Rpc.BlockTable.ColumnDuplicate.Response.Error.Code
	(RpcBlockTableExpandResponseErrorCode)(0),                          // 208: anytype.Rpc.BlockTable.Expand.Response.Error.Code
	(RpcBlockTableSortResponseErrorCode)(0),                            // 209: anytype.Rpc.BlockTable.Sort.Response.Error.Code
	(RpcBlockFileSetNameResponseErrorCode)(0),                          // 210: anytype.Rpc.BlockFile.SetName.Response.Error.Code
	(RpcBlockFileSetTargetObjectIdResponseErrorCode)(0),                // 211: anytype.Rpc.BlockFile.SetTargetObjectId.Response.Error.Code
	(RpcBlockFileCreateAndUploadResponseErrorCode)(0),                  // 212: anytype.Rpc.BlockFile.CreateAndUpload.Response.Error.Code
	(RpcBlockFileListSetStyleResponseErrorCode)(0),                     // 213: anytype.Rpc.BlockFile.ListSetStyle.Response.Error.Code
	(RpcBlockImageSetNameResponseErrorCode)(0),                         // 214: anytype.Rpc.BlockImage.SetName.Response.Error.Code
	(RpcBlockImageSetWidthResponseErrorCode)(0),                        // 215: anytype.Rpc.BlockImage.SetWidth.Response.Error.Code
	(RpcBlockVideoSetNameResponseErrorCode)(0),                         // 216: anytype.Rpc.BlockVideo.SetName.Response.Error.Code
	(RpcBlockVideoSetWidthResponseErrorCode)(0),                        // 217: anytype.Rpc.BlockVideo.SetWidth.Response.Error.Code
	(RpcBlockLinkCreateWithObjectResponseErrorCode)(0),                 // 218: anytype.Rpc.BlockLink.CreateWithObject.Response.Error.Code
	(RpcBlockLinkListSetAppearanceResponseErrorCode)(0),                // 219: anytype.Rpc.BlockLink.ListSetAppearance.Response.Error.Code
	(RpcBlockRelationSetKeyResponseErrorCode)(0),                       // 220: anytype.Rpc.BlockRelation.SetKey.Response.Error.Code
	(RpcBlockRelationAddResponseErrorCode)(0),                          // 221: anytype.Rpc.BlockRelation.Add.Response.Error.Code
	(RpcBlockBookmarkFetchResponseErrorCode)(0),                        // 222: anytype.Rpc.BlockBookmark.Fetch.Response.Error.Code
	(RpcBlockBookmarkCreateAndFetchResponseErrorCode)(0),               // 223: anytype.Rpc.BlockBookmark.CreateAndFetch.Response.Error.Code
	(RpcBlockDivListSetStyleResponseErrorCode)(0),                      // 224: anytype.Rpc.BlockDiv.ListSetStyle.Response.Error.Code
	(RpcBlockDataviewViewCreateResponseErrorCode)(0),                   // 225: anytype.Rpc.BlockDataview.View.Create.Response.Error.Code
	(RpcBlockDataviewViewUpdateResponseErrorCode)(0),                   // 226: anytype.Rpc.BlockDataview.View.Update.Response.Error.Code
	(RpcBlockDataviewViewDeleteResponseErrorCode)(0),                   // 227: anytype.Rpc.BlockDataview.View.Delete.Response.Error.Code
	(RpcBlockDataviewViewSetPositionResponseErrorCode)(0),              // 228: anytype.Rpc.BlockDataview.View.SetPosition.Response.Error.Code
	(RpcBlockDataviewViewSetActiveResponseErrorCode)(0),                // 229: anytype.Rpc.BlockDataview.View.SetActive.Response.Error.Code
	(RpcBlockDataviewRelationAddResponseErrorCode)(0),                  // 230: anytype.Rpc.BlockDataview.Relation.Add.Response.Error.Code
	(RpcBlockDataviewRelationDeleteResponseErrorCode)(0),               // 231: anytype.Rpc.BlockDataview.Relation.Delete.Response.Error.Code
	(RpcBlockDataviewSetSourceResponseErrorCode)(0),                    // 232: anytype.Rpc.BlockDataview.SetSource.Response.Error.Code
	(RpcBlockDataviewGroupOrderUpdateResponseErrorCode)(0),             // 233: anytype.Rpc.BlockDataview.GroupOrder.Update.Response.Error.Code
	(RpcBlockDataviewObjectOrderUpdateResponseErrorCode)(0),            // 234: anytype.Rpc.BlockDataview.ObjectOrder.Update.Response.Error.Code
	(RpcBlockDataviewObjectOrderMoveResponseErrorCode)(0),              // 235: anytype.Rpc.BlockDataview.ObjectOrder.Move.Response.Error.Code
	(RpcBlockDataviewCreateFromExistingObjectResponseErrorCode)(0),     // 236: anytype.Rpc.BlockDataview.CreateFromExistingObject.Response.Error.Code
	(RpcBlockDataviewFilterAddResponseErrorCode)(0),                    // 237: anytype.Rpc.BlockDataview.Filter.Add.Response.Error.Code
	(RpcBlockDataviewFilterRemoveResponseErrorCode)(0),                 // 238: anytype.Rpc.BlockDataview.Filter.Remove.Response.Error.Code
	(RpcBlockDataviewFilterReplaceResponseErrorCode)(0),                // 239: anytype.Rpc.BlockDataview.Filter.Replace.Response.Error.Code
	(RpcBlockDataviewFilterSortResponseErrorCode)(0),                   // 240: anytype.Rpc.BlockDataview.Filter.Sort.Response.Error.Code
	(RpcBlockDataviewSortAddResponseErrorCode)(0),                      // 241: anytype.Rpc.BlockDataview.Sort.Add.Response.Error.Code
	(RpcBlockDataviewSortRemoveResponseErrorCode)(0),                   // 242: anytype.Rpc.BlockDataview.Sort.Remove.Response.Error.Code
	(RpcBlockDataviewSortReplaceResponseErrorCode)(0),                  // 243: anytype.Rpc.BlockDataview.Sort.Replace.Response.Error.Code
	(RpcBlockDataviewSortSSortResponseErrorCode)(0),                    // 244: anytype.Rpc.BlockDataview.Sort.SSort.Response.Error.Code
	(RpcBlockDataviewViewRelationAddResponseErrorCode)(0),              // 245: anytype.Rpc.BlockDataview.ViewRelation.Add.Response.Error.Code
	(RpcBlockDataviewViewRelationRemoveResponseErrorCode)(0),           // 246: anytype.Rpc.BlockDataview.ViewRelation.Remove.Response.Error.Code
	(RpcBlockDataviewViewRelationReplaceResponseErrorCode)(0),          // 247: anytype.Rpc.BlockDataview.ViewRelation.Replace.Response.Error.Code
	(RpcBlockDataviewViewRelationSortResponseErrorCode)(0),             // 248: anytype.Rpc.BlockDataview.ViewRelation.Sort.Response.Error.Code
	(RpcBlockWidgetSetTargetIdResponseErrorCode)(0),                    // 249: anytype.Rpc.BlockWidget.SetTargetId.Response.Error.Code
	(RpcBlockWidgetSetLayoutResponseErrorCode)(0),                      // 250: anytype.Rpc.BlockWidget.SetLayout.Response.Error.Code
	(RpcBlockWidgetSetLimitResponseErrorCode)(0),                       // 251: anytype.Rpc.BlockWidget.SetLimit.Response.Error.Code
	(RpcBlockWidgetSetViewIdResponseErrorCode)(0),                      // 252: anytype.Rpc.BlockWidget.SetViewId.Response.Error.Code
	(RpcDebugStatResponseErrorCode)(0),                                 // 253: anytype.Rpc.Debug.Stat.Response.Error.Code
	(RpcDebugTreeHeadsResponseErrorCode)(0),                            // 254: anytype.Rpc.Debug.TreeHeads.Response.Error.Code
	(RpcDebugTreeResponseErrorCode)(0),                                 // 255: anytype.Rpc.Debug.Tree.Response.Error.Code
	(RpcDebugSpaceSummaryResponseErrorCode)(0),                         // 256: anytype.Rpc.Debug.SpaceSummary.Response.Error.Code
	(RpcDebugStackGoroutinesResponseErrorCode)(0),                      // 257: anytype.Rpc.Debug.StackGoroutines.Response.Error.Code
	(RpcDebugExportLocalstoreResponseErrorCode)(0),                     // 258: anytype.Rpc.Debug.ExportLocalstore.Response.Error.Code
	(RpcDebugSubscriptionsResponseErrorCode)(0),                        // 259: anytype.Rpc.Debug.Subscriptions.Response.Error.Code
	(RpcDebugOpenedObjectsResponseErrorCode)(0),                        // 260: anytype.Rpc.Debug.OpenedObjects.Response.Error.Code
	(RpcDebugRunProfilerResponseErrorCode)(0),                          // 261: anytype.Rpc.Debug.RunProfiler.Response.Error.Code
	(RpcDebugAccountSelectTraceResponseErrorCode)(0),                   // 262: anytype.Rpc.Debug.AccountSelectTrace.Response.Error.Code
	(RpcDebugExportLogResponseErrorCode)(0),                            // 263: anytype.Rpc.Debug.ExportLog.Response.Error.Code
	(RpcDebugPingResponseErrorCode)(0),                                 // 264: anytype.Rpc.Debug.Ping.Response.Error.Code
	(RpcDebugAnystoreObjectChangesRequestOrderBy)(0),                   // 265: anytype.Rpc.Debug.AnystoreObjectChanges.Request.OrderBy
	(RpcDebugAnystoreObjectChangesResponseErrorCode)(0),                // 266: anytype.Rpc.Debug.AnystoreObjectChanges.Response.Error.Code
	(RpcDebugNetCheckResponseErrorCode)(0),                             // 267: anytype.Rpc.Debug.NetCheck.Response.Error.Code
	(RpcInitialSetParametersResponseErrorCode)(0),                      // 268: anytype.Rpc.Initial.SetParameters.Response.Error.Code
	(RpcLogSendRequestLevel)(0),                                        // 269: anytype.Rpc.Log.Send.Request.Level
	(RpcLogSendResponseErrorCode)(0),                                   // 270: anytype.Rpc.Log.Send.Response.Error.Code
	(RpcProcessCancelResponseErrorCode)(0),                             // 271: anytype.Rpc.Process.Cancel.Response.Error.Code
	(RpcProcessSubscribeResponseErrorCode)(0),                          // 272: anytype.Rpc.Process.Subscribe.Response.Error.Code
	(RpcProcessUnsubscribeResponseErrorCode)(0),                        // 273: anytype.Rpc.Process.Unsubscribe.Response.Error.Code
	(RpcGenericErrorResponseErrorCode)(0),                              // 274: anytype.Rpc.GenericErrorResponse.Error.Code
	(RpcNotificationListResponseErrorCode)(0),                          // 275: anytype.Rpc.Notification.List.Response.Error.Code
	(RpcNotificationReplyResponseErrorCode)(0),                         // 276: anytype.Rpc.Notification.Reply.Response.Error.Code
	(RpcNotificationTestResponseErrorCode)(0),                          // 277: anytype.Rpc.Notification.Test.Response.Error.Code
	(RpcMembershipGetStatusResponseErrorCode)(0),                       // 278: anytype.Rpc.Membership.GetStatus.Response.Error.Code
	(RpcMembershipIsNameValidResponseErrorCode)(0),                     // 279: anytype.Rpc.Membership.IsNameValid.Response.Error.Code
	(RpcMembershipRegisterPaymentRequestResponseErrorCode)(0),          // 280: anytype.Rpc.Membership.RegisterPaymentRequest.Response.Error.Code
	(RpcMembershipGetPortalLinkUrlResponseErrorCode)(0),                // 281: anytype.Rpc.Membership.GetPortalLinkUrl.Response.Error.Code
	(RpcMembershipFinalizeResponseErrorCode)(0),                        // 282: anytype.Rpc.Membership.Finalize.Response.Error.Code
	(RpcMembershipGetVerificationEmailStatusResponseErrorCode)(0),      // 283: anytype.Rpc.Membership.GetVerificationEmailStatus.Response.Error.Code
	(RpcMembershipGetVerificationEmailResponseErrorCode)(0),            // 284: anytype.Rpc.Membership.GetVerificationEmail.Response.Error.Code
	(RpcMembershipVerifyEmailCodeResponseErrorCode)(0),                 // 285: anytype.Rpc.Membership.VerifyEmailCode.Response.Error.Code
	(RpcMembershipGetTiersResponseErrorCode)(0),                        // 286: anytype.Rpc.Membership.GetTiers.Response.Error.Code
	(RpcMembershipVerifyAppStoreReceiptResponseErrorCode)(0),           // 287: anytype.Rpc.Membership.VerifyAppStoreReceipt.Response.Error.Code
	(RpcNameServiceResolveNameResponseErrorCode)(0),                    // 288: anytype.Rpc.NameService.ResolveName.Response.Error.Code
	(RpcNameServiceResolveAnyIdResponseErrorCode)(0),                   // 289: anytype.Rpc.NameService.ResolveAnyId.Response.Error.Code
	(RpcNameServiceResolveSpaceIdResponseErrorCode)(0),                 // 290: anytype.Rpc.NameService.ResolveSpaceId.Response.Error.Code
	(RpcNameServiceUserAccountGetResponseErrorCode)(0),                 // 291: anytype.Rpc.NameService.UserAccount.Get.Response.Error.Code
	(RpcBroadcastPayloadEventResponseErrorCode)(0),                     // 292: anytype.Rpc.Broadcast.PayloadEvent.Response.Error.Code
	(RpcDeviceSetNameResponseErrorCode)(0),                             // 293: anytype.Rpc.Device.SetName.Response.Error.Code
	(RpcDeviceListResponseErrorCode)(0),                                // 294: anytype.Rpc.Device.List.Response.Error.Code
	(RpcDeviceNetworkStateSetResponseErrorCode)(0),                     // 295: anytype.Rpc.Device.NetworkState.Set.Response.Error.Code
	(RpcChatAddMessageResponseErrorCode)(0),                            // 296: anytype.Rpc.Chat.AddMessage.Response.Error.Code
	(RpcChatEditMessageContentResponseErrorCode)(0),                    // 297: anytype.Rpc.Chat.EditMessageContent.Response.Error.Code
	(RpcChatToggleMessageReactionResponseErrorCode)(0),                 // 298: anytype.Rpc.Chat.ToggleMessageReaction.Response.Error.Code
	(RpcChatDeleteMessageResponseErrorCode)(0),                         // 299: anytype.Rpc.Chat.DeleteMessage.Response.Error.Code
	(RpcChatGetMessagesResponseErrorCode)(0),                           // 300: anytype.Rpc.Chat.GetMessages.Response.Error.Code
	(RpcChatGetMessagesByIdsResponseErrorCode)(0),                      // 301: anytype.Rpc.Chat.GetMessagesByIds.Response.Error.Code
	(RpcChatSubscribeLastMessagesResponseErrorCode)(0),                 // 302: anytype.Rpc.Chat.SubscribeLastMessages.Response.Error.Code
	(RpcChatUnsubscribeResponseErrorCode)(0),                           // 303: anytype.Rpc.Chat.Unsubscribe.Response.Error.Code
	(RpcChatSubscribeToMessagePreviewsResponseErrorCode)(0),            // 304: anytype.Rpc.Chat.SubscribeToMessagePreviews.Response.Error.Code
	(RpcChatReadMessagesReadType)(0),                                   // 305: anytype.Rpc.Chat.ReadMessages.ReadType
	(RpcChatReadMessagesResponseErrorCode)(0),                          // 306: anytype.Rpc.Chat.ReadMessages.Response.Error.Code
	(RpcChatUnreadResponseErrorCode)(0),                                // 307: anytype.Rpc.Chat.Unread.Response.Error.Code
	(*Rpc)(nil),                                                        // 308: anytype.Rpc
	(*Empty)(nil),                                                      // 309: anytype.Empty
	(*StreamRequest)(nil),                                              // 310: anytype.StreamRequest
	(*RpcApp)(nil),                                                     // 311: anytype.Rpc.App
	(*RpcSpace)(nil),                                                   // 312: anytype.Rpc.Space
	(*RpcWallet)(nil),                                                  // 313: anytype.Rpc.Wallet
	(*RpcAccount)(nil),                                                 // 314: anytype.Rpc.Account
	(*RpcWorkspace)(nil),                                               // 315: anytype.Rpc.Workspace
	(*RpcPublishing)(nil),                                              // 316: anytype.Rpc.Publishing
	(*RpcObject)(nil),                                                  // 317: anytype.Rpc.Object
	(*RpcObjectCollection)(nil),                                        // 318: anytype.Rpc.ObjectCollection
	(*RpcObjectRelation)(nil),                                          // 319: anytype.Rpc.ObjectRelation
	(*RpcObjectType)(nil),                                              // 320: anytype.Rpc.ObjectType
	(*RpcRelation)(nil),                                                // 321: anytype.Rpc.Relation
	(*RpcHistory)(nil),                                                 // 322: anytype.Rpc.History
	(*RpcFile)(nil),                                                    // 323: anytype.Rpc.File
	(*RpcNavigation)(nil),                                              // 324: anytype.Rpc.Navigation
	(*RpcTemplate)(nil),                                                // 325: anytype.Rpc.Template
	(*RpcLinkPreview)(nil),                                             // 326: anytype.Rpc.LinkPreview
	(*RpcUnsplash)(nil),                                                // 327: anytype.Rpc.Unsplash
	(*RpcGallery)(nil),                                                 // 328: anytype.Rpc.Gallery
	(*RpcBlock)(nil),                                                   // 329: anytype.Rpc.Block
	(*RpcBlockLatex)(nil),                                              // 330: anytype.Rpc.BlockLatex
	(*RpcBlockText)(nil),                                               // 331: anytype.Rpc.BlockText
	(*RpcBlockTable)(nil),                                              // 332: anytype.Rpc.BlockTable
	(*RpcBlockFile)(nil),                                               // 333: anytype.Rpc.BlockFile
	(*RpcBlockImage)(nil),                                              // 334: anytype.Rpc.BlockImage
	(*RpcBlockVideo)(nil),                                              // 335: anytype.Rpc.BlockVideo
	(*RpcBlockLink)(nil),                                               // 336: anytype.Rpc.BlockLink
	(*RpcBlockRelation)(nil),                                           // 337: anytype.Rpc.BlockRelation
	(*RpcBlockBookmark)(nil),                                           // 338: anytype.Rpc.BlockBookmark
	(*RpcBlockDiv)(nil),                                                // 339: anytype.Rpc.BlockDiv
	(*RpcBlockDataview)(nil),                                           // 340: anytype.Rpc.BlockDataview
	(*RpcBlockWidget)(nil),                                             // 341: anytype.Rpc.BlockWidget
	(*RpcDebug)(nil),                                                   // 342: anytype.Rpc.Debug
	(*RpcInitial)(nil),                                                 // 343: anytype.Rpc.Initial
	(*RpcLog)(nil),                                                     // 344: anytype.Rpc.Log
	(*RpcProcess)(nil),                                                 // 345: anytype.Rpc.Process
	(*RpcGenericErrorResponse)(nil),                                    // 346: anytype.Rpc.GenericErrorResponse
	(*RpcNotification)(nil),                                            // 347: anytype.Rpc.Notification
	(*RpcMembership)(nil),                                              // 348: anytype.Rpc.Membership
	(*RpcNameService)(nil),                                             // 349: anytype.Rpc.NameService
	(*RpcBroadcast)(nil),                                               // 350: anytype.Rpc.Broadcast
	(*RpcDevice)(nil),                                                  // 351: anytype.Rpc.Device
	(*RpcChat)(nil),                                                    // 352: anytype.Rpc.Chat
	(*RpcAppGetVersion)(nil),                                           // 353: anytype.Rpc.App.GetVersion
	(*RpcAppSetDeviceState)(nil),                                       // 354: anytype.Rpc.App.SetDeviceState
	(*RpcAppShutdown)(nil),                                             // 355: anytype.Rpc.App.Shutdown
	(*RpcAppGetVersionRequest)(nil),                                    // 356: anytype.Rpc.App.GetVersion.Request
	(*RpcAppGetVersionResponse)(nil),                                   // 357: anytype.Rpc.App.GetVersion.Response
	(*RpcAppGetVersionResponseError)(nil),                              // 358: anytype.Rpc.App.GetVersion.Response.Error
	(*RpcAppSetDeviceStateRequest)(nil),                                // 359: anytype.Rpc.App.SetDeviceState.Request
	(*RpcAppSetDeviceStateResponse)(nil),                               // 360: anytype.Rpc.App.SetDeviceState.Response
	(*RpcAppSetDeviceStateResponseError)(nil),                          // 361: anytype.Rpc.App.SetDeviceState.Response.Error
	(*RpcAppShutdownRequest)(nil),                                      // 362: anytype.Rpc.App.Shutdown.Request
	(*RpcAppShutdownResponse)(nil),                                     // 363: anytype.Rpc.App.Shutdown.Response
	(*RpcAppShutdownResponseError)(nil),                                // 364: anytype.Rpc.App.Shutdown.Response.Error
	(*RpcSpaceLeaveApprove)(nil),                                       // 365: anytype.Rpc.Space.LeaveApprove
	(*RpcSpaceMakeShareable)(nil),                                      // 366: anytype.Rpc.Space.MakeShareable
	(*RpcSpaceInviteGenerate)(nil),                                     // 367: anytype.Rpc.Space.InviteGenerate
	(*RpcSpaceStopSharing)(nil),                                        // 368: anytype.Rpc.Space.StopSharing
	(*RpcSpaceInviteGetCurrent)(nil),                                   // 369: anytype.Rpc.Space.InviteGetCurrent
	(*RpcSpaceInviteRevoke)(nil),                                       // 370: anytype.Rpc.Space.InviteRevoke
	(*RpcSpaceInviteView)(nil),                                         // 371: anytype.Rpc.Space.InviteView
	(*RpcSpaceJoin)(nil),                                               // 372: anytype.Rpc.Space.Join
	(*RpcSpaceJoinCancel)(nil),                                         // 373: anytype.Rpc.Space.JoinCancel
	(*RpcSpaceRequestApprove)(nil),                                     // 374: anytype.Rpc.Space.RequestApprove
	(*RpcSpaceRequestDecline)(nil),                                     // 375: anytype.Rpc.Space.RequestDecline
	(*RpcSpaceParticipantRemove)(nil),                                  // 376: anytype.Rpc.Space.ParticipantRemove
	(*RpcSpaceParticipantPermissionsChange)(nil),                       // 377: anytype.Rpc.Space.ParticipantPermissionsChange
	(*RpcSpaceDelete)(nil),                                             // 378: anytype.Rpc.Space.Delete
	(*RpcSpaceSetOrder)(nil),                                           // 379: anytype.Rpc.Space.SetOrder
	(*RpcSpaceUnsetOrder)(nil),                                         // 380: anytype.Rpc.Space.UnsetOrder
	(*RpcSpaceLeaveApproveRequest)(nil),                                // 381: anytype.Rpc.Space.LeaveApprove.Request
	(*RpcSpaceLeaveApproveResponse)(nil),                               // 382: anytype.Rpc.Space.LeaveApprove.Response
	(*RpcSpaceLeaveApproveResponseError)(nil),                          // 383: anytype.Rpc.Space.LeaveApprove.Response.Error
	(*RpcSpaceMakeShareableRequest)(nil),                               // 384: anytype.Rpc.Space.MakeShareable.Request
	(*RpcSpaceMakeShareableResponse)(nil),                              // 385: anytype.Rpc.Space.MakeShareable.Response
	(*RpcSpaceMakeShareableResponseError)(nil),                         // 386: anytype.Rpc.Space.MakeShareable.Response.Error
	(*RpcSpaceInviteGenerateRequest)(nil),                              // 387: anytype.Rpc.Space.InviteGenerate.Request
	(*RpcSpaceInviteGenerateResponse)(nil),                             // 388: anytype.Rpc.Space.InviteGenerate.Response
	(*RpcSpaceInviteGenerateResponseError)(nil),                        // 389: anytype.Rpc.Space.InviteGenerate.Response.Error
	(*RpcSpaceStopSharingRequest)(nil),                                 // 390: anytype.Rpc.Space.StopSharing.Request
	(*RpcSpaceStopSharingResponse)(nil),                                // 391: anytype.Rpc.Space.StopSharing.Response
	(*RpcSpaceStopSharingResponseError)(nil),                           // 392: anytype.Rpc.Space.StopSharing.Response.Error
	(*RpcSpaceInviteGetCurrentRequest)(nil),                            // 393: anytype.Rpc.Space.InviteGetCurrent.Request
	(*RpcSpaceInviteGetCurrentResponse)(nil),                           // 394: anytype.Rpc.Space.InviteGetCurrent.Response
	(*RpcSpaceInviteGetCurrentResponseError)(nil),                      // 395: anytype.Rpc.Space.InviteGetCurrent.Response.Error
	(*RpcSpaceInviteRevokeRequest)(nil),                                // 396: anytype.Rpc.Space.InviteRevoke.Request
	(*RpcSpaceInviteRevokeResponse)(nil),                               // 397: anytype.Rpc.Space.InviteRevoke.Response
	(*RpcSpaceInviteRevokeResponseError)(nil),                          // 398: anytype.Rpc.Space.InviteRevoke.Response.Error
	(*RpcSpaceInviteViewRequest)(nil),                                  // 399: anytype.Rpc.Space.InviteView.Request
	(*RpcSpaceInviteViewResponse)(nil),                                 // 400: anytype.Rpc.Space.InviteView.Response
	(*RpcSpaceInviteViewResponseError)(nil),                            // 401: anytype.Rpc.Space.InviteView.Response.Error
	(*RpcSpaceJoinRequest)(nil),                                        // 402: anytype.Rpc.Space.Join.Request
	(*RpcSpaceJoinResponse)(nil),                                       // 403: anytype.Rpc.Space.Join.Response
	(*RpcSpaceJoinResponseError)(nil),                                  // 404: anytype.Rpc.Space.Join.Response.Error
	(*RpcSpaceJoinCancelRequest)(nil),                                  // 405: anytype.Rpc.Space.JoinCancel.Request
	(*RpcSpaceJoinCancelResponse)(nil),                                 // 406: anytype.Rpc.Space.JoinCancel.Response
	(*RpcSpaceJoinCancelResponseError)(nil),                            // 407: anytype.Rpc.Space.JoinCancel.Response.Error
	(*RpcSpaceRequestApproveRequest)(nil),                              // 408: anytype.Rpc.Space.RequestApprove.Request
	(*RpcSpaceRequestApproveResponse)(nil),                             // 409: anytype.Rpc.Space.RequestApprove.Response
	(*RpcSpaceRequestApproveResponseError)(nil),                        // 410: anytype.Rpc.Space.RequestApprove.Response.Error
	(*RpcSpaceRequestDeclineRequest)(nil),                              // 411: anytype.Rpc.Space.RequestDecline.Request
	(*RpcSpaceRequestDeclineResponse)(nil),                             // 412: anytype.Rpc.Space.RequestDecline.Response
	(*RpcSpaceRequestDeclineResponseError)(nil),                        // 413: anytype.Rpc.Space.RequestDecline.Response.Error
	(*RpcSpaceParticipantRemoveRequest)(nil),                           // 414: anytype.Rpc.Space.ParticipantRemove.Request
	(*RpcSpaceParticipantRemoveResponse)(nil),                          // 415: anytype.Rpc.Space.ParticipantRemove.Response
	(*RpcSpaceParticipantRemoveResponseError)(nil),                     // 416: anytype.Rpc.Space.ParticipantRemove.Response.Error
	(*RpcSpaceParticipantPermissionsChangeRequest)(nil),                // 417: anytype.Rpc.Space.ParticipantPermissionsChange.Request
	(*RpcSpaceParticipantPermissionsChangeResponse)(nil),               // 418: anytype.Rpc.Space.ParticipantPermissionsChange.Response
	(*RpcSpaceParticipantPermissionsChangeResponseError)(nil),          // 419: anytype.Rpc.Space.ParticipantPermissionsChange.Response.Error
	(*RpcSpaceDeleteRequest)(nil),                                      // 420: anytype.Rpc.Space.Delete.Request
	(*RpcSpaceDeleteResponse)(nil),                                     // 421: anytype.Rpc.Space.Delete.Response
	(*RpcSpaceDeleteResponseError)(nil),                                // 422: anytype.Rpc.Space.Delete.Response.Error
	(*RpcSpaceSetOrderRequest)(nil),                                    // 423: anytype.Rpc.Space.SetOrder.Request
	(*RpcSpaceSetOrderResponse)(nil),                                   // 424: anytype.Rpc.Space.SetOrder.Response
	(*RpcSpaceSetOrderResponseError)(nil),                              // 425: anytype.Rpc.Space.SetOrder.Response.Error
	(*RpcSpaceUnsetOrderRequest)(nil),                                  // 426: anytype.Rpc.Space.UnsetOrder.Request
	(*RpcSpaceUnsetOrderResponse)(nil),                                 // 427: anytype.Rpc.Space.UnsetOrder.Response
	(*RpcSpaceUnsetOrderResponseError)(nil),                            // 428: anytype.Rpc.Space.UnsetOrder.Response.Error
	(*RpcWalletCreate)(nil),                                            // 429: anytype.Rpc.Wallet.Create
	(*RpcWalletRecover)(nil),                                           // 430: anytype.Rpc.Wallet.Recover
	(*RpcWalletConvert)(nil),                                           // 431: anytype.Rpc.Wallet.Convert
	(*RpcWalletCreateSession)(nil),                                     // 432: anytype.Rpc.Wallet.CreateSession
	(*RpcWalletCloseSession)(nil),                                      // 433: anytype.Rpc.Wallet.CloseSession
	(*RpcWalletCreateRequest)(nil),                                     // 434: anytype.Rpc.Wallet.Create.Request
	(*RpcWalletCreateResponse)(nil),                                    // 435: anytype.Rpc.Wallet.Create.Response
	(*RpcWalletCreateResponseError)(nil),                               // 436: anytype.Rpc.Wallet.Create.Response.Error
	(*RpcWalletRecoverRequest)(nil),                                    // 437: anytype.Rpc.Wallet.Recover.Request
	(*RpcWalletRecoverResponse)(nil),                                   // 438: anytype.Rpc.Wallet.Recover.Response
	(*RpcWalletRecoverResponseError)(nil),                              // 439: anytype.Rpc.Wallet.Recover.Response.Error
	(*RpcWalletConvertRequest)(nil),                                    // 440: anytype.Rpc.Wallet.Convert.Request
	(*RpcWalletConvertResponse)(nil),                                   // 441: anytype.Rpc.Wallet.Convert.Response
	(*RpcWalletConvertResponseError)(nil),                              // 442: anytype.Rpc.Wallet.Convert.Response.Error
	(*RpcWalletCreateSessionRequest)(nil),                              // 443: anytype.Rpc.Wallet.CreateSession.Request
	(*RpcWalletCreateSessionResponse)(nil),                             // 444: anytype.Rpc.Wallet.CreateSession.Response
	(*RpcWalletCreateSessionResponseError)(nil),                        // 445: anytype.Rpc.Wallet.CreateSession.Response.Error
	(*RpcWalletCloseSessionRequest)(nil),                               // 446: anytype.Rpc.Wallet.CloseSession.Request
	(*RpcWalletCloseSessionResponse)(nil),                              // 447: anytype.Rpc.Wallet.CloseSession.Response
	(*RpcWalletCloseSessionResponseError)(nil),                         // 448: anytype.Rpc.Wallet.CloseSession.Response.Error
	(*RpcAccountConfig)(nil),                                           // 449: anytype.Rpc.Account.Config
	(*RpcAccountCreate)(nil),                                           // 450: anytype.Rpc.Account.Create
	(*RpcAccountRecover)(nil),                                          // 451: anytype.Rpc.Account.Recover
	(*RpcAccountDelete)(nil),                                           // 452: anytype.Rpc.Account.Delete
	(*RpcAccountRevertDeletion)(nil),                                   // 453: anytype.Rpc.Account.RevertDeletion
	(*RpcAccountMigrate)(nil),                                          // 454: anytype.Rpc.Account.Migrate
	(*RpcAccountMigrateCancel)(nil),                                    // 455: anytype.Rpc.Account.MigrateCancel
	(*RpcAccountSelect)(nil),                                           // 456: anytype.Rpc.Account.Select
	(*RpcAccountStop)(nil),                                             // 457: anytype.Rpc.Account.Stop
	(*RpcAccountMove)(nil),                                             // 458: anytype.Rpc.Account.Move
	(*RpcAccountConfigUpdate)(nil),                                     // 459: anytype.Rpc.Account.ConfigUpdate
	(*RpcAccountGetConfig)(nil),                                        // 460: anytype.Rpc.Account.GetConfig
	(*RpcAccountRecoverFromLegacyExport)(nil),                          // 461: anytype.Rpc.Account.RecoverFromLegacyExport
	(*RpcAccountEnableLocalNetworkSync)(nil),                           // 462: anytype.Rpc.Account.EnableLocalNetworkSync
	(*RpcAccountChangeJsonApiAddr)(nil),                                // 463: anytype.Rpc.Account.ChangeJsonApiAddr
	(*RpcAccountChangeNetworkConfigAndRestart)(nil),                    // 464: anytype.Rpc.Account.ChangeNetworkConfigAndRestart
	(*RpcAccountLocalLink)(nil),                                        // 465: anytype.Rpc.Account.LocalLink
	(*RpcAccountCreateRequest)(nil),                                    // 466: anytype.Rpc.Account.Create.Request
	(*RpcAccountCreateResponse)(nil),                                   // 467: anytype.Rpc.Account.Create.Response
	(*RpcAccountCreateResponseError)(nil),                              // 468: anytype.Rpc.Account.Create.Response.Error
	(*RpcAccountRecoverRequest)(nil),                                   // 469: anytype.Rpc.Account.Recover.Request
	(*RpcAccountRecoverResponse)(nil),                                  // 470: anytype.Rpc.Account.Recover.Response
	(*RpcAccountRecoverResponseError)(nil),                             // 471: anytype.Rpc.Account.Recover.Response.Error
	(*RpcAccountDeleteRequest)(nil),                                    // 472: anytype.Rpc.Account.Delete.Request
	(*RpcAccountDeleteResponse)(nil),                                   // 473: anytype.Rpc.Account.Delete.Response
	(*RpcAccountDeleteResponseError)(nil),                              // 474: anytype.Rpc.Account.Delete.Response.Error
	(*RpcAccountRevertDeletionRequest)(nil),                            // 475: anytype.Rpc.Account.RevertDeletion.Request
	(*RpcAccountRevertDeletionResponse)(nil),                           // 476: anytype.Rpc.Account.RevertDeletion.Response
	(*RpcAccountRevertDeletionResponseError)(nil),                      // 477: anytype.Rpc.Account.RevertDeletion.Response.Error
	(*RpcAccountMigrateRequest)(nil),                                   // 478: anytype.Rpc.Account.Migrate.Request
	(*RpcAccountMigrateResponse)(nil),                                  // 479: anytype.Rpc.Account.Migrate.Response
	(*RpcAccountMigrateResponseError)(nil),                             // 480: anytype.Rpc.Account.Migrate.Response.Error
	(*RpcAccountMigrateCancelRequest)(nil),                             // 481: anytype.Rpc.Account.MigrateCancel.Request
	(*RpcAccountMigrateCancelResponse)(nil),                            // 482: anytype.Rpc.Account.MigrateCancel.Response
	(*RpcAccountMigrateCancelResponseError)(nil),                       // 483: anytype.Rpc.Account.MigrateCancel.Response.Error
	(*RpcAccountSelectRequest)(nil),                                    // 484: anytype.Rpc.Account.Select.Request
	(*RpcAccountSelectResponse)(nil),                                   // 485: anytype.Rpc.Account.Select.Response
	(*RpcAccountSelectResponseError)(nil),                              // 486: anytype.Rpc.Account.Select.Response.Error
	(*RpcAccountStopRequest)(nil),                                      // 487: anytype.Rpc.Account.Stop.Request
	(*RpcAccountStopResponse)(nil),                                     // 488: anytype.Rpc.Account.Stop.Response
	(*RpcAccountStopResponseError)(nil),                                // 489: anytype.Rpc.Account.Stop.Response.Error
	(*RpcAccountMoveRequest)(nil),                                      // 490: anytype.Rpc.Account.Move.Request
	(*RpcAccountMoveResponse)(nil),                                     // 491: anytype.Rpc.Account.Move.Response
	(*RpcAccountMoveResponseError)(nil),                                // 492: anytype.Rpc.Account.Move.Response.Error
	(*RpcAccountConfigUpdateRequest)(nil),                              // 493: anytype.Rpc.Account.ConfigUpdate.Request
	(*RpcAccountConfigUpdateResponse)(nil),                             // 494: anytype.Rpc.Account.ConfigUpdate.Response
	(*RpcAccountConfigUpdateResponseError)(nil),                        // 495: anytype.Rpc.Account.ConfigUpdate.Response.Error
	(*RpcAccountGetConfigGet)(nil),                                     // 496: anytype.Rpc.Account.GetConfig.Get
	(*RpcAccountGetConfigGetRequest)(nil),                              // 497: anytype.Rpc.Account.GetConfig.Get.Request
	(*RpcAccountRecoverFromLegacyExportRequest)(nil),                   // 498: anytype.Rpc.Account.RecoverFromLegacyExport.Request
	(*RpcAccountRecoverFromLegacyExportResponse)(nil),                  // 499: anytype.Rpc.Account.RecoverFromLegacyExport.Response
	(*RpcAccountRecoverFromLegacyExportResponseError)(nil),             // 500: anytype.Rpc.Account.RecoverFromLegacyExport.Response.Error
	(*RpcAccountEnableLocalNetworkSyncRequest)(nil),                    // 501: anytype.Rpc.Account.EnableLocalNetworkSync.Request
	(*RpcAccountEnableLocalNetworkSyncResponse)(nil),                   // 502: anytype.Rpc.Account.EnableLocalNetworkSync.Response
	(*RpcAccountEnableLocalNetworkSyncResponseError)(nil),              // 503: anytype.Rpc.Account.EnableLocalNetworkSync.Response.Error
	(*RpcAccountChangeJsonApiAddrRequest)(nil),                         // 504: anytype.Rpc.Account.ChangeJsonApiAddr.Request
	(*RpcAccountChangeJsonApiAddrResponse)(nil),                        // 505: anytype.Rpc.Account.ChangeJsonApiAddr.Response
	(*RpcAccountChangeJsonApiAddrResponseError)(nil),                   // 506: anytype.Rpc.Account.ChangeJsonApiAddr.Response.Error
	(*RpcAccountChangeNetworkConfigAndRestartRequest)(nil),             // 507: anytype.Rpc.Account.ChangeNetworkConfigAndRestart.Request
	(*RpcAccountChangeNetworkConfigAndRestartResponse)(nil),            // 508: anytype.Rpc.Account.ChangeNetworkConfigAndRestart.Response
	(*RpcAccountChangeNetworkConfigAndRestartResponseError)(nil),       // 509: anytype.Rpc.Account.ChangeNetworkConfigAndRestart.Response.Error
	(*RpcAccountLocalLinkNewChallenge)(nil),                            // 510: anytype.Rpc.Account.LocalLink.NewChallenge
	(*RpcAccountLocalLinkSolveChallenge)(nil),                          // 511: anytype.Rpc.Account.LocalLink.SolveChallenge
	(*RpcAccountLocalLinkNewChallengeRequest)(nil),                     // 512: anytype.Rpc.Account.LocalLink.NewChallenge.Request
	(*RpcAccountLocalLinkNewChallengeResponse)(nil),                    // 513: anytype.Rpc.Account.LocalLink.NewChallenge.Response
	(*RpcAccountLocalLinkNewChallengeResponseError)(nil),               // 514: anytype.Rpc.Account.LocalLink.NewChallenge.Response.Error
	(*RpcAccountLocalLinkSolveChallengeRequest)(nil),                   // 515: anytype.Rpc.Account.LocalLink.SolveChallenge.Request
	(*RpcAccountLocalLinkSolveChallengeResponse)(nil),                  // 516: anytype.Rpc.Account.LocalLink.SolveChallenge.Response
	(*RpcAccountLocalLinkSolveChallengeResponseError)(nil),             // 517: anytype.Rpc.Account.LocalLink.SolveChallenge.Response.Error
	(*RpcWorkspaceGetCurrent)(nil),                                     // 518: anytype.Rpc.Workspace.GetCurrent
	(*RpcWorkspaceGetAll)(nil),                                         // 519: anytype.Rpc.Workspace.GetAll
	(*RpcWorkspaceCreate)(nil),                                         // 520: anytype.Rpc.Workspace.Create
	(*RpcWorkspaceOpen)(nil),                                           // 521: anytype.Rpc.Workspace.Open
	(*RpcWorkspaceObject)(nil),                                         // 522: anytype.Rpc.Workspace.Object
	(*RpcWorkspaceSetInfo)(nil),                                        // 523: anytype.Rpc.Workspace.SetInfo
	(*RpcWorkspaceSelect)(nil),                                         // 524: anytype.Rpc.Workspace.Select
	(*RpcWorkspaceExport)(nil),                                         // 525: anytype.Rpc.Workspace.Export
	(*RpcWorkspaceGetCurrentRequest)(nil),                              // 526: anytype.Rpc.Workspace.GetCurrent.Request
	(*RpcWorkspaceGetCurrentResponse)(nil),                             // 527: anytype.Rpc.Workspace.GetCurrent.Response
	(*RpcWorkspaceGetCurrentResponseError)(nil),                        // 528: anytype.Rpc.Workspace.GetCurrent.Response.Error
	(*RpcWorkspaceGetAllRequest)(nil),                                  // 529: anytype.Rpc.Workspace.GetAll.Request
	(*RpcWorkspaceGetAllResponse)(nil),                                 // 530: anytype.Rpc.Workspace.GetAll.Response
	(*RpcWorkspaceGetAllResponseError)(nil),                            // 531: anytype.Rpc.Workspace.GetAll.Response.Error
	(*RpcWorkspaceCreateRequest)(nil),                                  // 532: anytype.Rpc.Workspace.Create.Request
	(*RpcWorkspaceCreateResponse)(nil),                                 // 533: anytype.Rpc.Workspace.Create.Response
	(*RpcWorkspaceCreateResponseError)(nil),                            // 534: anytype.Rpc.Workspace.Create.Response.Error
	(*RpcWorkspaceOpenRequest)(nil),                                    // 535: anytype.Rpc.Workspace.Open.Request
	(*RpcWorkspaceOpenResponse)(nil),                                   // 536: anytype.Rpc.Workspace.Open.Response
	(*RpcWorkspaceOpenResponseError)(nil),                              // 537: anytype.Rpc.Workspace.Open.Response.Error
	(*RpcWorkspaceObjectAdd)(nil),                                      // 538: anytype.Rpc.Workspace.Object.Add
	(*RpcWorkspaceObjectListAdd)(nil),                                  // 539: anytype.Rpc.Workspace.Object.ListAdd
	(*RpcWorkspaceObjectListRemove)(nil),                               // 540: anytype.Rpc.Workspace.Object.ListRemove
	(*RpcWorkspaceObjectAddRequest)(nil),                               // 541: anytype.Rpc.Workspace.Object.Add.Request
	(*RpcWorkspaceObjectAddResponse)(nil),                              // 542: anytype.Rpc.Workspace.Object.Add.Response
	(*RpcWorkspaceObjectAddResponseError)(nil),                         // 543: anytype.Rpc.Workspace.Object.Add.Response.Error
	(*RpcWorkspaceObjectListAddRequest)(nil),                           // 544: anytype.Rpc.Workspace.Object.ListAdd.Request
	(*RpcWorkspaceObjectListAddResponse)(nil),                          // 545: anytype.Rpc.Workspace.Object.ListAdd.Response
	(*RpcWorkspaceObjectListAddResponseError)(nil),                     // 546: anytype.Rpc.Workspace.Object.ListAdd.Response.Error
	(*RpcWorkspaceObjectListRemoveRequest)(nil),                        // 547: anytype.Rpc.Workspace.Object.ListRemove.Request
	(*RpcWorkspaceObjectListRemoveResponse)(nil),                       // 548: anytype.Rpc.Workspace.Object.ListRemove.Response
	(*RpcWorkspaceObjectListRemoveResponseError)(nil),                  // 549: anytype.Rpc.Workspace.Object.ListRemove.Response.Error
	(*RpcWorkspaceSetInfoRequest)(nil),                                 // 550: anytype.Rpc.Workspace.SetInfo.Request
	(*RpcWorkspaceSetInfoResponse)(nil),                                // 551: anytype.Rpc.Workspace.SetInfo.Response
	(*RpcWorkspaceSetInfoResponseError)(nil),                           // 552: anytype.Rpc.Workspace.SetInfo.Response.Error
	(*RpcWorkspaceSelectRequest)(nil),                                  // 553: anytype.Rpc.Workspace.Select.Request
	(*RpcWorkspaceSelectResponse)(nil),                                 // 554: anytype.Rpc.Workspace.Select.Response
	(*RpcWorkspaceSelectResponseError)(nil),                            // 555: anytype.Rpc.Workspace.Select.Response.Error
	(*RpcWorkspaceExportRequest)(nil),                                  // 556: anytype.Rpc.Workspace.Export.Request
	(*RpcWorkspaceExportResponse)(nil),                                 // 557: anytype.Rpc.Workspace.Export.Response
	(*RpcWorkspaceExportResponseError)(nil),                            // 558: anytype.Rpc.Workspace.Export.Response.Error
	(*RpcPublishingPublishState)(nil),                                  // 559: anytype.Rpc.Publishing.PublishState
	(*RpcPublishingCreate)(nil),                                        // 560: anytype.Rpc.Publishing.Create
	(*RpcPublishingRemove)(nil),                                        // 561: anytype.Rpc.Publishing.Remove
	(*RpcPublishingList)(nil),                                          // 562: anytype.Rpc.Publishing.List
	(*RpcPublishingResolveUri)(nil),                                    // 563: anytype.Rpc.Publishing.ResolveUri
	(*RpcPublishingGetStatus)(nil),                                     // 564: anytype.Rpc.Publishing.GetStatus
	(*RpcPublishingCreateRequest)(nil),                                 // 565: anytype.Rpc.Publishing.Create.Request
	(*RpcPublishingCreateResponse)(nil),                                // 566: anytype.Rpc.Publishing.Create.Response
	(*RpcPublishingCreateResponseError)(nil),                           // 567: anytype.Rpc.Publishing.Create.Response.Error
	(*RpcPublishingRemoveRequest)(nil),                                 // 568: anytype.Rpc.Publishing.Remove.Request
	(*RpcPublishingRemoveResponse)(nil),                                // 569: anytype.Rpc.Publishing.Remove.Response
	(*RpcPublishingRemoveResponseError)(nil),                           // 570: anytype.Rpc.Publishing.Remove.Response.Error
	(*RpcPublishingListRequest)(nil),                                   // 571: anytype.Rpc.Publishing.List.Request
	(*RpcPublishingListResponse)(nil),                                  // 572: anytype.Rpc.Publishing.List.Response
	(*RpcPublishingListResponseError)(nil),                             // 573: anytype.Rpc.Publishing.List.Response.Error
	(*RpcPublishingResolveUriRequest)(nil),                             // 574: anytype.Rpc.Publishing.ResolveUri.Request
	(*RpcPublishingResolveUriResponse)(nil),                            // 575: anytype.Rpc.Publishing.ResolveUri.Response
	(*RpcPublishingResolveUriResponseError)(nil),                       // 576: anytype.Rpc.Publishing.ResolveUri.Response.Error
	(*RpcPublishingGetStatusRequest)(nil),                              // 577: anytype.Rpc.Publishing.GetStatus.Request
	(*RpcPublishingGetStatusResponse)(nil),                             // 578: anytype.Rpc.Publishing.GetStatus.Response
	(*RpcPublishingGetStatusResponseError)(nil),                        // 579: anytype.Rpc.Publishing.GetStatus.Response.Error
	(*RpcObjectOpen)(nil),                                              // 580: anytype.Rpc.Object.Open
	(*RpcObjectClose)(nil),                                             // 581: anytype.Rpc.Object.Close
	(*RpcObjectShow)(nil),                                              // 582: anytype.Rpc.Object.Show
	(*RpcObjectCreate)(nil),                                            // 583: anytype.Rpc.Object.Create
	(*RpcObjectCreateBookmark)(nil),                                    // 584: anytype.Rpc.Object.CreateBookmark
	(*RpcObjectCreateRelation)(nil),                                    // 585: anytype.Rpc.Object.CreateRelation
	(*RpcObjectCreateRelationOption)(nil),                              // 586: anytype.Rpc.Object.CreateRelationOption
	(*RpcObjectCreateSet)(nil),                                         // 587: anytype.Rpc.Object.CreateSet
	(*RpcObjectCreateObjectType)(nil),                                  // 588: anytype.Rpc.Object.CreateObjectType
	(*RpcObjectCreateFromUrl)(nil),                                     // 589: anytype.Rpc.Object.CreateFromUrl
	(*RpcObjectChatAdd)(nil),                                           // 590: anytype.Rpc.Object.ChatAdd
	(*RpcObjectBookmarkFetch)(nil),                                     // 591: anytype.Rpc.Object.BookmarkFetch
	(*RpcObjectToBookmark)(nil),                                        // 592: anytype.Rpc.Object.ToBookmark
	(*RpcObjectDuplicate)(nil),                                         // 593: anytype.Rpc.Object.Duplicate
	(*RpcObjectOpenBreadcrumbs)(nil),                                   // 594: anytype.Rpc.Object.OpenBreadcrumbs
	(*RpcObjectSetBreadcrumbs)(nil),                                    // 595: anytype.Rpc.Object.SetBreadcrumbs
	(*RpcObjectShareByLink)(nil),                                       // 596: anytype.Rpc.Object.ShareByLink
	(*RpcObjectSearch)(nil),                                            // 597: anytype.Rpc.Object.Search
	(*RpcObjectSearchWithMeta)(nil),                                    // 598: anytype.Rpc.Object.SearchWithMeta
	(*RpcObjectGraph)(nil),                                             // 599: anytype.Rpc.Object.Graph
	(*RpcObjectSearchSubscribe)(nil),                                   // 600: anytype.Rpc.Object.SearchSubscribe
	(*RpcObjectCrossSpaceSearchSubscribe)(nil),                         // 601: anytype.Rpc.Object.CrossSpaceSearchSubscribe
	(*RpcObjectCrossSpaceSearchUnsubscribe)(nil),                       // 602: anytype.Rpc.Object.CrossSpaceSearchUnsubscribe
	(*RpcObjectGroupsSubscribe)(nil),                                   // 603: anytype.Rpc.Object.GroupsSubscribe
	(*RpcObjectSubscribeIds)(nil),                                      // 604: anytype.Rpc.Object.SubscribeIds
	(*RpcObjectSearchUnsubscribe)(nil),                                 // 605: anytype.Rpc.Object.SearchUnsubscribe
	(*RpcObjectSetLayout)(nil),                                         // 606: anytype.Rpc.Object.SetLayout
	(*RpcObjectSetIsFavorite)(nil),                                     // 607: anytype.Rpc.Object.SetIsFavorite
	(*RpcObjectSetIsArchived)(nil),                                     // 608: anytype.Rpc.Object.SetIsArchived
	(*RpcObjectSetSource)(nil),                                         // 609: anytype.Rpc.Object.SetSource
	(*RpcObjectWorkspaceSetDashboard)(nil),                             // 610: anytype.Rpc.Object.WorkspaceSetDashboard
	(*RpcObjectSetObjectType)(nil),                                     // 611: anytype.Rpc.Object.SetObjectType
	(*RpcObjectSetInternalFlags)(nil),                                  // 612: anytype.Rpc.Object.SetInternalFlags
	(*RpcObjectSetDetails)(nil),                                        // 613: anytype.Rpc.Object.SetDetails
	(*RpcObjectToSet)(nil),                                             // 614: anytype.Rpc.Object.ToSet
	(*RpcObjectToCollection)(nil),                                      // 615: anytype.Rpc.Object.ToCollection
	(*RpcObjectUndoRedoCounter)(nil),                                   // 616: anytype.Rpc.Object.UndoRedoCounter
	(*RpcObjectUndo)(nil),                                              // 617: anytype.Rpc.Object.Undo
	(*RpcObjectRedo)(nil),                                              // 618: anytype.Rpc.Object.Redo
	(*RpcObjectListDuplicate)(nil),                                     // 619: anytype.Rpc.Object.ListDuplicate
	(*RpcObjectListDelete)(nil),                                        // 620: anytype.Rpc.Object.ListDelete
	(*RpcObjectListSetIsArchived)(nil),                                 // 621: anytype.Rpc.Object.ListSetIsArchived
	(*RpcObjectListSetIsFavorite)(nil),                                 // 622: anytype.Rpc.Object.ListSetIsFavorite
	(*RpcObjectListSetObjectType)(nil),                                 // 623: anytype.Rpc.Object.ListSetObjectType
	(*RpcObjectListSetDetails)(nil),                                    // 624: anytype.Rpc.Object.ListSetDetails
	(*RpcObjectListModifyDetailValues)(nil),                            // 625: anytype.Rpc.Object.ListModifyDetailValues
	(*RpcObjectApplyTemplate)(nil),                                     // 626: anytype.Rpc.Object.ApplyTemplate
	(*RpcObjectListExport)(nil),                                        // 627: anytype.Rpc.Object.ListExport
	(*RpcObjectImport)(nil),                                            // 628: anytype.Rpc.Object.Import
	(*RpcObjectImportList)(nil),                                        // 629: anytype.Rpc.Object.ImportList
	(*RpcObjectImportUseCase)(nil),                                     // 630: anytype.Rpc.Object.ImportUseCase
	(*RpcObjectImportExperience)(nil),                                  // 631: anytype.Rpc.Object.ImportExperience
	(*RpcObjectDateByTimestamp)(nil),                                   // 632: anytype.Rpc.Object.DateByTimestamp
	(*RpcObjectOpenRequest)(nil),                                       // 633: anytype.Rpc.Object.Open.Request
	(*RpcObjectOpenResponse)(nil),                                      // 634: anytype.Rpc.Object.Open.Response
	(*RpcObjectOpenResponseError)(nil),                                 // 635: anytype.Rpc.Object.Open.Response.Error
	(*RpcObjectCloseRequest)(nil),                                      // 636: anytype.Rpc.Object.Close.Request
	(*RpcObjectCloseResponse)(nil),                                     // 637: anytype.Rpc.Object.Close.Response
	(*RpcObjectCloseResponseError)(nil),                                // 638: anytype.Rpc.Object.Close.Response.Error
	(*RpcObjectShowRequest)(nil),                                       // 639: anytype.Rpc.Object.Show.Request
	(*RpcObjectShowResponse)(nil),                                      // 640: anytype.Rpc.Object.Show.Response
	(*RpcObjectShowResponseError)(nil),                                 // 641: anytype.Rpc.Object.Show.Response.Error
	(*RpcObjectCreateRequest)(nil),                                     // 642: anytype.Rpc.Object.Create.Request
	(*RpcObjectCreateResponse)(nil),                                    // 643: anytype.Rpc.Object.Create.Response
	(*RpcObjectCreateResponseError)(nil),                               // 644: anytype.Rpc.Object.Create.Response.Error
	(*RpcObjectCreateBookmarkRequest)(nil),                             // 645: anytype.Rpc.Object.CreateBookmark.Request
	(*RpcObjectCreateBookmarkResponse)(nil),                            // 646: anytype.Rpc.Object.CreateBookmark.Response
	(*RpcObjectCreateBookmarkResponseError)(nil),                       // 647: anytype.Rpc.Object.CreateBookmark.Response.Error
	(*RpcObjectCreateRelationRequest)(nil),                             // 648: anytype.Rpc.Object.CreateRelation.Request
	(*RpcObjectCreateRelationResponse)(nil),                            // 649: anytype.Rpc.Object.CreateRelation.Response
	(*RpcObjectCreateRelationResponseError)(nil),                       // 650: anytype.Rpc.Object.CreateRelation.Response.Error
	(*RpcObjectCreateRelationOptionRequest)(nil),                       // 651: anytype.Rpc.Object.CreateRelationOption.Request
	(*RpcObjectCreateRelationOptionResponse)(nil),                      // 652: anytype.Rpc.Object.CreateRelationOption.Response
	(*RpcObjectCreateRelationOptionResponseError)(nil),                 // 653: anytype.Rpc.Object.CreateRelationOption.Response.Error
	(*RpcObjectCreateSetRequest)(nil),                                  // 654: anytype.Rpc.Object.CreateSet.Request
	(*RpcObjectCreateSetResponse)(nil),                                 // 655: anytype.Rpc.Object.CreateSet.Response
	(*RpcObjectCreateSetResponseError)(nil),                            // 656: anytype.Rpc.Object.CreateSet.Response.Error
	(*RpcObjectCreateObjectTypeRequest)(nil),                           // 657: anytype.Rpc.Object.CreateObjectType.Request
	(*RpcObjectCreateObjectTypeResponse)(nil),                          // 658: anytype.Rpc.Object.CreateObjectType.Response
	(*RpcObjectCreateObjectTypeResponseError)(nil),                     // 659: anytype.Rpc.Object.CreateObjectType.Response.Error
	(*RpcObjectCreateFromUrlRequest)(nil),                              // 660: anytype.Rpc.Object.CreateFromUrl.Request
	(*RpcObjectCreateFromUrlResponse)(nil),                             // 661: anytype.Rpc.Object.CreateFromUrl.Response
	(*RpcObjectCreateFromUrlResponseError)(nil),                        // 662: anytype.Rpc.Object.CreateFromUrl.Response.Error
	(*RpcObjectChatAddRequest)(nil),                                    // 663: anytype.Rpc.Object.ChatAdd.Request
	(*RpcObjectChatAddResponse)(nil),                                   // 664: anytype.Rpc.Object.ChatAdd.Response
	(*RpcObjectChatAddResponseError)(nil),                              // 665: anytype.Rpc.Object.ChatAdd.Response.Error
	(*RpcObjectBookmarkFetchRequest)(nil),                              // 666: anytype.Rpc.Object.BookmarkFetch.Request
	(*RpcObjectBookmarkFetchResponse)(nil),                             // 667: anytype.Rpc.Object.BookmarkFetch.Response
	(*RpcObjectBookmarkFetchResponseError)(nil),                        // 668: anytype.Rpc.Object.BookmarkFetch.Response.Error
	(*RpcObjectToBookmarkRequest)(nil),                                 // 669: anytype.Rpc.Object.ToBookmark.Request
	(*RpcObjectToBookmarkResponse)(nil),                                // 670: anytype.Rpc.Object.ToBookmark.Response
	(*RpcObjectToBookmarkResponseError)(nil),                           // 671: anytype.Rpc.Object.ToBookmark.Response.Error
	(*RpcObjectDuplicateRequest)(nil),                                  // 672: anytype.Rpc.Object.Duplicate.Request
	(*RpcObjectDuplicateResponse)(nil),                                 // 673: anytype.Rpc.Object.Duplicate.Response
	(*RpcObjectDuplicateResponseError)(nil),                            // 674: anytype.Rpc.Object.Duplicate.Response.Error
	(*RpcObjectOpenBreadcrumbsRequest)(nil),                            // 675: anytype.Rpc.Object.OpenBreadcrumbs.Request
	(*RpcObjectOpenBreadcrumbsResponse)(nil),                           // 676: anytype.Rpc.Object.OpenBreadcrumbs.Response
	(*RpcObjectOpenBreadcrumbsResponseError)(nil),                      // 677: anytype.Rpc.Object.OpenBreadcrumbs.Response.Error
	(*RpcObjectSetBreadcrumbsRequest)(nil),                             // 678: anytype.Rpc.Object.SetBreadcrumbs.Request
	(*RpcObjectSetBreadcrumbsResponse)(nil),                            // 679: anytype.Rpc.Object.SetBreadcrumbs.Response
	(*RpcObjectSetBreadcrumbsResponseError)(nil),                       // 680: anytype.Rpc.Object.SetBreadcrumbs.Response.Error
	(*RpcObjectShareByLinkRequest)(nil),                                // 681: anytype.Rpc.Object.ShareByLink.Request
	(*RpcObjectShareByLinkResponse)(nil),                               // 682: anytype.Rpc.Object.ShareByLink.Response
	(*RpcObjectShareByLinkResponseError)(nil),                          // 683: anytype.Rpc.Object.ShareByLink.Response.Error
	(*RpcObjectSearchRequest)(nil),                                     // 684: anytype.Rpc.Object.Search.Request
	(*RpcObjectSearchResponse)(nil),                                    // 685: anytype.Rpc.Object.Search.Response
	(*RpcObjectSearchResponseError)(nil),                               // 686: anytype.Rpc.Object.Search.Response.Error
	(*RpcObjectSearchWithMetaRequest)(nil),                             // 687: anytype.Rpc.Object.SearchWithMeta.Request
	(*RpcObjectSearchWithMetaResponse)(nil),                            // 688: anytype.Rpc.Object.SearchWithMeta.Response
	(*RpcObjectSearchWithMetaResponseError)(nil),                       // 689: anytype.Rpc.Object.SearchWithMeta.Response.Error
	(*RpcObjectGraphRequest)(nil),                                      // 690: anytype.Rpc.Object.Graph.Request
	(*RpcObjectGraphEdge)(nil),                                         // 691: anytype.Rpc.Object.Graph.Edge
	(*RpcObjectGraphResponse)(nil),                                     // 692: anytype.Rpc.Object.Graph.Response
	(*RpcObjectGraphResponseError)(nil),                                // 693: anytype.Rpc.Object.Graph.Response.Error
	(*RpcObjectSearchSubscribeRequest)(nil),                            // 694: anytype.Rpc.Object.SearchSubscribe.Request
	(*RpcObjectSearchSubscribeResponse)(nil),                           // 695: anytype.Rpc.Object.SearchSubscribe.Response
	(*RpcObjectSearchSubscribeResponseError)(nil),                      // 696: anytype.Rpc.Object.SearchSubscribe.Response.Error
	(*RpcObjectCrossSpaceSearchSubscribeRequest)(nil),                  // 697: anytype.Rpc.Object.CrossSpaceSearchSubscribe.Request
	(*RpcObjectCrossSpaceSearchSubscribeResponse)(nil),                 // 698: anytype.Rpc.Object.CrossSpaceSearchSubscribe.Response
	(*RpcObjectCrossSpaceSearchSubscribeResponseError)(nil),            // 699: anytype.Rpc.Object.CrossSpaceSearchSubscribe.Response.Error
	(*RpcObjectCrossSpaceSearchUnsubscribeRequest)(nil),                // 700: anytype.Rpc.Object.CrossSpaceSearchUnsubscribe.Request
	(*RpcObjectCrossSpaceSearchUnsubscribeResponse)(nil),               // 701: anytype.Rpc.Object.CrossSpaceSearchUnsubscribe.Response
	(*RpcObjectCrossSpaceSearchUnsubscribeResponseError)(nil),          // 702: anytype.Rpc.Object.CrossSpaceSearchUnsubscribe.Response.Error
	(*RpcObjectGroupsSubscribeRequest)(nil),                            // 703: anytype.Rpc.Object.GroupsSubscribe.Request
	(*RpcObjectGroupsSubscribeResponse)(nil),                           // 704: anytype.Rpc.Object.GroupsSubscribe.Response
	(*RpcObjectGroupsSubscribeResponseError)(nil),                      // 705: anytype.Rpc.Object.GroupsSubscribe.Response.Error
	(*RpcObjectSubscribeIdsRequest)(nil),                               // 706: anytype.Rpc.Object.SubscribeIds.Request
	(*RpcObjectSubscribeIdsResponse)(nil),                              // 707: anytype.Rpc.Object.SubscribeIds.Response
	(*RpcObjectSubscribeIdsResponseError)(nil),                         // 708: anytype.Rpc.Object.SubscribeIds.Response.Error
	(*RpcObjectSearchUnsubscribeRequest)(nil),                          // 709: anytype.Rpc.Object.SearchUnsubscribe.Request
	(*RpcObjectSearchUnsubscribeResponse)(nil),                         // 710: anytype.Rpc.Object.SearchUnsubscribe.Response
	(*RpcObjectSearchUnsubscribeResponseError)(nil),                    // 711: anytype.Rpc.Object.SearchUnsubscribe.Response.Error
	(*RpcObjectSetLayoutRequest)(nil),                                  // 712: anytype.Rpc.Object.SetLayout.Request
	(*RpcObjectSetLayoutResponse)(nil),                                 // 713: anytype.Rpc.Object.SetLayout.Response
	(*RpcObjectSetLayoutResponseError)(nil),                            // 714: anytype.Rpc.Object.SetLayout.Response.Error
	(*RpcObjectSetIsFavoriteRequest)(nil),                              // 715: anytype.Rpc.Object.SetIsFavorite.Request
	(*RpcObjectSetIsFavoriteResponse)(nil),                             // 716: anytype.Rpc.Object.SetIsFavorite.Response
	(*RpcObjectSetIsFavoriteResponseError)(nil),                        // 717: anytype.Rpc.Object.SetIsFavorite.Response.Error
	(*RpcObjectSetIsArchivedRequest)(nil),                              // 718: anytype.Rpc.Object.SetIsArchived.Request
	(*RpcObjectSetIsArchivedResponse)(nil),                             // 719: anytype.Rpc.Object.SetIsArchived.Response
	(*RpcObjectSetIsArchivedResponseError)(nil),                        // 720: anytype.Rpc.Object.SetIsArchived.Response.Error
	(*RpcObjectSetSourceRequest)(nil),                                  // 721: anytype.Rpc.Object.SetSource.Request
	(*RpcObjectSetSourceResponse)(nil),                                 // 722: anytype.Rpc.Object.SetSource.Response
	(*RpcObjectSetSourceResponseError)(nil),                            // 723: anytype.Rpc.Object.SetSource.Response.Error
	(*RpcObjectWorkspaceSetDashboardRequest)(nil),                      // 724: anytype.Rpc.Object.WorkspaceSetDashboard.Request
	(*RpcObjectWorkspaceSetDashboardResponse)(nil),                     // 725: anytype.Rpc.Object.WorkspaceSetDashboard.Response
	(*RpcObjectWorkspaceSetDashboardResponseError)(nil),                // 726: anytype.Rpc.Object.WorkspaceSetDashboard.Response.Error
	(*RpcObjectSetObjectTypeRequest)(nil),                              // 727: anytype.Rpc.Object.SetObjectType.Request
	(*RpcObjectSetObjectTypeResponse)(nil),                             // 728: anytype.Rpc.Object.SetObjectType.Response
	(*RpcObjectSetObjectTypeResponseError)(nil),                        // 729: anytype.Rpc.Object.SetObjectType.Response.Error
	(*RpcObjectSetInternalFlagsRequest)(nil),                           // 730: anytype.Rpc.Object.SetInternalFlags.Request
	(*RpcObjectSetInternalFlagsResponse)(nil),                          // 731: anytype.Rpc.Object.SetInternalFlags.Response
	(*RpcObjectSetInternalFlagsResponseError)(nil),                     // 732: anytype.Rpc.Object.SetInternalFlags.Response.Error
	(*RpcObjectSetDetailsRequest)(nil),                                 // 733: anytype.Rpc.Object.SetDetails.Request
	(*RpcObjectSetDetailsResponse)(nil),                                // 734: anytype.Rpc.Object.SetDetails.Response
	(*RpcObjectSetDetailsResponseError)(nil),                           // 735: anytype.Rpc.Object.SetDetails.Response.Error
	(*RpcObjectToSetRequest)(nil),                                      // 736: anytype.Rpc.Object.ToSet.Request
	(*RpcObjectToSetResponse)(nil),                                     // 737: anytype.Rpc.Object.ToSet.Response
	(*RpcObjectToSetResponseError)(nil),                                // 738: anytype.Rpc.Object.ToSet.Response.Error
	(*RpcObjectToCollectionRequest)(nil),                               // 739: anytype.Rpc.Object.ToCollection.Request
	(*RpcObjectToCollectionResponse)(nil),                              // 740: anytype.Rpc.Object.ToCollection.Response
	(*RpcObjectToCollectionResponseError)(nil),                         // 741: anytype.Rpc.Object.ToCollection.Response.Error
	(*RpcObjectUndoRequest)(nil),                                       // 742: anytype.Rpc.Object.Undo.Request
	(*RpcObjectUndoResponse)(nil),                                      // 743: anytype.Rpc.Object.Undo.Response
	(*RpcObjectUndoResponseError)(nil),                                 // 744: anytype.Rpc.Object.Undo.Response.Error
	(*RpcObjectRedoRequest)(nil),                                       // 745: anytype.Rpc.Object.Redo.Request
	(*RpcObjectRedoResponse)(nil),                                      // 746: anytype.Rpc.Object.Redo.Response
	(*RpcObjectRedoResponseError)(nil),                                 // 747: anytype.Rpc.Object.Redo.Response.Error
	(*RpcObjectListDuplicateRequest)(nil),                              // 748: anytype.Rpc.Object.ListDuplicate.Request
	(*RpcObjectListDuplicateResponse)(nil),                             // 749: anytype.Rpc.Object.ListDuplicate.Response
	(*RpcObjectListDuplicateResponseError)(nil),                        // 750: anytype.Rpc.Object.ListDuplicate.Response.Error
	(*RpcObjectListDeleteRequest)(nil),                                 // 751: anytype.Rpc.Object.ListDelete.Request
	(*RpcObjectListDeleteResponse)(nil),                                // 752: anytype.Rpc.Object.ListDelete.Response
	(*RpcObjectListDeleteResponseError)(nil),                           // 753: anytype.Rpc.Object.ListDelete.Response.Error
	(*RpcObjectListSetIsArchivedRequest)(nil),                          // 754: anytype.Rpc.Object.ListSetIsArchived.Request
	(*RpcObjectListSetIsArchivedResponse)(nil),                         // 755: anytype.Rpc.Object.ListSetIsArchived.Response
	(*RpcObjectListSetIsArchivedResponseError)(nil),                    // 756: anytype.Rpc.Object.ListSetIsArchived.Response.Error
	(*RpcObjectListSetIsFavoriteRequest)(nil),                          // 757: anytype.Rpc.Object.ListSetIsFavorite.Request
	(*RpcObjectListSetIsFavoriteResponse)(nil),                         // 758: anytype.Rpc.Object.ListSetIsFavorite.Response
	(*RpcObjectListSetIsFavoriteResponseError)(nil),                    // 759: anytype.Rpc.Object.ListSetIsFavorite.Response.Error
	(*RpcObjectListSetObjectTypeRequest)(nil),                          // 760: anytype.Rpc.Object.ListSetObjectType.Request
	(*RpcObjectListSetObjectTypeResponse)(nil),                         // 761: anytype.Rpc.Object.ListSetObjectType.Response
	(*RpcObjectListSetObjectTypeResponseError)(nil),                    // 762: anytype.Rpc.Object.ListSetObjectType.Response.Error
	(*RpcObjectListSetDetailsRequest)(nil),                             // 763: anytype.Rpc.Object.ListSetDetails.Request
	(*RpcObjectListSetDetailsResponse)(nil),                            // 764: anytype.Rpc.Object.ListSetDetails.Response
	(*RpcObjectListSetDetailsResponseError)(nil),                       // 765: anytype.Rpc.Object.ListSetDetails.Response.Error
	(*RpcObjectListModifyDetailValuesRequest)(nil),                     // 766: anytype.Rpc.Object.ListModifyDetailValues.Request
	(*RpcObjectListModifyDetailValuesResponse)(nil),                    // 767: anytype.Rpc.Object.ListModifyDetailValues.Response
	(*RpcObjectListModifyDetailValuesRequestOperation)(nil),            // 768: anytype.Rpc.Object.ListModifyDetailValues.Request.Operation
	(*RpcObjectListModifyDetailValuesResponseError)(nil),               // 769: anytype.Rpc.Object.ListModifyDetailValues.Response.Error
	(*RpcObjectApplyTemplateRequest)(nil),                              // 770: anytype.Rpc.Object.ApplyTemplate.Request
	(*RpcObjectApplyTemplateResponse)(nil),                             // 771: anytype.Rpc.Object.ApplyTemplate.Response
	(*RpcObjectApplyTemplateResponseError)(nil),                        // 772: anytype.Rpc.Object.ApplyTemplate.Response.Error
	(*RpcObjectListExportRequest)(nil),                                 // 773: anytype.Rpc.Object.ListExport.Request
	(*RpcObjectListExportStateFilters)(nil),                            // 774: anytype.Rpc.Object.ListExport.StateFilters
	(*RpcObjectListExportRelationsWhiteList)(nil),                      // 775: anytype.Rpc.Object.ListExport.RelationsWhiteList
	(*RpcObjectListExportResponse)(nil),                                // 776: anytype.Rpc.Object.ListExport.Response
	(*RpcObjectListExportResponseError)(nil),                           // 777: anytype.Rpc.Object.ListExport.Response.Error
	(*RpcObjectImportRequest)(nil),                                     // 778: anytype.Rpc.Object.Import.Request
	(*RpcObjectImportResponse)(nil),                                    // 779: anytype.Rpc.Object.Import.Response
	(*RpcObjectImportNotion)(nil),                                      // 780: anytype.Rpc.Object.Import.Notion
	(*RpcObjectImportRequestNotionParams)(nil),                         // 781: anytype.Rpc.Object.Import.Request.NotionParams
	(*RpcObjectImportRequestMarkdownParams)(nil),                       // 782: anytype.Rpc.Object.Import.Request.MarkdownParams
	(*RpcObjectImportRequestBookmarksParams)(nil),                      // 783: anytype.Rpc.Object.Import.Request.BookmarksParams
	(*RpcObjectImportRequestHtmlParams)(nil),                           // 784: anytype.Rpc.Object.Import.Request.HtmlParams
	(*RpcObjectImportRequestTxtParams)(nil),                            // 785: anytype.Rpc.Object.Import.Request.TxtParams
	(*RpcObjectImportRequestPbParams)(nil),                             // 786: anytype.Rpc.Object.Import.Request.PbParams
	(*RpcObjectImportRequestCsvParams)(nil),                            // 787: anytype.Rpc.Object.Import.Request.CsvParams
	(*RpcObjectImportRequestSnapshot)(nil),                             // 788: anytype.Rpc.Object.Import.Request.Snapshot
	(*RpcObjectImportResponseError)(nil),                               // 789: anytype.Rpc.Object.Import.Response.Error
	(*RpcObjectImportNotionValidateToken)(nil),                         // 790: anytype.Rpc.Object.Import.Notion.ValidateToken
	(*RpcObjectImportNotionValidateTokenRequest)(nil),                  // 791: anytype.Rpc.Object.Import.Notion.ValidateToken.Request
	(*RpcObjectImportNotionValidateTokenResponse)(nil),                 // 792: anytype.Rpc.Object.Import.Notion.ValidateToken.Response
	(*RpcObjectImportNotionValidateTokenResponseError)(nil),            // 793: anytype.Rpc.Object.Import.Notion.ValidateToken.Response.Error
	(*RpcObjectImportListRequest)(nil),                                 // 794: anytype.Rpc.Object.ImportList.Request
	(*RpcObjectImportListResponse)(nil),                                // 795: anytype.Rpc.Object.ImportList.Response
	(*RpcObjectImportListImportResponse)(nil),                          // 796: anytype.Rpc.Object.ImportList.ImportResponse
	(*RpcObjectImportListResponseError)(nil),                           // 797: anytype.Rpc.Object.ImportList.Response.Error
	(*RpcObjectImportUseCaseRequest)(nil),                              // 798: anytype.Rpc.Object.ImportUseCase.Request
	(*RpcObjectImportUseCaseResponse)(nil),                             // 799: anytype.Rpc.Object.ImportUseCase.Response
	(*RpcObjectImportUseCaseResponseError)(nil),                        // 800: anytype.Rpc.Object.ImportUseCase.Response.Error
	(*RpcObjectImportExperienceRequest)(nil),                           // 801: anytype.Rpc.Object.ImportExperience.Request
	(*RpcObjectImportExperienceResponse)(nil),                          // 802: anytype.Rpc.Object.ImportExperience.Response
	(*RpcObjectImportExperienceResponseError)(nil),                     // 803: anytype.Rpc.Object.ImportExperience.Response.Error
	(*RpcObjectDateByTimestampRequest)(nil),                            // 804: anytype.Rpc.Object.DateByTimestamp.Request
	(*RpcObjectDateByTimestampResponse)(nil),                           // 805: anytype.Rpc.Object.DateByTimestamp.Response
	(*RpcObjectDateByTimestampResponseError)(nil),                      // 806: anytype.Rpc.Object.DateByTimestamp.Response.Error
	(*RpcObjectCollectionAdd)(nil),                                     // 807: anytype.Rpc.ObjectCollection.Add
	(*RpcObjectCollectionRemove)(nil),                                  // 808: anytype.Rpc.ObjectCollection.Remove
	(*RpcObjectCollectionSort)(nil),                                    // 809: anytype.Rpc.ObjectCollection.Sort
	(*RpcObjectCollectionAddRequest)(nil),                              // 810: anytype.Rpc.ObjectCollection.Add.Request
	(*RpcObjectCollectionAddResponse)(nil),                             // 811: anytype.Rpc.ObjectCollection.Add.Response
	(*RpcObjectCollectionAddResponseError)(nil),                        // 812: anytype.Rpc.ObjectCollection.Add.Response.Error
	(*RpcObjectCollectionRemoveRequest)(nil),                           // 813: anytype.Rpc.ObjectCollection.Remove.Request
	(*RpcObjectCollectionRemoveResponse)(nil),                          // 814: anytype.Rpc.ObjectCollection.Remove.Response
	(*RpcObjectCollectionRemoveResponseError)(nil),                     // 815: anytype.Rpc.ObjectCollection.Remove.Response.Error
	(*RpcObjectCollectionSortRequest)(nil),                             // 816: anytype.Rpc.ObjectCollection.Sort.Request
	(*RpcObjectCollectionSortResponse)(nil),                            // 817: anytype.Rpc.ObjectCollection.Sort.Response
	(*RpcObjectCollectionSortResponseError)(nil),                       // 818: anytype.Rpc.ObjectCollection.Sort.Response.Error
	(*RpcObjectRelationAdd)(nil),                                       // 819: anytype.Rpc.ObjectRelation.Add
	(*RpcObjectRelationDelete)(nil),                                    // 820: anytype.Rpc.ObjectRelation.Delete
	(*RpcObjectRelationListAvailable)(nil),                             // 821: anytype.Rpc.ObjectRelation.ListAvailable
	(*RpcObjectRelationAddFeatured)(nil),                               // 822: anytype.Rpc.ObjectRelation.AddFeatured
	(*RpcObjectRelationRemoveFeatured)(nil),                            // 823: anytype.Rpc.ObjectRelation.RemoveFeatured
	(*RpcObjectRelationAddRequest)(nil),                                // 824: anytype.Rpc.ObjectRelation.Add.Request
	(*RpcObjectRelationAddResponse)(nil),                               // 825: anytype.Rpc.ObjectRelation.Add.Response
	(*RpcObjectRelationAddResponseError)(nil),                          // 826: anytype.Rpc.ObjectRelation.Add.Response.Error
	(*RpcObjectRelationDeleteRequest)(nil),                             // 827: anytype.Rpc.ObjectRelation.Delete.Request
	(*RpcObjectRelationDeleteResponse)(nil),                            // 828: anytype.Rpc.ObjectRelation.Delete.Response
	(*RpcObjectRelationDeleteResponseError)(nil),                       // 829: anytype.Rpc.ObjectRelation.Delete.Response.Error
	(*RpcObjectRelationListAvailableRequest)(nil),                      // 830: anytype.Rpc.ObjectRelation.ListAvailable.Request
	(*RpcObjectRelationListAvailableResponse)(nil),                     // 831: anytype.Rpc.ObjectRelation.ListAvailable.Response
	(*RpcObjectRelationListAvailableResponseError)(nil),                // 832: anytype.Rpc.ObjectRelation.ListAvailable.Response.Error
	(*RpcObjectRelationAddFeaturedRequest)(nil),                        // 833: anytype.Rpc.ObjectRelation.AddFeatured.Request
	(*RpcObjectRelationAddFeaturedResponse)(nil),                       // 834: anytype.Rpc.ObjectRelation.AddFeatured.Response
	(*RpcObjectRelationAddFeaturedResponseError)(nil),                  // 835: anytype.Rpc.ObjectRelation.AddFeatured.Response.Error
	(*RpcObjectRelationRemoveFeaturedRequest)(nil),                     // 836: anytype.Rpc.ObjectRelation.RemoveFeatured.Request
	(*RpcObjectRelationRemoveFeaturedResponse)(nil),                    // 837: anytype.Rpc.ObjectRelation.RemoveFeatured.Response
	(*RpcObjectRelationRemoveFeaturedResponseError)(nil),               // 838: anytype.Rpc.ObjectRelation.RemoveFeatured.Response.Error
	(*RpcObjectTypeRelation)(nil),                                      // 839: anytype.Rpc.ObjectType.Relation
	(*RpcObjectTypeRecommended)(nil),                                   // 840: anytype.Rpc.ObjectType.Recommended
	(*RpcObjectTypeListConflictingRelations)(nil),                      // 841: anytype.Rpc.ObjectType.ListConflictingRelations
	(*RpcObjectTypeRelationAdd)(nil),                                   // 842: anytype.Rpc.ObjectType.Relation.Add
	(*RpcObjectTypeRelationRemove)(nil),                                // 843: anytype.Rpc.ObjectType.Relation.Remove
	(*RpcObjectTypeRelationAddRequest)(nil),                            // 844: anytype.Rpc.ObjectType.Relation.Add.Request
	(*RpcObjectTypeRelationAddResponse)(nil),                           // 845: anytype.Rpc.ObjectType.Relation.Add.Response
	(*RpcObjectTypeRelationAddResponseError)(nil),                      // 846: anytype.Rpc.ObjectType.Relation.Add.Response.Error
	(*RpcObjectTypeRelationRemoveRequest)(nil),                         // 847: anytype.Rpc.ObjectType.Relation.Remove.Request
	(*RpcObjectTypeRelationRemoveResponse)(nil),                        // 848: anytype.Rpc.ObjectType.Relation.Remove.Response
	(*RpcObjectTypeRelationRemoveResponseError)(nil),                   // 849: anytype.Rpc.ObjectType.Relation.Remove.Response.Error
	(*RpcObjectTypeRecommendedRelationsSet)(nil),                       // 850: anytype.Rpc.ObjectType.Recommended.RelationsSet
	(*RpcObjectTypeRecommendedFeaturedRelationsSet)(nil),               // 851: anytype.Rpc.ObjectType.Recommended.FeaturedRelationsSet
	(*RpcObjectTypeRecommendedRelationsSetRequest)(nil),                // 852: anytype.Rpc.ObjectType.Recommended.RelationsSet.Request
	(*RpcObjectTypeRecommendedRelationsSetResponse)(nil),               // 853: anytype.Rpc.ObjectType.Recommended.RelationsSet.Response
	(*RpcObjectTypeRecommendedRelationsSetResponseError)(nil),          // 854: anytype.Rpc.ObjectType.Recommended.RelationsSet.Response.Error
	(*RpcObjectTypeRecommendedFeaturedRelationsSetRequest)(nil),        // 855: anytype.Rpc.ObjectType.Recommended.FeaturedRelationsSet.Request
	(*RpcObjectTypeRecommendedFeaturedRelationsSetResponse)(nil),       // 856: anytype.Rpc.ObjectType.Recommended.FeaturedRelationsSet.Response
	(*RpcObjectTypeRecommendedFeaturedRelationsSetResponseError)(nil),  // 857: anytype.Rpc.ObjectType.Recommended.FeaturedRelationsSet.Response.Error
	(*RpcObjectTypeListConflictingRelationsRequest)(nil),               // 858: anytype.Rpc.ObjectType.ListConflictingRelations.Request
	(*RpcObjectTypeListConflictingRelationsResponse)(nil),              // 859: anytype.Rpc.ObjectType.ListConflictingRelations.Response
	(*RpcObjectTypeListConflictingRelationsResponseError)(nil),         // 860: anytype.Rpc.ObjectType.ListConflictingRelations.Response.Error
	(*RpcRelationListRemoveOption)(nil),                                // 861: anytype.Rpc.Relation.ListRemoveOption
	(*RpcRelationOptions)(nil),                                         // 862: anytype.Rpc.Relation.Options
	(*RpcRelationListWithValue)(nil),                                   // 863: anytype.Rpc.Relation.ListWithValue
	(*RpcRelationListRemoveOptionRequest)(nil),                         // 864: anytype.Rpc.Relation.ListRemoveOption.Request
	(*RpcRelationListRemoveOptionResponse)(nil),                        // 865: anytype.Rpc.Relation.ListRemoveOption.Response
	(*RpcRelationListRemoveOptionResponseError)(nil),                   // 866: anytype.Rpc.Relation.ListRemoveOption.Response.Error
	(*RpcRelationOptionsRequest)(nil),                                  // 867: anytype.Rpc.Relation.Options.Request
	(*RpcRelationOptionsResponse)(nil),                                 // 868: anytype.Rpc.Relation.Options.Response
	(*RpcRelationOptionsResponseError)(nil),                            // 869: anytype.Rpc.Relation.Options.Response.Error
	(*RpcRelationListWithValueRequest)(nil),                            // 870: anytype.Rpc.Relation.ListWithValue.Request
	(*RpcRelationListWithValueResponse)(nil),                           // 871: anytype.Rpc.Relation.ListWithValue.Response
	(*RpcRelationListWithValueResponseResponseItem)(nil),               // 872: anytype.Rpc.Relation.ListWithValue.Response.ResponseItem
	(*RpcRelationListWithValueResponseError)(nil),                      // 873: anytype.Rpc.Relation.ListWithValue.Response.Error
	(*RpcHistoryVersion)(nil),                                          // 874: anytype.Rpc.History.Version
	(*RpcHistoryGetVersions)(nil),                                      // 875: anytype.Rpc.History.GetVersions
	(*RpcHistoryShowVersion)(nil),                                      // 876: anytype.Rpc.History.ShowVersion
	(*RpcHistorySetVersion)(nil),                                       // 877: anytype.Rpc.History.SetVersion
	(*RpcHistoryDiffVersions)(nil),                                     // 878: anytype.Rpc.History.DiffVersions
	(*RpcHistoryGetVersionsRequest)(nil),                               // 879: anytype.Rpc.History.GetVersions.Request
	(*RpcHistoryGetVersionsResponse)(nil),                              // 880: anytype.Rpc.History.GetVersions.Response
	(*RpcHistoryGetVersionsResponseError)(nil),                         // 881: anytype.Rpc.History.GetVersions.Response.Error
	(*RpcHistoryShowVersionRequest)(nil),                               // 882: anytype.Rpc.History.ShowVersion.Request
	(*RpcHistoryShowVersionResponse)(nil),                              // 883: anytype.Rpc.History.ShowVersion.Response
	(*RpcHistoryShowVersionResponseError)(nil),                         // 884: anytype.Rpc.History.ShowVersion.Response.Error
	(*RpcHistorySetVersionRequest)(nil),                                // 885: anytype.Rpc.History.SetVersion.Request
	(*RpcHistorySetVersionResponse)(nil),                               // 886: anytype.Rpc.History.SetVersion.Response
	(*RpcHistorySetVersionResponseError)(nil),                          // 887: anytype.Rpc.History.SetVersion.Response.Error
	(*RpcHistoryDiffVersionsRequest)(nil),                              // 888: anytype.Rpc.History.DiffVersions.Request
	(*RpcHistoryDiffVersionsResponse)(nil),                             // 889: anytype.Rpc.History.DiffVersions.Response
	(*RpcHistoryDiffVersionsResponseError)(nil),                        // 890: anytype.Rpc.History.DiffVersions.Response.Error
	(*RpcFileReconcile)(nil),                                           // 891: anytype.Rpc.File.Reconcile
	(*RpcFileOffload)(nil),                                             // 892: anytype.Rpc.File.Offload
	(*RpcFileSpaceOffload)(nil),                                        // 893: anytype.Rpc.File.SpaceOffload
	(*RpcFileListOffload)(nil),                                         // 894: anytype.Rpc.File.ListOffload
	(*RpcFileUpload)(nil),                                              // 895: anytype.Rpc.File.Upload
	(*RpcFileDownload)(nil),                                            // 896: anytype.Rpc.File.Download
	(*RpcFileDrop)(nil),                                                // 897: anytype.Rpc.File.Drop
	(*RpcFileSpaceUsage)(nil),                                          // 898: anytype.Rpc.File.SpaceUsage
	(*RpcFileNodeUsage)(nil),                                           // 899: anytype.Rpc.File.NodeUsage
	(*RpcFileReconcileRequest)(nil),                                    // 900: anytype.Rpc.File.Reconcile.Request
	(*RpcFileReconcileResponse)(nil),                                   // 901: anytype.Rpc.File.Reconcile.Response
	(*RpcFileReconcileResponseError)(nil),                              // 902: anytype.Rpc.File.Reconcile.Response.Error
	(*RpcFileOffloadRequest)(nil),                                      // 903: anytype.Rpc.File.Offload.Request
	(*RpcFileOffloadResponse)(nil),                                     // 904: anytype.Rpc.File.Offload.Response
	(*RpcFileOffloadResponseError)(nil),                                // 905: anytype.Rpc.File.Offload.Response.Error
	(*RpcFileSpaceOffloadRequest)(nil),                                 // 906: anytype.Rpc.File.SpaceOffload.Request
	(*RpcFileSpaceOffloadResponse)(nil),                                // 907: anytype.Rpc.File.SpaceOffload.Response
	(*RpcFileSpaceOffloadResponseError)(nil),                           // 908: anytype.Rpc.File.SpaceOffload.Response.Error
	(*RpcFileListOffloadRequest)(nil),                                  // 909: anytype.Rpc.File.ListOffload.Request
	(*RpcFileListOffloadResponse)(nil),                                 // 910: anytype.Rpc.File.ListOffload.Response
	(*RpcFileListOffloadResponseError)(nil),                            // 911: anytype.Rpc.File.ListOffload.Response.Error
	(*RpcFileUploadRequest)(nil),                                       // 912: anytype.Rpc.File.Upload.Request
	(*RpcFileUploadResponse)(nil),                                      // 913: anytype.Rpc.File.Upload.Response
	(*RpcFileUploadResponseError)(nil),                                 // 914: anytype.Rpc.File.Upload.Response.Error
	(*RpcFileDownloadRequest)(nil),                                     // 915: anytype.Rpc.File.Download.Request
	(*RpcFileDownloadResponse)(nil),                                    // 916: anytype.Rpc.File.Download.Response
	(*RpcFileDownloadResponseError)(nil),                               // 917: anytype.Rpc.File.Download.Response.Error
	(*RpcFileDropRequest)(nil),                                         // 918: anytype.Rpc.File.Drop.Request
	(*RpcFileDropResponse)(nil),                                        // 919: anytype.Rpc.File.Drop.Response
	(*RpcFileDropResponseError)(nil),                                   // 920: anytype.Rpc.File.Drop.Response.Error
	(*RpcFileSpaceUsageRequest)(nil),                                   // 921: anytype.Rpc.File.SpaceUsage.Request
	(*RpcFileSpaceUsageResponse)(nil),                                  // 922: anytype.Rpc.File.SpaceUsage.Response
	(*RpcFileSpaceUsageResponseUsage)(nil),                             // 923: anytype.Rpc.File.SpaceUsage.Response.Usage
	(*RpcFileSpaceUsageResponseError)(nil),                             // 924: anytype.Rpc.File.SpaceUsage.Response.Error
	(*RpcFileNodeUsageRequest)(nil),                                    // 925: anytype.Rpc.File.NodeUsage.Request
	(*RpcFileNodeUsageResponse)(nil),                                   // 926: anytype.Rpc.File.NodeUsage.Response
	(*RpcFileNodeUsageResponseUsage)(nil),                              // 927: anytype.Rpc.File.NodeUsage.Response.Usage
	(*RpcFileNodeUsageResponseSpace)(nil),                              // 928: anytype.Rpc.File.NodeUsage.Response.Space
	(*RpcFileNodeUsageResponseError)(nil),                              // 929: anytype.Rpc.File.NodeUsage.Response.Error
	(*RpcNavigationListObjects)(nil),                                   // 930: anytype.Rpc.Navigation.ListObjects
	(*RpcNavigationGetObjectInfoWithLinks)(nil),                        // 931: anytype.Rpc.Navigation.GetObjectInfoWithLinks
	(*RpcNavigationListObjectsRequest)(nil),                            // 932: anytype.Rpc.Navigation.ListObjects.Request
	(*RpcNavigationListObjectsResponse)(nil),                           // 933: anytype.Rpc.Navigation.ListObjects.Response
	(*RpcNavigationListObjectsResponseError)(nil),                      // 934: anytype.Rpc.Navigation.ListObjects.Response.Error
	(*RpcNavigationGetObjectInfoWithLinksRequest)(nil),                 // 935: anytype.Rpc.Navigation.GetObjectInfoWithLinks.Request
	(*RpcNavigationGetObjectInfoWithLinksResponse)(nil),                // 936: anytype.Rpc.Navigation.GetObjectInfoWithLinks.Response
	(*RpcNavigationGetObjectInfoWithLinksResponseError)(nil),           // 937: anytype.Rpc.Navigation.GetObjectInfoWithLinks.Response.Error
	(*RpcTemplateCreateFromObject)(nil),                                // 938: anytype.Rpc.Template.CreateFromObject
	(*RpcTemplateClone)(nil),                                           // 939: anytype.Rpc.Template.Clone
	(*RpcTemplateExportAll)(nil),                                       // 940: anytype.Rpc.Template.ExportAll
	(*RpcTemplateCreateFromObjectRequest)(nil),                         // 941: anytype.Rpc.Template.CreateFromObject.Request
	(*RpcTemplateCreateFromObjectResponse)(nil),                        // 942: anytype.Rpc.Template.CreateFromObject.Response
	(*RpcTemplateCreateFromObjectResponseError)(nil),                   // 943: anytype.Rpc.Template.CreateFromObject.Response.Error
	(*RpcTemplateCloneRequest)(nil),                                    // 944: anytype.Rpc.Template.Clone.Request
	(*RpcTemplateCloneResponse)(nil),                                   // 945: anytype.Rpc.Template.Clone.Response
	(*RpcTemplateCloneResponseError)(nil),                              // 946: anytype.Rpc.Template.Clone.Response.Error
	(*RpcTemplateExportAllRequest)(nil),                                // 947: anytype.Rpc.Template.ExportAll.Request
	(*RpcTemplateExportAllResponse)(nil),                               // 948: anytype.Rpc.Template.ExportAll.Response
	(*RpcTemplateExportAllResponseError)(nil),                          // 949: anytype.Rpc.Template.ExportAll.Response.Error
	(*RpcLinkPreviewRequest)(nil),                                      // 950: anytype.Rpc.LinkPreview.Request
	(*RpcLinkPreviewResponse)(nil),                                     // 951: anytype.Rpc.LinkPreview.Response
	(*RpcLinkPreviewResponseError)(nil),                                // 952: anytype.Rpc.LinkPreview.Response.Error
	(*RpcUnsplashSearch)(nil),                                          // 953: anytype.Rpc.Unsplash.Search
	(*RpcUnsplashDownload)(nil),                                        // 954: anytype.Rpc.Unsplash.Download
	(*RpcUnsplashSearchRequest)(nil),                                   // 955: anytype.Rpc.Unsplash.Search.Request
	(*RpcUnsplashSearchResponse)(nil),                                  // 956: anytype.Rpc.Unsplash.Search.Response
	(*RpcUnsplashSearchResponsePicture)(nil),                           // 957: anytype.Rpc.Unsplash.Search.Response.Picture
	(*RpcUnsplashSearchResponseError)(nil),                             // 958: anytype.Rpc.Unsplash.Search.Response.Error
	(*RpcUnsplashDownloadRequest)(nil),                                 // 959: anytype.Rpc.Unsplash.Download.Request
	(*RpcUnsplashDownloadResponse)(nil),                                // 960: anytype.Rpc.Unsplash.Download.Response
	(*RpcUnsplashDownloadResponseError)(nil),                           // 961: anytype.Rpc.Unsplash.Download.Response.Error
	(*RpcGalleryDownloadManifest)(nil),                                 // 962: anytype.Rpc.Gallery.DownloadManifest
	(*RpcGalleryDownloadIndex)(nil),                                    // 963: anytype.Rpc.Gallery.DownloadIndex
	(*RpcGalleryDownloadManifestRequest)(nil),                          // 964: anytype.Rpc.Gallery.DownloadManifest.Request
	(*RpcGalleryDownloadManifestResponse)(nil),                         // 965: anytype.Rpc.Gallery.DownloadManifest.Response
	(*RpcGalleryDownloadManifestResponseError)(nil),                    // 966: anytype.Rpc.Gallery.DownloadManifest.Response.Error
	(*RpcGalleryDownloadIndexRequest)(nil),                             // 967: anytype.Rpc.Gallery.DownloadIndex.Request
	(*RpcGalleryDownloadIndexResponse)(nil),                            // 968: anytype.Rpc.Gallery.DownloadIndex.Response
	(*RpcGalleryDownloadIndexResponseError)(nil),                       // 969: anytype.Rpc.Gallery.DownloadIndex.Response.Error
	(*RpcGalleryDownloadIndexResponseCategory)(nil),                    // 970: anytype.Rpc.Gallery.DownloadIndex.Response.Category
	(*RpcBlockReplace)(nil),                                            // 971: anytype.Rpc.Block.Replace
	(*RpcBlockSplit)(nil),                                              // 972: anytype.Rpc.Block.Split
	(*RpcBlockMerge)(nil),                                              // 973: anytype.Rpc.Block.Merge
	(*RpcBlockCopy)(nil),                                               // 974: anytype.Rpc.Block.Copy
	(*RpcBlockPaste)(nil),                                              // 975: anytype.Rpc.Block.Paste
	(*RpcBlockCut)(nil),                                                // 976: anytype.Rpc.Block.Cut
	(*RpcBlockUpload)(nil),                                             // 977: anytype.Rpc.Block.Upload
	(*RpcBlockDownload)(nil),                                           // 978: anytype.Rpc.Block.Download
	(*RpcBlockCreate)(nil),                                             // 979: anytype.Rpc.Block.Create
	(*RpcBlockCreateWidget)(nil),                                       // 980: anytype.Rpc.Block.CreateWidget
	(*RpcBlockListDelete)(nil),                                         // 981: anytype.Rpc.Block.ListDelete
	(*RpcBlockSetFields)(nil),                                          // 982: anytype.Rpc.Block.SetFields
	(*RpcBlockListSetAlign)(nil),                                       // 983: anytype.Rpc.Block.ListSetAlign
	(*RpcBlockListSetVerticalAlign)(nil),                               // 984: anytype.Rpc.Block.ListSetVerticalAlign
	(*RpcBlockListSetFields)(nil),                                      // 985: anytype.Rpc.Block.ListSetFields
	(*RpcBlockListDuplicate)(nil),                                      // 986: anytype.Rpc.Block.ListDuplicate
	(*RpcBlockListUpdate)(nil),                                         // 987: anytype.Rpc.Block.ListUpdate
	(*RpcBlockListConvertToObjects)(nil),                               // 988: anytype.Rpc.Block.ListConvertToObjects
	(*RpcBlockListMoveToExistingObject)(nil),                           // 989: anytype.Rpc.Block.ListMoveToExistingObject
	(*RpcBlockListMoveToNewObject)(nil),                                // 990: anytype.Rpc.Block.ListMoveToNewObject
	(*RpcBlockListTurnInto)(nil),                                       // 991: anytype.Rpc.Block.ListTurnInto
	(*RpcBlockListSetBackgroundColor)(nil),                             // 992: anytype.Rpc.Block.ListSetBackgroundColor
	(*RpcBlockExport)(nil),                                             // 993: anytype.Rpc.Block.Export
	(*RpcBlockSetCarriage)(nil),                                        // 994: anytype.Rpc.Block.SetCarriage
	(*RpcBlockPreview)(nil),                                            // 995: anytype.Rpc.Block.Preview
	(*RpcBlockReplaceRequest)(nil),                                     // 996: anytype.Rpc.Block.Replace.Request
	(*RpcBlockReplaceResponse)(nil),                                    // 997: anytype.Rpc.Block.Replace.Response
	(*RpcBlockReplaceResponseError)(nil),                               // 998: anytype.Rpc.Block.Replace.Response.Error
	(*RpcBlockSplitRequest)(nil),                                       // 999: anytype.Rpc.Block.Split.Request
	(*RpcBlockSplitResponse)(nil),                                      // 1000: anytype.Rpc.Block.Split.Response
	(*RpcBlockSplitResponseError)(nil),                                 // 1001: anytype.Rpc.Block.Split.Response.Error
	(*RpcBlockMergeRequest)(nil),                                       // 1002: anytype.Rpc.Block.Merge.Request
	(*RpcBlockMergeResponse)(nil),                                      // 1003: anytype.Rpc.Block.Merge.Response
	(*RpcBlockMergeResponseError)(nil),                                 // 1004: anytype.Rpc.Block.Merge.Response.Error
	(*RpcBlockCopyRequest)(nil),                                        // 1005: anytype.Rpc.Block.Copy.Request
	(*RpcBlockCopyResponse)(nil),                                       // 1006: anytype.Rpc.Block.Copy.Response
	(*RpcBlockCopyResponseError)(nil),                                  // 1007: anytype.Rpc.Block.Copy.Response.Error
	(*RpcBlockPasteRequest)(nil),                                       // 1008: anytype.Rpc.Block.Paste.Request
	(*RpcBlockPasteResponse)(nil),                                      // 1009: anytype.Rpc.Block.Paste.Response
	(*RpcBlockPasteRequestFile)(nil),                                   // 1010: anytype.Rpc.Block.Paste.Request.File
	(*RpcBlockPasteResponseError)(nil),                                 // 1011: anytype.Rpc.Block.Paste.Response.Error
	(*RpcBlockCutRequest)(nil),                                         // 1012: anytype.Rpc.Block.Cut.Request
	(*RpcBlockCutResponse)(nil),                                        // 1013: anytype.Rpc.Block.Cut.Response
	(*RpcBlockCutResponseError)(nil),                                   // 1014: anytype.Rpc.Block.Cut.Response.Error
	(*RpcBlockUploadRequest)(nil),                                      // 1015: anytype.Rpc.Block.Upload.Request
	(*RpcBlockUploadResponse)(nil),                                     // 1016: anytype.Rpc.Block.Upload.Response
	(*RpcBlockUploadResponseError)(nil),                                // 1017: anytype.Rpc.Block.Upload.Response.Error
	(*RpcBlockDownloadRequest)(nil),                                    // 1018: anytype.Rpc.Block.Download.Request
	(*RpcBlockDownloadResponse)(nil),                                   // 1019: anytype.Rpc.Block.Download.Response
	(*RpcBlockDownloadResponseError)(nil),                              // 1020: anytype.Rpc.Block.Download.Response.Error
	(*RpcBlockCreateRequest)(nil),                                      // 1021: anytype.Rpc.Block.Create.Request
	(*RpcBlockCreateResponse)(nil),                                     // 1022: anytype.Rpc.Block.Create.Response
	(*RpcBlockCreateResponseError)(nil),                                // 1023: anytype.Rpc.Block.Create.Response.Error
	(*RpcBlockCreateWidgetRequest)(nil),                                // 1024: anytype.Rpc.Block.CreateWidget.Request
	(*RpcBlockCreateWidgetResponse)(nil),                               // 1025: anytype.Rpc.Block.CreateWidget.Response
	(*RpcBlockCreateWidgetResponseError)(nil),                          // 1026: anytype.Rpc.Block.CreateWidget.Response.Error
	(*RpcBlockListDeleteRequest)(nil),                                  // 1027: anytype.Rpc.Block.ListDelete.Request
	(*RpcBlockListDeleteResponse)(nil),                                 // 1028: anytype.Rpc.Block.ListDelete.Response
	(*RpcBlockListDeleteResponseError)(nil),                            // 1029: anytype.Rpc.Block.ListDelete.Response.Error
	(*RpcBlockSetFieldsRequest)(nil),                                   // 1030: anytype.Rpc.Block.SetFields.Request
	(*RpcBlockSetFieldsResponse)(nil),                                  // 1031: anytype.Rpc.Block.SetFields.Response
	(*RpcBlockSetFieldsResponseError)(nil),                             // 1032: anytype.Rpc.Block.SetFields.Response.Error
	(*RpcBlockListSetAlignRequest)(nil),                                // 1033: anytype.Rpc.Block.ListSetAlign.Request
	(*RpcBlockListSetAlignResponse)(nil),                               // 1034: anytype.Rpc.Block.ListSetAlign.Response
	(*RpcBlockListSetAlignResponseError)(nil),                          // 1035: anytype.Rpc.Block.ListSetAlign.Response.Error
	(*RpcBlockListSetVerticalAlignRequest)(nil),                        // 1036: anytype.Rpc.Block.ListSetVerticalAlign.Request
	(*RpcBlockListSetVerticalAlignResponse)(nil),                       // 1037: anytype.Rpc.Block.ListSetVerticalAlign.Response
	(*RpcBlockListSetVerticalAlignResponseError)(nil),                  // 1038: anytype.Rpc.Block.ListSetVerticalAlign.Response.Error
	(*RpcBlockListSetFieldsRequest)(nil),                               // 1039: anytype.Rpc.Block.ListSetFields.Request
	(*RpcBlockListSetFieldsResponse)(nil),                              // 1040: anytype.Rpc.Block.ListSetFields.Response
	(*RpcBlockListSetFieldsRequestBlockField)(nil),                     // 1041: anytype.Rpc.Block.ListSetFields.Request.BlockField
	(*RpcBlockListSetFieldsResponseError)(nil),                         // 1042: anytype.Rpc.Block.ListSetFields.Response.Error
	(*RpcBlockListDuplicateRequest)(nil),                               // 1043: anytype.Rpc.Block.ListDuplicate.Request
	(*RpcBlockListDuplicateResponse)(nil),                              // 1044: anytype.Rpc.Block.ListDuplicate.Response
	(*RpcBlockListDuplicateResponseError)(nil),                         // 1045: anytype.Rpc.Block.ListDuplicate.Response.Error
	(*RpcBlockListUpdateRequest)(nil),                                  // 1046: anytype.Rpc.Block.ListUpdate.Request
	(*RpcBlockListUpdateRequestText)(nil),                              // 1047: anytype.Rpc.Block.ListUpdate.Request.Text
	(*RpcBlockListConvertToObjectsRequest)(nil),                        // 1048: anytype.Rpc.Block.ListConvertToObjects.Request
	(*RpcBlockListConvertToObjectsResponse)(nil),                       // 1049: anytype.Rpc.Block.ListConvertToObjects.Response
	(*RpcBlockListConvertToObjectsResponseError)(nil),                  // 1050: anytype.Rpc.Block.ListConvertToObjects.Response.Error
	(*RpcBlockListMoveToExistingObjectRequest)(nil),                    // 1051: anytype.Rpc.Block.ListMoveToExistingObject.Request
	(*RpcBlockListMoveToExistingObjectResponse)(nil),                   // 1052: anytype.Rpc.Block.ListMoveToExistingObject.Response
	(*RpcBlockListMoveToExistingObjectResponseError)(nil),              // 1053: anytype.Rpc.Block.ListMoveToExistingObject.Response.Error
	(*RpcBlockListMoveToNewObjectRequest)(nil),                         // 1054: anytype.Rpc.Block.ListMoveToNewObject.Request
	(*RpcBlockListMoveToNewObjectResponse)(nil),                        // 1055: anytype.Rpc.Block.ListMoveToNewObject.Response
	(*RpcBlockListMoveToNewObjectResponseError)(nil),                   // 1056: anytype.Rpc.Block.ListMoveToNewObject.Response.Error
	(*RpcBlockListTurnIntoRequest)(nil),                                // 1057: anytype.Rpc.Block.ListTurnInto.Request
	(*RpcBlockListTurnIntoResponse)(nil),                               // 1058: anytype.Rpc.Block.ListTurnInto.Response
	(*RpcBlockListTurnIntoResponseError)(nil),                          // 1059: anytype.Rpc.Block.ListTurnInto.Response.Error
	(*RpcBlockListSetBackgroundColorRequest)(nil),                      // 1060: anytype.Rpc.Block.ListSetBackgroundColor.Request
	(*RpcBlockListSetBackgroundColorResponse)(nil),                     // 1061: anytype.Rpc.Block.ListSetBackgroundColor.Response
	(*RpcBlockListSetBackgroundColorResponseError)(nil),                // 1062: anytype.Rpc.Block.ListSetBackgroundColor.Response.Error
	(*RpcBlockExportRequest)(nil),                                      // 1063: anytype.Rpc.Block.Export.Request
	(*RpcBlockExportResponse)(nil),                                     // 1064: anytype.Rpc.Block.Export.Response
	(*RpcBlockExportResponseError)(nil),                                // 1065: anytype.Rpc.Block.Export.Response.Error
	(*RpcBlockSetCarriageRequest)(nil),                                 // 1066: anytype.Rpc.Block.SetCarriage.Request
	(*RpcBlockSetCarriageResponse)(nil),                                // 1067: anytype.Rpc.Block.SetCarriage.Response
	(*RpcBlockSetCarriageResponseError)(nil),                           // 1068: anytype.Rpc.Block.SetCarriage.Response.Error
	(*RpcBlockPreviewRequest)(nil),                                     // 1069: anytype.Rpc.Block.Preview.Request
	(*RpcBlockPreviewResponse)(nil),                                    // 1070: anytype.Rpc.Block.Preview.Response
	(*RpcBlockPreviewResponseError)(nil),                               // 1071: anytype.Rpc.Block.Preview.Response.Error
	(*RpcBlockLatexSetText)(nil),                                       // 1072: anytype.Rpc.BlockLatex.SetText
	(*RpcBlockLatexSetProcessor)(nil),                                  // 1073: anytype.Rpc.BlockLatex.SetProcessor
	(*RpcBlockLatexSetTextRequest)(nil),                                // 1074: anytype.Rpc.BlockLatex.SetText.Request
	(*RpcBlockLatexSetTextResponse)(nil),                               // 1075: anytype.Rpc.BlockLatex.SetText.Response
	(*RpcBlockLatexSetTextResponseError)(nil),                          // 1076: anytype.Rpc.BlockLatex.SetText.Response.Error
	(*RpcBlockLatexSetProcessorRequest)(nil),                           // 1077: anytype.Rpc.BlockLatex.SetProcessor.Request
	(*RpcBlockLatexSetProcessorResponse)(nil),                          // 1078: anytype.Rpc.BlockLatex.SetProcessor.Response
	(*RpcBlockLatexSetProcessorResponseError)(nil),                     // 1079: anytype.Rpc.BlockLatex.SetProcessor.Response.Error
	(*RpcBlockTextSetText)(nil),                                        // 1080: anytype.Rpc.BlockText.SetText
	(*RpcBlockTextSetColor)(nil),                                       // 1081: anytype.Rpc.BlockText.SetColor
	(*RpcBlockTextSetMarks)(nil),                                       // 1082: anytype.Rpc.BlockText.SetMarks
	(*RpcBlockTextSetStyle)(nil),                                       // 1083: anytype.Rpc.BlockText.SetStyle
	(*RpcBlockTextSetChecked)(nil),                                     // 1084: anytype.Rpc.BlockText.SetChecked
	(*RpcBlockTextSetIcon)(nil),                                        // 1085: anytype.Rpc.BlockText.SetIcon
	(*RpcBlockTextListSetStyle)(nil),                                   // 1086: anytype.Rpc.BlockText.ListSetStyle
	(*RpcBlockTextListSetColor)(nil),                                   // 1087: anytype.Rpc.BlockText.ListSetColor
	(*RpcBlockTextListSetMark)(nil),                                    // 1088: anytype.Rpc.BlockText.ListSetMark
	(*RpcBlockTextListClearStyle)(nil),                                 // 1089: anytype.Rpc.BlockText.ListClearStyle
	(*RpcBlockTextListClearContent)(nil),                               // 1090: anytype.Rpc.BlockText.ListClearContent
	(*RpcBlockTextSetTextRequest)(nil),                                 // 1091: anytype.Rpc.BlockText.SetText.Request
	(*RpcBlockTextSetTextResponse)(nil),                                // 1092: anytype.Rpc.BlockText.SetText.Response
	(*RpcBlockTextSetTextResponseError)(nil),                           // 1093: anytype.Rpc.BlockText.SetText.Response.Error
	(*RpcBlockTextSetColorRequest)(nil),                                // 1094: anytype.Rpc.BlockText.SetColor.Request
	(*RpcBlockTextSetColorResponse)(nil),                               // 1095: anytype.Rpc.BlockText.SetColor.Response
	(*RpcBlockTextSetColorResponseError)(nil),                          // 1096: anytype.Rpc.BlockText.SetColor.Response.Error
	(*RpcBlockTextSetMarksGet)(nil),                                    // 1097: anytype.Rpc.BlockText.SetMarks.Get
	(*RpcBlockTextSetMarksGetRequest)(nil),                             // 1098: anytype.Rpc.BlockText.SetMarks.Get.Request
	(*RpcBlockTextSetMarksGetResponse)(nil),                            // 1099: anytype.Rpc.BlockText.SetMarks.Get.Response
	(*RpcBlockTextSetMarksGetResponseError)(nil),                       // 1100: anytype.Rpc.BlockText.SetMarks.Get.Response.Error
	(*RpcBlockTextSetStyleRequest)(nil),                                // 1101: anytype.Rpc.BlockText.SetStyle.Request
	(*RpcBlockTextSetStyleResponse)(nil),                               // 1102: anytype.Rpc.BlockText.SetStyle.Response
	(*RpcBlockTextSetStyleResponseError)(nil),                          // 1103: anytype.Rpc.BlockText.SetStyle.Response.Error
	(*RpcBlockTextSetCheckedRequest)(nil),                              // 1104: anytype.Rpc.BlockText.SetChecked.Request
	(*RpcBlockTextSetCheckedResponse)(nil),                             // 1105: anytype.Rpc.BlockText.SetChecked.Response
	(*RpcBlockTextSetCheckedResponseError)(nil),                        // 1106: anytype.Rpc.BlockText.SetChecked.Response.Error
	(*RpcBlockTextSetIconRequest)(nil),                                 // 1107: anytype.Rpc.BlockText.SetIcon.Request
	(*RpcBlockTextSetIconResponse)(nil),                                // 1108: anytype.Rpc.BlockText.SetIcon.Response
	(*RpcBlockTextSetIconResponseError)(nil),                           // 1109: anytype.Rpc.BlockText.SetIcon.Response.Error
	(*RpcBlockTextListSetStyleRequest)(nil),                            // 1110: anytype.Rpc.BlockText.ListSetStyle.Request
	(*RpcBlockTextListSetStyleResponse)(nil),                           // 1111: anytype.Rpc.BlockText.ListSetStyle.Response
	(*RpcBlockTextListSetStyleResponseError)(nil),                      // 1112: anytype.Rpc.BlockText.ListSetStyle.Response.Error
	(*RpcBlockTextListSetColorRequest)(nil),                            // 1113: anytype.Rpc.BlockText.ListSetColor.Request
	(*RpcBlockTextListSetColorResponse)(nil),                           // 1114: anytype.Rpc.BlockText.ListSetColor.Response
	(*RpcBlockTextListSetColorResponseError)(nil),                      // 1115: anytype.Rpc.BlockText.ListSetColor.Response.Error
	(*RpcBlockTextListSetMarkRequest)(nil),                             // 1116: anytype.Rpc.BlockText.ListSetMark.Request
	(*RpcBlockTextListSetMarkResponse)(nil),                            // 1117: anytype.Rpc.BlockText.ListSetMark.Response
	(*RpcBlockTextListSetMarkResponseError)(nil),                       // 1118: anytype.Rpc.BlockText.ListSetMark.Response.Error
	(*RpcBlockTextListClearStyleRequest)(nil),                          // 1119: anytype.Rpc.BlockText.ListClearStyle.Request
	(*RpcBlockTextListClearStyleResponse)(nil),                         // 1120: anytype.Rpc.BlockText.ListClearStyle.Response
	(*RpcBlockTextListClearStyleResponseError)(nil),                    // 1121: anytype.Rpc.BlockText.ListClearStyle.Response.Error
	(*RpcBlockTextListClearContentRequest)(nil),                        // 1122: anytype.Rpc.BlockText.ListClearContent.Request
	(*RpcBlockTextListClearContentResponse)(nil),                       // 1123: anytype.Rpc.BlockText.ListClearContent.Response
	(*RpcBlockTextListClearContentResponseError)(nil),                  // 1124: anytype.Rpc.BlockText.ListClearContent.Response.Error
	(*RpcBlockTableCreate)(nil),                                        // 1125: anytype.Rpc.BlockTable.Create
	(*RpcBlockTableRowCreate)(nil),                                     // 1126: anytype.Rpc.BlockTable.RowCreate
	(*RpcBlockTableRowSetHeader)(nil),                                  // 1127: anytype.Rpc.BlockTable.RowSetHeader
	(*RpcBlockTableRowListFill)(nil),                                   // 1128: anytype.Rpc.BlockTable.RowListFill
	(*RpcBlockTableRowListClean)(nil),                                  // 1129: anytype.Rpc.BlockTable.RowListClean
	(*RpcBlockTableColumnListFill)(nil),                                // 1130: anytype.Rpc.BlockTable.ColumnListFill
	(*RpcBlockTableColumnCreate)(nil),                                  // 1131: anytype.Rpc.BlockTable.ColumnCreate
	(*RpcBlockTableRowDelete)(nil),                                     // 1132: anytype.Rpc.BlockTable.RowDelete
	(*RpcBlockTableColumnDelete)(nil),                                  // 1133: anytype.Rpc.BlockTable.ColumnDelete
	(*RpcBlockTableColumnMove)(nil),                                    // 1134: anytype.Rpc.BlockTable.ColumnMove
	(*RpcBlockTableRowDuplicate)(nil),                                  // 1135: anytype.Rpc.BlockTable.RowDuplicate
	(*RpcBlockTableColumnDuplicate)(nil),                               // 1136: anytype.Rpc.BlockTable.ColumnDuplicate
	(*RpcBlockTableExpand)(nil),                                        // 1137: anytype.Rpc.BlockTable.Expand
	(*RpcBlockTableSort)(nil),                                          // 1138: anytype.Rpc.BlockTable.Sort
	(*RpcBlockTableCreateRequest)(nil),                                 // 1139: anytype.Rpc.BlockTable.Create.Request
	(*RpcBlockTableCreateResponse)(nil),                                // 1140: anytype.Rpc.BlockTable.Create.Response
	(*RpcBlockTableCreateResponseError)(nil),                           // 1141: anytype.Rpc.BlockTable.Create.Response.Error
	(*RpcBlockTableRowCreateRequest)(nil),                              // 1142: anytype.Rpc.BlockTable.RowCreate.Request
	(*RpcBlockTableRowCreateResponse)(nil),                             // 1143: anytype.Rpc.BlockTable.RowCreate.Response
	(*RpcBlockTableRowCreateResponseError)(nil),                        // 1144: anytype.Rpc.BlockTable.RowCreate.Response.Error
	(*RpcBlockTableRowSetHeaderRequest)(nil),                           // 1145: anytype.Rpc.BlockTable.RowSetHeader.Request
	(*RpcBlockTableRowSetHeaderResponse)(nil),                          // 1146: anytype.Rpc.BlockTable.RowSetHeader.Response
	(*RpcBlockTableRowSetHeaderResponseError)(nil),                     // 1147: anytype.Rpc.BlockTable.RowSetHeader.Response.Error
	(*RpcBlockTableRowListFillRequest)(nil),                            // 1148: anytype.Rpc.BlockTable.RowListFill.Request
	(*RpcBlockTableRowListFillResponse)(nil),                           // 1149: anytype.Rpc.BlockTable.RowListFill.Response
	(*RpcBlockTableRowListFillResponseError)(nil),                      // 1150: anytype.Rpc.BlockTable.RowListFill.Response.Error
	(*RpcBlockTableRowListCleanRequest)(nil),                           // 1151: anytype.Rpc.BlockTable.RowListClean.Request
	(*RpcBlockTableRowListCleanResponse)(nil),                          // 1152: anytype.Rpc.BlockTable.RowListClean.Response
	(*RpcBlockTableRowListCleanResponseError)(nil),                     // 1153: anytype.Rpc.BlockTable.RowListClean.Response.Error
	(*RpcBlockTableColumnListFillRequest)(nil),                         // 1154: anytype.Rpc.BlockTable.ColumnListFill.Request
	(*RpcBlockTableColumnListFillResponse)(nil),                        // 1155: anytype.Rpc.BlockTable.ColumnListFill.Response
	(*RpcBlockTableColumnListFillResponseError)(nil),                   // 1156: anytype.Rpc.BlockTable.ColumnListFill.Response.Error
	(*RpcBlockTableColumnCreateRequest)(nil),                           // 1157: anytype.Rpc.BlockTable.ColumnCreate.Request
	(*RpcBlockTableColumnCreateResponse)(nil),                          // 1158: anytype.Rpc.BlockTable.ColumnCreate.Response
	(*RpcBlockTableColumnCreateResponseError)(nil),                     // 1159: anytype.Rpc.BlockTable.ColumnCreate.Response.Error
	(*RpcBlockTableRowDeleteRequest)(nil),                              // 1160: anytype.Rpc.BlockTable.RowDelete.Request
	(*RpcBlockTableRowDeleteResponse)(nil),                             // 1161: anytype.Rpc.BlockTable.RowDelete.Response
	(*RpcBlockTableRowDeleteResponseError)(nil),                        // 1162: anytype.Rpc.BlockTable.RowDelete.Response.Error
	(*RpcBlockTableColumnDeleteRequest)(nil),                           // 1163: anytype.Rpc.BlockTable.ColumnDelete.Request
	(*RpcBlockTableColumnDeleteResponse)(nil),                          // 1164: anytype.Rpc.BlockTable.ColumnDelete.Response
	(*RpcBlockTableColumnDeleteResponseError)(nil),                     // 1165: anytype.Rpc.BlockTable.ColumnDelete.Response.Error
	(*RpcBlockTableColumnMoveRequest)(nil),                             // 1166: anytype.Rpc.BlockTable.ColumnMove.Request
	(*RpcBlockTableColumnMoveResponse)(nil),                            // 1167: anytype.Rpc.BlockTable.ColumnMove.Response
	(*RpcBlockTableColumnMoveResponseError)(nil),                       // 1168: anytype.Rpc.BlockTable.ColumnMove.Response.Error
	(*RpcBlockTableRowDuplicateRequest)(nil),                           // 1169: anytype.Rpc.BlockTable.RowDuplicate.Request
	(*RpcBlockTableRowDuplicateResponse)(nil),                          // 1170: anytype.Rpc.BlockTable.RowDuplicate.Response
	(*RpcBlockTableRowDuplicateResponseError)(nil),                     // 1171: anytype.Rpc.BlockTable.RowDuplicate.Response.Error
	(*RpcBlockTableColumnDuplicateRequest)(nil),                        // 1172: anytype.Rpc.BlockTable.ColumnDuplicate.Request
	(*RpcBlockTableColumnDuplicateResponse)(nil),                       // 1173: anytype.Rpc.BlockTable.ColumnDuplicate.Response
	(*RpcBlockTableColumnDuplicateResponseError)(nil),                  // 1174: anytype.Rpc.BlockTable.ColumnDuplicate.Response.Error
	(*RpcBlockTableExpandRequest)(nil),                                 // 1175: anytype.Rpc.BlockTable.Expand.Request
	(*RpcBlockTableExpandResponse)(nil),                                // 1176: anytype.Rpc.BlockTable.Expand.Response
	(*RpcBlockTableExpandResponseError)(nil),                           // 1177: anytype.Rpc.BlockTable.Expand.Response.Error
	(*RpcBlockTableSortRequest)(nil),                                   // 1178: anytype.Rpc.BlockTable.Sort.Request
	(*RpcBlockTableSortResponse)(nil),                                  // 1179: anytype.Rpc.BlockTable.Sort.Response
	(*RpcBlockTableSortResponseError)(nil),                             // 1180: anytype.Rpc.BlockTable.Sort.Response.Error
	(*RpcBlockFileSetName)(nil),                                        // 1181: anytype.Rpc.BlockFile.SetName
	(*RpcBlockFileSetTargetObjectId)(nil),                              // 1182: anytype.Rpc.BlockFile.SetTargetObjectId
	(*RpcBlockFileCreateAndUpload)(nil),                                // 1183: anytype.Rpc.BlockFile.CreateAndUpload
	(*RpcBlockFileListSetStyle)(nil),                                   // 1184: anytype.Rpc.BlockFile.ListSetStyle
	(*RpcBlockFileSetNameRequest)(nil),                                 // 1185: anytype.Rpc.BlockFile.SetName.Request
	(*RpcBlockFileSetNameResponse)(nil),                                // 1186: anytype.Rpc.BlockFile.SetName.Response
	(*RpcBlockFileSetNameResponseError)(nil),                           // 1187: anytype.Rpc.BlockFile.SetName.Response.Error
	(*RpcBlockFileSetTargetObjectIdRequest)(nil),                       // 1188: anytype.Rpc.BlockFile.SetTargetObjectId.Request
	(*RpcBlockFileSetTargetObjectIdResponse)(nil),                      // 1189: anytype.Rpc.BlockFile.SetTargetObjectId.Response
	(*RpcBlockFileSetTargetObjectIdResponseError)(nil),                 // 1190: anytype.Rpc.BlockFile.SetTargetObjectId.Response.Error
	(*RpcBlockFileCreateAndUploadRequest)(nil),                         // 1191: anytype.Rpc.BlockFile.CreateAndUpload.Request
	(*RpcBlockFileCreateAndUploadResponse)(nil),                        // 1192: anytype.Rpc.BlockFile.CreateAndUpload.Response
	(*RpcBlockFileCreateAndUploadResponseError)(nil),                   // 1193: anytype.Rpc.BlockFile.CreateAndUpload.Response.Error
	(*RpcBlockFileListSetStyleRequest)(nil),                            // 1194: anytype.Rpc.BlockFile.ListSetStyle.Request
	(*RpcBlockFileListSetStyleResponse)(nil),                           // 1195: anytype.Rpc.BlockFile.ListSetStyle.Response
	(*RpcBlockFileListSetStyleResponseError)(nil),                      // 1196: anytype.Rpc.BlockFile.ListSetStyle.Response.Error
	(*RpcBlockImageSetName)(nil),                                       // 1197: anytype.Rpc.BlockImage.SetName
	(*RpcBlockImageSetWidth)(nil),                                      // 1198: anytype.Rpc.BlockImage.SetWidth
	(*RpcBlockImageSetNameRequest)(nil),                                // 1199: anytype.Rpc.BlockImage.SetName.Request
	(*RpcBlockImageSetNameResponse)(nil),                               // 1200: anytype.Rpc.BlockImage.SetName.Response
	(*RpcBlockImageSetNameResponseError)(nil),                          // 1201: anytype.Rpc.BlockImage.SetName.Response.Error
	(*RpcBlockImageSetWidthRequest)(nil),                               // 1202: anytype.Rpc.BlockImage.SetWidth.Request
	(*RpcBlockImageSetWidthResponse)(nil),                              // 1203: anytype.Rpc.BlockImage.SetWidth.Response
	(*RpcBlockImageSetWidthResponseError)(nil),                         // 1204: anytype.Rpc.BlockImage.SetWidth.Response.Error
	(*RpcBlockVideoSetName)(nil),                                       // 1205: anytype.Rpc.BlockVideo.SetName
	(*RpcBlockVideoSetWidth)(nil),                                      // 1206: anytype.Rpc.BlockVideo.SetWidth
	(*RpcBlockVideoSetNameRequest)(nil),                                // 1207: anytype.Rpc.BlockVideo.SetName.Request
	(*RpcBlockVideoSetNameResponse)(nil),                               // 1208: anytype.Rpc.BlockVideo.SetName.Response
	(*RpcBlockVideoSetNameResponseError)(nil),                          // 1209: anytype.Rpc.BlockVideo.SetName.Response.Error
	(*RpcBlockVideoSetWidthRequest)(nil),                               // 1210: anytype.Rpc.BlockVideo.SetWidth.Request
	(*RpcBlockVideoSetWidthResponse)(nil),                              // 1211: anytype.Rpc.BlockVideo.SetWidth.Response
	(*RpcBlockVideoSetWidthResponseError)(nil),                         // 1212: anytype.Rpc.BlockVideo.SetWidth.Response.Error
	(*RpcBlockLinkCreateWithObject)(nil),                               // 1213: anytype.Rpc.BlockLink.CreateWithObject
	(*RpcBlockLinkListSetAppearance)(nil),                              // 1214: anytype.Rpc.BlockLink.ListSetAppearance
	(*RpcBlockLinkCreateWithObjectRequest)(nil),                        // 1215: anytype.Rpc.BlockLink.CreateWithObject.Request
	(*RpcBlockLinkCreateWithObjectResponse)(nil),                       // 1216: anytype.Rpc.BlockLink.CreateWithObject.Response
	(*RpcBlockLinkCreateWithObjectResponseError)(nil),                  // 1217: anytype.Rpc.BlockLink.CreateWithObject.Response.Error
	(*RpcBlockLinkListSetAppearanceRequest)(nil),                       // 1218: anytype.Rpc.BlockLink.ListSetAppearance.Request
	(*RpcBlockLinkListSetAppearanceResponse)(nil),                      // 1219: anytype.Rpc.BlockLink.ListSetAppearance.Response
	(*RpcBlockLinkListSetAppearanceResponseError)(nil),                 // 1220: anytype.Rpc.BlockLink.ListSetAppearance.Response.Error
	(*RpcBlockRelationSetKey)(nil),                                     // 1221: anytype.Rpc.BlockRelation.SetKey
	(*RpcBlockRelationAdd)(nil),                                        // 1222: anytype.Rpc.BlockRelation.Add
	(*RpcBlockRelationSetKeyRequest)(nil),                              // 1223: anytype.Rpc.BlockRelation.SetKey.Request
	(*RpcBlockRelationSetKeyResponse)(nil),                             // 1224: anytype.Rpc.BlockRelation.SetKey.Response
	(*RpcBlockRelationSetKeyResponseError)(nil),                        // 1225: anytype.Rpc.BlockRelation.SetKey.Response.Error
	(*RpcBlockRelationAddRequest)(nil),                                 // 1226: anytype.Rpc.BlockRelation.Add.Request
	(*RpcBlockRelationAddResponse)(nil),                                // 1227: anytype.Rpc.BlockRelation.Add.Response
	(*RpcBlockRelationAddResponseError)(nil),                           // 1228: anytype.Rpc.BlockRelation.Add.Response.Error
	(*RpcBlockBookmarkFetch)(nil),                                      // 1229: anytype.Rpc.BlockBookmark.Fetch
	(*RpcBlockBookmarkCreateAndFetch)(nil),                             // 1230: anytype.Rpc.BlockBookmark.CreateAndFetch
	(*RpcBlockBookmarkFetchRequest)(nil),                               // 1231: anytype.Rpc.BlockBookmark.Fetch.Request
	(*RpcBlockBookmarkFetchResponse)(nil),                              // 1232: anytype.Rpc.BlockBookmark.Fetch.Response
	(*RpcBlockBookmarkFetchResponseError)(nil),                         // 1233: anytype.Rpc.BlockBookmark.Fetch.Response.Error
	(*RpcBlockBookmarkCreateAndFetchRequest)(nil),                      // 1234: anytype.Rpc.BlockBookmark.CreateAndFetch.Request
	(*RpcBlockBookmarkCreateAndFetchResponse)(nil),                     // 1235: anytype.Rpc.BlockBookmark.CreateAndFetch.Response
	(*RpcBlockBookmarkCreateAndFetchResponseError)(nil),                // 1236: anytype.Rpc.BlockBookmark.CreateAndFetch.Response.Error
	(*RpcBlockDivListSetStyle)(nil),                                    // 1237: anytype.Rpc.BlockDiv.ListSetStyle
	(*RpcBlockDivListSetStyleRequest)(nil),                             // 1238: anytype.Rpc.BlockDiv.ListSetStyle.Request
	(*RpcBlockDivListSetStyleResponse)(nil),                            // 1239: anytype.Rpc.BlockDiv.ListSetStyle.Response
	(*RpcBlockDivListSetStyleResponseError)(nil),                       // 1240: anytype.Rpc.BlockDiv.ListSetStyle.Response.Error
	(*RpcBlockDataviewView)(nil),                                       // 1241: anytype.Rpc.BlockDataview.View
	(*RpcBlockDataviewRelation)(nil),                                   // 1242: anytype.Rpc.BlockDataview.Relation
	(*RpcBlockDataviewSetSource)(nil),                                  // 1243: anytype.Rpc.BlockDataview.SetSource
	(*RpcBlockDataviewGroupOrder)(nil),                                 // 1244: anytype.Rpc.BlockDataview.GroupOrder
	(*RpcBlockDataviewObjectOrder)(nil),                                // 1245: anytype.Rpc.BlockDataview.ObjectOrder
	(*RpcBlockDataviewCreateFromExistingObject)(nil),                   // 1246: anytype.Rpc.BlockDataview.CreateFromExistingObject
	(*RpcBlockDataviewFilter)(nil),                                     // 1247: anytype.Rpc.BlockDataview.Filter
	(*RpcBlockDataviewSort)(nil),                                       // 1248: anytype.Rpc.BlockDataview.Sort
	(*RpcBlockDataviewViewRelation)(nil),                               // 1249: anytype.Rpc.BlockDataview.ViewRelation
	(*RpcBlockDataviewViewCreate)(nil),                                 // 1250: anytype.Rpc.BlockDataview.View.Create
	(*RpcBlockDataviewViewUpdate)(nil),                                 // 1251: anytype.Rpc.BlockDataview.View.Update
	(*RpcBlockDataviewViewDelete)(nil),                                 // 1252: anytype.Rpc.BlockDataview.View.Delete
	(*RpcBlockDataviewViewSetPosition)(nil),                            // 1253: anytype.Rpc.BlockDataview.View.SetPosition
	(*RpcBlockDataviewViewSetActive)(nil),                              // 1254: anytype.Rpc.BlockDataview.View.SetActive
	(*RpcBlockDataviewViewCreateRequest)(nil),                          // 1255: anytype.Rpc.BlockDataview.View.Create.Request
	(*RpcBlockDataviewViewCreateResponse)(nil),                         // 1256: anytype.Rpc.BlockDataview.View.Create.Response
	(*RpcBlockDataviewViewCreateResponseError)(nil),                    // 1257: anytype.Rpc.BlockDataview.View.Create.Response.Error
	(*RpcBlockDataviewViewUpdateRequest)(nil),                          // 1258: anytype.Rpc.BlockDataview.View.Update.Request
	(*RpcBlockDataviewViewUpdateResponse)(nil),                         // 1259: anytype.Rpc.BlockDataview.View.Update.Response
	(*RpcBlockDataviewViewUpdateResponseError)(nil),                    // 1260: anytype.Rpc.BlockDataview.View.Update.Response.Error
	(*RpcBlockDataviewViewDeleteRequest)(nil),                          // 1261: anytype.Rpc.BlockDataview.View.Delete.Request
	(*RpcBlockDataviewViewDeleteResponse)(nil),                         // 1262: anytype.Rpc.BlockDataview.View.Delete.Response
	(*RpcBlockDataviewViewDeleteResponseError)(nil),                    // 1263: anytype.Rpc.BlockDataview.View.Delete.Response.Error
	(*RpcBlockDataviewViewSetPositionRequest)(nil),                     // 1264: anytype.Rpc.BlockDataview.View.SetPosition.Request
	(*RpcBlockDataviewViewSetPositionResponse)(nil),                    // 1265: anytype.Rpc.BlockDataview.View.SetPosition.Response
	(*RpcBlockDataviewViewSetPositionResponseError)(nil),               // 1266: anytype.Rpc.BlockDataview.View.SetPosition.Response.Error
	(*RpcBlockDataviewViewSetActiveRequest)(nil),                       // 1267: anytype.Rpc.BlockDataview.View.SetActive.Request
	(*RpcBlockDataviewViewSetActiveResponse)(nil),                      // 1268: anytype.Rpc.BlockDataview.View.SetActive.Response
	(*RpcBlockDataviewViewSetActiveResponseError)(nil),                 // 1269: anytype.Rpc.BlockDataview.View.SetActive.Response.Error
	(*RpcBlockDataviewRelationAdd)(nil),                                // 1270: anytype.Rpc.BlockDataview.Relation.Add
	(*RpcBlockDataviewRelationDelete)(nil),                             // 1271: anytype.Rpc.BlockDataview.Relation.Delete
	(*RpcBlockDataviewRelationAddRequest)(nil),                         // 1272: anytype.Rpc.BlockDataview.Relation.Add.Request
	(*RpcBlockDataviewRelationAddResponse)(nil),                        // 1273: anytype.Rpc.BlockDataview.Relation.Add.Response
	(*RpcBlockDataviewRelationAddResponseError)(nil),                   // 1274: anytype.Rpc.BlockDataview.Relation.Add.Response.Error
	(*RpcBlockDataviewRelationDeleteRequest)(nil),                      // 1275: anytype.Rpc.BlockDataview.Relation.Delete.Request
	(*RpcBlockDataviewRelationDeleteResponse)(nil),                     // 1276: anytype.Rpc.BlockDataview.Relation.Delete.Response
	(*RpcBlockDataviewRelationDeleteResponseError)(nil),                // 1277: anytype.Rpc.BlockDataview.Relation.Delete.Response.Error
	(*RpcBlockDataviewSetSourceRequest)(nil),                           // 1278: anytype.Rpc.BlockDataview.SetSource.Request
	(*RpcBlockDataviewSetSourceResponse)(nil),                          // 1279: anytype.Rpc.BlockDataview.SetSource.Response
	(*RpcBlockDataviewSetSourceResponseError)(nil),                     // 1280: anytype.Rpc.BlockDataview.SetSource.Response.Error
	(*RpcBlockDataviewGroupOrderUpdate)(nil),                           // 1281: anytype.Rpc.BlockDataview.GroupOrder.Update
	(*RpcBlockDataviewGroupOrderUpdateRequest)(nil),                    // 1282: anytype.Rpc.BlockDataview.GroupOrder.Update.Request
	(*RpcBlockDataviewGroupOrderUpdateResponse)(nil),                   // 1283: anytype.Rpc.BlockDataview.GroupOrder.Update.Response
	(*RpcBlockDataviewGroupOrderUpdateResponseError)(nil),              // 1284: anytype.Rpc.BlockDataview.GroupOrder.Update.Response.Error
	(*RpcBlockDataviewObjectOrderUpdate)(nil),                          // 1285: anytype.Rpc.BlockDataview.ObjectOrder.Update
	(*RpcBlockDataviewObjectOrderMove)(nil),                            // 1286: anytype.Rpc.BlockDataview.ObjectOrder.Move
	(*RpcBlockDataviewObjectOrderUpdateRequest)(nil),                   // 1287: anytype.Rpc.BlockDataview.ObjectOrder.Update.Request
	(*RpcBlockDataviewObjectOrderUpdateResponse)(nil),                  // 1288: anytype.Rpc.BlockDataview.ObjectOrder.Update.Response
	(*RpcBlockDataviewObjectOrderUpdateResponseError)(nil),             // 1289: anytype.Rpc.BlockDataview.ObjectOrder.Update.Response.Error
	(*RpcBlockDataviewObjectOrderMoveRequest)(nil),                     // 1290: anytype.Rpc.BlockDataview.ObjectOrder.Move.Request
	(*RpcBlockDataviewObjectOrderMoveResponse)(nil),                    // 1291: anytype.Rpc.BlockDataview.ObjectOrder.Move.Response
	(*RpcBlockDataviewObjectOrderMoveResponseError)(nil),               // 1292: anytype.Rpc.BlockDataview.ObjectOrder.Move.Response.Error
	(*RpcBlockDataviewCreateFromExistingObjectRequest)(nil),            // 1293: anytype.Rpc.BlockDataview.CreateFromExistingObject.Request
	(*RpcBlockDataviewCreateFromExistingObjectResponse)(nil),           // 1294: anytype.Rpc.BlockDataview.CreateFromExistingObject.Response
	(*RpcBlockDataviewCreateFromExistingObjectResponseError)(nil),      // 1295: anytype.Rpc.BlockDataview.CreateFromExistingObject.Response.Error
	(*RpcBlockDataviewFilterAdd)(nil),                                  // 1296: anytype.Rpc.BlockDataview.Filter.Add
	(*RpcBlockDataviewFilterRemove)(nil),                               // 1297: anytype.Rpc.BlockDataview.Filter.Remove
	(*RpcBlockDataviewFilterReplace)(nil),                              // 1298: anytype.Rpc.BlockDataview.Filter.Replace
	(*RpcBlockDataviewFilterSort)(nil),                                 // 1299: anytype.Rpc.BlockDataview.Filter.Sort
	(*RpcBlockDataviewFilterAddRequest)(nil),                           // 1300: anytype.Rpc.BlockDataview.Filter.Add.Request
	(*RpcBlockDataviewFilterAddResponse)(nil),                          // 1301: anytype.Rpc.BlockDataview.Filter.Add.Response
	(*RpcBlockDataviewFilterAddResponseError)(nil),                     // 1302: anytype.Rpc.BlockDataview.Filter.Add.Response.Error
	(*RpcBlockDataviewFilterRemoveRequest)(nil),                        // 1303: anytype.Rpc.BlockDataview.Filter.Remove.Request
	(*RpcBlockDataviewFilterRemoveResponse)(nil),                       // 1304: anytype.Rpc.BlockDataview.Filter.Remove.Response
	(*RpcBlockDataviewFilterRemoveResponseError)(nil),                  // 1305: anytype.Rpc.BlockDataview.Filter.Remove.Response.Error
	(*RpcBlockDataviewFilterReplaceRequest)(nil),                       // 1306: anytype.Rpc.BlockDataview.Filter.Replace.Request
	(*RpcBlockDataviewFilterReplaceResponse)(nil),                      // 1307: anytype.Rpc.BlockDataview.Filter.Replace.Response
	(*RpcBlockDataviewFilterReplaceResponseError)(nil),                 // 1308: anytype.Rpc.BlockDataview.Filter.Replace.Response.Error
	(*RpcBlockDataviewFilterSortRequest)(nil),                          // 1309: anytype.Rpc.BlockDataview.Filter.Sort.Request
	(*RpcBlockDataviewFilterSortResponse)(nil),                         // 1310: anytype.Rpc.BlockDataview.Filter.Sort.Response
	(*RpcBlockDataviewFilterSortResponseError)(nil),                    // 1311: anytype.Rpc.BlockDataview.Filter.Sort.Response.Error
	(*RpcBlockDataviewSortAdd)(nil),                                    // 1312: anytype.Rpc.BlockDataview.Sort.Add
	(*RpcBlockDataviewSortRemove)(nil),                                 // 1313: anytype.Rpc.BlockDataview.Sort.Remove
	(*RpcBlockDataviewSortReplace)(nil),                                // 1314: anytype.Rpc.BlockDataview.Sort.Replace
	(*RpcBlockDataviewSortSSort)(nil),                                  // 1315: anytype.Rpc.BlockDataview.Sort.SSort
	(*RpcBlockDataviewSortAddRequest)(nil),                             // 1316: anytype.Rpc.BlockDataview.Sort.Add.Request
	(*RpcBlockDataviewSortAddResponse)(nil),                            // 1317: anytype.Rpc.BlockDataview.Sort.Add.Response
	(*RpcBlockDataviewSortAddResponseError)(nil),                       // 1318: anytype.Rpc.BlockDataview.Sort.Add.Response.Error
	(*RpcBlockDataviewSortRemoveRequest)(nil),                          // 1319: anytype.Rpc.BlockDataview.Sort.Remove.Request
	(*RpcBlockDataviewSortRemoveResponse)(nil),                         // 1320: anytype.Rpc.BlockDataview.Sort.Remove.Response
	(*RpcBlockDataviewSortRemoveResponseError)(nil),                    // 1321: anytype.Rpc.BlockDataview.Sort.Remove.Response.Error
	(*RpcBlockDataviewSortReplaceRequest)(nil),                         // 1322: anytype.Rpc.BlockDataview.Sort.Replace.Request
	(*RpcBlockDataviewSortReplaceResponse)(nil),                        // 1323: anytype.Rpc.BlockDataview.Sort.Replace.Response
	(*RpcBlockDataviewSortReplaceResponseError)(nil),                   // 1324: anytype.Rpc.BlockDataview.Sort.Replace.Response.Error
	(*RpcBlockDataviewSortSSortRequest)(nil),                           // 1325: anytype.Rpc.BlockDataview.Sort.SSort.Request
	(*RpcBlockDataviewSortSSortResponse)(nil),                          // 1326: anytype.Rpc.BlockDataview.Sort.SSort.Response
	(*RpcBlockDataviewSortSSortResponseError)(nil),                     // 1327: anytype.Rpc.BlockDataview.Sort.SSort.Response.Error
	(*RpcBlockDataviewViewRelationAdd)(nil),                            // 1328: anytype.Rpc.BlockDataview.ViewRelation.Add
	(*RpcBlockDataviewViewRelationRemove)(nil),                         // 1329: anytype.Rpc.BlockDataview.ViewRelation.Remove
	(*RpcBlockDataviewViewRelationReplace)(nil),                        // 1330: anytype.Rpc.BlockDataview.ViewRelation.Replace
	(*RpcBlockDataviewViewRelationSort)(nil),                           // 1331: anytype.Rpc.BlockDataview.ViewRelation.Sort
	(*RpcBlockDataviewViewRelationAddRequest)(nil),                     // 1332: anytype.Rpc.BlockDataview.ViewRelation.Add.Request
	(*RpcBlockDataviewViewRelationAddResponse)(nil),                    // 1333: anytype.Rpc.BlockDataview.ViewRelation.Add.Response
	(*RpcBlockDataviewViewRelationAddResponseError)(nil),               // 1334: anytype.Rpc.BlockDataview.ViewRelation.Add.Response.Error
	(*RpcBlockDataviewViewRelationRemoveRequest)(nil),                  // 1335: anytype.Rpc.BlockDataview.ViewRelation.Remove.Request
	(*RpcBlockDataviewViewRelationRemoveResponse)(nil),                 // 1336: anytype.Rpc.BlockDataview.ViewRelation.Remove.Response
	(*RpcBlockDataviewViewRelationRemoveResponseError)(nil),            // 1337: anytype.Rpc.BlockDataview.ViewRelation.Remove.Response.Error
	(*RpcBlockDataviewViewRelationReplaceRequest)(nil),                 // 1338: anytype.Rpc.BlockDataview.ViewRelation.Replace.Request
	(*RpcBlockDataviewViewRelationReplaceResponse)(nil),                // 1339: anytype.Rpc.BlockDataview.ViewRelation.Replace.Response
	(*RpcBlockDataviewViewRelationReplaceResponseError)(nil),           // 1340: anytype.Rpc.BlockDataview.ViewRelation.Replace.Response.Error
	(*RpcBlockDataviewViewRelationSortRequest)(nil),                    // 1341: anytype.Rpc.BlockDataview.ViewRelation.Sort.Request
	(*RpcBlockDataviewViewRelationSortResponse)(nil),                   // 1342: anytype.Rpc.BlockDataview.ViewRelation.Sort.Response
	(*RpcBlockDataviewViewRelationSortResponseError)(nil),              // 1343: anytype.Rpc.BlockDataview.ViewRelation.Sort.Response.Error
	(*RpcBlockWidgetSetTargetId)(nil),                                  // 1344: anytype.Rpc.BlockWidget.SetTargetId
	(*RpcBlockWidgetSetLayout)(nil),                                    // 1345: anytype.Rpc.BlockWidget.SetLayout
	(*RpcBlockWidgetSetLimit)(nil),                                     // 1346: anytype.Rpc.BlockWidget.SetLimit
	(*RpcBlockWidgetSetViewId)(nil),                                    // 1347: anytype.Rpc.BlockWidget.SetViewId
	(*RpcBlockWidgetSetTargetIdRequest)(nil),                           // 1348: anytype.Rpc.BlockWidget.SetTargetId.Request
	(*RpcBlockWidgetSetTargetIdResponse)(nil),                          // 1349: anytype.Rpc.BlockWidget.SetTargetId.Response
	(*RpcBlockWidgetSetTargetIdResponseError)(nil),                     // 1350: anytype.Rpc.BlockWidget.SetTargetId.Response.Error
	(*RpcBlockWidgetSetLayoutRequest)(nil),                             // 1351: anytype.Rpc.BlockWidget.SetLayout.Request
	(*RpcBlockWidgetSetLayoutResponse)(nil),                            // 1352: anytype.Rpc.BlockWidget.SetLayout.Response
	(*RpcBlockWidgetSetLayoutResponseError)(nil),                       // 1353: anytype.Rpc.BlockWidget.SetLayout.Response.Error
	(*RpcBlockWidgetSetLimitRequest)(nil),                              // 1354: anytype.Rpc.BlockWidget.SetLimit.Request
	(*RpcBlockWidgetSetLimitResponse)(nil),                             // 1355: anytype.Rpc.BlockWidget.SetLimit.Response
	(*RpcBlockWidgetSetLimitResponseError)(nil),                        // 1356: anytype.Rpc.BlockWidget.SetLimit.Response.Error
	(*RpcBlockWidgetSetViewIdRequest)(nil),                             // 1357: anytype.Rpc.BlockWidget.SetViewId.Request
	(*RpcBlockWidgetSetViewIdResponse)(nil),                            // 1358: anytype.Rpc.BlockWidget.SetViewId.Response
	(*RpcBlockWidgetSetViewIdResponseError)(nil),                       // 1359: anytype.Rpc.BlockWidget.SetViewId.Response.Error
	(*RpcDebugTreeInfo)(nil),                                           // 1360: anytype.Rpc.Debug.TreeInfo
	(*RpcDebugStat)(nil),                                               // 1361: anytype.Rpc.Debug.Stat
	(*RpcDebugTreeHeads)(nil),                                          // 1362: anytype.Rpc.Debug.TreeHeads
	(*RpcDebugTree)(nil),                                               // 1363: anytype.Rpc.Debug.Tree
	(*RpcDebugSpaceSummary)(nil),                                       // 1364: anytype.Rpc.Debug.SpaceSummary
	(*RpcDebugStackGoroutines)(nil),                                    // 1365: anytype.Rpc.Debug.StackGoroutines
	(*RpcDebugExportLocalstore)(nil),                                   // 1366: anytype.Rpc.Debug.ExportLocalstore
	(*RpcDebugSubscriptions)(nil),                                      // 1367: anytype.Rpc.Debug.Subscriptions
	(*RpcDebugOpenedObjects)(nil),                                      // 1368: anytype.Rpc.Debug.OpenedObjects
	(*RpcDebugRunProfiler)(nil),                                        // 1369: anytype.Rpc.Debug.RunProfiler
	(*RpcDebugAccountSelectTrace)(nil),                                 // 1370: anytype.Rpc.Debug.AccountSelectTrace
	(*RpcDebugExportLog)(nil),                                          // 1371: anytype.Rpc.Debug.ExportLog
	(*RpcDebugPing)(nil),                                               // 1372: anytype.Rpc.Debug.Ping
	(*RpcDebugAnystoreObjectChanges)(nil),                              // 1373: anytype.Rpc.Debug.AnystoreObjectChanges
	(*RpcDebugNetCheck)(nil),                                           // 1374: anytype.Rpc.Debug.NetCheck
	(*RpcDebugStatRequest)(nil),                                        // 1375: anytype.Rpc.Debug.Stat.Request
	(*RpcDebugStatResponse)(nil),                                       // 1376: anytype.Rpc.Debug.Stat.Response
	(*RpcDebugStatResponseError)(nil),                                  // 1377: anytype.Rpc.Debug.Stat.Response.Error
	(*RpcDebugTreeHeadsRequest)(nil),                                   // 1378: anytype.Rpc.Debug.TreeHeads.Request
	(*RpcDebugTreeHeadsResponse)(nil),                                  // 1379: anytype.Rpc.Debug.TreeHeads.Response
	(*RpcDebugTreeHeadsResponseError)(nil),                             // 1380: anytype.Rpc.Debug.TreeHeads.Response.Error
	(*RpcDebugTreeRequest)(nil),                                        // 1381: anytype.Rpc.Debug.Tree.Request
	(*RpcDebugTreeResponse)(nil),                                       // 1382: anytype.Rpc.Debug.Tree.Response
	(*RpcDebugTreeResponseError)(nil),                                  // 1383: anytype.Rpc.Debug.Tree.Response.Error
	(*RpcDebugSpaceSummaryRequest)(nil),                                // 1384: anytype.Rpc.Debug.SpaceSummary.Request
	(*RpcDebugSpaceSummaryResponse)(nil),                               // 1385: anytype.Rpc.Debug.SpaceSummary.Response
	(*RpcDebugSpaceSummaryResponseError)(nil),                          // 1386: anytype.Rpc.Debug.SpaceSummary.Response.Error
	(*RpcDebugStackGoroutinesRequest)(nil),                             // 1387: anytype.Rpc.Debug.StackGoroutines.Request
	(*RpcDebugStackGoroutinesResponse)(nil),                            // 1388: anytype.Rpc.Debug.StackGoroutines.Response
	(*RpcDebugStackGoroutinesResponseError)(nil),                       // 1389: anytype.Rpc.Debug.StackGoroutines.Response.Error
	(*RpcDebugExportLocalstoreRequest)(nil),                            // 1390: anytype.Rpc.Debug.ExportLocalstore.Request
	(*RpcDebugExportLocalstoreResponse)(nil),                           // 1391: anytype.Rpc.Debug.ExportLocalstore.Response
	(*RpcDebugExportLocalstoreResponseError)(nil),                      // 1392: anytype.Rpc.Debug.ExportLocalstore.Response.Error
	(*RpcDebugSubscriptionsRequest)(nil),                               // 1393: anytype.Rpc.Debug.Subscriptions.Request
	(*RpcDebugSubscriptionsResponse)(nil),                              // 1394: anytype.Rpc.Debug.Subscriptions.Response
	(*RpcDebugSubscriptionsResponseError)(nil),                         // 1395: anytype.Rpc.Debug.Subscriptions.Response.Error
	(*RpcDebugOpenedObjectsRequest)(nil),                               // 1396: anytype.Rpc.Debug.OpenedObjects.Request
	(*RpcDebugOpenedObjectsResponse)(nil),                              // 1397: anytype.Rpc.Debug.OpenedObjects.Response
	(*RpcDebugOpenedObjectsResponseError)(nil),                         // 1398: anytype.Rpc.Debug.OpenedObjects.Response.Error
	(*RpcDebugRunProfilerRequest)(nil),                                 // 1399: anytype.Rpc.Debug.RunProfiler.Request
	(*RpcDebugRunProfilerResponse)(nil),                                // 1400: anytype.Rpc.Debug.RunProfiler.Response
	(*RpcDebugRunProfilerResponseError)(nil),                           // 1401: anytype.Rpc.Debug.RunProfiler.Response.Error
	(*RpcDebugAccountSelectTraceRequest)(nil),                          // 1402: anytype.Rpc.Debug.AccountSelectTrace.Request
	(*RpcDebugAccountSelectTraceResponse)(nil),                         // 1403: anytype.Rpc.Debug.AccountSelectTrace.Response
	(*RpcDebugAccountSelectTraceResponseError)(nil),                    // 1404: anytype.Rpc.Debug.AccountSelectTrace.Response.Error
	(*RpcDebugExportLogRequest)(nil),                                   // 1405: anytype.Rpc.Debug.ExportLog.Request
	(*RpcDebugExportLogResponse)(nil),                                  // 1406: anytype.Rpc.Debug.ExportLog.Response
	(*RpcDebugExportLogResponseError)(nil),                             // 1407: anytype.Rpc.Debug.ExportLog.Response.Error
	(*RpcDebugPingRequest)(nil),                                        // 1408: anytype.Rpc.Debug.Ping.Request
	(*RpcDebugPingResponse)(nil),                                       // 1409: anytype.Rpc.Debug.Ping.Response
	(*RpcDebugPingResponseError)(nil),                                  // 1410: anytype.Rpc.Debug.Ping.Response.Error
	(*RpcDebugAnystoreObjectChangesRequest)(nil),                       // 1411: anytype.Rpc.Debug.AnystoreObjectChanges.Request
	(*RpcDebugAnystoreObjectChangesResponse)(nil),                      // 1412: anytype.Rpc.Debug.AnystoreObjectChanges.Response
	(*RpcDebugAnystoreObjectChangesResponseChange)(nil),                // 1413: anytype.Rpc.Debug.AnystoreObjectChanges.Response.Change
	(*RpcDebugAnystoreObjectChangesResponseError)(nil),                 // 1414: anytype.Rpc.Debug.AnystoreObjectChanges.Response.Error
	(*RpcDebugNetCheckRequest)(nil),                                    // 1415: anytype.Rpc.Debug.NetCheck.Request
	(*RpcDebugNetCheckResponse)(nil),                                   // 1416: anytype.Rpc.Debug.NetCheck.Response
	(*RpcDebugNetCheckResponseError)(nil),                              // 1417: anytype.Rpc.Debug.NetCheck.Response.Error
	(*RpcInitialSetParameters)(nil),                                    // 1418: anytype.Rpc.Initial.SetParameters
	(*RpcInitialSetParametersRequest)(nil),                             // 1419: anytype.Rpc.Initial.SetParameters.Request
	(*RpcInitialSetParametersResponse)(nil),                            // 1420: anytype.Rpc.Initial.SetParameters.Response
	(*RpcInitialSetParametersResponseError)(nil),                       // 1421: anytype.Rpc.Initial.SetParameters.Response.Error
	(*RpcLogSend)(nil),                                                 // 1422: anytype.Rpc.Log.Send
	(*RpcLogSendRequest)(nil),                                          // 1423: anytype.Rpc.Log.Send.Request
	(*RpcLogSendResponse)(nil),                                         // 1424: anytype.Rpc.Log.Send.Response
	(*RpcLogSendResponseError)(nil),                                    // 1425: anytype.Rpc.Log.Send.Response.Error
	(*RpcProcessCancel)(nil),                                           // 1426: anytype.Rpc.Process.Cancel
	(*RpcProcessSubscribe)(nil),                                        // 1427: anytype.Rpc.Process.Subscribe
	(*RpcProcessUnsubscribe)(nil),                                      // 1428: anytype.Rpc.Process.Unsubscribe
	(*RpcProcessCancelRequest)(nil),                                    // 1429: anytype.Rpc.Process.Cancel.Request
	(*RpcProcessCancelResponse)(nil),                                   // 1430: anytype.Rpc.Process.Cancel.Response
	(*RpcProcessCancelResponseError)(nil),                              // 1431: anytype.Rpc.Process.Cancel.Response.Error
	(*RpcProcessSubscribeRequest)(nil),                                 // 1432: anytype.Rpc.Process.Subscribe.Request
	(*RpcProcessSubscribeResponse)(nil),                                // 1433: anytype.Rpc.Process.Subscribe.Response
	(*RpcProcessSubscribeResponseError)(nil),                           // 1434: anytype.Rpc.Process.Subscribe.Response.Error
	(*RpcProcessUnsubscribeRequest)(nil),                               // 1435: anytype.Rpc.Process.Unsubscribe.Request
	(*RpcProcessUnsubscribeResponse)(nil),                              // 1436: anytype.Rpc.Process.Unsubscribe.Response
	(*RpcProcessUnsubscribeResponseError)(nil),                         // 1437: anytype.Rpc.Process.Unsubscribe.Response.Error
	(*RpcGenericErrorResponseError)(nil),                               // 1438: anytype.Rpc.GenericErrorResponse.Error
	(*RpcNotificationList)(nil),                                        // 1439: anytype.Rpc.Notification.List
	(*RpcNotificationReply)(nil),                                       // 1440: anytype.Rpc.Notification.Reply
	(*RpcNotificationTest)(nil),                                        // 1441: anytype.Rpc.Notification.Test
	(*RpcNotificationListRequest)(nil),                                 // 1442: anytype.Rpc.Notification.List.Request
	(*RpcNotificationListResponse)(nil),                                // 1443: anytype.Rpc.Notification.List.Response
	(*RpcNotificationListResponseError)(nil),                           // 1444: anytype.Rpc.Notification.List.Response.Error
	(*RpcNotificationReplyRequest)(nil),                                // 1445: anytype.Rpc.Notification.Reply.Request
	(*RpcNotificationReplyResponse)(nil),                               // 1446: anytype.Rpc.Notification.Reply.Response
	(*RpcNotificationReplyResponseError)(nil),                          // 1447: anytype.Rpc.Notification.Reply.Response.Error
	(*RpcNotificationTestRequest)(nil),                                 // 1448: anytype.Rpc.Notification.Test.Request
	(*RpcNotificationTestResponse)(nil),                                // 1449: anytype.Rpc.Notification.Test.Response
	(*RpcNotificationTestResponseError)(nil),                           // 1450: anytype.Rpc.Notification.Test.Response.Error
	(*RpcMembershipGetStatus)(nil),                                     // 1451: anytype.Rpc.Membership.GetStatus
	(*RpcMembershipIsNameValid)(nil),                                   // 1452: anytype.Rpc.Membership.IsNameValid
	(*RpcMembershipRegisterPaymentRequest)(nil),                        // 1453: anytype.Rpc.Membership.RegisterPaymentRequest
	(*RpcMembershipGetPortalLinkUrl)(nil),                              // 1454: anytype.Rpc.Membership.GetPortalLinkUrl
	(*RpcMembershipFinalize)(nil),                                      // 1455: anytype.Rpc.Membership.Finalize
	(*RpcMembershipGetVerificationEmailStatus)(nil),                    // 1456: anytype.Rpc.Membership.GetVerificationEmailStatus
	(*RpcMembershipGetVerificationEmail)(nil),                          // 1457: anytype.Rpc.Membership.GetVerificationEmail
	(*RpcMembershipVerifyEmailCode)(nil),                               // 1458: anytype.Rpc.Membership.VerifyEmailCode
	(*RpcMembershipGetTiers)(nil),                                      // 1459: anytype.Rpc.Membership.GetTiers
	(*RpcMembershipVerifyAppStoreReceipt)(nil),                         // 1460: anytype.Rpc.Membership.VerifyAppStoreReceipt
	(*RpcMembershipGetStatusRequest)(nil),                              // 1461: anytype.Rpc.Membership.GetStatus.Request
	(*RpcMembershipGetStatusResponse)(nil),                             // 1462: anytype.Rpc.Membership.GetStatus.Response
	(*RpcMembershipGetStatusResponseError)(nil),                        // 1463: anytype.Rpc.Membership.GetStatus.Response.Error
	(*RpcMembershipIsNameValidRequest)(nil),                            // 1464: anytype.Rpc.Membership.IsNameValid.Request
	(*RpcMembershipIsNameValidResponse)(nil),                           // 1465: anytype.Rpc.Membership.IsNameValid.Response
	(*RpcMembershipIsNameValidResponseError)(nil),                      // 1466: anytype.Rpc.Membership.IsNameValid.Response.Error
	(*RpcMembershipRegisterPaymentRequestRequest)(nil),                 // 1467: anytype.Rpc.Membership.RegisterPaymentRequest.Request
	(*RpcMembershipRegisterPaymentRequestResponse)(nil),                // 1468: anytype.Rpc.Membership.RegisterPaymentRequest.Response
	(*RpcMembershipRegisterPaymentRequestResponseError)(nil),           // 1469: anytype.Rpc.Membership.RegisterPaymentRequest.Response.Error
	(*RpcMembershipGetPortalLinkUrlRequest)(nil),                       // 1470: anytype.Rpc.Membership.GetPortalLinkUrl.Request
	(*RpcMembershipGetPortalLinkUrlResponse)(nil),                      // 1471: anytype.Rpc.Membership.GetPortalLinkUrl.Response
	(*RpcMembershipGetPortalLinkUrlResponseError)(nil),                 // 1472: anytype.Rpc.Membership.GetPortalLinkUrl.Response.Error
	(*RpcMembershipFinalizeRequest)(nil),                               // 1473: anytype.Rpc.Membership.Finalize.Request
	(*RpcMembershipFinalizeResponse)(nil),                              // 1474: anytype.Rpc.Membership.Finalize.Response
	(*RpcMembershipFinalizeResponseError)(nil),                         // 1475: anytype.Rpc.Membership.Finalize.Response.Error
	(*RpcMembershipGetVerificationEmailStatusRequest)(nil),             // 1476: anytype.Rpc.Membership.GetVerificationEmailStatus.Request
	(*RpcMembershipGetVerificationEmailStatusResponse)(nil),            // 1477: anytype.Rpc.Membership.GetVerificationEmailStatus.Response
	(*RpcMembershipGetVerificationEmailStatusResponseError)(nil),       // 1478: anytype.Rpc.Membership.GetVerificationEmailStatus.Response.Error
	(*RpcMembershipGetVerificationEmailRequest)(nil),                   // 1479: anytype.Rpc.Membership.GetVerificationEmail.Request
	(*RpcMembershipGetVerificationEmailResponse)(nil),                  // 1480: anytype.Rpc.Membership.GetVerificationEmail.Response
	(*RpcMembershipGetVerificationEmailResponseError)(nil),             // 1481: anytype.Rpc.Membership.GetVerificationEmail.Response.Error
	(*RpcMembershipVerifyEmailCodeRequest)(nil),                        // 1482: anytype.Rpc.Membership.VerifyEmailCode.Request
	(*RpcMembershipVerifyEmailCodeResponse)(nil),                       // 1483: anytype.Rpc.Membership.VerifyEmailCode.Response
	(*RpcMembershipVerifyEmailCodeResponseError)(nil),                  // 1484: anytype.Rpc.Membership.VerifyEmailCode.Response.Error
	(*RpcMembershipGetTiersRequest)(nil),                               // 1485: anytype.Rpc.Membership.GetTiers.Request
	(*RpcMembershipGetTiersResponse)(nil),                              // 1486: anytype.Rpc.Membership.GetTiers.Response
	(*RpcMembershipGetTiersResponseError)(nil),                         // 1487: anytype.Rpc.Membership.GetTiers.Response.Error
	(*RpcMembershipVerifyAppStoreReceiptRequest)(nil),                  // 1488: anytype.Rpc.Membership.VerifyAppStoreReceipt.Request
	(*RpcMembershipVerifyAppStoreReceiptResponse)(nil),                 // 1489: anytype.Rpc.Membership.VerifyAppStoreReceipt.Response
	(*RpcMembershipVerifyAppStoreReceiptResponseError)(nil),            // 1490: anytype.Rpc.Membership.VerifyAppStoreReceipt.Response.Error
	(*RpcNameServiceResolveName)(nil),                                  // 1491: anytype.Rpc.NameService.ResolveName
	(*RpcNameServiceResolveAnyId)(nil),                                 // 1492: anytype.Rpc.NameService.ResolveAnyId
	(*RpcNameServiceResolveSpaceId)(nil),                               // 1493: anytype.Rpc.NameService.ResolveSpaceId
	(*RpcNameServiceUserAccount)(nil),                                  // 1494: anytype.Rpc.NameService.UserAccount
	(*RpcNameServiceResolveNameRequest)(nil),                           // 1495: anytype.Rpc.NameService.ResolveName.Request
	(*RpcNameServiceResolveNameResponse)(nil),                          // 1496: anytype.Rpc.NameService.ResolveName.Response
	(*RpcNameServiceResolveNameResponseError)(nil),                     // 1497: anytype.Rpc.NameService.ResolveName.Response.Error
	(*RpcNameServiceResolveAnyIdRequest)(nil),                          // 1498: anytype.Rpc.NameService.ResolveAnyId.Request
	(*RpcNameServiceResolveAnyIdResponse)(nil),                         // 1499: anytype.Rpc.NameService.ResolveAnyId.Response
	(*RpcNameServiceResolveAnyIdResponseError)(nil),                    // 1500: anytype.Rpc.NameService.ResolveAnyId.Response.Error
	(*RpcNameServiceResolveSpaceIdRequest)(nil),                        // 1501: anytype.Rpc.NameService.ResolveSpaceId.Request
	(*RpcNameServiceResolveSpaceIdResponse)(nil),                       // 1502: anytype.Rpc.NameService.ResolveSpaceId.Response
	(*RpcNameServiceResolveSpaceIdResponseError)(nil),                  // 1503: anytype.Rpc.NameService.ResolveSpaceId.Response.Error
	(*RpcNameServiceUserAccountGet)(nil),                               // 1504: anytype.Rpc.NameService.UserAccount.Get
	(*RpcNameServiceUserAccountGetRequest)(nil),                        // 1505: anytype.Rpc.NameService.UserAccount.Get.Request
	(*RpcNameServiceUserAccountGetResponse)(nil),                       // 1506: anytype.Rpc.NameService.UserAccount.Get.Response
	(*RpcNameServiceUserAccountGetResponseError)(nil),                  // 1507: anytype.Rpc.NameService.UserAccount.Get.Response.Error
	(*RpcBroadcastPayloadEvent)(nil),                                   // 1508: anytype.Rpc.Broadcast.PayloadEvent
	(*RpcBroadcastPayloadEventRequest)(nil),                            // 1509: anytype.Rpc.Broadcast.PayloadEvent.Request
	(*RpcBroadcastPayloadEventResponse)(nil),                           // 1510: anytype.Rpc.Broadcast.PayloadEvent.Response
	(*RpcBroadcastPayloadEventResponseError)(nil),                      // 1511: anytype.Rpc.Broadcast.PayloadEvent.Response.Error
	(*RpcDeviceSetName)(nil),                                           // 1512: anytype.Rpc.Device.SetName
	(*RpcDeviceList)(nil),                                              // 1513: anytype.Rpc.Device.List
	(*RpcDeviceNetworkState)(nil),                                      // 1514: anytype.Rpc.Device.NetworkState
	(*RpcDeviceSetNameRequest)(nil),                                    // 1515: anytype.Rpc.Device.SetName.Request
	(*RpcDeviceSetNameResponse)(nil),                                   // 1516: anytype.Rpc.Device.SetName.Response
	(*RpcDeviceSetNameResponseError)(nil),                              // 1517: anytype.Rpc.Device.SetName.Response.Error
	(*RpcDeviceListRequest)(nil),                                       // 1518: anytype.Rpc.Device.List.Request
	(*RpcDeviceListResponse)(nil),                                      // 1519: anytype.Rpc.Device.List.Response
	(*RpcDeviceListResponseError)(nil),                                 // 1520: anytype.Rpc.Device.List.Response.Error
	(*RpcDeviceNetworkStateSet)(nil),                                   // 1521: anytype.Rpc.Device.NetworkState.Set
	(*RpcDeviceNetworkStateSetRequest)(nil),                            // 1522: anytype.Rpc.Device.NetworkState.Set.Request
	(*RpcDeviceNetworkStateSetResponse)(nil),                           // 1523: anytype.Rpc.Device.NetworkState.Set.Response
	(*RpcDeviceNetworkStateSetResponseError)(nil),                      // 1524: anytype.Rpc.Device.NetworkState.Set.Response.Error
	(*RpcChatAddMessage)(nil),                                          // 1525: anytype.Rpc.Chat.AddMessage
	(*RpcChatEditMessageContent)(nil),                                  // 1526: anytype.Rpc.Chat.EditMessageContent
	(*RpcChatToggleMessageReaction)(nil),                               // 1527: anytype.Rpc.Chat.ToggleMessageReaction
	(*RpcChatDeleteMessage)(nil),                                       // 1528: anytype.Rpc.Chat.DeleteMessage
	(*RpcChatGetMessages)(nil),                                         // 1529: anytype.Rpc.Chat.GetMessages
	(*RpcChatGetMessagesByIds)(nil),                                    // 1530: anytype.Rpc.Chat.GetMessagesByIds
	(*RpcChatSubscribeLastMessages)(nil),                               // 1531: anytype.Rpc.Chat.SubscribeLastMessages
	(*RpcChatUnsubscribe)(nil),                                         // 1532: anytype.Rpc.Chat.Unsubscribe
	(*RpcChatSubscribeToMessagePreviews)(nil),                          // 1533: anytype.Rpc.Chat.SubscribeToMessagePreviews
	(*RpcChatReadMessages)(nil),                                        // 1534: anytype.Rpc.Chat.ReadMessages
	(*RpcChatUnread)(nil),                                              // 1535: anytype.Rpc.Chat.Unread
	(*RpcChatAddMessageRequest)(nil),                                   // 1536: anytype.Rpc.Chat.AddMessage.Request
	(*RpcChatAddMessageResponse)(nil),                                  // 1537: anytype.Rpc.Chat.AddMessage.Response
	(*RpcChatAddMessageResponseError)(nil),                             // 1538: anytype.Rpc.Chat.AddMessage.Response.Error
	(*RpcChatEditMessageContentRequest)(nil),                           // 1539: anytype.Rpc.Chat.EditMessageContent.Request
	(*RpcChatEditMessageContentResponse)(nil),                          // 1540: anytype.Rpc.Chat.EditMessageContent.Response
	(*RpcChatEditMessageContentResponseError)(nil),                     // 1541: anytype.Rpc.Chat.EditMessageContent.Response.Error
	(*RpcChatToggleMessageReactionRequest)(nil),                        // 1542: anytype.Rpc.Chat.ToggleMessageReaction.Request
	(*RpcChatToggleMessageReactionResponse)(nil),                       // 1543: anytype.Rpc.Chat.ToggleMessageReaction.Response
	(*RpcChatToggleMessageReactionResponseError)(nil),                  // 1544: anytype.Rpc.Chat.ToggleMessageReaction.Response.Error
	(*RpcChatDeleteMessageRequest)(nil),                                // 1545: anytype.Rpc.Chat.DeleteMessage.Request
	(*RpcChatDeleteMessageResponse)(nil),                               // 1546: anytype.Rpc.Chat.DeleteMessage.Response
	(*RpcChatDeleteMessageResponseError)(nil),                          // 1547: anytype.Rpc.Chat.DeleteMessage.Response.Error
	(*RpcChatGetMessagesRequest)(nil),                                  // 1548: anytype.Rpc.Chat.GetMessages.Request
	(*RpcChatGetMessagesResponse)(nil),                                 // 1549: anytype.Rpc.Chat.GetMessages.Response
	(*RpcChatGetMessagesResponseError)(nil),                            // 1550: anytype.Rpc.Chat.GetMessages.Response.Error
	(*RpcChatGetMessagesByIdsRequest)(nil),                             // 1551: anytype.Rpc.Chat.GetMessagesByIds.Request
	(*RpcChatGetMessagesByIdsResponse)(nil),                            // 1552: anytype.Rpc.Chat.GetMessagesByIds.Response
	(*RpcChatGetMessagesByIdsResponseError)(nil),                       // 1553: anytype.Rpc.Chat.GetMessagesByIds.Response.Error
	(*RpcChatSubscribeLastMessagesRequest)(nil),                        // 1554: anytype.Rpc.Chat.SubscribeLastMessages.Request
	(*RpcChatSubscribeLastMessagesResponse)(nil),                       // 1555: anytype.Rpc.Chat.SubscribeLastMessages.Response
	(*RpcChatSubscribeLastMessagesResponseError)(nil),                  // 1556: anytype.Rpc.Chat.SubscribeLastMessages.Response.Error
	(*RpcChatUnsubscribeRequest)(nil),                                  // 1557: anytype.Rpc.Chat.Unsubscribe.Request
	(*RpcChatUnsubscribeResponse)(nil),                                 // 1558: anytype.Rpc.Chat.Unsubscribe.Response
	(*RpcChatUnsubscribeResponseError)(nil),                            // 1559: anytype.Rpc.Chat.Unsubscribe.Response.Error
	(*RpcChatSubscribeToMessagePreviewsRequest)(nil),                   // 1560: anytype.Rpc.Chat.SubscribeToMessagePreviews.Request
	(*RpcChatSubscribeToMessagePreviewsResponse)(nil),                  // 1561: anytype.Rpc.Chat.SubscribeToMessagePreviews.Response
	(*RpcChatSubscribeToMessagePreviewsResponseError)(nil),             // 1562: anytype.Rpc.Chat.SubscribeToMessagePreviews.Response.Error
	(*RpcChatReadMessagesRequest)(nil),                                 // 1563: anytype.Rpc.Chat.ReadMessages.Request
	(*RpcChatReadMessagesResponse)(nil),                                // 1564: anytype.Rpc.Chat.ReadMessages.Response
	(*RpcChatReadMessagesResponseError)(nil),                           // 1565: anytype.Rpc.Chat.ReadMessages.Response.Error
	(*RpcChatUnreadRequest)(nil),                                       // 1566: anytype.Rpc.Chat.Unread.Request
	(*RpcChatUnreadResponse)(nil),                                      // 1567: anytype.Rpc.Chat.Unread.Response
	(*RpcChatUnreadResponseError)(nil),                                 // 1568: anytype.Rpc.Chat.Unread.Response.Error
	(model.ParticipantPermissions)(0),                                  // 1569: anytype.model.ParticipantPermissions
	(*model.ParticipantPermissionChange)(nil),                          // 1570: anytype.model.ParticipantPermissionChange
	(*structpb.Struct)(nil),                                            // 1571: google.protobuf.Struct
	(*model.Account)(nil),                                              // 1572: anytype.model.Account
	(*model.AccountStatus)(nil),                                        // 1573: anytype.model.Account.Status
	(model.AccountAuthLocalApiScope)(0),                                // 1574: anytype.model.Account.Auth.LocalApiScope
	(*model.AccountInfo)(nil),                                          // 1575: anytype.model.Account.Info
	(*ResponseEvent)(nil),                                              // 1576: anytype.ResponseEvent
	(*model.ObjectView)(nil),                                           // 1577: anytype.model.ObjectView
	(*model.InternalFlag)(nil),                                         // 1578: anytype.model.InternalFlag
	(*model.BlockContentDataviewFilter)(nil),                           // 1579: anytype.model.Block.Content.Dataview.Filter
	(*model.BlockContentDataviewSort)(nil),                             // 1580: anytype.model.Block.Content.Dataview.Sort
	(*model.SearchResult)(nil),                                         // 1581: anytype.model.Search.Result
	(*EventObjectSubscriptionCounters)(nil),                            // 1582: anytype.Event.Object.Subscription.Counters
	(*model.BlockContentDataviewGroup)(nil),                            // 1583: anytype.model.Block.Content.Dataview.Group
	(model.ObjectTypeLayout)(0),                                        // 1584: anytype.model.ObjectType.Layout
	(*model.Detail)(nil),                                               // 1585: anytype.model.Detail
	(*model.Range)(nil),                                                // 1586: anytype.model.Range
	(*structpb.Value)(nil),                                             // 1587: google.protobuf.Value
	(model.ExportFormat)(0),                                            // 1588: anytype.model.Export.Format
	(model.ImportType)(0),                                              // 1589: anytype.model.Import.Type
	(*model.SmartBlockSnapshotBase)(nil),                               // 1590: anytype.model.SmartBlockSnapshotBase
	(*model.Relation)(nil),                                             // 1591: anytype.model.Relation
	(*model.RelationOptions)(nil),                                      // 1592: anytype.model.RelationOptions
	(*EventMessage)(nil),                                               // 1593: anytype.Event.Message
	(model.BlockContentFileType)(0),                                    // 1594: anytype.model.Block.Content.File.Type
	(model.BlockContentFileStyle)(0),                                   // 1595: anytype.model.Block.Content.File.Style
	(model.ObjectOrigin)(0),                                            // 1596: anytype.model.ObjectOrigin
	(model.ImageKind)(0),                                               // 1597: anytype.model.ImageKind
	(model.BlockPosition)(0),                                           // 1598: anytype.model.Block.Position
	(*model.ObjectInfo)(nil),                                           // 1599: anytype.model.ObjectInfo
	(*model.ObjectInfoWithLinks)(nil),                                  // 1600: anytype.model.ObjectInfoWithLinks
	(*model.LinkPreview)(nil),                                          // 1601: anytype.model.LinkPreview
	(*model.ManifestInfo)(nil),                                         // 1602: anytype.model.ManifestInfo
	(*model.Block)(nil),                                                // 1603: anytype.model.Block
	(model.BlockContentTextStyle)(0),                                   // 1604: anytype.model.Block.Content.Text.Style
	(model.BlockContentWidgetLayout)(0),                                // 1605: anytype.model.Block.Content.Widget.Layout
	(model.BlockAlign)(0),                                              // 1606: anytype.model.Block.Align
	(model.BlockVerticalAlign)(0),                                      // 1607: anytype.model.Block.VerticalAlign
	(model.BlockContentDivStyle)(0),                                    // 1608: anytype.model.Block.Content.Div.Style
	(*model.BlockContentTextMark)(nil),                                 // 1609: anytype.model.Block.Content.Text.Mark
	(model.BlockContentLatexProcessor)(0),                              // 1610: anytype.model.Block.Content.Latex.Processor
	(*model.BlockContentTextMarks)(nil),                                // 1611: anytype.model.Block.Content.Text.Marks
	(model.BlockContentDataviewSortType)(0),                            // 1612: anytype.model.Block.Content.Dataview.Sort.Type
	(model.BlockContentLinkIconSize)(0),                                // 1613: anytype.model.Block.Content.Link.IconSize
	(model.BlockContentLinkCardStyle)(0),                               // 1614: anytype.model.Block.Content.Link.CardStyle
	(model.BlockContentLinkDescription)(0),                             // 1615: anytype.model.Block.Content.Link.Description
	(*model.BlockContentDataviewView)(nil),                             // 1616: anytype.model.Block.Content.Dataview.View
	(*model.BlockContentDataviewGroupOrder)(nil),                       // 1617: anytype.model.Block.Content.Dataview.GroupOrder
	(*model.BlockContentDataviewObjectOrder)(nil),                      // 1618: anytype.model.Block.Content.Dataview.ObjectOrder
	(*model.BlockContentDataviewRelation)(nil),                         // 1619: anytype.model.Block.Content.Dataview.Relation
	(*model.Notification)(nil),                                         // 1620: anytype.model.Notification
	(model.NotificationActionType)(0),                                  // 1621: anytype.model.Notification.ActionType
	(*model.Membership)(nil),                                           // 1622: anytype.model.Membership
	(model.NameserviceNameType)(0),                                     // 1623: anytype.model.NameserviceNameType
	(model.MembershipPaymentMethod)(0),                                 // 1624: anytype.model.Membership.PaymentMethod
	(model.MembershipEmailVerificationStatus)(0),                       // 1625: anytype.model.Membership.EmailVerificationStatus
	(*model.MembershipTierData)(nil),                                   // 1626: anytype.model.MembershipTierData
	(*model.DeviceInfo)(nil),                                           // 1627: anytype.model.DeviceInfo
	(model.DeviceNetworkType)(0),                                       // 1628: anytype.model.DeviceNetworkType
	(*model.ChatMessage)(nil),                                          // 1629: anytype.model.ChatMessage
	(*model.ChatState)(nil),                                            // 1630: anytype.model.ChatState
	(*descriptorpb.MessageOptions)(nil),                                // 1631: google.protobuf.MessageOptions
}
var file_pb_protos_commands_proto_depIdxs = []int32{
	1438, // 0: anytype.Rpc.GenericErrorResponse.error:type_name -> anytype.Rpc.GenericErrorResponse.Error
	358,  // 1: anytype.Rpc.App.GetVersion.Response.error:type_name -> anytype.Rpc.App.GetVersion.Response.Error
	0,    // 2: anytype.Rpc.App.GetVersion.Response.Error.code:type_name -> anytype.Rpc.App.GetVersion.Response.Error.Code
	1,    // 3: anytype.Rpc.App.SetDeviceState.Request.deviceState:type_name -> anytype.Rpc.App.SetDeviceState.Request.DeviceState
	361,  // 4: anytype.Rpc.App.SetDeviceState.Response.error:type_name -> anytype.Rpc.App.SetDeviceState.Response.Error
	2,    // 5: anytype.Rpc.App.SetDeviceState.Response.Error.code:type_name -> anytype.Rpc.App.SetDeviceState.Response.Error.Code
	364,  // 6: anytype.Rpc.App.Shutdown.Response.error:type_name -> anytype.Rpc.App.Shutdown.Response.Error
	3,    // 7: anytype.Rpc.App.Shutdown.Response.Error.code:type_name -> anytype.Rpc.App.Shutdown.Response.Error.Code
	383,  // 8: anytype.Rpc.Space.LeaveApprove.Response.error:type_name -> anytype.Rpc.Space.LeaveApprove.Response.Error
	4,    // 9: anytype.Rpc.Space.LeaveApprove.Response.Error.code:type_name -> anytype.Rpc.Space.LeaveApprove.Response.Error.Code
	386,  // 10: anytype.Rpc.Space.MakeShareable.Response.error:type_name -> anytype.Rpc.Space.MakeShareable.Response.Error
	5,    // 11: anytype.Rpc.Space.MakeShareable.Response.Error.code:type_name -> anytype.Rpc.Space.MakeShareable.Response.Error.Code
	389,  // 12: anytype.Rpc.Space.InviteGenerate.Response.error:type_name -> anytype.Rpc.Space.InviteGenerate.Response.Error
	6,    // 13: anytype.Rpc.Space.InviteGenerate.Response.Error.code:type_name -> anytype.Rpc.Space.InviteGenerate.Response.Error.Code
	392,  // 14: anytype.Rpc.Space.StopSharing.Response.error:type_name -> anytype.Rpc.Space.StopSharing.Response.Error
	7,    // 15: anytype.Rpc.Space.StopSharing.Response.Error.code:type_name -> anytype.Rpc.Space.StopSharing.Response.Error.Code
	395,  // 16: anytype.Rpc.Space.InviteGetCurrent.Response.error:type_name -> anytype.Rpc.Space.InviteGetCurrent.Response.Error
	8,    // 17: anytype.Rpc.Space.InviteGetCurrent.Response.Error.code:type_name -> anytype.Rpc.Space.InviteGetCurrent.Response.Error.Code
	398,  // 18: anytype.Rpc.Space.InviteRevoke.Response.error:type_name -> anytype.Rpc.Space.InviteRevoke.Response.Error
	9,    // 19: anytype.Rpc.Space.InviteRevoke.Response.Error.code:type_name -> anytype.Rpc.Space.InviteRevoke.Response.Error.Code
	401,  // 20: anytype.Rpc.Space.InviteView.Response.error:type_name -> anytype.Rpc.Space.InviteView.Response.Error
	10,   // 21: anytype.Rpc.Space.InviteView.Response.Error.code:type_name -> anytype.Rpc.Space.InviteView.Response.Error.Code
	404,  // 22: anytype.Rpc.Space.Join.Response.error:type_name -> anytype.Rpc.Space.Join.Response.Error
	11,   // 23: anytype.Rpc.Space.Join.Response.Error.code:type_name -> anytype.Rpc.Space.Join.Response.Error.Code
	407,  // 24: anytype.Rpc.Space.JoinCancel.Response.error:type_name -> anytype.Rpc.Space.JoinCancel.Response.Error
	12,   // 25: anytype.Rpc.Space.JoinCancel.Response.Error.code:type_name -> anytype.Rpc.Space.JoinCancel.Response.Error.Code
	1569, // 26: anytype.Rpc.Space.RequestApprove.Request.permissions:type_name -> anytype.model.ParticipantPermissions
	410,  // 27: anytype.Rpc.Space.RequestApprove.Response.error:type_name -> anytype.Rpc.Space.RequestApprove.Response.Error
	13,   // 28: anytype.Rpc.Space.RequestApprove.Response.Error.code:type_name -> anytype.Rpc.Space.RequestApprove.Response.Error.Code
	413,  // 29: anytype.Rpc.Space.RequestDecline.Response.error:type_name -> anytype.Rpc.Space.RequestDecline.Response.Error
	14,   // 30: anytype.Rpc.Space.RequestDecline.Response.Error.code:type_name -> anytype.Rpc.Space.RequestDecline.Response.Error.Code
	416,  // 31: anytype.Rpc.Space.ParticipantRemove.Response.error:type_name -> anytype.Rpc.Space.ParticipantRemove.Response.Error
	15,   // 32: anytype.Rpc.Space.ParticipantRemove.Response.Error.code:type_name -> anytype.Rpc.Space.ParticipantRemove.Response.Error.Code
	1570, // 33: anytype.Rpc.Space.ParticipantPermissionsChange.Request.changes:type_name -> anytype.model.ParticipantPermissionChange
	419,  // 34: anytype.Rpc.Space.ParticipantPermissionsChange.Response.error:type_name -> anytype.Rpc.Space.ParticipantPermissionsChange.Response.Error
	16,   // 35: anytype.Rpc.Space.ParticipantPermissionsChange.Response.Error.code:type_name -> anytype.Rpc.Space.ParticipantPermissionsChange.Response.Error.Code
	422,  // 36: anytype.Rpc.Space.Delete.Response.error:type_name -> anytype.Rpc.Space.Delete.Response.Error
	17,   // 37: anytype.Rpc.Space.Delete.Response.Error.code:type_name -> anytype.Rpc.Space.Delete.Response.Error.Code
	425,  // 38: anytype.Rpc.Space.SetOrder.Response.error:type_name -> anytype.Rpc.Space.SetOrder.Response.Error
	18,   // 39: anytype.Rpc.Space.SetOrder.Response.Error.code:type_name -> anytype.Rpc.Space.SetOrder.Response.Error.Code
	428,  // 40: anytype.Rpc.Space.UnsetOrder.Response.error:type_name -> anytype.Rpc.Space.UnsetOrder.Response.Error
	19,   // 41: anytype.Rpc.Space.UnsetOrder.Response.Error.code:type_name -> anytype.Rpc.Space.UnsetOrder.Response.Error.Code
	436,  // 42: anytype.Rpc.Wallet.Create.Response.error:type_name -> anytype.Rpc.Wallet.Create.Response.Error
	20,   // 43: anytype.Rpc.Wallet.Create.Response.Error.code:type_name -> anytype.Rpc.Wallet.Create.Response.Error.Code
	439,  // 44: anytype.Rpc.Wallet.Recover.Response.error:type_name -> anytype.Rpc.Wallet.Recover.Response.Error
	21,   // 45: anytype.Rpc.Wallet.Recover.Response.Error.code:type_name -> anytype.Rpc.Wallet.Recover.Response.Error.Code
	442,  // 46: anytype.Rpc.Wallet.Convert.Response.error:type_name -> anytype.Rpc.Wallet.Convert.Response.Error
	22,   // 47: anytype.Rpc.Wallet.Convert.Response.Error.code:type_name -> anytype.Rpc.Wallet.Convert.Response.Error.Code
	445,  // 48: anytype.Rpc.Wallet.CreateSession.Response.error:type_name -> anytype.Rpc.Wallet.CreateSession.Response.Error
	23,   // 49: anytype.Rpc.Wallet.CreateSession.Response.Error.code:type_name -> anytype.Rpc.Wallet.CreateSession.Response.Error.Code
	448,  // 50: anytype.Rpc.Wallet.CloseSession.Response.error:type_name -> anytype.Rpc.Wallet.CloseSession.Response.Error
	24,   // 51: anytype.Rpc.Wallet.CloseSession.Response.Error.code:type_name -> anytype.Rpc.Wallet.CloseSession.Response.Error.Code
	1571, // 52: anytype.Rpc.Account.Config.extra:type_name -> google.protobuf.Struct
	25,   // 53: anytype.Rpc.Account.Create.Request.networkMode:type_name -> anytype.Rpc.Account.NetworkMode
	468,  // 54: anytype.Rpc.Account.Create.Response.error:type_name -> anytype.Rpc.Account.Create.Response.Error
	1572, // 55: anytype.Rpc.Account.Create.Response.account:type_name -> anytype.model.Account
	449,  // 56: anytype.Rpc.Account.Create.Response.config:type_name -> anytype.Rpc.Account.Config
	26,   // 57: anytype.Rpc.Account.Create.Response.Error.code:type_name -> anytype.Rpc.Account.Create.Response.Error.Code
	471,  // 58: anytype.Rpc.Account.Recover.Response.error:type_name -> anytype.Rpc.Account.Recover.Response.Error
	27,   // 59: anytype.Rpc.Account.Recover.Response.Error.code:type_name -> anytype.Rpc.Account.Recover.Response.Error.Code
	474,  // 60: anytype.Rpc.Account.Delete.Response.error:type_name -> anytype.Rpc.Account.Delete.Response.Error
	1573, // 61: anytype.Rpc.Account.Delete.Response.status:type_name -> anytype.model.Account.Status
	28,   // 62: anytype.Rpc.Account.Delete.Response.Error.code:type_name -> anytype.Rpc.Account.Delete.Response.Error.Code
	477,  // 63: anytype.Rpc.Account.RevertDeletion.Response.error:type_name -> anytype.Rpc.Account.RevertDeletion.Response.Error
	1573, // 64: anytype.Rpc.Account.RevertDeletion.Response.status:type_name -> anytype.model.Account.Status
	29,   // 65: anytype.Rpc.Account.RevertDeletion.Response.Error.code:type_name -> anytype.Rpc.Account.RevertDeletion.Response.Error.Code
	480,  // 66: anytype.Rpc.Account.Migrate.Response.error:type_name -> anytype.Rpc.Account.Migrate.Response.Error
	30,   // 67: anytype.Rpc.Account.Migrate.Response.Error.code:type_name -> anytype.Rpc.Account.Migrate.Response.Error.Code
	483,  // 68: anytype.Rpc.Account.MigrateCancel.Response.error:type_name -> anytype.Rpc.Account.MigrateCancel.Response.Error
	31,   // 69: anytype.Rpc.Account.MigrateCancel.Response.Error.code:type_name -> anytype.Rpc.Account.MigrateCancel.Response.Error.Code
	25,   // 70: anytype.Rpc.Account.Select.Request.networkMode:type_name -> anytype.Rpc.Account.NetworkMode
	486,  // 71: anytype.Rpc.Account.Select.Response.error:type_name -> anytype.Rpc.Account.Select.Response.Error
	1572, // 72: anytype.Rpc.Account.Select.Response.account:type_name -> anytype.model.Account
	449,  // 73: anytype.Rpc.Account.Select.Response.config:type_name -> anytype.Rpc.Account.Config
	32,   // 74: anytype.Rpc.Account.Select.Response.Error.code:type_name -> anytype.Rpc.Account.Select.Response.Error.Code
	489,  // 75: anytype.Rpc.Account.Stop.Response.error:type_name -> anytype.Rpc.Account.Stop.Response.Error
	33,   // 76: anytype.Rpc.Account.Stop.Response.Error.code:type_name -> anytype.Rpc.Account.Stop.Response.Error.Code
	492,  // 77: anytype.Rpc.Account.Move.Response.error:type_name -> anytype.Rpc.Account.Move.Response.Error
	34,   // 78: anytype.Rpc.Account.Move.Response.Error.code:type_name -> anytype.Rpc.Account.Move.Response.Error.Code
	495,  // 79: anytype.Rpc.Account.ConfigUpdate.Response.error:type_name -> anytype.Rpc.Account.ConfigUpdate.Response.Error
	36,   // 80: anytype.Rpc.Account.ConfigUpdate.Response.Error.code:type_name -> anytype.Rpc.Account.ConfigUpdate.Response.Error.Code
	500,  // 81: anytype.Rpc.Account.RecoverFromLegacyExport.Response.error:type_name -> anytype.Rpc.Account.RecoverFromLegacyExport.Response.Error
	37,   // 82: anytype.Rpc.Account.RecoverFromLegacyExport.Response.Error.code:type_name -> anytype.Rpc.Account.RecoverFromLegacyExport.Response.Error.Code
	503,  // 83: anytype.Rpc.Account.EnableLocalNetworkSync.Response.error:type_name -> anytype.Rpc.Account.EnableLocalNetworkSync.Response.Error
	38,   // 84: anytype.Rpc.Account.EnableLocalNetworkSync.Response.Error.code:type_name -> anytype.Rpc.Account.EnableLocalNetworkSync.Response.Error.Code
	506,  // 85: anytype.Rpc.Account.ChangeJsonApiAddr.Response.error:type_name -> anytype.Rpc.Account.ChangeJsonApiAddr.Response.Error
	39,   // 86: anytype.Rpc.Account.ChangeJsonApiAddr.Response.Error.code:type_name -> anytype.Rpc.Account.ChangeJsonApiAddr.Response.Error.Code
	25,   // 87: anytype.Rpc.Account.ChangeNetworkConfigAndRestart.Request.networkMode:type_name -> anytype.Rpc.Account.NetworkMode
	509,  // 88: anytype.Rpc.Account.ChangeNetworkConfigAndRestart.Response.error:type_name -> anytype.Rpc.Account.ChangeNetworkConfigAndRestart.Response.Error
	40,   // 89: anytype.Rpc.Account.ChangeNetworkConfigAndRestart.Response.Error.code:type_name -> anytype.Rpc.Account.ChangeNetworkConfigAndRestart.Response.Error.Code
	1574, // 90: anytype.Rpc.Account.LocalLink.NewChallenge.Request.scope:type_name -> anytype.model.Account.Auth.LocalApiScope
	514,  // 91: anytype.Rpc.Account.LocalLink.NewChallenge.Response.error:type_name -> anytype.Rpc.Account.LocalLink.NewChallenge.Response.Error
	41,   // 92: anytype.Rpc.Account.LocalLink.NewChallenge.Response.Error.code:type_name -> anytype.Rpc.Account.LocalLink.NewChallenge.Response.Error.Code
	517,  // 93: anytype.Rpc.Account.LocalLink.SolveChallenge.Response.error:type_name -> anytype.Rpc.Account.LocalLink.SolveChallenge.Response.Error
	42,   // 94: anytype.Rpc.Account.LocalLink.SolveChallenge.Response.Error.code:type_name -> anytype.Rpc.Account.LocalLink.SolveChallenge.Response.Error.Code
	528,  // 95: anytype.Rpc.Workspace.GetCurrent.Response.error:type_name -> anytype.Rpc.Workspace.GetCurrent.Response.Error
	43,   // 96: anytype.Rpc.Workspace.GetCurrent.Response.Error.code:type_name -> anytype.Rpc.Workspace.GetCurrent.Response.Error.Code
	531,  // 97: anytype.Rpc.Workspace.GetAll.Response.error:type_name -> anytype.Rpc.Workspace.GetAll.Response.Error
	44,   // 98: anytype.Rpc.Workspace.GetAll.Response.Error.code:type_name -> anytype.Rpc.Workspace.GetAll.Response.Error.Code
	1571, // 99: anytype.Rpc.Workspace.Create.Request.details:type_name -> google.protobuf.Struct
	114,  // 100: anytype.Rpc.Workspace.Create.Request.useCase:type_name -> anytype.Rpc.Object.ImportUseCase.Request.UseCase
	534,  // 101: anytype.Rpc.Workspace.Create.Response.error:type_name -> anytype.Rpc.Workspace.Create.Response.Error
	45,   // 102: anytype.Rpc.Workspace.Create.Response.Error.code:type_name -> anytype.Rpc.Workspace.Create.Response.Error.Code
	537,  // 103: anytype.Rpc.Workspace.Open.Response.error:type_name -> anytype.Rpc.Workspace.Open.Response.Error
	1575, // 104: anytype.Rpc.Workspace.Open.Response.info:type_name -> anytype.model.Account.Info
	46,   // 105: anytype.Rpc.Workspace.Open.Response.Error.code:type_name -> anytype.Rpc.Workspace.Open.Response.Error.Code
	543,  // 106: anytype.Rpc.Workspace.Object.Add.Response.error:type_name -> anytype.Rpc.Workspace.Object.Add.Response.Error
	1571, // 107: anytype.Rpc.Workspace.Object.Add.Response.details:type_name -> google.protobuf.Struct
	47,   // 108: anytype.Rpc.Workspace.Object.Add.Response.Error.code:type_name -> anytype.Rpc.Workspace.Object.Add.Response.Error.Code
	546,  // 109: anytype.Rpc.Workspace.Object.ListAdd.Response.error:type_name -> anytype.Rpc.Workspace.Object.ListAdd.Response.Error
	48,   // 110: anytype.Rpc.Workspace.Object.ListAdd.Response.Error.code:type_name -> anytype.Rpc.Workspace.Object.ListAdd.Response.Error.Code
	549,  // 111: anytype.Rpc.Workspace.Object.ListRemove.Response.error:type_name -> anytype.Rpc.Workspace.Object.ListRemove.Response.Error
	49,   // 112: anytype.Rpc.Workspace.Object.ListRemove.Response.Error.code:type_name -> anytype.Rpc.Workspace.Object.ListRemove.Response.Error.Code
	1571, // 113: anytype.Rpc.Workspace.SetInfo.Request.details:type_name -> google.protobuf.Struct
	552,  // 114: anytype.Rpc.Workspace.SetInfo.Response.error:type_name -> anytype.Rpc.Workspace.SetInfo.Response.Error
	50,   // 115: anytype.Rpc.Workspace.SetInfo.Response.Error.code:type_name -> anytype.Rpc.Workspace.SetInfo.Response.Error.Code
	555,  // 116: anytype.Rpc.Workspace.Select.Response.error:type_name -> anytype.Rpc.Workspace.Select.Response.Error
	51,   // 117: anytype.Rpc.Workspace.Select.Response.Error.code:type_name -> anytype.Rpc.Workspace.Select.Response.Error.Code
	558,  // 118: anytype.Rpc.Workspace.Export.Response.error:type_name -> anytype.Rpc.Workspace.Export.Response.Error
	1576, // 119: anytype.Rpc.Workspace.Export.Response.event:type_name -> anytype.ResponseEvent
	52,   // 120: anytype.Rpc.Workspace.Export.Response.Error.code:type_name -> anytype.Rpc.Workspace.Export.Response.Error.Code
	53,   // 121: anytype.Rpc.Publishing.PublishState.status:type_name -> anytype.Rpc.Publishing.PublishStatus
	1571, // 122: anytype.Rpc.Publishing.PublishState.details:type_name -> google.protobuf.Struct
	567,  // 123: anytype.Rpc.Publishing.Create.Response.error:type_name -> anytype.Rpc.Publishing.Create.Response.Error
	54,   // 124: anytype.Rpc.Publishing.Create.Response.Error.code:type_name -> anytype.Rpc.Publishing.Create.Response.Error.Code
	570,  // 125: anytype.Rpc.Publishing.Remove.Response.error:type_name -> anytype.Rpc.Publishing.Remove.Response.Error
	55,   // 126: anytype.Rpc.Publishing.Remove.Response.Error.code:type_name -> anytype.Rpc.Publishing.Remove.Response.Error.Code
	573,  // 127: anytype.Rpc.Publishing.List.Response.error:type_name -> anytype.Rpc.Publishing.List.Response.Error
	559,  // 128: anytype.Rpc.Publishing.List.Response.publishes:type_name -> anytype.Rpc.Publishing.PublishState
	56,   // 129: anytype.Rpc.Publishing.List.Response.Error.code:type_name -> anytype.Rpc.Publishing.List.Response.Error.Code
	576,  // 130: anytype.Rpc.Publishing.ResolveUri.Response.error:type_name -> anytype.Rpc.Publishing.ResolveUri.Response.Error
	559,  // 131: anytype.Rpc.Publishing.ResolveUri.Response.publish:type_name -> anytype.Rpc.Publishing.PublishState
	57,   // 132: anytype.Rpc.Publishing.ResolveUri.Response.Error.code:type_name -> anytype.Rpc.Publishing.ResolveUri.Response.Error.Code
	579,  // 133: anytype.Rpc.Publishing.GetStatus.Response.error:type_name -> anytype.Rpc.Publishing.GetStatus.Response.Error
	559,  // 134: anytype.Rpc.Publishing.GetStatus.Response.publish:type_name -> anytype.Rpc.Publishing.PublishState
	58,   // 135: anytype.Rpc.Publishing.GetStatus.Response.Error.code:type_name -> anytype.Rpc.Publishing.GetStatus.Response.Error.Code
	635,  // 136: anytype.Rpc.Object.Open.Response.error:type_name -> anytype.Rpc.Object.Open.Response.Error
	1577, // 137: anytype.Rpc.Object.Open.Response.objectView:type_name -> anytype.model.ObjectView
	59,   // 138: anytype.Rpc.Object.Open.Response.Error.code:type_name -> anytype.Rpc.Object.Open.Response.Error.Code
	638,  // 139: anytype.Rpc.Object.Close.Response.error:type_name -> anytype.Rpc.Object.Close.Response.Error
	60,   // 140: anytype.Rpc.Object.Close.Response.Error.code:type_name -> anytype.Rpc.Object.Close.Response.Error.Code
	641,  // 141: anytype.Rpc.Object.Show.Response.error:type_name -> anytype.Rpc.Object.Show.Response.Error
	1577, // 142: anytype.Rpc.Object.Show.Response.objectView:type_name -> anytype.model.ObjectView
	61,   // 143: anytype.Rpc.Object.Show.Response.Error.code:type_name -> anytype.Rpc.Object.Show.Response.Error.Code
	1571, // 144: anytype.Rpc.Object.Create.Request.details:type_name -> google.protobuf.Struct
	1578, // 145: anytype.Rpc.Object.Create.Request.internalFlags:type_name -> anytype.model.InternalFlag
	644,  // 146: anytype.Rpc.Object.Create.Response.error:type_name -> anytype.Rpc.Object.Create.Response.Error
	1576, // 147: anytype.Rpc.Object.Create.Response.event:type_name -> anytype.ResponseEvent
	1571, // 148: anytype.Rpc.Object.Create.Response.details:type_name -> google.protobuf.Struct
	62,   // 149: anytype.Rpc.Object.Create.Response.Error.code:type_name -> anytype.Rpc.Object.Create.Response.Error.Code
	1571, // 150: anytype.Rpc.Object.CreateBookmark.Request.details:type_name -> google.protobuf.Struct
	647,  // 151: anytype.Rpc.Object.CreateBookmark.Response.error:type_name -> anytype.Rpc.Object.CreateBookmark.Response.Error
	1571, // 152: anytype.Rpc.Object.CreateBookmark.Response.details:type_name -> google.protobuf.Struct
	63,   // 153: anytype.Rpc.Object.CreateBookmark.Response.Error.code:type_name -> anytype.Rpc.Object.CreateBookmark.Response.Error.Code
	1571, // 154: anytype.Rpc.Object.CreateRelation.Request.details:type_name -> google.protobuf.Struct
	650,  // 155: anytype.Rpc.Object.CreateRelation.Response.error:type_name -> anytype.Rpc.Object.CreateRelation.Response.Error
	1571, // 156: anytype.Rpc.Object.CreateRelation.Response.details:type_name -> google.protobuf.Struct
	64,   // 157: anytype.Rpc.Object.CreateRelation.Response.Error.code:type_name -> anytype.Rpc.Object.CreateRelation.Response.Error.Code
	1571, // 158: anytype.Rpc.Object.CreateRelationOption.Request.details:type_name -> google.protobuf.Struct
	653,  // 159: anytype.Rpc.Object.CreateRelationOption.Response.error:type_name -> anytype.Rpc.Object.CreateRelationOption.Response.Error
	1571, // 160: anytype.Rpc.Object.CreateRelationOption.Response.details:type_name -> google.protobuf.Struct
	65,   // 161: anytype.Rpc.Object.CreateRelationOption.Response.Error.code:type_name -> anytype.Rpc.Object.CreateRelationOption.Response.Error.Code
	1571, // 162: anytype.Rpc.Object.CreateSet.Request.details:type_name -> google.protobuf.Struct
	1578, // 163: anytype.Rpc.Object.CreateSet.Request.internalFlags:type_name -> anytype.model.InternalFlag
	656,  // 164: anytype.Rpc.Object.CreateSet.Response.error:type_name -> anytype.Rpc.Object.CreateSet.Response.Error
	1576, // 165: anytype.Rpc.Object.CreateSet.Response.event:type_name -> anytype.ResponseEvent
	1571, // 166: anytype.Rpc.Object.CreateSet.Response.details:type_name -> google.protobuf.Struct
	66,   // 167: anytype.Rpc.Object.CreateSet.Response.Error.code:type_name -> anytype.Rpc.Object.CreateSet.Response.Error.Code
	1571, // 168: anytype.Rpc.Object.CreateObjectType.Request.details:type_name -> google.protobuf.Struct
	1578, // 169: anytype.Rpc.Object.CreateObjectType.Request.internalFlags:type_name -> anytype.model.InternalFlag
	659,  // 170: anytype.Rpc.Object.CreateObjectType.Response.error:type_name -> anytype.Rpc.Object.CreateObjectType.Response.Error
	1571, // 171: anytype.Rpc.Object.CreateObjectType.Response.details:type_name -> google.protobuf.Struct
	67,   // 172: anytype.Rpc.Object.CreateObjectType.Response.Error.code:type_name -> anytype.Rpc.Object.CreateObjectType.Response.Error.Code
	1571, // 173: anytype.Rpc.Object.CreateFromUrl.Request.details:type_name -> google.protobuf.Struct
	662,  // 174: anytype.Rpc.Object.CreateFromUrl.Response.error:type_name -> anytype.Rpc.Object.CreateFromUrl.Response.Error
	1571, // 175: anytype.Rpc.Object.CreateFromUrl.Response.details:type_name -> google.protobuf.Struct
	68,   // 176: anytype.Rpc.Object.CreateFromUrl.Response.Error.code:type_name -> anytype.Rpc.Object.CreateFromUrl.Response.Error.Code
	665,  // 177: anytype.Rpc.Object.ChatAdd.Response.error:type_name -> anytype.Rpc.Object.ChatAdd.Response.Error
	69,   // 178: anytype.Rpc.Object.ChatAdd.Response.Error.code:type_name -> anytype.Rpc.Object.ChatAdd.Response.Error.Code
	668,  // 179: anytype.Rpc.Object.BookmarkFetch.Response.error:type_name -> anytype.Rpc.Object.BookmarkFetch.Response.Error
	70,   // 180: anytype.Rpc.Object.BookmarkFetch.Response.Error.code:type_name -> anytype.Rpc.Object.BookmarkFetch.Response.Error.Code
	671,  // 181: anytype.Rpc.Object.ToBookmark.Response.error:type_name -> anytype.Rpc.Object.ToBookmark.Response.Error
	71,   // 182: anytype.Rpc.Object.ToBookmark.Response.Error.code:type_name -> anytype.Rpc.Object.ToBookmark.Response.Error.Code
	674,  // 183: anytype.Rpc.Object.Duplicate.Response.error:type_name -> anytype.Rpc.Object.Duplicate.Response.Error
	72,   // 184: anytype.Rpc.Object.Duplicate.Response.Error.code:type_name -> anytype.Rpc.Object.Duplicate.Response.Error.Code
	677,  // 185: anytype.Rpc.Object.OpenBreadcrumbs.Response.error:type_name -> anytype.Rpc.Object.OpenBreadcrumbs.Response.Error
	1576, // 186: anytype.Rpc.Object.OpenBreadcrumbs.Response.event:type_name -> anytype.ResponseEvent
	1577, // 187: anytype.Rpc.Object.OpenBreadcrumbs.Response.objectView:type_name -> anytype.model.ObjectView
	73,   // 188: anytype.Rpc.Object.OpenBreadcrumbs.Response.Error.code:type_name -> anytype.Rpc.Object.OpenBreadcrumbs.Response.Error.Code
	680,  // 189: anytype.Rpc.Object.SetBreadcrumbs.Response.error:type_name -> anytype.Rpc.Object.SetBreadcrumbs.Response.Error
	1576, // 190: anytype.Rpc.Object.SetBreadcrumbs.Response.event:type_name -> anytype.ResponseEvent
	74,   // 191: anytype.Rpc.Object.SetBreadcrumbs.Response.Error.code:type_name -> anytype.Rpc.Object.SetBreadcrumbs.Response.Error.Code
	683,  // 192: anytype.Rpc.Object.ShareByLink.Response.error:type_name -> anytype.Rpc.Object.ShareByLink.Response.Error
	75,   // 193: anytype.Rpc.Object.ShareByLink.Response.Error.code:type_name -> anytype.Rpc.Object.ShareByLink.Response.Error.Code
	1579, // 194: anytype.Rpc.Object.Search.Request.filters:type_name -> anytype.model.Block.Content.Dataview.Filter
	1580, // 195: anytype.Rpc.Object.Search.Request.sorts:type_name -> anytype.model.Block.Content.Dataview.Sort
	686,  // 196: anytype.Rpc.Object.Search.Response.error:type_name -> anytype.Rpc.Object.Search.Response.Error
	1571, // 197: anytype.Rpc.Object.Search.Response.records:type_name -> google.protobuf.Struct
	76,   // 198: anytype.Rpc.Object.Search.Response.Error.code:type_name -> anytype.Rpc.Object.Search.Response.Error.Code
	1579, // 199: anytype.Rpc.Object.SearchWithMeta.Request.filters:type_name -> anytype.model.Block.Content.Dataview.Filter
	1580, // 200: anytype.Rpc.Object.SearchWithMeta.Request.sorts:type_name -> anytype.model.Block.Content.Dataview.Sort
	689,  // 201: anytype.Rpc.Object.SearchWithMeta.Response.error:type_name -> anytype.Rpc.Object.SearchWithMeta.Response.Error
	1581, // 202: anytype.Rpc.Object.SearchWithMeta.Response.results:type_name -> anytype.model.Search.Result
	77,   // 203: anytype.Rpc.Object.SearchWithMeta.Response.Error.code:type_name -> anytype.Rpc.Object.SearchWithMeta.Response.Error.Code
	1579, // 204: anytype.Rpc.Object.Graph.Request.filters:type_name -> anytype.model.Block.Content.Dataview.Filter
	78,   // 205: anytype.Rpc.Object.Graph.Edge.type:type_name -> anytype.Rpc.Object.Graph.Edge.Type
	693,  // 206: anytype.Rpc.Object.Graph.Response.error:type_name -> anytype.Rpc.Object.Graph.Response.Error
	1571, // 207: anytype.Rpc.Object.Graph.Response.nodes:type_name -> google.protobuf.Struct
	691,  // 208: anytype.Rpc.Object.Graph.Response.edges:type_name -> anytype.Rpc.Object.Graph.Edge
	79,   // 209: anytype.Rpc.Object.Graph.Response.Error.code:type_name -> anytype.Rpc.Object.Graph.Response.Error.Code
	1579, // 210: anytype.Rpc.Object.SearchSubscribe.Request.filters:type_name -> anytype.model.Block.Content.Dataview.Filter
	1580, // 211: anytype.Rpc.Object.SearchSubscribe.Request.sorts:type_name -> anytype.model.Block.Content.Dataview.Sort
	696,  // 212: anytype.Rpc.Object.SearchSubscribe.Response.error:type_name -> anytype.Rpc.Object.SearchSubscribe.Response.Error
	1571, // 213: anytype.Rpc.Object.SearchSubscribe.Response.records:type_name -> google.protobuf.Struct
	1571, // 214: anytype.Rpc.Object.SearchSubscribe.Response.dependencies:type_name -> google.protobuf.Struct
	1582, // 215: anytype.Rpc.Object.SearchSubscribe.Response.counters:type_name -> anytype.Event.Object.Subscription.Counters
	80,   // 216: anytype.Rpc.Object.SearchSubscribe.Response.Error.code:type_name -> anytype.Rpc.Object.SearchSubscribe.Response.Error.Code
	1579, // 217: anytype.Rpc.Object.CrossSpaceSearchSubscribe.Request.filters:type_name -> anytype.model.Block.Content.Dataview.Filter
	1580, // 218: anytype.Rpc.Object.CrossSpaceSearchSubscribe.Request.sorts:type_name -> anytype.model.Block.Content.Dataview.Sort
	699,  // 219: anytype.Rpc.Object.CrossSpaceSearchSubscribe.Response.error:type_name -> anytype.Rpc.Object.CrossSpaceSearchSubscribe.Response.Error
	1571, // 220: anytype.Rpc.Object.CrossSpaceSearchSubscribe.Response.records:type_name -> google.protobuf.Struct
	1571, // 221: anytype.Rpc.Object.CrossSpaceSearchSubscribe.Response.dependencies:type_name -> google.protobuf.Struct
	1582, // 222: anytype.Rpc.Object.CrossSpaceSearchSubscribe.Response.counters:type_name -> anytype.Event.Object.Subscription.Counters
	81,   // 223: anytype.Rpc.Object.CrossSpaceSearchSubscribe.Response.Error.code:type_name -> anytype.Rpc.Object.CrossSpaceSearchSubscribe.Response.Error.Code
	702,  // 224: anytype.Rpc.Object.CrossSpaceSearchUnsubscribe.Response.error:type_name -> anytype.Rpc.Object.CrossSpaceSearchUnsubscribe.Response.Error
	82,   // 225: anytype.Rpc.Object.CrossSpaceSearchUnsubscribe.Response.Error.code:type_name -> anytype.Rpc.Object.CrossSpaceSearchUnsubscribe.Response.Error.Code
	1579, // 226: anytype.Rpc.Object.GroupsSubscribe.Request.filters:type_name -> anytype.model.Block.Content.Dataview.Filter
	705,  // 227: anytype.Rpc.Object.GroupsSubscribe.Response.error:type_name -> anytype.Rpc.Object.GroupsSubscribe.Response.Error
	1583, // 228: anytype.Rpc.Object.GroupsSubscribe.Response.groups:type_name -> anytype.model.Block.Content.Dataview.Group
	83,   // 229: anytype.Rpc.Object.GroupsSubscribe.Response.Error.code:type_name -> anytype.Rpc.Object.GroupsSubscribe.Response.Error.Code
	708,  // 230: anytype.Rpc.Object.SubscribeIds.Response.error:type_name -> anytype.Rpc.Object.SubscribeIds.Response.Error
	1571, // 231: anytype.Rpc.Object.SubscribeIds.Response.records:type_name -> google.protobuf.Struct
	1571, // 232: anytype.Rpc.Object.SubscribeIds.Response.dependencies:type_name -> google.protobuf.Struct
	84,   // 233: anytype.Rpc.Object.SubscribeIds.Response.Error.code:type_name -> anytype.Rpc.Object.SubscribeIds.Response.Error.Code
	711,  // 234: anytype.Rpc.Object.SearchUnsubscribe.Response.error:type_name -> anytype.Rpc.Object.SearchUnsubscribe.Response.Error
	85,   // 235: anytype.Rpc.Object.SearchUnsubscribe.Response.Error.code:type_name -> anytype.Rpc.Object.SearchUnsubscribe.Response.Error.Code
	1584, // 236: anytype.Rpc.Object.SetLayout.Request.layout:type_name -> anytype.model.ObjectType.Layout
	714,  // 237: anytype.Rpc.Object.SetLayout.Response.error:type_name -> anytype.Rpc.Object.SetLayout.Response.Error
	1576, // 238: anytype.Rpc.Object.SetLayout.Response.event:type_name -> anytype.ResponseEvent
	86,   // 239: anytype.Rpc.Object.SetLayout.Response.Error.code:type_name -> anytype.Rpc.Object.SetLayout.Response.Error.Code
	717,  // 240: anytype.Rpc.Object.SetIsFavorite.Response.error:type_name -> anytype.Rpc.Object.SetIsFavorite.Response.Error
	1576, // 241: anytype.Rpc.Object.SetIsFavorite.Response.event:type_name -> anytype.ResponseEvent
	87,   // 242: anytype.Rpc.Object.SetIsFavorite.Response.Error.code:type_name -> anytype.Rpc.Object.SetIsFavorite.Response.Error.Code
	720,  // 243: anytype.Rpc.Object.SetIsArchived.Response.error:type_name -> anytype.Rpc.Object.SetIsArchived.Response.Error
	88,   // 244: anytype.Rpc.Object.SetIsArchived.Response.Error.code:type_name -> anytype.Rpc.Object.SetIsArchived.Response.Error.Code
	723,  // 245: anytype.Rpc.Object.SetSource.Response.error:type_name -> anytype.Rpc.Object.SetSource.Response.Error
	1576, // 246: anytype.Rpc.Object.SetSource.Response.event:type_name -> anytype.ResponseEvent
	89,   // 247: anytype.Rpc.Object.SetSource.Response.Error.code:type_name -> anytype.Rpc.Object.SetSource.Response.Error.Code
	726,  // 248: anytype.Rpc.Object.WorkspaceSetDashboard.Response.error:type_name -> anytype.Rpc.Object.WorkspaceSetDashboard.Response.Error
	1576, // 249: anytype.Rpc.Object.WorkspaceSetDashboard.Response.event:type_name -> anytype.ResponseEvent
	90,   // 250: anytype.Rpc.Object.WorkspaceSetDashboard.Response.Error.code:type_name -> anytype.Rpc.Object.WorkspaceSetDashboard.Response.Error.Code
	729,  // 251: anytype.Rpc.Object.SetObjectType.Response.error:type_name -> anytype.Rpc.Object.SetObjectType.Response.Error
	1576, // 252: anytype.Rpc.Object.SetObjectType.Response.event:type_name -> anytype.ResponseEvent
	91,   // 253: anytype.Rpc.Object.SetObjectType.Response.Error.code:type_name -> anytype.Rpc.Object.SetObjectType.Response.Error.Code
	1578, // 254: anytype.Rpc.Object.SetInternalFlags.Request.internalFlags:type_name -> anytype.model.InternalFlag
	732,  // 255: anytype.Rpc.Object.SetInternalFlags.Response.error:type_name -> anytype.Rpc.Object.SetInternalFlags.Response.Error
	1576, // 256: anytype.Rpc.Object.SetInternalFlags.Response.event:type_name -> anytype.ResponseEvent
	92,   // 257: anytype.Rpc.Object.SetInternalFlags.Response.Error.code:type_name -> anytype.Rpc.Object.SetInternalFlags.Response.Error.Code
	1585, // 258: anytype.Rpc.Object.SetDetails.Request.details:type_name -> anytype.model.Detail
	735,  // 259: anytype.Rpc.Object.SetDetails.Response.error:type_name -> anytype.Rpc.Object.SetDetails.Response.Error
	1576, // 260: anytype.Rpc.Object.SetDetails.Response.event:type_name -> anytype.ResponseEvent
	93,   // 261: anytype.Rpc.Object.SetDetails.Response.Error.code:type_name -> anytype.Rpc.Object.SetDetails.Response.Error.Code
	738,  // 262: anytype.Rpc.Object.ToSet.Response.error:type_name -> anytype.Rpc.Object.ToSet.Response.Error
	94,   // 263: anytype.Rpc.Object.ToSet.Response.Error.code:type_name -> anytype.Rpc.Object.ToSet.Response.Error.Code
	741,  // 264: anytype.Rpc.Object.ToCollection.Response.error:type_name -> anytype.Rpc.Object.ToCollection.Response.Error
	95,   // 265: anytype.Rpc.Object.ToCollection.Response.Error.code:type_name -> anytype.Rpc.Object.ToCollection.Response.Error.Code
	744,  // 266: anytype.Rpc.Object.Undo.Response.error:type_name -> anytype.Rpc.Object.Undo.Response.Error
	1576, // 267: anytype.Rpc.Object.Undo.Response.event:type_name -> anytype.ResponseEvent
	616,  // 268: anytype.Rpc.Object.Undo.Response.counters:type_name -> anytype.Rpc.Object.UndoRedoCounter
	1586, // 269: anytype.Rpc.Object.Undo.Response.range:type_name -> anytype.model.Range
	96,   // 270: anytype.Rpc.Object.Undo.Response.Error.code:type_name -> anytype.Rpc.Object.Undo.Response.Error.Code
	747,  // 271: anytype.Rpc.Object.Redo.Response.error:type_name -> anytype.Rpc.Object.Redo.Response.Error
	1576, // 272: anytype.Rpc.Object.Redo.Response.event:type_name -> anytype.ResponseEvent
	616,  // 273: anytype.Rpc.Object.Redo.Response.counters:type_name -> anytype.Rpc.Object.UndoRedoCounter
	1586, // 274: anytype.Rpc.Object.Redo.Response.range:type_name -> anytype.model.Range
	97,   // 275: anytype.Rpc.Object.Redo.Response.Error.code:type_name -> anytype.Rpc.Object.Redo.Response.Error.Code
	750,  // 276: anytype.Rpc.Object.ListDuplicate.Response.error:type_name -> anytype.Rpc.Object.ListDuplicate.Response.Error
	98,   // 277: anytype.Rpc.Object.ListDuplicate.Response.Error.code:type_name -> anytype.Rpc.Object.ListDuplicate.Response.Error.Code
	753,  // 278: anytype.Rpc.Object.ListDelete.Response.error:type_name -> anytype.Rpc.Object.ListDelete.Response.Error
	1576, // 279: anytype.Rpc.Object.ListDelete.Response.event:type_name -> anytype.ResponseEvent
	99,   // 280: anytype.Rpc.Object.ListDelete.Response.Error.code:type_name -> anytype.Rpc.Object.ListDelete.Response.Error.Code
	756,  // 281: anytype.Rpc.Object.ListSetIsArchived.Response.error:type_name -> anytype.Rpc.Object.ListSetIsArchived.Response.Error
	100,  // 282: anytype.Rpc.Object.ListSetIsArchived.Response.Error.code:type_name -> anytype.Rpc.Object.ListSetIsArchived.Response.Error.Code
	759,  // 283: anytype.Rpc.Object.ListSetIsFavorite.Response.error:type_name -> anytype.Rpc.Object.ListSetIsFavorite.Response.Error
	101,  // 284: anytype.Rpc.Object.ListSetIsFavorite.Response.Error.code:type_name -> anytype.Rpc.Object.ListSetIsFavorite.Response.Error.Code
	762,  // 285: anytype.Rpc.Object.ListSetObjectType.Response.error:type_name -> anytype.Rpc.Object.ListSetObjectType.Response.Error
	1576, // 286: anytype.Rpc.Object.ListSetObjectType.Response.event:type_name -> anytype.ResponseEvent
	102,  // 287: anytype.Rpc.Object.ListSetObjectType.Response.Error.code:type_name -> anytype.Rpc.Object.ListSetObjectType.Response.Error.Code
	1585, // 288: anytype.Rpc.Object.ListSetDetails.Request.details:type_name -> anytype.model.Detail
	765,  // 289: anytype.Rpc.Object.ListSetDetails.Response.error:type_name -> anytype.Rpc.Object.ListSetDetails.Response.Error
	1576, // 290: anytype.Rpc.Object.ListSetDetails.Response.event:type_name -> anytype.ResponseEvent
	103,  // 291: anytype.Rpc.Object.ListSetDetails.Response.Error.code:type_name -> anytype.Rpc.Object.ListSetDetails.Response.Error.Code
	768,  // 292: anytype.Rpc.Object.ListModifyDetailValues.Request.operations:type_name -> anytype.Rpc.Object.ListModifyDetailValues.Request.Operation
	769,  // 293: anytype.Rpc.Object.ListModifyDetailValues.Response.error:type_name -> anytype.Rpc.Object.ListModifyDetailValues.Response.Error
	1587, // 294: anytype.Rpc.Object.ListModifyDetailValues.Request.Operation.add:type_name -> google.protobuf.Value
	1587, // 295: anytype.Rpc.Object.ListModifyDetailValues.Request.Operation.set:type_name -> google.protobuf.Value
	1587, // 296: anytype.Rpc.Object.ListModifyDetailValues.Request.Operation.remove:type_name -> google.protobuf.Value
	104,  // 297: anytype.Rpc.Object.ListModifyDetailValues.Response.Error.code:type_name -> anytype.Rpc.Object.ListModifyDetailValues.Response.Error.Code
	772,  // 298: anytype.Rpc.Object.ApplyTemplate.Response.error:type_name -> anytype.Rpc.Object.ApplyTemplate.Response.Error
	105,  // 299: anytype.Rpc.Object.ApplyTemplate.Response.Error.code:type_name -> anytype.Rpc.Object.ApplyTemplate.Response.Error.Code
	1588, // 300: anytype.Rpc.Object.ListExport.Request.format:type_name -> anytype.model.Export.Format
	774,  // 301: anytype.Rpc.Object.ListExport.Request.linksStateFilters:type_name -> anytype.Rpc.Object.ListExport.StateFilters
	775,  // 302: anytype.Rpc.Object.ListExport.StateFilters.relationsWhiteList:type_name -> anytype.Rpc.Object.ListExport.RelationsWhiteList
	1584, // 303: anytype.Rpc.Object.ListExport.RelationsWhiteList.layout:type_name -> anytype.model.ObjectType.Layout
	777,  // 304: anytype.Rpc.Object.ListExport.Response.error:type_name -> anytype.Rpc.Object.ListExport.Response.Error
	1576, // 305: anytype.Rpc.Object.ListExport.Response.event:type_name -> anytype.ResponseEvent
	106,  // 306: anytype.Rpc.Object.ListExport.Response.Error.code:type_name -> anytype.Rpc.Object.ListExport.Response.Error.Code
	781,  // 307: anytype.Rpc.Object.Import.Request.notionParams:type_name -> anytype.Rpc.Object.Import.Request.NotionParams
	783,  // 308: anytype.Rpc.Object.Import.Request.bookmarksParams:type_name -> anytype.Rpc.Object.Import.Request.BookmarksParams
	782,  // 309: anytype.Rpc.Object.Import.Request.markdownParams:type_name -> anytype.Rpc.Object.Import.Request.MarkdownParams
	784,  // 310: anytype.Rpc.Object.Import.Request.htmlParams:type_name -> anytype.Rpc.Object.Import.Request.HtmlParams
	785,  // 311: anytype.Rpc.Object.Import.Request.txtParams:type_name -> anytype.Rpc.Object.Import.Request.TxtParams
	786,  // 312: anytype.Rpc.Object.Import.Request.pbParams:type_name -> anytype.Rpc.Object.Import.Request.PbParams
	787,  // 313: anytype.Rpc.Object.Import.Request.csvParams:type_name -> anytype.Rpc.Object.Import.Request.CsvParams
	788,  // 314: anytype.Rpc.Object.Import.Request.snapshots:type_name -> anytype.Rpc.Object.Import.Request.Snapshot
	1589, // 315: anytype.Rpc.Object.Import.Request.type:type_name -> anytype.model.Import.Type
	107,  // 316: anytype.Rpc.Object.Import.Request.mode:type_name -> anytype.Rpc.Object.Import.Request.Mode
	789,  // 317: anytype.Rpc.Object.Import.Response.error:type_name -> anytype.Rpc.Object.Import.Response.Error
	108,  // 318: anytype.Rpc.Object.Import.Request.PbParams.importType:type_name -> anytype.Rpc.Object.Import.Request.PbParams.Type
	109,  // 319: anytype.Rpc.Object.Import.Request.CsvParams.mode:type_name -> anytype.Rpc.Object.Import.Request.CsvParams.Mode
	1590, // 320: anytype.Rpc.Object.Import.Request.Snapshot.snapshot:type_name -> anytype.model.SmartBlockSnapshotBase
	110,  // 321: anytype.Rpc.Object.Import.Response.Error.code:type_name -> anytype.Rpc.Object.Import.Response.Error.Code
	793,  // 322: anytype.Rpc.Object.Import.Notion.ValidateToken.Response.error:type_name -> anytype.Rpc.Object.Import.Notion.ValidateToken.Response.Error
	111,  // 323: anytype.Rpc.Object.Import.Notion.ValidateToken.Response.Error.code:type_name -> anytype.Rpc.Object.Import.Notion.ValidateToken.Response.Error.Code
	797,  // 324: anytype.Rpc.Object.ImportList.Response.error:type_name -> anytype.Rpc.Object.ImportList.Response.Error
	796,  // 325: anytype.Rpc.Object.ImportList.Response.response:type_name -> anytype.Rpc.Object.ImportList.ImportResponse
	113,  // 326: anytype.Rpc.Object.ImportList.ImportResponse.type:type_name -> anytype.Rpc.Object.ImportList.ImportResponse.Type
	112,  // 327: anytype.Rpc.Object.ImportList.Response.Error.code:type_name -> anytype.Rpc.Object.ImportList.Response.Error.Code
	114,  // 328: anytype.Rpc.Object.ImportUseCase.Request.useCase:type_name -> anytype.Rpc.Object.ImportUseCase.Request.UseCase
	800,  // 329: anytype.Rpc.Object.ImportUseCase.Response.error:type_name -> anytype.Rpc.Object.ImportUseCase.Response.Error
	1576, // 330: anytype.Rpc.Object.ImportUseCase.Response.event:type_name -> anytype.ResponseEvent
	115,  // 331: anytype.Rpc.Object.ImportUseCase.Response.Error.code:type_name -> anytype.Rpc.Object.ImportUseCase.Response.Error.Code
	803,  // 332: anytype.Rpc.Object.ImportExperience.Response.error:type_name -> anytype.Rpc.Object.ImportExperience.Response.Error
	1576, // 333: anytype.Rpc.Object.ImportExperience.Response.event:type_name -> anytype.ResponseEvent
	116,  // 334: anytype.Rpc.Object.ImportExperience.Response.Error.code:type_name -> anytype.Rpc.Object.ImportExperience.Response.Error.Code
	806,  // 335: anytype.Rpc.Object.DateByTimestamp.Response.error:type_name -> anytype.Rpc.Object.DateByTimestamp.Response.Error
	1571, // 336: anytype.Rpc.Object.DateByTimestamp.Response.details:type_name -> google.protobuf.Struct
	117,  // 337: anytype.Rpc.Object.DateByTimestamp.Response.Error.code:type_name -> anytype.Rpc.Object.DateByTimestamp.Response.Error.Code
	812,  // 338: anytype.Rpc.ObjectCollection.Add.Response.error:type_name -> anytype.Rpc.ObjectCollection.Add.Response.Error
	1576, // 339: anytype.Rpc.ObjectCollection.Add.Response.event:type_name -> anytype.ResponseEvent
	118,  // 340: anytype.Rpc.ObjectCollection.Add.Response.Error.code:type_name -> anytype.Rpc.ObjectCollection.Add.Response.Error.Code
	815,  // 341: anytype.Rpc.ObjectCollection.Remove.Response.error:type_name -> anytype.Rpc.ObjectCollection.Remove.Response.Error
	1576, // 342: anytype.Rpc.ObjectCollection.Remove.Response.event:type_name -> anytype.ResponseEvent
	119,  // 343: anytype.Rpc.ObjectCollection.Remove.Response.Error.code:type_name -> anytype.Rpc.ObjectCollection.Remove.Response.Error.Code
	818,  // 344: anytype.Rpc.ObjectCollection.Sort.Response.error:type_name -> anytype.Rpc.ObjectCollection.Sort.Response.Error
	1576, // 345: anytype.Rpc.ObjectCollection.Sort.Response.event:type_name -> anytype.ResponseEvent
	120,  // 346: anytype.Rpc.ObjectCollection.Sort.Response.Error.code:type_name -> anytype.Rpc.ObjectCollection.Sort.Response.Error.Code
	826,  // 347: anytype.Rpc.ObjectRelation.Add.Response.error:type_name -> anytype.Rpc.ObjectRelation.Add.Response.Error
	1576, // 348: anytype.Rpc.ObjectRelation.Add.Response.event:type_name -> anytype.ResponseEvent
	121,  // 349: anytype.Rpc.ObjectRelation.Add.Response.Error.code:type_name -> anytype.Rpc.ObjectRelation.Add.Response.Error.Code
	829,  // 350: anytype.Rpc.ObjectRelation.Delete.Response.error:type_name -> anytype.Rpc.ObjectRelation.Delete.Response.Error
	1576, // 351: anytype.Rpc.ObjectRelation.Delete.Response.event:type_name -> anytype.ResponseEvent
	122,  // 352: anytype.Rpc.ObjectRelation.Delete.Response.Error.code:type_name -> anytype.Rpc.ObjectRelation.Delete.Response.Error.Code
	832,  // 353: anytype.Rpc.ObjectRelation.ListAvailable.Response.error:type_name -> anytype.Rpc.ObjectRelation.ListAvailable.Response.Error
	1591, // 354: anytype.Rpc.ObjectRelation.ListAvailable.Response.relations:type_name -> anytype.model.Relation
	123,  // 355: anytype.Rpc.ObjectRelation.ListAvailable.Response.Error.code:type_name -> anytype.Rpc.ObjectRelation.ListAvailable.Response.Error.Code
	835,  // 356: anytype.Rpc.ObjectRelation.AddFeatured.Response.error:type_name -> anytype.Rpc.ObjectRelation.AddFeatured.Response.Error
	1576, // 357: anytype.Rpc.ObjectRelation.AddFeatured.Response.event:type_name -> anytype.ResponseEvent
	124,  // 358: anytype.Rpc.ObjectRelation.AddFeatured.Response.Error.code:type_name -> anytype.Rpc.ObjectRelation.AddFeatured.Response.Error.Code
	838,  // 359: anytype.Rpc.ObjectRelation.RemoveFeatured.Response.error:type_name -> anytype.Rpc.ObjectRelation.RemoveFeatured.Response.Error
	1576, // 360: anytype.Rpc.ObjectRelation.RemoveFeatured.Response.event:type_name -> anytype.ResponseEvent
	125,  // 361: anytype.Rpc.ObjectRelation.RemoveFeatured.Response.Error.code:type_name -> anytype.Rpc.ObjectRelation.RemoveFeatured.Response.Error.Code
	846,  // 362: anytype.Rpc.ObjectType.Relation.Add.Response.error:type_name -> anytype.Rpc.ObjectType.Relation.Add.Response.Error
	1591, // 363: anytype.Rpc.ObjectType.Relation.Add.Response.relations:type_name -> anytype.model.Relation
	126,  // 364: anytype.Rpc.ObjectType.Relation.Add.Response.Error.code:type_name -> anytype.Rpc.ObjectType.Relation.Add.Response.Error.Code
	849,  // 365: anytype.Rpc.ObjectType.Relation.Remove.Response.error:type_name -> anytype.Rpc.ObjectType.Relation.Remove.Response.Error
	127,  // 366: anytype.Rpc.ObjectType.Relation.Remove.Response.Error.code:type_name -> anytype.Rpc.ObjectType.Relation.Remove.Response.Error.Code
	854,  // 367: anytype.Rpc.ObjectType.Recommended.RelationsSet.Response.error:type_name -> anytype.Rpc.ObjectType.Recommended.RelationsSet.Response.Error
	128,  // 368: anytype.Rpc.ObjectType.Recommended.RelationsSet.Response.Error.code:type_name -> anytype.Rpc.ObjectType.Recommended.RelationsSet.Response.Error.Code
	857,  // 369: anytype.Rpc.ObjectType.Recommended.FeaturedRelationsSet.Response.error:type_name -> anytype.Rpc.ObjectType.Recommended.FeaturedRelationsSet.Response.Error
	129,  // 370: anytype.Rpc.ObjectType.Recommended.FeaturedRelationsSet.Response.Error.code:type_name -> anytype.Rpc.ObjectType.Recommended.FeaturedRelationsSet.Response.Error.Code
	860,  // 371: anytype.Rpc.ObjectType.ListConflictingRelations.Response.error:type_name -> anytype.Rpc.ObjectType.ListConflictingRelations.Response.Error
	130,  // 372: anytype.Rpc.ObjectType.ListConflictingRelations.Response.Error.code:type_name -> anytype.Rpc.ObjectType.ListConflictingRelations.Response.Error.Code
	866,  // 373: anytype.Rpc.Relation.ListRemoveOption.Response.error:type_name -> anytype.Rpc.Relation.ListRemoveOption.Response.Error
	131,  // 374: anytype.Rpc.Relation.ListRemoveOption.Response.Error.code:type_name -> anytype.Rpc.Relation.ListRemoveOption.Response.Error.Code
	869,  // 375: anytype.Rpc.Relation.Options.Response.error:type_name -> anytype.Rpc.Relation.Options.Response.Error
	1592, // 376: anytype.Rpc.Relation.Options.Response.options:type_name -> anytype.model.RelationOptions
	132,  // 377: anytype.Rpc.Relation.Options.Response.Error.code:type_name -> anytype.Rpc.Relation.Options.Response.Error.Code
	1587, // 378: anytype.Rpc.Relation.ListWithValue.Request.value:type_name -> google.protobuf.Value
	873,  // 379: anytype.Rpc.Relation.ListWithValue.Response.error:type_name -> anytype.Rpc.Relation.ListWithValue.Response.Error
	872,  // 380: anytype.Rpc.Relation.ListWithValue.Response.list:type_name -> anytype.Rpc.Relation.ListWithValue.Response.ResponseItem
	133,  // 381: anytype.Rpc.Relation.ListWithValue.Response.Error.code:type_name -> anytype.Rpc.Relation.ListWithValue.Response.Error.Code
	881,  // 382: anytype.Rpc.History.GetVersions.Response.error:type_name -> anytype.Rpc.History.GetVersions.Response.Error
	874,  // 383: anytype.Rpc.History.GetVersions.Response.versions:type_name -> anytype.Rpc.History.Version
	134,  // 384: anytype.Rpc.History.GetVersions.Response.Error.code:type_name -> anytype.Rpc.History.GetVersions.Response.Error.Code
	884,  // 385: anytype.Rpc.History.ShowVersion.Response.error:type_name -> anytype.Rpc.History.ShowVersion.Response.Error
	1577, // 386: anytype.Rpc.History.ShowVersion.Response.objectView:type_name -> anytype.model.ObjectView
	874,  // 387: anytype.Rpc.History.ShowVersion.Response.version:type_name -> anytype.Rpc.History.Version
	135,  // 388: anytype.Rpc.History.ShowVersion.Response.Error.code:type_name -> anytype.Rpc.History.ShowVersion.Response.Error.Code
	887,  // 389: anytype.Rpc.History.SetVersion.Response.error:type_name -> anytype.Rpc.History.SetVersion.Response.Error
	136,  // 390: anytype.Rpc.History.SetVersion.Response.Error.code:type_name -> anytype.Rpc.History.SetVersion.Response.Error.Code
	890,  // 391: anytype.Rpc.History.DiffVersions.Response.error:type_name -> anytype.Rpc.History.DiffVersions.Response.Error
	1593, // 392: anytype.Rpc.History.DiffVersions.Response.historyEvents:type_name -> anytype.Event.Message
	1577, // 393: anytype.Rpc.History.DiffVersions.Response.objectView:type_name -> anytype.model.ObjectView
	137,  // 394: anytype.Rpc.History.DiffVersions.Response.Error.code:type_name -> anytype.Rpc.History.DiffVersions.Response.Error.Code
	902,  // 395: anytype.Rpc.File.Reconcile.Response.error:type_name -> anytype.Rpc.File.Reconcile.Response.Error
	138,  // 396: anytype.Rpc.File.Reconcile.Response.Error.code:type_name -> anytype.Rpc.File.Reconcile.Response.Error.Code
	905,  // 397: anytype.Rpc.File.Offload.Response.error:type_name -> anytype.Rpc.File.Offload.Response.Error
	139,  // 398: anytype.Rpc.File.Offload.Response.Error.code:type_name -> anytype.Rpc.File.Offload.Response.Error.Code
	908,  // 399: anytype.Rpc.File.SpaceOffload.Response.error:type_name -> anytype.Rpc.File.SpaceOffload.Response.Error
	140,  // 400: anytype.Rpc.File.SpaceOffload.Response.Error.code:type_name -> anytype.Rpc.File.SpaceOffload.Response.Error.Code
	911,  // 401: anytype.Rpc.File.ListOffload.Response.error:type_name -> anytype.Rpc.File.ListOffload.Response.Error
	141,  // 402: anytype.Rpc.File.ListOffload.Response.Error.code:type_name -> anytype.Rpc.File.ListOffload.Response.Error.Code
	1594, // 403: anytype.Rpc.File.Upload.Request.type:type_name -> anytype.model.Block.Content.File.Type
	1595, // 404: anytype.Rpc.File.Upload.Request.style:type_name -> anytype.model.Block.Content.File.Style
	1571, // 405: anytype.Rpc.File.Upload.Request.details:type_name -> google.protobuf.Struct
	1596, // 406: anytype.Rpc.File.Upload.Request.origin:type_name -> anytype.model.ObjectOrigin
	1597, // 407: anytype.Rpc.File.Upload.Request.imageKind:type_name -> anytype.model.ImageKind
	914,  // 408: anytype.Rpc.File.Upload.Response.error:type_name -> anytype.Rpc.File.Upload.Response.Error
	1571, // 409: anytype.Rpc.File.Upload.Response.details:type_name -> google.protobuf.Struct
	142,  // 410: anytype.Rpc.File.Upload.Response.Error.code:type_name -> anytype.Rpc.File.Upload.Response.Error.Code
	917,  // 411: anytype.Rpc.File.Download.Response.error:type_name -> anytype.Rpc.File.Download.Response.Error
	143,  // 412: anytype.Rpc.File.Download.Response.Error.code:type_name -> anytype.Rpc.File.Download.Response.Error.Code
	1598, // 413: anytype.Rpc.File.Drop.Request.position:type_name -> anytype.model.Block.Position
	920,  // 414: anytype.Rpc.File.Drop.Response.error:type_name -> anytype.Rpc.File.Drop.Response.Error
	1576, // 415: anytype.Rpc.File.Drop.Response.event:type_name -> anytype.ResponseEvent
	144,  // 416: anytype.Rpc.File.Drop.Response.Error.code:type_name -> anytype.Rpc.File.Drop.Response.Error.Code
	924,  // 417: anytype.Rpc.File.SpaceUsage.Response.error:type_name -> anytype.Rpc.File.SpaceUsage.Response.Error
	923,  // 418: anytype.Rpc.File.SpaceUsage.Response.usage:type_name -> anytype.Rpc.File.SpaceUsage.Response.Usage
	145,  // 419: anytype.Rpc.File.SpaceUsage.Response.Error.code:type_name -> anytype.Rpc.File.SpaceUsage.Response.Error.Code
	929,  // 420: anytype.Rpc.File.NodeUsage.Response.error:type_name -> anytype.Rpc.File.NodeUsage.Response.Error
	927,  // 421: anytype.Rpc.File.NodeUsage.Response.usage:type_name -> anytype.Rpc.File.NodeUsage.Response.Usage
	928,  // 422: anytype.Rpc.File.NodeUsage.Response.spaces:type_name -> anytype.Rpc.File.NodeUsage.Response.Space
	146,  // 423: anytype.Rpc.File.NodeUsage.Response.Error.code:type_name -> anytype.Rpc.File.NodeUsage.Response.Error.Code
	147,  // 424: anytype.Rpc.Navigation.ListObjects.Request.context:type_name -> anytype.Rpc.Navigation.Context
	934,  // 425: anytype.Rpc.Navigation.ListObjects.Response.error:type_name -> anytype.Rpc.Navigation.ListObjects.Response.Error
	1599, // 426: anytype.Rpc.Navigation.ListObjects.Response.objects:type_name -> anytype.model.ObjectInfo
	148,  // 427: anytype.Rpc.Navigation.ListObjects.Response.Error.code:type_name -> anytype.Rpc.Navigation.ListObjects.Response.Error.Code
	147,  // 428: anytype.Rpc.Navigation.GetObjectInfoWithLinks.Request.context:type_name -> anytype.Rpc.Navigation.Context
	937,  // 429: anytype.Rpc.Navigation.GetObjectInfoWithLinks.Response.error:type_name -> anytype.Rpc.Navigation.GetObjectInfoWithLinks.Response.Error
	1600, // 430: anytype.Rpc.Navigation.GetObjectInfoWithLinks.Response.object:type_name -> anytype.model.ObjectInfoWithLinks
	149,  // 431: anytype.Rpc.Navigation.GetObjectInfoWithLinks.Response.Error.code:type_name -> anytype.Rpc.Navigation.GetObjectInfoWithLinks.Response.Error.Code
	943,  // 432: anytype.Rpc.Template.CreateFromObject.Response.error:type_name -> anytype.Rpc.Template.CreateFromObject.Response.Error
	150,  // 433: anytype.Rpc.Template.CreateFromObject.Response.Error.code:type_name -> anytype.Rpc.Template.CreateFromObject.Response.Error.Code
	946,  // 434: anytype.Rpc.Template.Clone.Response.error:type_name -> anytype.Rpc.Template.Clone.Response.Error
	151,  // 435: anytype.Rpc.Template.Clone.Response.Error.code:type_name -> anytype.Rpc.Template.Clone.Response.Error.Code
	949,  // 436: anytype.Rpc.Template.ExportAll.Response.error:type_name -> anytype.Rpc.Template.ExportAll.Response.Error
	1576, // 437: anytype.Rpc.Template.ExportAll.Response.event:type_name -> anytype.ResponseEvent
	152,  // 438: anytype.Rpc.Template.ExportAll.Response.Error.code:type_name -> anytype.Rpc.Template.ExportAll.Response.Error.Code
	952,  // 439: anytype.Rpc.LinkPreview.Response.error:type_name -> anytype.Rpc.LinkPreview.Response.Error
	1601, // 440: anytype.Rpc.LinkPreview.Response.linkPreview:type_name -> anytype.model.LinkPreview
	153,  // 441: anytype.Rpc.LinkPreview.Response.Error.code:type_name -> anytype.Rpc.LinkPreview.Response.Error.Code
	958,  // 442: anytype.Rpc.Unsplash.Search.Response.error:type_name -> anytype.Rpc.Unsplash.Search.Response.Error
	957,  // 443: anytype.Rpc.Unsplash.Search.Response.pictures:type_name -> anytype.Rpc.Unsplash.Search.Response.Picture
	154,  // 444: anytype.Rpc.Unsplash.Search.Response.Error.code:type_name -> anytype.Rpc.Unsplash.Search.Response.Error.Code
	1597, // 445: anytype.Rpc.Unsplash.Download.Request.imageKind:type_name -> anytype.model.ImageKind
	961,  // 446: anytype.Rpc.Unsplash.Download.Response.error:type_name -> anytype.Rpc.Unsplash.Download.Response.Error
	155,  // 447: anytype.Rpc.Unsplash.Download.Response.Error.code:type_name -> anytype.Rpc.Unsplash.Download.Response.Error.Code
	966,  // 448: anytype.Rpc.Gallery.DownloadManifest.Response.error:type_name -> anytype.Rpc.Gallery.DownloadManifest.Response.Error
	1602, // 449: anytype.Rpc.Gallery.DownloadManifest.Response.info:type_name -> anytype.model.ManifestInfo
	156,  // 450: anytype.Rpc.Gallery.DownloadManifest.Response.Error.code:type_name -> anytype.Rpc.Gallery.DownloadManifest.Response.Error.Code
	969,  // 451: anytype.Rpc.Gallery.DownloadIndex.Response.error:type_name -> anytype.Rpc.Gallery.DownloadIndex.Response.Error
	970,  // 452: anytype.Rpc.Gallery.DownloadIndex.Response.categories:type_name -> anytype.Rpc.Gallery.DownloadIndex.Response.Category
	1602, // 453: anytype.Rpc.Gallery.DownloadIndex.Response.experiences:type_name -> anytype.model.ManifestInfo
	157,  // 454: anytype.Rpc.Gallery.DownloadIndex.Response.Error.code:type_name -> anytype.Rpc.Gallery.DownloadIndex.Response.Error.Code
	1603, // 455: anytype.Rpc.Block.Replace.Request.block:type_name -> anytype.model.Block
	998,  // 456: anytype.Rpc.Block.Replace.Response.error:type_name -> anytype.Rpc.Block.Replace.Response.Error
	1576, // 457: anytype.Rpc.Block.Replace.Response.event:type_name -> anytype.ResponseEvent
	158,  // 458: anytype.Rpc.Block.Replace.Response.Error.code:type_name -> anytype.Rpc.Block.Replace.Response.Error.Code
	1586, // 459: anytype.Rpc.Block.Split.Request.range:type_name -> anytype.model.Range
	1604, // 460: anytype.Rpc.Block.Split.Request.style:type_name -> anytype.model.Block.Content.Text.Style
	159,  // 461: anytype.Rpc.Block.Split.Request.mode:type_name -> anytype.Rpc.Block.Split.Request.Mode
	1001, // 462: anytype.Rpc.Block.Split.Response.error:type_name -> anytype.Rpc.Block.Split.Response.Error
	1576, // 463: anytype.Rpc.Block.Split.Response.event:type_name -> anytype.ResponseEvent
	160,  // 464: anytype.Rpc.Block.Split.Response.Error.code:type_name -> anytype.Rpc.Block.Split.Response.Error.Code
	1004, // 465: anytype.Rpc.Block.Merge.Response.error:type_name -> anytype.Rpc.Block.Merge.Response.Error
	1576, // 466: anytype.Rpc.Block.Merge.Response.event:type_name -> anytype.ResponseEvent
	161,  // 467: anytype.Rpc.Block.Merge.Response.Error.code:type_name -> anytype.Rpc.Block.Merge.Response.Error.Code
	1603, // 468: anytype.Rpc.Block.Copy.Request.blocks:type_name -> anytype.model.Block
	1586, // 469: anytype.Rpc.Block.Copy.Request.selectedTextRange:type_name -> anytype.model.Range
	1007, // 470: anytype.Rpc.Block.Copy.Response.error:type_name -> anytype.Rpc.Block.Copy.Response.Error
	1603, // 471: anytype.Rpc.Block.Copy.Response.anySlot:type_name -> anytype.model.Block
	162,  // 472: anytype.Rpc.Block.Copy.Response.Error.code:type_name -> anytype.Rpc.Block.Copy.Response.Error.Code
	1586, // 473: anytype.Rpc.Block.Paste.Request.selectedTextRange:type_name -> anytype.model.Range
	1603, // 474: anytype.Rpc.Block.Paste.Request.anySlot:type_name -> anytype.model.Block
	1010, // 475: anytype.Rpc.Block.Paste.Request.fileSlot:type_name -> anytype.Rpc.Block.Paste.Request.File
	1011, // 476: anytype.Rpc.Block.Paste.Response.error:type_name -> anytype.Rpc.Block.Paste.Response.Error
	1576, // 477: anytype.Rpc.Block.Paste.Response.event:type_name -> anytype.ResponseEvent
	163,  // 478: anytype.Rpc.Block.Paste.Response.Error.code:type_name -> anytype.Rpc.Block.Paste.Response.Error.Code
	1603, // 479: anytype.Rpc.Block.Cut.Request.blocks:type_name -> anytype.model.Block
	1586, // 480: anytype.Rpc.Block.Cut.Request.selectedTextRange:type_name -> anytype.model.Range
	1014, // 481: anytype.Rpc.Block.Cut.Response.error:type_name -> anytype.Rpc.Block.Cut.Response.Error
	1603, // 482: anytype.Rpc.Block.Cut.Response.anySlot:type_name -> anytype.model.Block
	1576, // 483: anytype.Rpc.Block.Cut.Response.event:type_name -> anytype.ResponseEvent
	164,  // 484: anytype.Rpc.Block.Cut.Response.Error.code:type_name -> anytype.Rpc.Block.Cut.Response.Error.Code
	1017, // 485: anytype.Rpc.Block.Upload.Response.error:type_name -> anytype.Rpc.Block.Upload.Response.Error
	1576, // 486: anytype.Rpc.Block.Upload.Response.event:type_name -> anytype.ResponseEvent
	165,  // 487: anytype.Rpc.Block.Upload.Response.Error.code:type_name -> anytype.Rpc.Block.Upload.Response.Error.Code
	1020, // 488: anytype.Rpc.Block.Download.Response.error:type_name -> anytype.Rpc.Block.Download.Response.Error
	1576, // 489: anytype.Rpc.Block.Download.Response.event:type_name -> anytype.ResponseEvent
	166,  // 490: anytype.Rpc.Block.Download.Response.Error.code:type_name -> anytype.Rpc.Block.Download.Response.Error.Code
	1603, // 491: anytype.Rpc.Block.Create.Request.block:type_name -> anytype.model.Block
	1598, // 492: anytype.Rpc.Block.Create.Request.position:type_name -> anytype.model.Block.Position
	1023, // 493: anytype.Rpc.Block.Create.Response.error:type_name -> anytype.Rpc.Block.Create.Response.Error
	1576, // 494: anytype.Rpc.Block.Create.Response.event:type_name -> anytype.ResponseEvent
	167,  // 495: anytype.Rpc.Block.Create.Response.Error.code:type_name -> anytype.Rpc.Block.Create.Response.Error.Code
	1603, // 496: anytype.Rpc.Block.CreateWidget.Request.block:type_name -> anytype.model.Block
	1598, // 497: anytype.Rpc.Block.CreateWidget.Request.position:type_name -> anytype.model.Block.Position
	1605, // 498: anytype.Rpc.Block.CreateWidget.Request.widgetLayout:type_name -> anytype.model.Block.Content.Widget.Layout
	1026, // 499: anytype.Rpc.Block.CreateWidget.Response.error:type_name -> anytype.Rpc.Block.CreateWidget.Response.Error
	1576, // 500: anytype.Rpc.Block.CreateWidget.Response.event:type_name -> anytype.ResponseEvent
	168,  // 501: anytype.Rpc.Block.CreateWidget.Response.Error.code:type_name -> anytype.Rpc.Block.CreateWidget.Response.Error.Code
	1029, // 502: anytype.Rpc.Block.ListDelete.Response.error:type_name -> anytype.Rpc.Block.ListDelete.Response.Error
	1576, // 503: anytype.Rpc.Block.ListDelete.Response.event:type_name -> anytype.ResponseEvent
	169,  // 504: anytype.Rpc.Block.ListDelete.Response.Error.code:type_name -> anytype.Rpc.Block.ListDelete.Response.Error.Code
	1571, // 505: anytype.Rpc.Block.SetFields.Request.fields:type_name -> google.protobuf.Struct
	1032, // 506: anytype.Rpc.Block.SetFields.Response.error:type_name -> anytype.Rpc.Block.SetFields.Response.Error
	1576, // 507: anytype.Rpc.Block.SetFields.Response.event:type_name -> anytype.ResponseEvent
	170,  // 508: anytype.Rpc.Block.SetFields.Response.Error.code:type_name -> anytype.Rpc.Block.SetFields.Response.Error.Code
	1606, // 509: anytype.Rpc.Block.ListSetAlign.Request.align:type_name -> anytype.model.Block.Align
	1035, // 510: anytype.Rpc.Block.ListSetAlign.Response.error:type_name -> anytype.Rpc.Block.ListSetAlign.Response.Error
	1576, // 511: anytype.Rpc.Block.ListSetAlign.Response.event:type_name -> anytype.ResponseEvent
	171,  // 512: anytype.Rpc.Block.ListSetAlign.Response.Error.code:type_name -> anytype.Rpc.Block.ListSetAlign.Response.Error.Code
	1607, // 513: anytype.Rpc.Block.ListSetVerticalAlign.Request.verticalAlign:type_name -> anytype.model.Block.VerticalAlign
	1038, // 514: anytype.Rpc.Block.ListSetVerticalAlign.Response.error:type_name -> anytype.Rpc.Block.ListSetVerticalAlign.Response.Error
	1576, // 515: anytype.Rpc.Block.ListSetVerticalAlign.Response.event:type_name -> anytype.ResponseEvent
	172,  // 516: anytype.Rpc.Block.ListSetVerticalAlign.Response.Error.code:type_name -> anytype.Rpc.Block.ListSetVerticalAlign.Response.Error.Code
	1041, // 517: anytype.Rpc.Block.ListSetFields.Request.blockFields:type_name -> anytype.Rpc.Block.ListSetFields.Request.BlockField
	1042, // 518: anytype.Rpc.Block.ListSetFields.Response.error:type_name -> anytype.Rpc.Block.ListSetFields.Response.Error
	1576, // 519: anytype.Rpc.Block.ListSetFields.Response.event:type_name -> anytype.ResponseEvent
	1571, // 520: anytype.Rpc.Block.ListSetFields.Request.BlockField.fields:type_name -> google.protobuf.Struct
	173,  // 521: anytype.Rpc.Block.ListSetFields.Response.Error.code:type_name -> anytype.Rpc.Block.ListSetFields.Response.Error.Code
	1598, // 522: anytype.Rpc.Block.ListDuplicate.Request.position:type_name -> anytype.model.Block.Position
	1045, // 523: anytype.Rpc.Block.ListDuplicate.Response.error:type_name -> anytype.Rpc.Block.ListDuplicate.Response.Error
	1576, // 524: anytype.Rpc.Block.ListDuplicate.Response.event:type_name -> anytype.ResponseEvent
	174,  // 525: anytype.Rpc.Block.ListDuplicate.Response.Error.code:type_name -> anytype.Rpc.Block.ListDuplicate.Response.Error.Code
	1047, // 526: anytype.Rpc.Block.ListUpdate.Request.text:type_name -> anytype.Rpc.Block.ListUpdate.Request.Text
	1606, // 527: anytype.Rpc.Block.ListUpdate.Request.align:type_name -> anytype.model.Block.Align
	1571, // 528: anytype.Rpc.Block.ListUpdate.Request.fields:type_name -> google.protobuf.Struct
	1608, // 529: anytype.Rpc.Block.ListUpdate.Request.divStyle:type_name -> anytype.model.Block.Content.Div.Style
	1595, // 530: anytype.Rpc.Block.ListUpdate.Request.fileStyle:type_name -> anytype.model.Block.Content.File.Style
	1604, // 531: anytype.Rpc.Block.ListUpdate.Request.Text.style:type_name -> anytype.model.Block.Content.Text.Style
	1609, // 532: anytype.Rpc.Block.ListUpdate.Request.Text.mark:type_name -> anytype.model.Block.Content.Text.Mark
	1603, // 533: anytype.Rpc.Block.ListConvertToObjects.Request.block:type_name -> anytype.model.Block
	1050, // 534: anytype.Rpc.Block.ListConvertToObjects.Response.error:type_name -> anytype.Rpc.Block.ListConvertToObjects.Response.Error
	1576, // 535: anytype.Rpc.Block.ListConvertToObjects.Response.event:type_name -> anytype.ResponseEvent
	175,  // 536: anytype.Rpc.Block.ListConvertToObjects.Response.Error.code:type_name -> anytype.Rpc.Block.ListConvertToObjects.Response.Error.Code
	1598, // 537: anytype.Rpc.Block.ListMoveToExistingObject.Request.position:type_name -> anytype.model.Block.Position
	1053, // 538: anytype.Rpc.Block.ListMoveToExistingObject.Response.error:type_name -> anytype.Rpc.Block.ListMoveToExistingObject.Response.Error
	1576, // 539: anytype.Rpc.Block.ListMoveToExistingObject.Response.event:type_name -> anytype.ResponseEvent
	176,  // 540: anytype.Rpc.Block.ListMoveToExistingObject.Response.Error.code:type_name -> anytype.Rpc.Block.ListMoveToExistingObject.Response.Error.Code
	1571, // 541: anytype.Rpc.Block.ListMoveToNewObject.Request.details:type_name -> google.protobuf.Struct
	1598, // 542: anytype.Rpc.Block.ListMoveToNewObject.Request.position:type_name -> anytype.model.Block.Position
	1056, // 543: anytype.Rpc.Block.ListMoveToNewObject.Response.error:type_name -> anytype.Rpc.Block.ListMoveToNewObject.Response.Error
	1576, // 544: anytype.Rpc.Block.ListMoveToNewObject.Response.event:type_name -> anytype.ResponseEvent
	177,  // 545: anytype.Rpc.Block.ListMoveToNewObject.Response.Error.code:type_name -> anytype.Rpc.Block.ListMoveToNewObject.Response.Error.Code
	1604, // 546: anytype.Rpc.Block.ListTurnInto.Request.style:type_name -> anytype.model.Block.Content.Text.Style
	1059, // 547: anytype.Rpc.Block.ListTurnInto.Response.error:type_name -> anytype.Rpc.Block.ListTurnInto.Response.Error
	1576, // 548: anytype.Rpc.Block.ListTurnInto.Response.event:type_name -> anytype.ResponseEvent
	178,  // 549: anytype.Rpc.Block.ListTurnInto.Response.Error.code:type_name -> anytype.Rpc.Block.ListTurnInto.Response.Error.Code
	1062, // 550: anytype.Rpc.Block.ListSetBackgroundColor.Response.error:type_name -> anytype.Rpc.Block.ListSetBackgroundColor.Response.Error
	1576, // 551: anytype.Rpc.Block.ListSetBackgroundColor.Response.event:type_name -> anytype.ResponseEvent
	179,  // 552: anytype.Rpc.Block.ListSetBackgroundColor.Response.Error.code:type_name -> anytype.Rpc.Block.ListSetBackgroundColor.Response.Error.Code
	1603, // 553: anytype.Rpc.Block.Export.Request.blocks:type_name -> anytype.model.Block
	1065, // 554: anytype.Rpc.Block.Export.Response.error:type_name -> anytype.Rpc.Block.Export.Response.Error
	1576, // 555: anytype.Rpc.Block.Export.Response.event:type_name -> anytype.ResponseEvent
	180,  // 556: anytype.Rpc.Block.Export.Response.Error.code:type_name -> anytype.Rpc.Block.Export.Response.Error.Code
	1586, // 557: anytype.Rpc.Block.SetCarriage.Request.range:type_name -> anytype.model.Range
	1068, // 558: anytype.Rpc.Block.SetCarriage.Response.error:type_name -> anytype.Rpc.Block.SetCarriage.Response.Error
	181,  // 559: anytype.Rpc.Block.SetCarriage.Response.Error.code:type_name -> anytype.Rpc.Block.SetCarriage.Response.Error.Code
	1071, // 560: anytype.Rpc.Block.Preview.Response.error:type_name -> anytype.Rpc.Block.Preview.Response.Error
	1603, // 561: anytype.Rpc.Block.Preview.Response.blocks:type_name -> anytype.model.Block
	182,  // 562: anytype.Rpc.Block.Preview.Response.Error.code:type_name -> anytype.Rpc.Block.Preview.Response.Error.Code
	1610, // 563: anytype.Rpc.BlockLatex.SetText.Request.processor:type_name -> anytype.model.Block.Content.Latex.Processor
	1076, // 564: anytype.Rpc.BlockLatex.SetText.Response.error:type_name -> anytype.Rpc.BlockLatex.SetText.Response.Error
	1576, // 565: anytype.Rpc.BlockLatex.SetText.Response.event:type_name -> anytype.ResponseEvent
	183,  // 566: anytype.Rpc.BlockLatex.SetText.Response.Error.code:type_name -> anytype.Rpc.BlockLatex.SetText.Response.Error.Code
	1610, // 567: anytype.Rpc.BlockLatex.SetProcessor.Request.processor:type_name -> anytype.model.Block.Content.Latex.Processor
	1079, // 568: anytype.Rpc.BlockLatex.SetProcessor.Response.error:type_name -> anytype.Rpc.BlockLatex.SetProcessor.Response.Error
	1576, // 569: anytype.Rpc.BlockLatex.SetProcessor.Response.event:type_name -> anytype.ResponseEvent
	184,  // 570: anytype.Rpc.BlockLatex.SetProcessor.Response.Error.code:type_name -> anytype.Rpc.BlockLatex.SetProcessor.Response.Error.Code
	1611, // 571: anytype.Rpc.BlockText.SetText.Request.marks:type_name -> anytype.model.Block.Content.Text.Marks
	1586, // 572: anytype.Rpc.BlockText.SetText.Request.selectedTextRange:type_name -> anytype.model.Range
	1093, // 573: anytype.Rpc.BlockText.SetText.Response.error:type_name -> anytype.Rpc.BlockText.SetText.Response.Error
	1576, // 574: anytype.Rpc.BlockText.SetText.Response.event:type_name -> anytype.ResponseEvent
	185,  // 575: anytype.Rpc.BlockText.SetText.Response.Error.code:type_name -> anytype.Rpc.BlockText.SetText.Response.Error.Code
	1096, // 576: anytype.Rpc.BlockText.SetColor.Response.error:type_name -> anytype.Rpc.BlockText.SetColor.Response.Error
	1576, // 577: anytype.Rpc.BlockText.SetColor.Response.event:type_name -> anytype.ResponseEvent
	186,  // 578: anytype.Rpc.BlockText.SetColor.Response.Error.code:type_name -> anytype.Rpc.BlockText.SetColor.Response.Error.Code
	1586, // 579: anytype.Rpc.BlockText.SetMarks.Get.Request.range:type_name -> anytype.model.Range
	1100, // 580: anytype.Rpc.BlockText.SetMarks.Get.Response.error:type_name -> anytype.Rpc.BlockText.SetMarks.Get.Response.Error
	1576, // 581: anytype.Rpc.BlockText.SetMarks.Get.Response.event:type_name -> anytype.ResponseEvent
	187,  // 582: anytype.Rpc.BlockText.SetMarks.Get.Response.Error.code:type_name -> anytype.Rpc.BlockText.SetMarks.Get.Response.Error.Code
	1604, // 583: anytype.Rpc.BlockText.SetStyle.Request.style:type_name -> anytype.model.Block.Content.Text.Style
	1103, // 584: anytype.Rpc.BlockText.SetStyle.Response.error:type_name -> anytype.Rpc.BlockText.SetStyle.Response.Error
	1576, // 585: anytype.Rpc.BlockText.SetStyle.Response.event:type_name -> anytype.ResponseEvent
	188,  // 586: anytype.Rpc.BlockText.SetStyle.Response.Error.code:type_name -> anytype.Rpc.BlockText.SetStyle.Response.Error.Code
	1106, // 587: anytype.Rpc.BlockText.SetChecked.Response.error:type_name -> anytype.Rpc.BlockText.SetChecked.Response.Error
	1576, // 588: anytype.Rpc.BlockText.SetChecked.Response.event:type_name -> anytype.ResponseEvent
	189,  // 589: anytype.Rpc.BlockText.SetChecked.Response.Error.code:type_name -> anytype.Rpc.BlockText.SetChecked.Response.Error.Code
	1109, // 590: anytype.Rpc.BlockText.SetIcon.Response.error:type_name -> anytype.Rpc.BlockText.SetIcon.Response.Error
	1576, // 591: anytype.Rpc.BlockText.SetIcon.Response.event:type_name -> anytype.ResponseEvent
	190,  // 592: anytype.Rpc.BlockText.SetIcon.Response.Error.code:type_name -> anytype.Rpc.BlockText.SetIcon.Response.Error.Code
	1604, // 593: anytype.Rpc.BlockText.ListSetStyle.Request.style:type_name -> anytype.model.Block.Content.Text.Style
	1112, // 594: anytype.Rpc.BlockText.ListSetStyle.Response.error:type_name -> anytype.Rpc.BlockText.ListSetStyle.Response.Error
	1576, // 595: anytype.Rpc.BlockText.ListSetStyle.Response.event:type_name -> anytype.ResponseEvent
	191,  // 596: anytype.Rpc.BlockText.ListSetStyle.Response.Error.code:type_name -> anytype.Rpc.BlockText.ListSetStyle.Response.Error.Code
	1115, // 597: anytype.Rpc.BlockText.ListSetColor.Response.error:type_name -> anytype.Rpc.BlockText.ListSetColor.Response.Error
	1576, // 598: anytype.Rpc.BlockText.ListSetColor.Response.event:type_name -> anytype.ResponseEvent
	192,  // 599: anytype.Rpc.BlockText.ListSetColor.Response.Error.code:type_name -> anytype.Rpc.BlockText.ListSetColor.Response.Error.Code
	1609, // 600: anytype.Rpc.BlockText.ListSetMark.Request.mark:type_name -> anytype.model.Block.Content.Text.Mark
	1118, // 601: anytype.Rpc.BlockText.ListSetMark.Response.error:type_name -> anytype.Rpc.BlockText.ListSetMark.Response.Error
	1576, // 602: anytype.Rpc.BlockText.ListSetMark.Response.event:type_name -> anytype.ResponseEvent
	193,  // 603: anytype.Rpc.BlockText.ListSetMark.Response.Error.code:type_name -> anytype.Rpc.BlockText.ListSetMark.Response.Error.Code
	1121, // 604: anytype.Rpc.BlockText.ListClearStyle.Response.error:type_name -> anytype.Rpc.BlockText.ListClearStyle.Response.Error
	1576, // 605: anytype.Rpc.BlockText.ListClearStyle.Response.event:type_name -> anytype.ResponseEvent
	194,  // 606: anytype.Rpc.BlockText.ListClearStyle.Response.Error.code:type_name -> anytype.Rpc.BlockText.ListClearStyle.Response.Error.Code
	1124, // 607: anytype.Rpc.BlockText.ListClearContent.Response.error:type_name -> anytype.Rpc.BlockText.ListClearContent.Response.Error
	1576, // 608: anytype.Rpc.BlockText.ListClearContent.Response.event:type_name -> anytype.ResponseEvent
	195,  // 609: anytype.Rpc.BlockText.ListClearContent.Response.Error.code:type_name -> anytype.Rpc.BlockText.ListClearContent.Response.Error.Code
	1598, // 610: anytype.Rpc.BlockTable.Create.Request.position:type_name -> anytype.model.Block.Position
	1141, // 611: anytype.Rpc.BlockTable.Create.Response.error:type_name -> anytype.Rpc.BlockTable.Create.Response.Error
	1576, // 612: anytype.Rpc.BlockTable.Create.Response.event:type_name -> anytype.ResponseEvent
	196,  // 613: anytype.Rpc.BlockTable.Create.Response.Error.code:type_name -> anytype.Rpc.BlockTable.Create.Response.Error.Code
	1598, // 614: anytype.Rpc.BlockTable.RowCreate.Request.position:type_name -> anytype.model.Block.Position
	1144, // 615: anytype.Rpc.BlockTable.RowCreate.Response.error:type_name -> anytype.Rpc.BlockTable.RowCreate.Response.Error
	1576, // 616: anytype.Rpc.BlockTable.RowCreate.Response.event:type_name -> anytype.ResponseEvent
	197,  // 617: anytype.Rpc.BlockTable.RowCreate.Response.Error.code:type_name -> anytype.Rpc.BlockTable.RowCreate.Response.Error.Code
	1147, // 618: anytype.Rpc.BlockTable.RowSetHeader.Response.error:type_name -> anytype.Rpc.BlockTable.RowSetHeader.Response.Error
	1576, // 619: anytype.Rpc.BlockTable.RowSetHeader.Response.event:type_name -> anytype.ResponseEvent
	198,  // 620: anytype.Rpc.BlockTable.RowSetHeader.Response.Error.code:type_name -> anytype.Rpc.BlockTable.RowSetHeader.Response.Error.Code
	1150, // 621: anytype.Rpc.BlockTable.RowListFill.Response.error:type_name -> anytype.Rpc.BlockTable.RowListFill.Response.Error
	1576, // 622: anytype.Rpc.BlockTable.RowListFill.Response.event:type_name -> anytype.ResponseEvent
	199,  // 623: anytype.Rpc.BlockTable.RowListFill.Response.Error.code:type_name -> anytype.Rpc.BlockTable.RowListFill.Response.Error.Code
	1153, // 624: anytype.Rpc.BlockTable.RowListClean.Response.error:type_name -> anytype.Rpc.BlockTable.RowListClean.Response.Error
	1576, // 625: anytype.Rpc.BlockTable.RowListClean.Response.event:type_name -> anytype.ResponseEvent
	200,  // 626: anytype.Rpc.BlockTable.RowListClean.Response.Error.code:type_name -> anytype.Rpc.BlockTable.RowListClean.Response.Error.Code
	1156, // 627: anytype.Rpc.BlockTable.ColumnListFill.Response.error:type_name -> anytype.Rpc.BlockTable.ColumnListFill.Response.Error
	1576, // 628: anytype.Rpc.BlockTable.ColumnListFill.Response.event:type_name -> anytype.ResponseEvent
	201,  // 629: anytype.Rpc.BlockTable.ColumnListFill.Response.Error.code:type_name -> anytype.Rpc.BlockTable.ColumnListFill.Response.Error.Code
	1598, // 630: anytype.Rpc.BlockTable.ColumnCreate.Request.position:type_name -> anytype.model.Block.Position
	1159, // 631: anytype.Rpc.BlockTable.ColumnCreate.Response.error:type_name -> anytype.Rpc.BlockTable.ColumnCreate.Response.Error
	1576, // 632: anytype.Rpc.BlockTable.ColumnCreate.Response.event:type_name -> anytype.ResponseEvent
	202,  // 633: anytype.Rpc.BlockTable.ColumnCreate.Response.Error.code:type_name -> anytype.Rpc.BlockTable.ColumnCreate.Response.Error.Code
	1162, // 634: anytype.Rpc.BlockTable.RowDelete.Response.error:type_name -> anytype.Rpc.BlockTable.RowDelete.Response.Error
	1576, // 635: anytype.Rpc.BlockTable.RowDelete.Response.event:type_name -> anytype.ResponseEvent
	203,  // 636: anytype.Rpc.BlockTable.RowDelete.Response.Error.code:type_name -> anytype.Rpc.BlockTable.RowDelete.Response.Error.Code
	1165, // 637: anytype.Rpc.BlockTable.ColumnDelete.Response.error:type_name -> anytype.Rpc.BlockTable.ColumnDelete.Response.Error
	1576, // 638: anytype.Rpc.BlockTable.ColumnDelete.Response.event:type_name -> anytype.ResponseEvent
	204,  // 639: anytype.Rpc.BlockTable.ColumnDelete.Response.Error.code:type_name -> anytype.Rpc.BlockTable.ColumnDelete.Response.Error.Code
	1598, // 640: anytype.Rpc.BlockTable.ColumnMove.Request.position:type_name -> anytype.model.Block.Position
	1168, // 641: anytype.Rpc.BlockTable.ColumnMove.Response.error:type_name -> anytype.Rpc.BlockTable.ColumnMove.Response.Error
	1576, // 642: anytype.Rpc.BlockTable.ColumnMove.Response.event:type_name -> anytype.ResponseEvent
	205,  // 643: anytype.Rpc.BlockTable.ColumnMove.Response.Error.code:type_name -> anytype.Rpc.BlockTable.ColumnMove.Response.Error.Code
	1598, // 644: anytype.Rpc.BlockTable.RowDuplicate.Request.position:type_name -> anytype.model.Block.Position
	1171, // 645: anytype.Rpc.BlockTable.RowDuplicate.Response.error:type_name -> anytype.Rpc.BlockTable.RowDuplicate.Response.Error
	1576, // 646: anytype.Rpc.BlockTable.RowDuplicate.Response.event:type_name -> anytype.ResponseEvent
	206,  // 647: anytype.Rpc.BlockTable.RowDuplicate.Response.Error.code:type_name -> anytype.Rpc.BlockTable.RowDuplicate.Response.Error.Code
	1598, // 648: anytype.Rpc.BlockTable.ColumnDuplicate.Request.position:type_name -> anytype.model.Block.Position
	1174, // 649: anytype.Rpc.BlockTable.ColumnDuplicate.Response.error:type_name -> anytype.Rpc.BlockTable.ColumnDuplicate.Response.Error
	1576, // 650: anytype.Rpc.BlockTable.ColumnDuplicate.Response.event:type_name -> anytype.ResponseEvent
	207,  // 651: anytype.Rpc.BlockTable.ColumnDuplicate.Response.Error.code:type_name -> anytype.Rpc.BlockTable.ColumnDuplicate.Response.Error.Code
	1177, // 652: anytype.Rpc.BlockTable.Expand.Response.error:type_name -> anytype.Rpc.BlockTable.Expand.Response.Error
	1576, // 653: anytype.Rpc.BlockTable.Expand.Response.event:type_name -> anytype.ResponseEvent
	208,  // 654: anytype.Rpc.BlockTable.Expand.Response.Error.code:type_name -> anytype.Rpc.BlockTable.Expand.Response.Error.Code
	1612, // 655: anytype.Rpc.BlockTable.Sort.Request.type:type_name -> anytype.model.Block.Content.Dataview.Sort.Type
	1180, // 656: anytype.Rpc.BlockTable.Sort.Response.error:type_name -> anytype.Rpc.BlockTable.Sort.Response.Error
	1576, // 657: anytype.Rpc.BlockTable.Sort.Response.event:type_name -> anytype.ResponseEvent
	209,  // 658: anytype.Rpc.BlockTable.Sort.Response.Error.code:type_name -> anytype.Rpc.BlockTable.Sort.Response.Error.Code
	1187, // 659: anytype.Rpc.BlockFile.SetName.Response.error:type_name -> anytype.Rpc.BlockFile.SetName.Response.Error
	1576, // 660: anytype.Rpc.BlockFile.SetName.Response.event:type_name -> anytype.ResponseEvent
	210,  // 661: anytype.Rpc.BlockFile.SetName.Response.Error.code:type_name -> anytype.Rpc.BlockFile.SetName.Response.Error.Code
	1190, // 662: anytype.Rpc.BlockFile.SetTargetObjectId.Response.error:type_name -> anytype.Rpc.BlockFile.SetTargetObjectId.Response.Error
	1576, // 663: anytype.Rpc.BlockFile.SetTargetObjectId.Response.event:type_name -> anytype.ResponseEvent
	211,  // 664: anytype.Rpc.BlockFile.SetTargetObjectId.Response.Error.code:type_name -> anytype.Rpc.BlockFile.SetTargetObjectId.Response.Error.Code
	1598, // 665: anytype.Rpc.BlockFile.CreateAndUpload.Request.position:type_name -> anytype.model.Block.Position
	1594, // 666: anytype.Rpc.BlockFile.CreateAndUpload.Request.fileType:type_name -> anytype.model.Block.Content.File.Type
	1597, // 667: anytype.Rpc.BlockFile.CreateAndUpload.Request.imageKind:type_name -> anytype.model.ImageKind
	1193, // 668: anytype.Rpc.BlockFile.CreateAndUpload.Response.error:type_name -> anytype.Rpc.BlockFile.CreateAndUpload.Response.Error
	1576, // 669: anytype.Rpc.BlockFile.CreateAndUpload.Response.event:type_name -> anytype.ResponseEvent
	212,  // 670: anytype.Rpc.BlockFile.CreateAndUpload.Response.Error.code:type_name -> anytype.Rpc.BlockFile.CreateAndUpload.Response.Error.Code
	1595, // 671: anytype.Rpc.BlockFile.ListSetStyle.Request.style:type_name -> anytype.model.Block.Content.File.Style
	1196, // 672: anytype.Rpc.BlockFile.ListSetStyle.Response.error:type_name -> anytype.Rpc.BlockFile.ListSetStyle.Response.Error
	1576, // 673: anytype.Rpc.BlockFile.ListSetStyle.Response.event:type_name -> anytype.ResponseEvent
	213,  // 674: anytype.Rpc.BlockFile.ListSetStyle.Response.Error.code:type_name -> anytype.Rpc.BlockFile.ListSetStyle.Response.Error.Code
	1201, // 675: anytype.Rpc.BlockImage.SetName.Response.error:type_name -> anytype.Rpc.BlockImage.SetName.Response.Error
	214,  // 676: anytype.Rpc.BlockImage.SetName.Response.Error.code:type_name -> anytype.Rpc.BlockImage.SetName.Response.Error.Code
	1204, // 677: anytype.Rpc.BlockImage.SetWidth.Response.error:type_name -> anytype.Rpc.BlockImage.SetWidth.Response.Error
	215,  // 678: anytype.Rpc.BlockImage.SetWidth.Response.Error.code:type_name -> anytype.Rpc.BlockImage.SetWidth.Response.Error.Code
	1209, // 679: anytype.Rpc.BlockVideo.SetName.Response.error:type_name -> anytype.Rpc.BlockVideo.SetName.Response.Error
	216,  // 680: anytype.Rpc.BlockVideo.SetName.Response.Error.code:type_name -> anytype.Rpc.BlockVideo.SetName.Response.Error.Code
	1212, // 681: anytype.Rpc.BlockVideo.SetWidth.Response.error:type_name -> anytype.Rpc.BlockVideo.SetWidth.Response.Error
	217,  // 682: anytype.Rpc.BlockVideo.SetWidth.Response.Error.code:type_name -> anytype.Rpc.BlockVideo.SetWidth.Response.Error.Code
	1571, // 683: anytype.Rpc.BlockLink.CreateWithObject.Request.details:type_name -> google.protobuf.Struct
	1578, // 684: anytype.Rpc.BlockLink.CreateWithObject.Request.internalFlags:type_name -> anytype.model.InternalFlag
	1603, // 685: anytype.Rpc.BlockLink.CreateWithObject.Request.block:type_name -> anytype.model.Block
	1598, // 686: anytype.Rpc.BlockLink.CreateWithObject.Request.position:type_name -> anytype.model.Block.Position
	1571, // 687: anytype.Rpc.BlockLink.CreateWithObject.Request.fields:type_name -> google.protobuf.Struct
	1217, // 688: anytype.Rpc.BlockLink.CreateWithObject.Response.error:type_name -> anytype.Rpc.BlockLink.CreateWithObject.Response.Error
	1576, // 689: anytype.Rpc.BlockLink.CreateWithObject.Response.event:type_name -> anytype.ResponseEvent
	1571, // 690: anytype.Rpc.BlockLink.CreateWithObject.Response.details:type_name -> google.protobuf.Struct
	218,  // 691: anytype.Rpc.BlockLink.CreateWithObject.Response.Error.code:type_name -> anytype.Rpc.BlockLink.CreateWithObject.Response.Error.Code
	1613, // 692: anytype.Rpc.BlockLink.ListSetAppearance.Request.iconSize:type_name -> anytype.model.Block.Content.Link.IconSize
	1614, // 693: anytype.Rpc.BlockLink.ListSetAppearance.Request.cardStyle:type_name -> anytype.model.Block.Content.Link.CardStyle
	1615, // 694: anytype.Rpc.BlockLink.ListSetAppearance.Request.description:type_name -> anytype.model.Block.Content.Link.Description
	1220, // 695: anytype.Rpc.BlockLink.ListSetAppearance.Response.error:type_name -> anytype.Rpc.BlockLink.ListSetAppearance.Response.Error
	1576, // 696: anytype.Rpc.BlockLink.ListSetAppearance.Response.event:type_name -> anytype.ResponseEvent
	219,  // 697: anytype.Rpc.BlockLink.ListSetAppearance.Response.Error.code:type_name -> anytype.Rpc.BlockLink.ListSetAppearance.Response.Error.Code
	1225, // 698: anytype.Rpc.BlockRelation.SetKey.Response.error:type_name -> anytype.Rpc.BlockRelation.SetKey.Response.Error
	1576, // 699: anytype.Rpc.BlockRelation.SetKey.Response.event:type_name -> anytype.ResponseEvent
	220,  // 700: anytype.Rpc.BlockRelation.SetKey.Response.Error.code:type_name -> anytype.Rpc.BlockRelation.SetKey.Response.Error.Code
	1228, // 701: anytype.Rpc.BlockRelation.Add.Response.error:type_name -> anytype.Rpc.BlockRelation.Add.Response.Error
	1576, // 702: anytype.Rpc.BlockRelation.Add.Response.event:type_name -> anytype.ResponseEvent
	221,  // 703: anytype.Rpc.BlockRelation.Add.Response.Error.code:type_name -> anytype.Rpc.BlockRelation.Add.Response.Error.Code
	1233, // 704: anytype.Rpc.BlockBookmark.Fetch.Response.error:type_name -> anytype.Rpc.BlockBookmark.Fetch.Response.Error
	1576, // 705: anytype.Rpc.BlockBookmark.Fetch.Response.event:type_name -> anytype.ResponseEvent
	222,  // 706: anytype.Rpc.BlockBookmark.Fetch.Response.Error.code:type_name -> anytype.Rpc.BlockBookmark.Fetch.Response.Error.Code
	1598, // 707: anytype.Rpc.BlockBookmark.CreateAndFetch.Request.position:type_name -> anytype.model.Block.Position
	1236, // 708: anytype.Rpc.BlockBookmark.CreateAndFetch.Response.error:type_name -> anytype.Rpc.BlockBookmark.CreateAndFetch.Response.Error
	1576, // 709: anytype.Rpc.BlockBookmark.CreateAndFetch.Response.event:type_name -> anytype.ResponseEvent
	223,  // 710: anytype.Rpc.BlockBookmark.CreateAndFetch.Response.Error.code:type_name -> anytype.Rpc.BlockBookmark.CreateAndFetch.Response.Error.Code
	1608, // 711: anytype.Rpc.BlockDiv.ListSetStyle.Request.style:type_name -> anytype.model.Block.Content.Div.Style
	1240, // 712: anytype.Rpc.BlockDiv.ListSetStyle.Response.error:type_name -> anytype.Rpc.BlockDiv.ListSetStyle.Response.Error
	1576, // 713: anytype.Rpc.BlockDiv.ListSetStyle.Response.event:type_name -> anytype.ResponseEvent
	224,  // 714: anytype.Rpc.BlockDiv.ListSetStyle.Response.Error.code:type_name -> anytype.Rpc.BlockDiv.ListSetStyle.Response.Error.Code
	1616, // 715: anytype.Rpc.BlockDataview.View.Create.Request.view:type_name -> anytype.model.Block.Content.Dataview.View
	1257, // 716: anytype.Rpc.BlockDataview.View.Create.Response.error:type_name -> anytype.Rpc.BlockDataview.View.Create.Response.Error
	1576, // 717: anytype.Rpc.BlockDataview.View.Create.Response.event:type_name -> anytype.ResponseEvent
	225,  // 718: anytype.Rpc.BlockDataview.View.Create.Response.Error.code:type_name -> anytype.Rpc.BlockDataview.View.Create.Response.Error.Code
	1616, // 719: anytype.Rpc.BlockDataview.View.Update.Request.view:type_name -> anytype.model.Block.Content.Dataview.View
	1260, // 720: anytype.Rpc.BlockDataview.View.Update.Response.error:type_name -> anytype.Rpc.BlockDataview.View.Update.Response.Error
	1576, // 721: anytype.Rpc.BlockDataview.View.Update.Response.event:type_name -> anytype.ResponseEvent
	226,  // 722: anytype.Rpc.BlockDataview.View.Update.Response.Error.code:type_name -> anytype.Rpc.BlockDataview.View.Update.Response.Error.Code
	1263, // 723: anytype.Rpc.BlockDataview.View.Delete.Response.error:type_name -> anytype.Rpc.BlockDataview.View.Delete.Response.Error
	1576, // 724: anytype.Rpc.BlockDataview.View.Delete.Response.event:type_name -> anytype.ResponseEvent
	227,  // 725: anytype.Rpc.BlockDataview.View.Delete.Response.Error.code:type_name -> anytype.Rpc.BlockDataview.View.Delete.Response.Error.Code
	1266, // 726: anytype.Rpc.BlockDataview.View.SetPosition.Response.error:type_name -> anytype.Rpc.BlockDataview.View.SetPosition.Response.Error
	1576, // 727: anytype.Rpc.BlockDataview.View.SetPosition.Response.event:type_name -> anytype.ResponseEvent
	228,  // 728: anytype.Rpc.BlockDataview.View.SetPosition.Response.Error.code:type_name -> anytype.Rpc.BlockDataview.View.SetPosition.Response.Error.Code
	1269, // 729: anytype.Rpc.BlockDataview.View.SetActive.Response.error:type_name -> anytype.Rpc.BlockDataview.View.SetActive.Response.Error
	1576, // 730: anytype.Rpc.BlockDataview.View.SetActive.Response.event:type_name -> anytype.ResponseEvent
	229,  // 731: anytype.Rpc.BlockDataview.View.SetActive.Response.Error.code:type_name -> anytype.Rpc.BlockDataview.View.SetActive.Response.Error.Code
	1274, // 732: anytype.Rpc.BlockDataview.Relation.Add.Response.error:type_name -> anytype.Rpc.BlockDataview.Relation.Add.Response.Error
	1576, // 733: anytype.Rpc.BlockDataview.Relation.Add.Response.event:type_name -> anytype.ResponseEvent
	230,  // 734: anytype.Rpc.BlockDataview.Relation.Add.Response.Error.code:type_name -> anytype.Rpc.BlockDataview.Relation.Add.Response.Error.Code
	1277, // 735: anytype.Rpc.BlockDataview.Relation.Delete.Response.error:type_name -> anytype.Rpc.BlockDataview.Relation.Delete.Response.Error
	1576, // 736: anytype.Rpc.BlockDataview.Relation.Delete.Response.event:type_name -> anytype.ResponseEvent
	231,  // 737: anytype.Rpc.BlockDataview.Relation.Delete.Response.Error.code:type_name -> anytype.Rpc.BlockDataview.Relation.Delete.Response.Error.Code
	1280, // 738: anytype.Rpc.BlockDataview.SetSource.Response.error:type_name -> anytype.Rpc.BlockDataview.SetSource.Response.Error
	1576, // 739: anytype.Rpc.BlockDataview.SetSource.Response.event:type_name -> anytype.ResponseEvent
	232,  // 740: anytype.Rpc.BlockDataview.SetSource.Response.Error.code:type_name -> anytype.Rpc.BlockDataview.SetSource.Response.Error.Code
	1617, // 741: anytype.Rpc.BlockDataview.GroupOrder.Update.Request.groupOrder:type_name -> anytype.model.Block.Content.Dataview.GroupOrder
	1284, // 742: anytype.Rpc.BlockDataview.GroupOrder.Update.Response.error:type_name -> anytype.Rpc.BlockDataview.GroupOrder.Update.Response.Error
	1576, // 743: anytype.Rpc.BlockDataview.GroupOrder.Update.Response.event:type_name -> anytype.ResponseEvent
	233,  // 744: anytype.Rpc.BlockDataview.GroupOrder.Update.Response.Error.code:type_name -> anytype.Rpc.BlockDataview.GroupOrder.Update.Response.Error.Code
	1618, // 745: anytype.Rpc.BlockDataview.ObjectOrder.Update.Request.objectOrders:type_name -> anytype.model.Block.Content.Dataview.ObjectOrder
	1289, // 746: anytype.Rpc.BlockDataview.ObjectOrder.Update.Response.error:type_name -> anytype.Rpc.BlockDataview.ObjectOrder.Update.Response.Error
	1576, // 747: anytype.Rpc.BlockDataview.ObjectOrder.Update.Response.event:type_name -> anytype.ResponseEvent
	234,  // 748: anytype.Rpc.BlockDataview.ObjectOrder.Update.Response.Error.code:type_name -> anytype.Rpc.BlockDataview.ObjectOrder.Update.Response.Error.Code
	1292, // 749: anytype.Rpc.BlockDataview.ObjectOrder.Move.Response.error:type_name -> anytype.Rpc.BlockDataview.ObjectOrder.Move.Response.Error
	1576, // 750: anytype.Rpc.BlockDataview.ObjectOrder.Move.Response.event:type_name -> anytype.ResponseEvent
	235,  // 751: anytype.Rpc.BlockDataview.ObjectOrder.Move.Response.Error.code:type_name -> anytype.Rpc.BlockDataview.ObjectOrder.Move.Response.Error.Code
	1295, // 752: anytype.Rpc.BlockDataview.CreateFromExistingObject.Response.error:type_name -> anytype.Rpc.BlockDataview.CreateFromExistingObject.Response.Error
	1616, // 753: anytype.Rpc.BlockDataview.CreateFromExistingObject.Response.view:type_name -> anytype.model.Block.Content.Dataview.View
	1576, // 754: anytype.Rpc.BlockDataview.CreateFromExistingObject.Response.event:type_name -> anytype.ResponseEvent
	236,  // 755: anytype.Rpc.BlockDataview.CreateFromExistingObject.Response.Error.code:type_name -> anytype.Rpc.BlockDataview.CreateFromExistingObject.Response.Error.Code
	1579, // 756: anytype.Rpc.BlockDataview.Filter.Add.Request.filter:type_name -> anytype.model.Block.Content.Dataview.Filter
	1302, // 757: anytype.Rpc.BlockDataview.Filter.Add.Response.error:type_name -> anytype.Rpc.BlockDataview.Filter.Add.Response.Error
	1576, // 758: anytype.Rpc.BlockDataview.Filter.Add.Response.event:type_name -> anytype.ResponseEvent
	237,  // 759: anytype.Rpc.BlockDataview.Filter.Add.Response.Error.code:type_name -> anytype.Rpc.BlockDataview.Filter.Add.Response.Error.Code
	1305, // 760: anytype.Rpc.BlockDataview.Filter.Remove.Response.error:type_name -> anytype.Rpc.BlockDataview.Filter.Remove.Response.Error
	1576, // 761: anytype.Rpc.BlockDataview.Filter.Remove.Response.event:type_name -> anytype.ResponseEvent
	238,  // 762: anytype.Rpc.BlockDataview.Filter.Remove.Response.Error.code:type_name -> anytype.Rpc.BlockDataview.Filter.Remove.Response.Error.Code
	1579, // 763: anytype.Rpc.BlockDataview.Filter.Replace.Request.filter:type_name -> anytype.model.Block.Content.Dataview.Filter
	1308, // 764: anytype.Rpc.BlockDataview.Filter.Replace.Response.error:type_name -> anytype.Rpc.BlockDataview.Filter.Replace.Response.Error
	1576, // 765: anytype.Rpc.BlockDataview.Filter.Replace.Response.event:type_name -> anytype.ResponseEvent
	239,  // 766: anytype.Rpc.BlockDataview.Filter.Replace.Response.Error.code:type_name -> anytype.Rpc.BlockDataview.Filter.Replace.Response.Error.Code
	1311, // 767: anytype.Rpc.BlockDataview.Filter.Sort.Response.error:type_name -> anytype.Rpc.BlockDataview.Filter.Sort.Response.Error
	1576, // 768: anytype.Rpc.BlockDataview.Filter.Sort.Response.event:type_name -> anytype.ResponseEvent
	240,  // 769: anytype.Rpc.BlockDataview.Filter.Sort.Response.Error.code:type_name -> anytype.Rpc.BlockDataview.Filter.Sort.Response.Error.Code
	1580, // 770: anytype.Rpc.BlockDataview.Sort.Add.Request.sort:type_name -> anytype.model.Block.Content.Dataview.Sort
	1318, // 771: anytype.Rpc.BlockDataview.Sort.Add.Response.error:type_name -> anytype.Rpc.BlockDataview.Sort.Add.Response.Error
	1576, // 772: anytype.Rpc.BlockDataview.Sort.Add.Response.event:type_name -> anytype.ResponseEvent
	241,  // 773: anytype.Rpc.BlockDataview.Sort.Add.Response.Error.code:type_name -> anytype.Rpc.BlockDataview.Sort.Add.Response.Error.Code
	1321, // 774: anytype.Rpc.BlockDataview.Sort.Remove.Response.error:type_name -> anytype.Rpc.BlockDataview.Sort.Remove.Response.Error
	1576, // 775: anytype.Rpc.BlockDataview.Sort.Remove.Response.event:type_name -> anytype.ResponseEvent
	242,  // 776: anytype.Rpc.BlockDataview.Sort.Remove.Response.Error.code:type_name -> anytype.Rpc.BlockDataview.Sort.Remove.Response.Error.Code
	1580, // 777: anytype.Rpc.BlockDataview.Sort.Replace.Request.sort:type_name -> anytype.model.Block.Content.Dataview.Sort
	1324, // 778: anytype.Rpc.BlockDataview.Sort.Replace.Response.error:type_name -> anytype.Rpc.BlockDataview.Sort.Replace.Response.Error
	1576, // 779: anytype.Rpc.BlockDataview.Sort.Replace.Response.event:type_name -> anytype.ResponseEvent
	243,  // 780: anytype.Rpc.BlockDataview.Sort.Replace.Response.Error.code:type_name -> anytype.Rpc.BlockDataview.Sort.Replace.Response.Error.Code
	1327, // 781: anytype.Rpc.BlockDataview.Sort.SSort.Response.error:type_name -> anytype.Rpc.BlockDataview.Sort.SSort.Response.Error
	1576, // 782: anytype.Rpc.BlockDataview.Sort.SSort.Response.event:type_name -> anytype.ResponseEvent
	244,  // 783: anytype.Rpc.BlockDataview.Sort.SSort.Response.Error.code:type_name -> anytype.Rpc.BlockDataview.Sort.SSort.Response.Error.Code
	1619, // 784: anytype.Rpc.BlockDataview.ViewRelation.Add.Request.relation:type_name -> anytype.model.Block.Content.Dataview.Relation
	1334, // 785: anytype.Rpc.BlockDataview.ViewRelation.Add.Response.error:type_name -> anytype.Rpc.BlockDataview.ViewRelation.Add.Response.Error
	1576, // 786: anytype.Rpc.BlockDataview.ViewRelation.Add.Response.event:type_name -> anytype.ResponseEvent
	245,  // 787: anytype.Rpc.BlockDataview.ViewRelation.Add.Response.Error.code:type_name -> anytype.Rpc.BlockDataview.ViewRelation.Add.Response.Error.Code
	1337, // 788: anytype.Rpc.BlockDataview.ViewRelation.Remove.Response.error:type_name -> anytype.Rpc.BlockDataview.ViewRelation.Remove.Response.Error
	1576, // 789: anytype.Rpc.BlockDataview.ViewRelation.Remove.Response.event:type_name -> anytype.ResponseEvent
	246,  // 790: anytype.Rpc.BlockDataview.ViewRelation.Remove.Response.Error.code:type_name -> anytype.Rpc.BlockDataview.ViewRelation.Remove.Response.Error.Code
	1619, // 791: anytype.Rpc.BlockDataview.ViewRelation.Replace.Request.relation:type_name -> anytype.model.Block.Content.Dataview.Relation
	1340, // 792: anytype.Rpc.BlockDataview.ViewRelation.Replace.Response.error:type_name -> anytype.Rpc.BlockDataview.ViewRelation.Replace.Response.Error
	1576, // 793: anytype.Rpc.BlockDataview.ViewRelation.Replace.Response.event:type_name -> anytype.ResponseEvent
	247,  // 794: anytype.Rpc.BlockDataview.ViewRelation.Replace.Response.Error.code:type_name -> anytype.Rpc.BlockDataview.ViewRelation.Replace.Response.Error.Code
	1343, // 795: anytype.Rpc.BlockDataview.ViewRelation.Sort.Response.error:type_name -> anytype.Rpc.BlockDataview.ViewRelation.Sort.Response.Error
	1576, // 796: anytype.Rpc.BlockDataview.ViewRelation.Sort.Response.event:type_name -> anytype.ResponseEvent
	248,  // 797: anytype.Rpc.BlockDataview.ViewRelation.Sort.Response.Error.code:type_name -> anytype.Rpc.BlockDataview.ViewRelation.Sort.Response.Error.Code
	1350, // 798: anytype.Rpc.BlockWidget.SetTargetId.Response.error:type_name -> anytype.Rpc.BlockWidget.SetTargetId.Response.Error
	1576, // 799: anytype.Rpc.BlockWidget.SetTargetId.Response.event:type_name -> anytype.ResponseEvent
	249,  // 800: anytype.Rpc.BlockWidget.SetTargetId.Response.Error.code:type_name -> anytype.Rpc.BlockWidget.SetTargetId.Response.Error.Code
	1605, // 801: anytype.Rpc.BlockWidget.SetLayout.Request.layout:type_name -> anytype.model.Block.Content.Widget.Layout
	1353, // 802: anytype.Rpc.BlockWidget.SetLayout.Response.error:type_name -> anytype.Rpc.BlockWidget.SetLayout.Response.Error
	1576, // 803: anytype.Rpc.BlockWidget.SetLayout.Response.event:type_name -> anytype.ResponseEvent
	250,  // 804: anytype.Rpc.BlockWidget.SetLayout.Response.Error.code:type_name -> anytype.Rpc.BlockWidget.SetLayout.Response.Error.Code
	1356, // 805: anytype.Rpc.BlockWidget.SetLimit.Response.error:type_name -> anytype.Rpc.BlockWidget.SetLimit.Response.Error
	1576, // 806: anytype.Rpc.BlockWidget.SetLimit.Response.event:type_name -> anytype.ResponseEvent
	251,  // 807: anytype.Rpc.BlockWidget.SetLimit.Response.Error.code:type_name -> anytype.Rpc.BlockWidget.SetLimit.Response.Error.Code
	1359, // 808: anytype.Rpc.BlockWidget.SetViewId.Response.error:type_name -> anytype.Rpc.BlockWidget.SetViewId.Response.Error
	1576, // 809: anytype.Rpc.BlockWidget.SetViewId.Response.event:type_name -> anytype.ResponseEvent
	252,  // 810: anytype.Rpc.BlockWidget.SetViewId.Response.Error.code:type_name -> anytype.Rpc.BlockWidget.SetViewId.Response.Error.Code
	1377, // 811: anytype.Rpc.Debug.Stat.Response.error:type_name -> anytype.Rpc.Debug.Stat.Response.Error
	253,  // 812: anytype.Rpc.Debug.Stat.Response.Error.code:type_name -> anytype.Rpc.Debug.Stat.Response.Error.Code
	1380, // 813: anytype.Rpc.Debug.TreeHeads.Response.error:type_name -> anytype.Rpc.Debug.TreeHeads.Response.Error
	1360, // 814: anytype.Rpc.Debug.TreeHeads.Response.info:type_name -> anytype.Rpc.Debug.TreeInfo
	254,  // 815: anytype.Rpc.Debug.TreeHeads.Response.Error.code:type_name -> anytype.Rpc.Debug.TreeHeads.Response.Error.Code
	1383, // 816: anytype.Rpc.Debug.Tree.Response.error:type_name -> anytype.Rpc.Debug.Tree.Response.Error
	255,  // 817: anytype.Rpc.Debug.Tree.Response.Error.code:type_name -> anytype.Rpc.Debug.Tree.Response.Error.Code
	1386, // 818: anytype.Rpc.Debug.SpaceSummary.Response.error:type_name -> anytype.Rpc.Debug.SpaceSummary.Response.Error
	1360, // 819: anytype.Rpc.Debug.SpaceSummary.Response.infos:type_name -> anytype.Rpc.Debug.TreeInfo
	256,  // 820: anytype.Rpc.Debug.SpaceSummary.Response.Error.code:type_name -> anytype.Rpc.Debug.SpaceSummary.Response.Error.Code
	1389, // 821: anytype.Rpc.Debug.StackGoroutines.Response.error:type_name -> anytype.Rpc.Debug.StackGoroutines.Response.Error
	257,  // 822: anytype.Rpc.Debug.StackGoroutines.Response.Error.code:type_name -> anytype.Rpc.Debug.StackGoroutines.Response.Error.Code
	1392, // 823: anytype.Rpc.Debug.ExportLocalstore.Response.error:type_name -> anytype.Rpc.Debug.ExportLocalstore.Response.Error
	1576, // 824: anytype.Rpc.Debug.ExportLocalstore.Response.event:type_name -> anytype.ResponseEvent
	258,  // 825: anytype.Rpc.Debug.ExportLocalstore.Response.Error.code:type_name -> anytype.Rpc.Debug.ExportLocalstore.Response.Error.Code
	1395, // 826: anytype.Rpc.Debug.Subscriptions.Response.error:type_name -> anytype.Rpc.Debug.Subscriptions.Response.Error
	259,  // 827: anytype.Rpc.Debug.Subscriptions.Response.Error.code:type_name -> anytype.Rpc.Debug.Subscriptions.Response.Error.Code
	1398, // 828: anytype.Rpc.Debug.OpenedObjects.Response.error:type_name -> anytype.Rpc.Debug.OpenedObjects.Response.Error
	260,  // 829: anytype.Rpc.Debug.OpenedObjects.Response.Error.code:type_name -> anytype.Rpc.Debug.OpenedObjects.Response.Error.Code
	1401, // 830: anytype.Rpc.Debug.RunProfiler.Response.error:type_name -> anytype.Rpc.Debug.RunProfiler.Response.Error
	261,  // 831: anytype.Rpc.Debug.RunProfiler.Response.Error.code:type_name -> anytype.Rpc.Debug.RunProfiler.Response.Error.Code
	1404, // 832: anytype.Rpc.Debug.AccountSelectTrace.Response.error:type_name -> anytype.Rpc.Debug.AccountSelectTrace.Response.Error
	262,  // 833: anytype.Rpc.Debug.AccountSelectTrace.Response.Error.code:type_name -> anytype.Rpc.Debug.AccountSelectTrace.Response.Error.Code
	1407, // 834: anytype.Rpc.Debug.ExportLog.Response.error:type_name -> anytype.Rpc.Debug.ExportLog.Response.Error
	263,  // 835: anytype.Rpc.Debug.ExportLog.Response.Error.code:type_name -> anytype.Rpc.Debug.ExportLog.Response.Error.Code
	1410, // 836: anytype.Rpc.Debug.Ping.Response.error:type_name -> anytype.Rpc.Debug.Ping.Response.Error
	264,  // 837: anytype.Rpc.Debug.Ping.Response.Error.code:type_name -> anytype.Rpc.Debug.Ping.Response.Error.Code
	265,  // 838: anytype.Rpc.Debug.AnystoreObjectChanges.Request.orderBy:type_name -> anytype.Rpc.Debug.AnystoreObjectChanges.Request.OrderBy
	1414, // 839: anytype.Rpc.Debug.AnystoreObjectChanges.Response.error:type_name -> anytype.Rpc.Debug.AnystoreObjectChanges.Response.Error
	1413, // 840: anytype.Rpc.Debug.AnystoreObjectChanges.Response.changes:type_name -> anytype.Rpc.Debug.AnystoreObjectChanges.Response.Change
	1571, // 841: anytype.Rpc.Debug.AnystoreObjectChanges.Response.Change.change:type_name -> google.protobuf.Struct
	266,  // 842: anytype.Rpc.Debug.AnystoreObjectChanges.Response.Error.code:type_name -> anytype.Rpc.Debug.AnystoreObjectChanges.Response.Error.Code
	1417, // 843: anytype.Rpc.Debug.NetCheck.Response.error:type_name -> anytype.Rpc.Debug.NetCheck.Response.Error
	267,  // 844: anytype.Rpc.Debug.NetCheck.Response.Error.code:type_name -> anytype.Rpc.Debug.NetCheck.Response.Error.Code
	1421, // 845: anytype.Rpc.Initial.SetParameters.Response.error:type_name -> anytype.Rpc.Initial.SetParameters.Response.Error
	268,  // 846: anytype.Rpc.Initial.SetParameters.Response.Error.code:type_name -> anytype.Rpc.Initial.SetParameters.Response.Error.Code
	269,  // 847: anytype.Rpc.Log.Send.Request.level:type_name -> anytype.Rpc.Log.Send.Request.Level
	1425, // 848: anytype.Rpc.Log.Send.Response.error:type_name -> anytype.Rpc.Log.Send.Response.Error
	270,  // 849: anytype.Rpc.Log.Send.Response.Error.code:type_name -> anytype.Rpc.Log.Send.Response.Error.Code
	1431, // 850: anytype.Rpc.Process.Cancel.Response.error:type_name -> anytype.Rpc.Process.Cancel.Response.Error
	271,  // 851: anytype.Rpc.Process.Cancel.Response.Error.code:type_name -> anytype.Rpc.Process.Cancel.Response.Error.Code
	1434, // 852: anytype.Rpc.Process.Subscribe.Response.error:type_name -> anytype.Rpc.Process.Subscribe.Response.Error
	272,  // 853: anytype.Rpc.Process.Subscribe.Response.Error.code:type_name -> anytype.Rpc.Process.Subscribe.Response.Error.Code
	1437, // 854: anytype.Rpc.Process.Unsubscribe.Response.error:type_name -> anytype.Rpc.Process.Unsubscribe.Response.Error
	273,  // 855: anytype.Rpc.Process.Unsubscribe.Response.Error.code:type_name -> anytype.Rpc.Process.Unsubscribe.Response.Error.Code
	274,  // 856: anytype.Rpc.GenericErrorResponse.Error.code:type_name -> anytype.Rpc.GenericErrorResponse.Error.Code
	1444, // 857: anytype.Rpc.Notification.List.Response.error:type_name -> anytype.Rpc.Notification.List.Response.Error
	1620, // 858: anytype.Rpc.Notification.List.Response.notifications:type_name -> anytype.model.Notification
	275,  // 859: anytype.Rpc.Notification.List.Response.Error.code:type_name -> anytype.Rpc.Notification.List.Response.Error.Code
	1621, // 860: anytype.Rpc.Notification.Reply.Request.actionType:type_name -> anytype.model.Notification.ActionType
	1447, // 861: anytype.Rpc.Notification.Reply.Response.error:type_name -> anytype.Rpc.Notification.Reply.Response.Error
	276,  // 862: anytype.Rpc.Notification.Reply.Response.Error.code:type_name -> anytype.Rpc.Notification.Reply.Response.Error.Code
	1450, // 863: anytype.Rpc.Notification.Test.Response.error:type_name -> anytype.Rpc.Notification.Test.Response.Error
	1620, // 864: anytype.Rpc.Notification.Test.Response.notification:type_name -> anytype.model.Notification
	277,  // 865: anytype.Rpc.Notification.Test.Response.Error.code:type_name -> anytype.Rpc.Notification.Test.Response.Error.Code
	1463, // 866: anytype.Rpc.Membership.GetStatus.Response.error:type_name -> anytype.Rpc.Membership.GetStatus.Response.Error
	1622, // 867: anytype.Rpc.Membership.GetStatus.Response.data:type_name -> anytype.model.Membership
	278,  // 868: anytype.Rpc.Membership.GetStatus.Response.Error.code:type_name -> anytype.Rpc.Membership.GetStatus.Response.Error.Code
	1623, // 869: anytype.Rpc.Membership.IsNameValid.Request.nsNameType:type_name -> anytype.model.NameserviceNameType
	1466, // 870: anytype.Rpc.Membership.IsNameValid.Response.error:type_name -> anytype.Rpc.Membership.IsNameValid.Response.Error
	279,  // 871: anytype.Rpc.Membership.IsNameValid.Response.Error.code:type_name -> anytype.Rpc.Membership.IsNameValid.Response.Error.Code
	1624, // 872: anytype.Rpc.Membership.RegisterPaymentRequest.Request.paymentMethod:type_name -> anytype.model.Membership.PaymentMethod
	1623, // 873: anytype.Rpc.Membership.RegisterPaymentRequest.Request.nsNameType:type_name -> anytype.model.NameserviceNameType
	1469, // 874: anytype.Rpc.Membership.RegisterPaymentRequest.Response.error:type_name -> anytype.Rpc.Membership.RegisterPaymentRequest.Response.Error
	280,  // 875: anytype.Rpc.Membership.RegisterPaymentRequest.Response.Error.code:type_name -> anytype.Rpc.Membership.RegisterPaymentRequest.Response.Error.Code
	1472, // 876: anytype.Rpc.Membership.GetPortalLinkUrl.Response.error:type_name -> anytype.Rpc.Membership.GetPortalLinkUrl.Response.Error
	281,  // 877: anytype.Rpc.Membership.GetPortalLinkUrl.Response.Error.code:type_name -> anytype.Rpc.Membership.GetPortalLinkUrl.Response.Error.Code
	1623, // 878: anytype.Rpc.Membership.Finalize.Request.nsNameType:type_name -> anytype.model.NameserviceNameType
	1475, // 879: anytype.Rpc.Membership.Finalize.Response.error:type_name -> anytype.Rpc.Membership.Finalize.Response.Error
	282,  // 880: anytype.Rpc.Membership.Finalize.Response.Error.code:type_name -> anytype.Rpc.Membership.Finalize.Response.Error.Code
	1478, // 881: anytype.Rpc.Membership.GetVerificationEmailStatus.Response.error:type_name -> anytype.Rpc.Membership.GetVerificationEmailStatus.Response.Error
	1625, // 882: anytype.Rpc.Membership.GetVerificationEmailStatus.Response.status:type_name -> anytype.model.Membership.EmailVerificationStatus
	283,  // 883: anytype.Rpc.Membership.GetVerificationEmailStatus.Response.Error.code:type_name -> anytype.Rpc.Membership.GetVerificationEmailStatus.Response.Error.Code
	1481, // 884: anytype.Rpc.Membership.GetVerificationEmail.Response.error:type_name -> anytype.Rpc.Membership.GetVerificationEmail.Response.Error
	284,  // 885: anytype.Rpc.Membership.GetVerificationEmail.Response.Error.code:type_name -> anytype.Rpc.Membership.GetVerificationEmail.Response.Error.Code
	1484, // 886: anytype.Rpc.Membership.VerifyEmailCode.Response.error:type_name -> anytype.Rpc.Membership.VerifyEmailCode.Response.Error
	285,  // 887: anytype.Rpc.Membership.VerifyEmailCode.Response.Error.code:type_name -> anytype.Rpc.Membership.VerifyEmailCode.Response.Error.Code
	1487, // 888: anytype.Rpc.Membership.GetTiers.Response.error:type_name -> anytype.Rpc.Membership.GetTiers.Response.Error
	1626, // 889: anytype.Rpc.Membership.GetTiers.Response.tiers:type_name -> anytype.model.MembershipTierData
	286,  // 890: anytype.Rpc.Membership.GetTiers.Response.Error.code:type_name -> anytype.Rpc.Membership.GetTiers.Response.Error.Code
	1490, // 891: anytype.Rpc.Membership.VerifyAppStoreReceipt.Response.error:type_name -> anytype.Rpc.Membership.VerifyAppStoreReceipt.Response.Error
	287,  // 892: anytype.Rpc.Membership.VerifyAppStoreReceipt.Response.Error.code:type_name -> anytype.Rpc.Membership.VerifyAppStoreReceipt.Response.Error.Code
	1623, // 893: anytype.Rpc.NameService.ResolveName.Request.nsNameType:type_name -> anytype.model.NameserviceNameType
	1497, // 894: anytype.Rpc.NameService.ResolveName.Response.error:type_name -> anytype.Rpc.NameService.ResolveName.Response.Error
	288,  // 895: anytype.Rpc.NameService.ResolveName.Response.Error.code:type_name -> anytype.Rpc.NameService.ResolveName.Response.Error.Code
	1500, // 896: anytype.Rpc.NameService.ResolveAnyId.Response.error:type_name -> anytype.Rpc.NameService.ResolveAnyId.Response.Error
	1623, // 897: anytype.Rpc.NameService.ResolveAnyId.Response.nsNameType:type_name -> anytype.model.NameserviceNameType
	289,  // 898: anytype.Rpc.NameService.ResolveAnyId.Response.Error.code:type_name -> anytype.Rpc.NameService.ResolveAnyId.Response.Error.Code
	1503, // 899: anytype.Rpc.NameService.ResolveSpaceId.Response.error:type_name -> anytype.Rpc.NameService.ResolveSpaceId.Response.Error
	1623, // 900: anytype.Rpc.NameService.ResolveSpaceId.Response.nsNameType:type_name -> anytype.model.NameserviceNameType
	290,  // 901: anytype.Rpc.NameService.ResolveSpaceId.Response.Error.code:type_name -> anytype.Rpc.NameService.ResolveSpaceId.Response.Error.Code
	1507, // 902: anytype.Rpc.NameService.UserAccount.Get.Response.error:type_name -> anytype.Rpc.NameService.UserAccount.Get.Response.Error
	1623, // 903: anytype.Rpc.NameService.UserAccount.Get.Response.nsNameType:type_name -> anytype.model.NameserviceNameType
	291,  // 904: anytype.Rpc.NameService.UserAccount.Get.Response.Error.code:type_name -> anytype.Rpc.NameService.UserAccount.Get.Response.Error.Code
	1576, // 905: anytype.Rpc.Broadcast.PayloadEvent.Response.event:type_name -> anytype.ResponseEvent
	1511, // 906: anytype.Rpc.Broadcast.PayloadEvent.Response.error:type_name -> anytype.Rpc.Broadcast.PayloadEvent.Response.Error
	292,  // 907: anytype.Rpc.Broadcast.PayloadEvent.Response.Error.code:type_name -> anytype.Rpc.Broadcast.PayloadEvent.Response.Error.Code
	1517, // 908: anytype.Rpc.Device.SetName.Response.error:type_name -> anytype.Rpc.Device.SetName.Response.Error
	293,  // 909: anytype.Rpc.Device.SetName.Response.Error.code:type_name -> anytype.Rpc.Device.SetName.Response.Error.Code
	1520, // 910: anytype.Rpc.Device.List.Response.error:type_name -> anytype.Rpc.Device.List.Response.Error
	1627, // 911: anytype.Rpc.Device.List.Response.devices:type_name -> anytype.model.DeviceInfo
	294,  // 912: anytype.Rpc.Device.List.Response.Error.code:type_name -> anytype.Rpc.Device.List.Response.Error.Code
	1628, // 913: anytype.Rpc.Device.NetworkState.Set.Request.deviceNetworkType:type_name -> anytype.model.DeviceNetworkType
	1524, // 914: anytype.Rpc.Device.NetworkState.Set.Response.error:type_name -> anytype.Rpc.Device.NetworkState.Set.Response.Error
	295,  // 915: anytype.Rpc.Device.NetworkState.Set.Response.Error.code:type_name -> anytype.Rpc.Device.NetworkState.Set.Response.Error.Code
	1629, // 916: anytype.Rpc.Chat.AddMessage.Request.message:type_name -> anytype.model.ChatMessage
	1538, // 917: anytype.Rpc.Chat.AddMessage.Response.error:type_name -> anytype.Rpc.Chat.AddMessage.Response.Error
	1576, // 918: anytype.Rpc.Chat.AddMessage.Response.event:type_name -> anytype.ResponseEvent
	296,  // 919: anytype.Rpc.Chat.AddMessage.Response.Error.code:type_name -> anytype.Rpc.Chat.AddMessage.Response.Error.Code
	1629, // 920: anytype.Rpc.Chat.EditMessageContent.Request.editedMessage:type_name -> anytype.model.ChatMessage
	1541, // 921: anytype.Rpc.Chat.EditMessageContent.Response.error:type_name -> anytype.Rpc.Chat.EditMessageContent.Response.Error
	297,  // 922: anytype.Rpc.Chat.EditMessageContent.Response.Error.code:type_name -> anytype.Rpc.Chat.EditMessageContent.Response.Error.Code
	1544, // 923: anytype.Rpc.Chat.ToggleMessageReaction.Response.error:type_name -> anytype.Rpc.Chat.ToggleMessageReaction.Response.Error
	298,  // 924: anytype.Rpc.Chat.ToggleMessageReaction.Response.Error.code:type_name -> anytype.Rpc.Chat.ToggleMessageReaction.Response.Error.Code
	1547, // 925: anytype.Rpc.Chat.DeleteMessage.Response.error:type_name -> anytype.Rpc.Chat.DeleteMessage.Response.Error
	299,  // 926: anytype.Rpc.Chat.DeleteMessage.Response.Error.code:type_name -> anytype.Rpc.Chat.DeleteMessage.Response.Error.Code
	1550, // 927: anytype.Rpc.Chat.GetMessages.Response.error:type_name -> anytype.Rpc.Chat.GetMessages.Response.Error
	1629, // 928: anytype.Rpc.Chat.GetMessages.Response.messages:type_name -> anytype.model.ChatMessage
	1630, // 929: anytype.Rpc.Chat.GetMessages.Response.chatState:type_name -> anytype.model.ChatState
	300,  // 930: anytype.Rpc.Chat.GetMessages.Response.Error.code:type_name -> anytype.Rpc.Chat.GetMessages.Response.Error.Code
	1553, // 931: anytype.Rpc.Chat.GetMessagesByIds.Response.error:type_name -> anytype.Rpc.Chat.GetMessagesByIds.Response.Error
	1629, // 932: anytype.Rpc.Chat.GetMessagesByIds.Response.messages:type_name -> anytype.model.ChatMessage
	301,  // 933: anytype.Rpc.Chat.GetMessagesByIds.Response.Error.code:type_name -> anytype.Rpc.Chat.GetMessagesByIds.Response.Error.Code
	1556, // 934: anytype.Rpc.Chat.SubscribeLastMessages.Response.error:type_name -> anytype.Rpc.Chat.SubscribeLastMessages.Response.Error
	1629, // 935: anytype.Rpc.Chat.SubscribeLastMessages.Response.messages:type_name -> anytype.model.ChatMessage
	1630, // 936: anytype.Rpc.Chat.SubscribeLastMessages.Response.chatState:type_name -> anytype.model.ChatState
	302,  // 937: anytype.Rpc.Chat.SubscribeLastMessages.Response.Error.code:type_name -> anytype.Rpc.Chat.SubscribeLastMessages.Response.Error.Code
	1559, // 938: anytype.Rpc.Chat.Unsubscribe.Response.error:type_name -> anytype.Rpc.Chat.Unsubscribe.Response.Error
	303,  // 939: anytype.Rpc.Chat.Unsubscribe.Response.Error.code:type_name -> anytype.Rpc.Chat.Unsubscribe.Response.Error.Code
	1562, // 940: anytype.Rpc.Chat.SubscribeToMessagePreviews.Response.error:type_name -> anytype.Rpc.Chat.SubscribeToMessagePreviews.Response.Error
	304,  // 941: anytype.Rpc.Chat.SubscribeToMessagePreviews.Response.Error.code:type_name -> anytype.Rpc.Chat.SubscribeToMessagePreviews.Response.Error.Code
	305,  // 942: anytype.Rpc.Chat.ReadMessages.Request.type:type_name -> anytype.Rpc.Chat.ReadMessages.ReadType
	1565, // 943: anytype.Rpc.Chat.ReadMessages.Response.error:type_name -> anytype.Rpc.Chat.ReadMessages.Response.Error
	1576, // 944: anytype.Rpc.Chat.ReadMessages.Response.event:type_name -> anytype.ResponseEvent
	306,  // 945: anytype.Rpc.Chat.ReadMessages.Response.Error.code:type_name -> anytype.Rpc.Chat.ReadMessages.Response.Error.Code
	1568, // 946: anytype.Rpc.Chat.Unread.Response.error:type_name -> anytype.Rpc.Chat.Unread.Response.Error
	1576, // 947: anytype.Rpc.Chat.Unread.Response.event:type_name -> anytype.ResponseEvent
	307,  // 948: anytype.Rpc.Chat.Unread.Response.Error.code:type_name -> anytype.Rpc.Chat.Unread.Response.Error.Code
	1631, // 949: anytype.no_auth:extendee -> google.protobuf.MessageOptions
	950,  // [950:950] is the sub-list for method output_type
	950,  // [950:950] is the sub-list for method input_type
	950,  // [950:950] is the sub-list for extension type_name
	949,  // [949:950] is the sub-list for extension extendee
	0,    // [0:949] is the sub-list for field type_name
}

func init() { file_pb_protos_commands_proto_init() }
func file_pb_protos_commands_proto_init() {
	if File_pb_protos_commands_proto != nil {
		return
	}
	file_pb_protos_events_proto_init()
	file_pb_protos_commands_proto_msgTypes[135].OneofWrappers = []any{
		(*RpcWalletCreateSessionRequestAuthOfMnemonic)(nil),
		(*RpcWalletCreateSessionRequestAuthOfAppKey)(nil),
	}
	file_pb_protos_commands_proto_msgTypes[158].OneofWrappers = []any{
		(*RpcAccountCreateRequestAvatarOfAvatarLocalPath)(nil),
	}
	file_pb_protos_commands_proto_msgTypes[470].OneofWrappers = []any{
		(*RpcObjectImportRequestParamsOfNotionParams)(nil),
		(*RpcObjectImportRequestParamsOfBookmarksParams)(nil),
		(*RpcObjectImportRequestParamsOfMarkdownParams)(nil),
		(*RpcObjectImportRequestParamsOfHtmlParams)(nil),
		(*RpcObjectImportRequestParamsOfTxtParams)(nil),
		(*RpcObjectImportRequestParamsOfPbParams)(nil),
		(*RpcObjectImportRequestParamsOfCsvParams)(nil),
	}
	file_pb_protos_commands_proto_msgTypes[738].OneofWrappers = []any{
		(*RpcBlockListUpdateRequestFieldOfText)(nil),
		(*RpcBlockListUpdateRequestFieldOfBackgroundColor)(nil),
		(*RpcBlockListUpdateRequestFieldOfAlign)(nil),
		(*RpcBlockListUpdateRequestFieldOfFields)(nil),
		(*RpcBlockListUpdateRequestFieldOfDivStyle)(nil),
		(*RpcBlockListUpdateRequestFieldOfFileStyle)(nil),
	}
	file_pb_protos_commands_proto_msgTypes[739].OneofWrappers = []any{
		(*RpcBlockListUpdateRequestTextFieldOfStyle)(nil),
		(*RpcBlockListUpdateRequestTextFieldOfColor)(nil),
		(*RpcBlockListUpdateRequestTextFieldOfMark)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pb_protos_commands_proto_rawDesc), len(file_pb_protos_commands_proto_rawDesc)),
			NumEnums:      308,
			NumMessages:   1261,
			NumExtensions: 1,
			NumServices:   0,
		},
		GoTypes:           file_pb_protos_commands_proto_goTypes,
		DependencyIndexes: file_pb_protos_commands_proto_depIdxs,
		EnumInfos:         file_pb_protos_commands_proto_enumTypes,
		MessageInfos:      file_pb_protos_commands_proto_msgTypes,
		ExtensionInfos:    file_pb_protos_commands_proto_extTypes,
	}.Build()
	File_pb_protos_commands_proto = out.File
	file_pb_protos_commands_proto_goTypes = nil
	file_pb_protos_commands_proto_depIdxs = nil
}
