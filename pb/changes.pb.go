// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5-devel
// 	protoc        v5.28.2
// source: pb/protos/changes.proto

package pb

import (
	model "github.com/anyproto/anytype-heart/pkg/lib/pb/model"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ModifyOp int32

const (
	ModifyOp_Set      ModifyOp = 0
	ModifyOp_Unset    ModifyOp = 1
	ModifyOp_Inc      ModifyOp = 2
	ModifyOp_AddToSet ModifyOp = 3
	ModifyOp_Pull     ModifyOp = 4
)

// Enum value maps for ModifyOp.
var (
	ModifyOp_name = map[int32]string{
		0: "Set",
		1: "Unset",
		2: "Inc",
		3: "AddToSet",
		4: "Pull",
	}
	ModifyOp_value = map[string]int32{
		"Set":      0,
		"Unset":    1,
		"Inc":      2,
		"AddToSet": 3,
		"Pull":     4,
	}
)

func (x ModifyOp) Enum() *ModifyOp {
	p := new(ModifyOp)
	*p = x
	return p
}

func (x ModifyOp) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ModifyOp) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_protos_changes_proto_enumTypes[0].Descriptor()
}

func (ModifyOp) Type() protoreflect.EnumType {
	return &file_pb_protos_changes_proto_enumTypes[0]
}

func (x ModifyOp) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ModifyOp.Descriptor instead.
func (ModifyOp) EnumDescriptor() ([]byte, []int) {
	return file_pb_protos_changes_proto_rawDescGZIP(), []int{0}
}

// the element of change tree used to store and internal apply smartBlock history
type Change struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// set of actions to apply
	Content []*ChangeContent `protobuf:"bytes,3,rep,name=content,proto3" json:"content,omitempty"`
	// snapshot - when not null, the Content will be ignored
	Snapshot *ChangeSnapshot `protobuf:"bytes,4,opt,name=snapshot,proto3" json:"snapshot,omitempty"`
	// file keys related to changes content
	FileKeys []*ChangeFileKeys `protobuf:"bytes,6,rep,name=fileKeys,proto3" json:"fileKeys,omitempty"`
	// creation timestamp
	Timestamp int64 `protobuf:"varint,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// version of business logic
	Version       uint32 `protobuf:"varint,8,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Change) Reset() {
	*x = Change{}
	mi := &file_pb_protos_changes_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Change) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Change) ProtoMessage() {}

func (x *Change) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_changes_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Change.ProtoReflect.Descriptor instead.
func (*Change) Descriptor() ([]byte, []int) {
	return file_pb_protos_changes_proto_rawDescGZIP(), []int{0}
}

func (x *Change) GetContent() []*ChangeContent {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *Change) GetSnapshot() *ChangeSnapshot {
	if x != nil {
		return x.Snapshot
	}
	return nil
}

func (x *Change) GetFileKeys() []*ChangeFileKeys {
	if x != nil {
		return x.FileKeys
	}
	return nil
}

func (x *Change) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Change) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

type ChangeNoSnapshot struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// set of actions to apply
	Content []*ChangeContent `protobuf:"bytes,3,rep,name=content,proto3" json:"content,omitempty"`
	// file keys related to changes content
	FileKeys []*ChangeFileKeys `protobuf:"bytes,6,rep,name=fileKeys,proto3" json:"fileKeys,omitempty"`
	// creation timestamp
	Timestamp int64 `protobuf:"varint,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// version of business logic
	Version       uint32 `protobuf:"varint,8,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangeNoSnapshot) Reset() {
	*x = ChangeNoSnapshot{}
	mi := &file_pb_protos_changes_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeNoSnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeNoSnapshot) ProtoMessage() {}

func (x *ChangeNoSnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_changes_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeNoSnapshot.ProtoReflect.Descriptor instead.
func (*ChangeNoSnapshot) Descriptor() ([]byte, []int) {
	return file_pb_protos_changes_proto_rawDescGZIP(), []int{1}
}

func (x *ChangeNoSnapshot) GetContent() []*ChangeContent {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *ChangeNoSnapshot) GetFileKeys() []*ChangeFileKeys {
	if x != nil {
		return x.FileKeys
	}
	return nil
}

func (x *ChangeNoSnapshot) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *ChangeNoSnapshot) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

type StoreChange struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChangeSet     []*StoreChangeContent  `protobuf:"bytes,1,rep,name=changeSet,proto3" json:"changeSet,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StoreChange) Reset() {
	*x = StoreChange{}
	mi := &file_pb_protos_changes_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreChange) ProtoMessage() {}

func (x *StoreChange) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_changes_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreChange.ProtoReflect.Descriptor instead.
func (*StoreChange) Descriptor() ([]byte, []int) {
	return file_pb_protos_changes_proto_rawDescGZIP(), []int{2}
}

func (x *StoreChange) GetChangeSet() []*StoreChangeContent {
	if x != nil {
		return x.ChangeSet
	}
	return nil
}

type StoreChangeContent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Change:
	//
	//	*StoreChangeContentChangeOfCreate
	//	*StoreChangeContentChangeOfModify
	//	*StoreChangeContentChangeOfDelete
	Change        IsStoreChangeContentChange `protobuf_oneof:"change"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StoreChangeContent) Reset() {
	*x = StoreChangeContent{}
	mi := &file_pb_protos_changes_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreChangeContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreChangeContent) ProtoMessage() {}

func (x *StoreChangeContent) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_changes_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreChangeContent.ProtoReflect.Descriptor instead.
func (*StoreChangeContent) Descriptor() ([]byte, []int) {
	return file_pb_protos_changes_proto_rawDescGZIP(), []int{3}
}

func (x *StoreChangeContent) GetChange() IsStoreChangeContentChange {
	if x != nil {
		return x.Change
	}
	return nil
}

func (x *StoreChangeContent) GetCreate() *DocumentCreate {
	if x != nil {
		if x, ok := x.Change.(*StoreChangeContentChangeOfCreate); ok {
			return x.Create
		}
	}
	return nil
}

func (x *StoreChangeContent) GetModify() *DocumentModify {
	if x != nil {
		if x, ok := x.Change.(*StoreChangeContentChangeOfModify); ok {
			return x.Modify
		}
	}
	return nil
}

func (x *StoreChangeContent) GetDelete() *DocumentDelete {
	if x != nil {
		if x, ok := x.Change.(*StoreChangeContentChangeOfDelete); ok {
			return x.Delete
		}
	}
	return nil
}

type IsStoreChangeContentChange interface {
	IsStoreChangeContentChange()
}

type StoreChangeContentChangeOfCreate struct {
	Create *DocumentCreate `protobuf:"bytes,1,opt,name=create,proto3,oneof" json:"create,omitempty"`
}

type StoreChangeContentChangeOfModify struct {
	Modify *DocumentModify `protobuf:"bytes,2,opt,name=modify,proto3,oneof" json:"modify,omitempty"`
}

type StoreChangeContentChangeOfDelete struct {
	Delete *DocumentDelete `protobuf:"bytes,3,opt,name=delete,proto3,oneof" json:"delete,omitempty"`
}

func (*StoreChangeContentChangeOfCreate) IsStoreChangeContentChange() {}

func (*StoreChangeContentChangeOfModify) IsStoreChangeContentChange() {}

func (*StoreChangeContentChangeOfDelete) IsStoreChangeContentChange() {}

type DocumentCreate struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	Collection string                 `protobuf:"bytes,1,opt,name=collection,proto3" json:"collection,omitempty"`
	DocumentId string                 `protobuf:"bytes,2,opt,name=documentId,proto3" json:"documentId,omitempty"`
	// json
	Value         string `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DocumentCreate) Reset() {
	*x = DocumentCreate{}
	mi := &file_pb_protos_changes_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DocumentCreate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocumentCreate) ProtoMessage() {}

func (x *DocumentCreate) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_changes_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocumentCreate.ProtoReflect.Descriptor instead.
func (*DocumentCreate) Descriptor() ([]byte, []int) {
	return file_pb_protos_changes_proto_rawDescGZIP(), []int{4}
}

func (x *DocumentCreate) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *DocumentCreate) GetDocumentId() string {
	if x != nil {
		return x.DocumentId
	}
	return ""
}

func (x *DocumentCreate) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type DocumentModify struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Collection    string                 `protobuf:"bytes,1,opt,name=collection,proto3" json:"collection,omitempty"`
	DocumentId    string                 `protobuf:"bytes,2,opt,name=documentId,proto3" json:"documentId,omitempty"`
	Keys          []*KeyModify           `protobuf:"bytes,4,rep,name=keys,proto3" json:"keys,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DocumentModify) Reset() {
	*x = DocumentModify{}
	mi := &file_pb_protos_changes_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DocumentModify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocumentModify) ProtoMessage() {}

func (x *DocumentModify) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_changes_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocumentModify.ProtoReflect.Descriptor instead.
func (*DocumentModify) Descriptor() ([]byte, []int) {
	return file_pb_protos_changes_proto_rawDescGZIP(), []int{5}
}

func (x *DocumentModify) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *DocumentModify) GetDocumentId() string {
	if x != nil {
		return x.DocumentId
	}
	return ""
}

func (x *DocumentModify) GetKeys() []*KeyModify {
	if x != nil {
		return x.Keys
	}
	return nil
}

type KeyModify struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// key path; example: [user, email]
	KeyPath []string `protobuf:"bytes,1,rep,name=keyPath,proto3" json:"keyPath,omitempty"`
	// modify op: set, unset, inc, etc.
	ModifyOp ModifyOp `protobuf:"varint,3,opt,name=modifyOp,proto3,enum=anytype.ModifyOp" json:"modifyOp,omitempty"`
	// json value; example: '"new@email.com"'
	ModifyValue   string `protobuf:"bytes,4,opt,name=modifyValue,proto3" json:"modifyValue,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KeyModify) Reset() {
	*x = KeyModify{}
	mi := &file_pb_protos_changes_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KeyModify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyModify) ProtoMessage() {}

func (x *KeyModify) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_changes_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyModify.ProtoReflect.Descriptor instead.
func (*KeyModify) Descriptor() ([]byte, []int) {
	return file_pb_protos_changes_proto_rawDescGZIP(), []int{6}
}

func (x *KeyModify) GetKeyPath() []string {
	if x != nil {
		return x.KeyPath
	}
	return nil
}

func (x *KeyModify) GetModifyOp() ModifyOp {
	if x != nil {
		return x.ModifyOp
	}
	return ModifyOp_Set
}

func (x *KeyModify) GetModifyValue() string {
	if x != nil {
		return x.ModifyValue
	}
	return ""
}

type DocumentDelete struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Collection    string                 `protobuf:"bytes,1,opt,name=collection,proto3" json:"collection,omitempty"`
	DocumentId    string                 `protobuf:"bytes,2,opt,name=documentId,proto3" json:"documentId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DocumentDelete) Reset() {
	*x = DocumentDelete{}
	mi := &file_pb_protos_changes_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DocumentDelete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocumentDelete) ProtoMessage() {}

func (x *DocumentDelete) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_changes_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocumentDelete.ProtoReflect.Descriptor instead.
func (*DocumentDelete) Descriptor() ([]byte, []int) {
	return file_pb_protos_changes_proto_rawDescGZIP(), []int{7}
}

func (x *DocumentDelete) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *DocumentDelete) GetDocumentId() string {
	if x != nil {
		return x.DocumentId
	}
	return ""
}

type ChangeSnapshot struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// logId -> lastChangeId
	LogHeads map[string]string `protobuf:"bytes,1,rep,name=logHeads,proto3" json:"logHeads,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// snapshot data
	Data *model.SmartBlockSnapshotBase `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	// all file keys related to doc
	FileKeys      []*ChangeFileKeys `protobuf:"bytes,3,rep,name=fileKeys,proto3" json:"fileKeys,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangeSnapshot) Reset() {
	*x = ChangeSnapshot{}
	mi := &file_pb_protos_changes_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeSnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeSnapshot) ProtoMessage() {}

func (x *ChangeSnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_changes_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeSnapshot.ProtoReflect.Descriptor instead.
func (*ChangeSnapshot) Descriptor() ([]byte, []int) {
	return file_pb_protos_changes_proto_rawDescGZIP(), []int{0, 0}
}

func (x *ChangeSnapshot) GetLogHeads() map[string]string {
	if x != nil {
		return x.LogHeads
	}
	return nil
}

func (x *ChangeSnapshot) GetData() *model.SmartBlockSnapshotBase {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ChangeSnapshot) GetFileKeys() []*ChangeFileKeys {
	if x != nil {
		return x.FileKeys
	}
	return nil
}

type ChangeFileKeys struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hash          string                 `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Keys          map[string]string      `protobuf:"bytes,2,rep,name=keys,proto3" json:"keys,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangeFileKeys) Reset() {
	*x = ChangeFileKeys{}
	mi := &file_pb_protos_changes_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeFileKeys) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeFileKeys) ProtoMessage() {}

func (x *ChangeFileKeys) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_changes_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeFileKeys.ProtoReflect.Descriptor instead.
func (*ChangeFileKeys) Descriptor() ([]byte, []int) {
	return file_pb_protos_changes_proto_rawDescGZIP(), []int{0, 1}
}

func (x *ChangeFileKeys) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *ChangeFileKeys) GetKeys() map[string]string {
	if x != nil {
		return x.Keys
	}
	return nil
}

type ChangeContent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Value:
	//
	//	*ChangeContentValueOfBlockCreate
	//	*ChangeContentValueOfBlockUpdate
	//	*ChangeContentValueOfBlockRemove
	//	*ChangeContentValueOfBlockMove
	//	*ChangeContentValueOfBlockDuplicate
	//	*ChangeContentValueOfRelationAdd
	//	*ChangeContentValueOfRelationRemove
	//	*ChangeContentValueOfDetailsSet
	//	*ChangeContentValueOfDetailsUnset
	//	*ChangeContentValueOfObjectTypeAdd
	//	*ChangeContentValueOfObjectTypeRemove
	//	*ChangeContentValueOfStoreKeySet
	//	*ChangeContentValueOfStoreKeyUnset
	//	*ChangeContentValueOfStoreSliceUpdate
	//	*ChangeContentValueOfOriginalCreatedTimestampSet
	//	*ChangeContentValueOfSetFileInfo
	//	*ChangeContentValueOfNotificationCreate
	//	*ChangeContentValueOfNotificationUpdate
	//	*ChangeContentValueOfDeviceAdd
	//	*ChangeContentValueOfDeviceUpdate
	Value         IsChangeContentValue `protobuf_oneof:"value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangeContent) Reset() {
	*x = ChangeContent{}
	mi := &file_pb_protos_changes_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeContent) ProtoMessage() {}

func (x *ChangeContent) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_changes_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeContent.ProtoReflect.Descriptor instead.
func (*ChangeContent) Descriptor() ([]byte, []int) {
	return file_pb_protos_changes_proto_rawDescGZIP(), []int{0, 2}
}

func (x *ChangeContent) GetValue() IsChangeContentValue {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *ChangeContent) GetBlockCreate() *ChangeBlockCreate {
	if x != nil {
		if x, ok := x.Value.(*ChangeContentValueOfBlockCreate); ok {
			return x.BlockCreate
		}
	}
	return nil
}

func (x *ChangeContent) GetBlockUpdate() *ChangeBlockUpdate {
	if x != nil {
		if x, ok := x.Value.(*ChangeContentValueOfBlockUpdate); ok {
			return x.BlockUpdate
		}
	}
	return nil
}

func (x *ChangeContent) GetBlockRemove() *ChangeBlockRemove {
	if x != nil {
		if x, ok := x.Value.(*ChangeContentValueOfBlockRemove); ok {
			return x.BlockRemove
		}
	}
	return nil
}

func (x *ChangeContent) GetBlockMove() *ChangeBlockMove {
	if x != nil {
		if x, ok := x.Value.(*ChangeContentValueOfBlockMove); ok {
			return x.BlockMove
		}
	}
	return nil
}

func (x *ChangeContent) GetBlockDuplicate() *ChangeBlockDuplicate {
	if x != nil {
		if x, ok := x.Value.(*ChangeContentValueOfBlockDuplicate); ok {
			return x.BlockDuplicate
		}
	}
	return nil
}

func (x *ChangeContent) GetRelationAdd() *ChangeRelationAdd {
	if x != nil {
		if x, ok := x.Value.(*ChangeContentValueOfRelationAdd); ok {
			return x.RelationAdd
		}
	}
	return nil
}

func (x *ChangeContent) GetRelationRemove() *ChangeRelationRemove {
	if x != nil {
		if x, ok := x.Value.(*ChangeContentValueOfRelationRemove); ok {
			return x.RelationRemove
		}
	}
	return nil
}

func (x *ChangeContent) GetDetailsSet() *ChangeDetailsSet {
	if x != nil {
		if x, ok := x.Value.(*ChangeContentValueOfDetailsSet); ok {
			return x.DetailsSet
		}
	}
	return nil
}

func (x *ChangeContent) GetDetailsUnset() *ChangeDetailsUnset {
	if x != nil {
		if x, ok := x.Value.(*ChangeContentValueOfDetailsUnset); ok {
			return x.DetailsUnset
		}
	}
	return nil
}

func (x *ChangeContent) GetObjectTypeAdd() *ChangeObjectTypeAdd {
	if x != nil {
		if x, ok := x.Value.(*ChangeContentValueOfObjectTypeAdd); ok {
			return x.ObjectTypeAdd
		}
	}
	return nil
}

func (x *ChangeContent) GetObjectTypeRemove() *ChangeObjectTypeRemove {
	if x != nil {
		if x, ok := x.Value.(*ChangeContentValueOfObjectTypeRemove); ok {
			return x.ObjectTypeRemove
		}
	}
	return nil
}

func (x *ChangeContent) GetStoreKeySet() *ChangeStoreKeySet {
	if x != nil {
		if x, ok := x.Value.(*ChangeContentValueOfStoreKeySet); ok {
			return x.StoreKeySet
		}
	}
	return nil
}

func (x *ChangeContent) GetStoreKeyUnset() *ChangeStoreKeyUnset {
	if x != nil {
		if x, ok := x.Value.(*ChangeContentValueOfStoreKeyUnset); ok {
			return x.StoreKeyUnset
		}
	}
	return nil
}

func (x *ChangeContent) GetStoreSliceUpdate() *ChangeStoreSliceUpdate {
	if x != nil {
		if x, ok := x.Value.(*ChangeContentValueOfStoreSliceUpdate); ok {
			return x.StoreSliceUpdate
		}
	}
	return nil
}

func (x *ChangeContent) GetOriginalCreatedTimestampSet() *ChangeOriginalCreatedTimestampSet {
	if x != nil {
		if x, ok := x.Value.(*ChangeContentValueOfOriginalCreatedTimestampSet); ok {
			return x.OriginalCreatedTimestampSet
		}
	}
	return nil
}

func (x *ChangeContent) GetSetFileInfo() *ChangeSetFileInfo {
	if x != nil {
		if x, ok := x.Value.(*ChangeContentValueOfSetFileInfo); ok {
			return x.SetFileInfo
		}
	}
	return nil
}

func (x *ChangeContent) GetNotificationCreate() *ChangeNotificationCreate {
	if x != nil {
		if x, ok := x.Value.(*ChangeContentValueOfNotificationCreate); ok {
			return x.NotificationCreate
		}
	}
	return nil
}

func (x *ChangeContent) GetNotificationUpdate() *ChangeNotificationUpdate {
	if x != nil {
		if x, ok := x.Value.(*ChangeContentValueOfNotificationUpdate); ok {
			return x.NotificationUpdate
		}
	}
	return nil
}

func (x *ChangeContent) GetDeviceAdd() *ChangeDeviceAdd {
	if x != nil {
		if x, ok := x.Value.(*ChangeContentValueOfDeviceAdd); ok {
			return x.DeviceAdd
		}
	}
	return nil
}

func (x *ChangeContent) GetDeviceUpdate() *ChangeDeviceUpdate {
	if x != nil {
		if x, ok := x.Value.(*ChangeContentValueOfDeviceUpdate); ok {
			return x.DeviceUpdate
		}
	}
	return nil
}

type IsChangeContentValue interface {
	IsChangeContentValue()
}

type ChangeContentValueOfBlockCreate struct {
	BlockCreate *ChangeBlockCreate `protobuf:"bytes,1,opt,name=blockCreate,proto3,oneof" json:"blockCreate,omitempty"`
}

type ChangeContentValueOfBlockUpdate struct {
	BlockUpdate *ChangeBlockUpdate `protobuf:"bytes,2,opt,name=blockUpdate,proto3,oneof" json:"blockUpdate,omitempty"`
}

type ChangeContentValueOfBlockRemove struct {
	BlockRemove *ChangeBlockRemove `protobuf:"bytes,3,opt,name=blockRemove,proto3,oneof" json:"blockRemove,omitempty"`
}

type ChangeContentValueOfBlockMove struct {
	BlockMove *ChangeBlockMove `protobuf:"bytes,4,opt,name=blockMove,proto3,oneof" json:"blockMove,omitempty"`
}

type ChangeContentValueOfBlockDuplicate struct {
	BlockDuplicate *ChangeBlockDuplicate `protobuf:"bytes,5,opt,name=blockDuplicate,proto3,oneof" json:"blockDuplicate,omitempty"`
}

type ChangeContentValueOfRelationAdd struct {
	RelationAdd *ChangeRelationAdd `protobuf:"bytes,50,opt,name=relationAdd,proto3,oneof" json:"relationAdd,omitempty"`
}

type ChangeContentValueOfRelationRemove struct {
	RelationRemove *ChangeRelationRemove `protobuf:"bytes,51,opt,name=relationRemove,proto3,oneof" json:"relationRemove,omitempty"`
}

type ChangeContentValueOfDetailsSet struct {
	DetailsSet *ChangeDetailsSet `protobuf:"bytes,100,opt,name=detailsSet,proto3,oneof" json:"detailsSet,omitempty"`
}

type ChangeContentValueOfDetailsUnset struct {
	DetailsUnset *ChangeDetailsUnset `protobuf:"bytes,101,opt,name=detailsUnset,proto3,oneof" json:"detailsUnset,omitempty"`
}

type ChangeContentValueOfObjectTypeAdd struct {
	ObjectTypeAdd *ChangeObjectTypeAdd `protobuf:"bytes,105,opt,name=objectTypeAdd,proto3,oneof" json:"objectTypeAdd,omitempty"`
}

type ChangeContentValueOfObjectTypeRemove struct {
	ObjectTypeRemove *ChangeObjectTypeRemove `protobuf:"bytes,106,opt,name=objectTypeRemove,proto3,oneof" json:"objectTypeRemove,omitempty"`
}

type ChangeContentValueOfStoreKeySet struct {
	StoreKeySet *ChangeStoreKeySet `protobuf:"bytes,107,opt,name=storeKeySet,proto3,oneof" json:"storeKeySet,omitempty"`
}

type ChangeContentValueOfStoreKeyUnset struct {
	StoreKeyUnset *ChangeStoreKeyUnset `protobuf:"bytes,108,opt,name=storeKeyUnset,proto3,oneof" json:"storeKeyUnset,omitempty"`
}

type ChangeContentValueOfStoreSliceUpdate struct {
	StoreSliceUpdate *ChangeStoreSliceUpdate `protobuf:"bytes,109,opt,name=storeSliceUpdate,proto3,oneof" json:"storeSliceUpdate,omitempty"`
}

type ChangeContentValueOfOriginalCreatedTimestampSet struct {
	OriginalCreatedTimestampSet *ChangeOriginalCreatedTimestampSet `protobuf:"bytes,110,opt,name=originalCreatedTimestampSet,proto3,oneof" json:"originalCreatedTimestampSet,omitempty"`
}

type ChangeContentValueOfSetFileInfo struct {
	SetFileInfo *ChangeSetFileInfo `protobuf:"bytes,111,opt,name=setFileInfo,proto3,oneof" json:"setFileInfo,omitempty"`
}

type ChangeContentValueOfNotificationCreate struct {
	NotificationCreate *ChangeNotificationCreate `protobuf:"bytes,112,opt,name=notificationCreate,proto3,oneof" json:"notificationCreate,omitempty"`
}

type ChangeContentValueOfNotificationUpdate struct {
	NotificationUpdate *ChangeNotificationUpdate `protobuf:"bytes,113,opt,name=notificationUpdate,proto3,oneof" json:"notificationUpdate,omitempty"`
}

type ChangeContentValueOfDeviceAdd struct {
	DeviceAdd *ChangeDeviceAdd `protobuf:"bytes,114,opt,name=deviceAdd,proto3,oneof" json:"deviceAdd,omitempty"`
}

type ChangeContentValueOfDeviceUpdate struct {
	DeviceUpdate *ChangeDeviceUpdate `protobuf:"bytes,115,opt,name=deviceUpdate,proto3,oneof" json:"deviceUpdate,omitempty"`
}

func (*ChangeContentValueOfBlockCreate) IsChangeContentValue() {}

func (*ChangeContentValueOfBlockUpdate) IsChangeContentValue() {}

func (*ChangeContentValueOfBlockRemove) IsChangeContentValue() {}

func (*ChangeContentValueOfBlockMove) IsChangeContentValue() {}

func (*ChangeContentValueOfBlockDuplicate) IsChangeContentValue() {}

func (*ChangeContentValueOfRelationAdd) IsChangeContentValue() {}

func (*ChangeContentValueOfRelationRemove) IsChangeContentValue() {}

func (*ChangeContentValueOfDetailsSet) IsChangeContentValue() {}

func (*ChangeContentValueOfDetailsUnset) IsChangeContentValue() {}

func (*ChangeContentValueOfObjectTypeAdd) IsChangeContentValue() {}

func (*ChangeContentValueOfObjectTypeRemove) IsChangeContentValue() {}

func (*ChangeContentValueOfStoreKeySet) IsChangeContentValue() {}

func (*ChangeContentValueOfStoreKeyUnset) IsChangeContentValue() {}

func (*ChangeContentValueOfStoreSliceUpdate) IsChangeContentValue() {}

func (*ChangeContentValueOfOriginalCreatedTimestampSet) IsChangeContentValue() {}

func (*ChangeContentValueOfSetFileInfo) IsChangeContentValue() {}

func (*ChangeContentValueOfNotificationCreate) IsChangeContentValue() {}

func (*ChangeContentValueOfNotificationUpdate) IsChangeContentValue() {}

func (*ChangeContentValueOfDeviceAdd) IsChangeContentValue() {}

func (*ChangeContentValueOfDeviceUpdate) IsChangeContentValue() {}

type ChangeBlockCreate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TargetId      string                 `protobuf:"bytes,1,opt,name=targetId,proto3" json:"targetId,omitempty"`
	Position      model.BlockPosition    `protobuf:"varint,2,opt,name=position,proto3,enum=anytype.model.BlockPosition" json:"position,omitempty"`
	Blocks        []*model.Block         `protobuf:"bytes,3,rep,name=blocks,proto3" json:"blocks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangeBlockCreate) Reset() {
	*x = ChangeBlockCreate{}
	mi := &file_pb_protos_changes_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeBlockCreate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeBlockCreate) ProtoMessage() {}

func (x *ChangeBlockCreate) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_changes_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeBlockCreate.ProtoReflect.Descriptor instead.
func (*ChangeBlockCreate) Descriptor() ([]byte, []int) {
	return file_pb_protos_changes_proto_rawDescGZIP(), []int{0, 3}
}

func (x *ChangeBlockCreate) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

func (x *ChangeBlockCreate) GetPosition() model.BlockPosition {
	if x != nil {
		return x.Position
	}
	return model.BlockPosition(0)
}

func (x *ChangeBlockCreate) GetBlocks() []*model.Block {
	if x != nil {
		return x.Blocks
	}
	return nil
}

type ChangeBlockUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Events        []*EventMessage        `protobuf:"bytes,2,rep,name=events,proto3" json:"events,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangeBlockUpdate) Reset() {
	*x = ChangeBlockUpdate{}
	mi := &file_pb_protos_changes_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeBlockUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeBlockUpdate) ProtoMessage() {}

func (x *ChangeBlockUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_changes_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeBlockUpdate.ProtoReflect.Descriptor instead.
func (*ChangeBlockUpdate) Descriptor() ([]byte, []int) {
	return file_pb_protos_changes_proto_rawDescGZIP(), []int{0, 4}
}

func (x *ChangeBlockUpdate) GetEvents() []*EventMessage {
	if x != nil {
		return x.Events
	}
	return nil
}

type ChangeBlockRemove struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ids           []string               `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangeBlockRemove) Reset() {
	*x = ChangeBlockRemove{}
	mi := &file_pb_protos_changes_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeBlockRemove) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeBlockRemove) ProtoMessage() {}

func (x *ChangeBlockRemove) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_changes_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeBlockRemove.ProtoReflect.Descriptor instead.
func (*ChangeBlockRemove) Descriptor() ([]byte, []int) {
	return file_pb_protos_changes_proto_rawDescGZIP(), []int{0, 5}
}

func (x *ChangeBlockRemove) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

type ChangeBlockMove struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TargetId      string                 `protobuf:"bytes,1,opt,name=targetId,proto3" json:"targetId,omitempty"`
	Position      model.BlockPosition    `protobuf:"varint,2,opt,name=position,proto3,enum=anytype.model.BlockPosition" json:"position,omitempty"`
	Ids           []string               `protobuf:"bytes,3,rep,name=ids,proto3" json:"ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangeBlockMove) Reset() {
	*x = ChangeBlockMove{}
	mi := &file_pb_protos_changes_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeBlockMove) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeBlockMove) ProtoMessage() {}

func (x *ChangeBlockMove) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_changes_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeBlockMove.ProtoReflect.Descriptor instead.
func (*ChangeBlockMove) Descriptor() ([]byte, []int) {
	return file_pb_protos_changes_proto_rawDescGZIP(), []int{0, 6}
}

func (x *ChangeBlockMove) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

func (x *ChangeBlockMove) GetPosition() model.BlockPosition {
	if x != nil {
		return x.Position
	}
	return model.BlockPosition(0)
}

func (x *ChangeBlockMove) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

type ChangeBlockDuplicate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TargetId      string                 `protobuf:"bytes,1,opt,name=targetId,proto3" json:"targetId,omitempty"`
	Position      model.BlockPosition    `protobuf:"varint,2,opt,name=position,proto3,enum=anytype.model.BlockPosition" json:"position,omitempty"`
	Ids           []string               `protobuf:"bytes,3,rep,name=ids,proto3" json:"ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangeBlockDuplicate) Reset() {
	*x = ChangeBlockDuplicate{}
	mi := &file_pb_protos_changes_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeBlockDuplicate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeBlockDuplicate) ProtoMessage() {}

func (x *ChangeBlockDuplicate) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_changes_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeBlockDuplicate.ProtoReflect.Descriptor instead.
func (*ChangeBlockDuplicate) Descriptor() ([]byte, []int) {
	return file_pb_protos_changes_proto_rawDescGZIP(), []int{0, 7}
}

func (x *ChangeBlockDuplicate) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

func (x *ChangeBlockDuplicate) GetPosition() model.BlockPosition {
	if x != nil {
		return x.Position
	}
	return model.BlockPosition(0)
}

func (x *ChangeBlockDuplicate) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

type ChangeDetailsSet struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value         *structpb.Value        `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangeDetailsSet) Reset() {
	*x = ChangeDetailsSet{}
	mi := &file_pb_protos_changes_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeDetailsSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeDetailsSet) ProtoMessage() {}

func (x *ChangeDetailsSet) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_changes_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeDetailsSet.ProtoReflect.Descriptor instead.
func (*ChangeDetailsSet) Descriptor() ([]byte, []int) {
	return file_pb_protos_changes_proto_rawDescGZIP(), []int{0, 8}
}

func (x *ChangeDetailsSet) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ChangeDetailsSet) GetValue() *structpb.Value {
	if x != nil {
		return x.Value
	}
	return nil
}

type ChangeDetailsUnset struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangeDetailsUnset) Reset() {
	*x = ChangeDetailsUnset{}
	mi := &file_pb_protos_changes_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeDetailsUnset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeDetailsUnset) ProtoMessage() {}

func (x *ChangeDetailsUnset) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_changes_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeDetailsUnset.ProtoReflect.Descriptor instead.
func (*ChangeDetailsUnset) Descriptor() ([]byte, []int) {
	return file_pb_protos_changes_proto_rawDescGZIP(), []int{0, 9}
}

func (x *ChangeDetailsUnset) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type ChangeRelationAdd struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RelationLinks []*model.RelationLink  `protobuf:"bytes,1,rep,name=relationLinks,proto3" json:"relationLinks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangeRelationAdd) Reset() {
	*x = ChangeRelationAdd{}
	mi := &file_pb_protos_changes_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeRelationAdd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeRelationAdd) ProtoMessage() {}

func (x *ChangeRelationAdd) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_changes_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeRelationAdd.ProtoReflect.Descriptor instead.
func (*ChangeRelationAdd) Descriptor() ([]byte, []int) {
	return file_pb_protos_changes_proto_rawDescGZIP(), []int{0, 10}
}

func (x *ChangeRelationAdd) GetRelationLinks() []*model.RelationLink {
	if x != nil {
		return x.RelationLinks
	}
	return nil
}

type ChangeRelationRemove struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RelationKey   []string               `protobuf:"bytes,1,rep,name=relationKey,proto3" json:"relationKey,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangeRelationRemove) Reset() {
	*x = ChangeRelationRemove{}
	mi := &file_pb_protos_changes_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeRelationRemove) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeRelationRemove) ProtoMessage() {}

func (x *ChangeRelationRemove) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_changes_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeRelationRemove.ProtoReflect.Descriptor instead.
func (*ChangeRelationRemove) Descriptor() ([]byte, []int) {
	return file_pb_protos_changes_proto_rawDescGZIP(), []int{0, 11}
}

func (x *ChangeRelationRemove) GetRelationKey() []string {
	if x != nil {
		return x.RelationKey
	}
	return nil
}

type ChangeObjectTypeAdd struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Url           string                 `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Key           string                 `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangeObjectTypeAdd) Reset() {
	*x = ChangeObjectTypeAdd{}
	mi := &file_pb_protos_changes_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeObjectTypeAdd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeObjectTypeAdd) ProtoMessage() {}

func (x *ChangeObjectTypeAdd) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_changes_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeObjectTypeAdd.ProtoReflect.Descriptor instead.
func (*ChangeObjectTypeAdd) Descriptor() ([]byte, []int) {
	return file_pb_protos_changes_proto_rawDescGZIP(), []int{0, 12}
}

func (x *ChangeObjectTypeAdd) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ChangeObjectTypeAdd) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type ChangeObjectTypeRemove struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Url           string                 `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Key           string                 `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangeObjectTypeRemove) Reset() {
	*x = ChangeObjectTypeRemove{}
	mi := &file_pb_protos_changes_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeObjectTypeRemove) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeObjectTypeRemove) ProtoMessage() {}

func (x *ChangeObjectTypeRemove) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_changes_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeObjectTypeRemove.ProtoReflect.Descriptor instead.
func (*ChangeObjectTypeRemove) Descriptor() ([]byte, []int) {
	return file_pb_protos_changes_proto_rawDescGZIP(), []int{0, 13}
}

func (x *ChangeObjectTypeRemove) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ChangeObjectTypeRemove) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type ChangeStoreKeySet struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          []string               `protobuf:"bytes,1,rep,name=path,proto3" json:"path,omitempty"`
	Value         *structpb.Value        `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangeStoreKeySet) Reset() {
	*x = ChangeStoreKeySet{}
	mi := &file_pb_protos_changes_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeStoreKeySet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeStoreKeySet) ProtoMessage() {}

func (x *ChangeStoreKeySet) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_changes_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeStoreKeySet.ProtoReflect.Descriptor instead.
func (*ChangeStoreKeySet) Descriptor() ([]byte, []int) {
	return file_pb_protos_changes_proto_rawDescGZIP(), []int{0, 14}
}

func (x *ChangeStoreKeySet) GetPath() []string {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *ChangeStoreKeySet) GetValue() *structpb.Value {
	if x != nil {
		return x.Value
	}
	return nil
}

type ChangeStoreKeyUnset struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          []string               `protobuf:"bytes,1,rep,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangeStoreKeyUnset) Reset() {
	*x = ChangeStoreKeyUnset{}
	mi := &file_pb_protos_changes_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeStoreKeyUnset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeStoreKeyUnset) ProtoMessage() {}

func (x *ChangeStoreKeyUnset) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_changes_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeStoreKeyUnset.ProtoReflect.Descriptor instead.
func (*ChangeStoreKeyUnset) Descriptor() ([]byte, []int) {
	return file_pb_protos_changes_proto_rawDescGZIP(), []int{0, 15}
}

func (x *ChangeStoreKeyUnset) GetPath() []string {
	if x != nil {
		return x.Path
	}
	return nil
}

type ChangeStoreSliceUpdate struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Key   string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// Types that are valid to be assigned to Operation:
	//
	//	*ChangeStoreSliceUpdateOperationOfAdd
	//	*ChangeStoreSliceUpdateOperationOfRemove
	//	*ChangeStoreSliceUpdateOperationOfMove
	Operation     IsChangeStoreSliceUpdateOperation `protobuf_oneof:"operation"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangeStoreSliceUpdate) Reset() {
	*x = ChangeStoreSliceUpdate{}
	mi := &file_pb_protos_changes_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeStoreSliceUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeStoreSliceUpdate) ProtoMessage() {}

func (x *ChangeStoreSliceUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_changes_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeStoreSliceUpdate.ProtoReflect.Descriptor instead.
func (*ChangeStoreSliceUpdate) Descriptor() ([]byte, []int) {
	return file_pb_protos_changes_proto_rawDescGZIP(), []int{0, 16}
}

func (x *ChangeStoreSliceUpdate) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ChangeStoreSliceUpdate) GetOperation() IsChangeStoreSliceUpdateOperation {
	if x != nil {
		return x.Operation
	}
	return nil
}

func (x *ChangeStoreSliceUpdate) GetAdd() *ChangeStoreSliceUpdateAdd {
	if x != nil {
		if x, ok := x.Operation.(*ChangeStoreSliceUpdateOperationOfAdd); ok {
			return x.Add
		}
	}
	return nil
}

func (x *ChangeStoreSliceUpdate) GetRemove() *ChangeStoreSliceUpdateRemove {
	if x != nil {
		if x, ok := x.Operation.(*ChangeStoreSliceUpdateOperationOfRemove); ok {
			return x.Remove
		}
	}
	return nil
}

func (x *ChangeStoreSliceUpdate) GetMove() *ChangeStoreSliceUpdateMove {
	if x != nil {
		if x, ok := x.Operation.(*ChangeStoreSliceUpdateOperationOfMove); ok {
			return x.Move
		}
	}
	return nil
}

type IsChangeStoreSliceUpdateOperation interface {
	IsChangeStoreSliceUpdateOperation()
}

type ChangeStoreSliceUpdateOperationOfAdd struct {
	Add *ChangeStoreSliceUpdateAdd `protobuf:"bytes,2,opt,name=add,proto3,oneof" json:"add,omitempty"`
}

type ChangeStoreSliceUpdateOperationOfRemove struct {
	Remove *ChangeStoreSliceUpdateRemove `protobuf:"bytes,3,opt,name=remove,proto3,oneof" json:"remove,omitempty"`
}

type ChangeStoreSliceUpdateOperationOfMove struct {
	Move *ChangeStoreSliceUpdateMove `protobuf:"bytes,4,opt,name=move,proto3,oneof" json:"move,omitempty"`
}

func (*ChangeStoreSliceUpdateOperationOfAdd) IsChangeStoreSliceUpdateOperation() {}

func (*ChangeStoreSliceUpdateOperationOfRemove) IsChangeStoreSliceUpdateOperation() {}

func (*ChangeStoreSliceUpdateOperationOfMove) IsChangeStoreSliceUpdateOperation() {}

type ChangeOriginalCreatedTimestampSet struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ts            int64                  `protobuf:"varint,1,opt,name=ts,proto3" json:"ts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangeOriginalCreatedTimestampSet) Reset() {
	*x = ChangeOriginalCreatedTimestampSet{}
	mi := &file_pb_protos_changes_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeOriginalCreatedTimestampSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeOriginalCreatedTimestampSet) ProtoMessage() {}

func (x *ChangeOriginalCreatedTimestampSet) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_changes_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeOriginalCreatedTimestampSet.ProtoReflect.Descriptor instead.
func (*ChangeOriginalCreatedTimestampSet) Descriptor() ([]byte, []int) {
	return file_pb_protos_changes_proto_rawDescGZIP(), []int{0, 17}
}

func (x *ChangeOriginalCreatedTimestampSet) GetTs() int64 {
	if x != nil {
		return x.Ts
	}
	return 0
}

type ChangeSetFileInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileInfo      *model.FileInfo        `protobuf:"bytes,1,opt,name=fileInfo,proto3" json:"fileInfo,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangeSetFileInfo) Reset() {
	*x = ChangeSetFileInfo{}
	mi := &file_pb_protos_changes_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeSetFileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeSetFileInfo) ProtoMessage() {}

func (x *ChangeSetFileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_changes_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeSetFileInfo.ProtoReflect.Descriptor instead.
func (*ChangeSetFileInfo) Descriptor() ([]byte, []int) {
	return file_pb_protos_changes_proto_rawDescGZIP(), []int{0, 18}
}

func (x *ChangeSetFileInfo) GetFileInfo() *model.FileInfo {
	if x != nil {
		return x.FileInfo
	}
	return nil
}

type ChangeNotificationCreate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Notification  *model.Notification    `protobuf:"bytes,1,opt,name=notification,proto3" json:"notification,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangeNotificationCreate) Reset() {
	*x = ChangeNotificationCreate{}
	mi := &file_pb_protos_changes_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeNotificationCreate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeNotificationCreate) ProtoMessage() {}

func (x *ChangeNotificationCreate) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_changes_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeNotificationCreate.ProtoReflect.Descriptor instead.
func (*ChangeNotificationCreate) Descriptor() ([]byte, []int) {
	return file_pb_protos_changes_proto_rawDescGZIP(), []int{0, 19}
}

func (x *ChangeNotificationCreate) GetNotification() *model.Notification {
	if x != nil {
		return x.Notification
	}
	return nil
}

type ChangeNotificationUpdate struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Id            string                   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status        model.NotificationStatus `protobuf:"varint,2,opt,name=status,proto3,enum=anytype.model.NotificationStatus" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangeNotificationUpdate) Reset() {
	*x = ChangeNotificationUpdate{}
	mi := &file_pb_protos_changes_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeNotificationUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeNotificationUpdate) ProtoMessage() {}

func (x *ChangeNotificationUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_changes_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeNotificationUpdate.ProtoReflect.Descriptor instead.
func (*ChangeNotificationUpdate) Descriptor() ([]byte, []int) {
	return file_pb_protos_changes_proto_rawDescGZIP(), []int{0, 20}
}

func (x *ChangeNotificationUpdate) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ChangeNotificationUpdate) GetStatus() model.NotificationStatus {
	if x != nil {
		return x.Status
	}
	return model.NotificationStatus(0)
}

type ChangeDeviceAdd struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Device        *model.DeviceInfo      `protobuf:"bytes,1,opt,name=device,proto3" json:"device,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangeDeviceAdd) Reset() {
	*x = ChangeDeviceAdd{}
	mi := &file_pb_protos_changes_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeDeviceAdd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeDeviceAdd) ProtoMessage() {}

func (x *ChangeDeviceAdd) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_changes_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeDeviceAdd.ProtoReflect.Descriptor instead.
func (*ChangeDeviceAdd) Descriptor() ([]byte, []int) {
	return file_pb_protos_changes_proto_rawDescGZIP(), []int{0, 21}
}

func (x *ChangeDeviceAdd) GetDevice() *model.DeviceInfo {
	if x != nil {
		return x.Device
	}
	return nil
}

type ChangeDeviceUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangeDeviceUpdate) Reset() {
	*x = ChangeDeviceUpdate{}
	mi := &file_pb_protos_changes_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeDeviceUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeDeviceUpdate) ProtoMessage() {}

func (x *ChangeDeviceUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_changes_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeDeviceUpdate.ProtoReflect.Descriptor instead.
func (*ChangeDeviceUpdate) Descriptor() ([]byte, []int) {
	return file_pb_protos_changes_proto_rawDescGZIP(), []int{0, 22}
}

func (x *ChangeDeviceUpdate) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ChangeDeviceUpdate) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ChangeStoreSliceUpdateAdd struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AfterId       string                 `protobuf:"bytes,1,opt,name=afterId,proto3" json:"afterId,omitempty"`
	Ids           []string               `protobuf:"bytes,2,rep,name=ids,proto3" json:"ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangeStoreSliceUpdateAdd) Reset() {
	*x = ChangeStoreSliceUpdateAdd{}
	mi := &file_pb_protos_changes_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeStoreSliceUpdateAdd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeStoreSliceUpdateAdd) ProtoMessage() {}

func (x *ChangeStoreSliceUpdateAdd) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_changes_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeStoreSliceUpdateAdd.ProtoReflect.Descriptor instead.
func (*ChangeStoreSliceUpdateAdd) Descriptor() ([]byte, []int) {
	return file_pb_protos_changes_proto_rawDescGZIP(), []int{0, 16, 0}
}

func (x *ChangeStoreSliceUpdateAdd) GetAfterId() string {
	if x != nil {
		return x.AfterId
	}
	return ""
}

func (x *ChangeStoreSliceUpdateAdd) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

type ChangeStoreSliceUpdateRemove struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ids           []string               `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangeStoreSliceUpdateRemove) Reset() {
	*x = ChangeStoreSliceUpdateRemove{}
	mi := &file_pb_protos_changes_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeStoreSliceUpdateRemove) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeStoreSliceUpdateRemove) ProtoMessage() {}

func (x *ChangeStoreSliceUpdateRemove) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_changes_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeStoreSliceUpdateRemove.ProtoReflect.Descriptor instead.
func (*ChangeStoreSliceUpdateRemove) Descriptor() ([]byte, []int) {
	return file_pb_protos_changes_proto_rawDescGZIP(), []int{0, 16, 1}
}

func (x *ChangeStoreSliceUpdateRemove) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

type ChangeStoreSliceUpdateMove struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AfterId       string                 `protobuf:"bytes,1,opt,name=afterId,proto3" json:"afterId,omitempty"`
	Ids           []string               `protobuf:"bytes,2,rep,name=ids,proto3" json:"ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangeStoreSliceUpdateMove) Reset() {
	*x = ChangeStoreSliceUpdateMove{}
	mi := &file_pb_protos_changes_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeStoreSliceUpdateMove) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeStoreSliceUpdateMove) ProtoMessage() {}

func (x *ChangeStoreSliceUpdateMove) ProtoReflect() protoreflect.Message {
	mi := &file_pb_protos_changes_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeStoreSliceUpdateMove.ProtoReflect.Descriptor instead.
func (*ChangeStoreSliceUpdateMove) Descriptor() ([]byte, []int) {
	return file_pb_protos_changes_proto_rawDescGZIP(), []int{0, 16, 2}
}

func (x *ChangeStoreSliceUpdateMove) GetAfterId() string {
	if x != nil {
		return x.AfterId
	}
	return ""
}

func (x *ChangeStoreSliceUpdateMove) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

var File_pb_protos_changes_proto protoreflect.FileDescriptor

var file_pb_protos_changes_proto_rawDesc = string([]byte{
	0x0a, 0x17, 0x70, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x61, 0x6e, 0x79, 0x74, 0x79,
	0x70, 0x65, 0x1a, 0x24, 0x70, 0x6b, 0x67, 0x2f, 0x6c, 0x69, 0x62, 0x2f, 0x70, 0x62, 0x2f, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x70, 0x62, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x88,
	0x1e, 0x0a, 0x06, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x31, 0x0a, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x6e, 0x79,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x08,
	0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e,
	0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x08, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x12, 0x34, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x08,
	0x66, 0x69, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x1a, 0xfc, 0x01, 0x0a, 0x08, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x42, 0x0a,
	0x08, 0x6c, 0x6f, 0x67, 0x48, 0x65, 0x61, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x2e, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x2e, 0x4c, 0x6f, 0x67, 0x48, 0x65, 0x61,
	0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6c, 0x6f, 0x67, 0x48, 0x65, 0x61, 0x64,
	0x73, 0x12, 0x39, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x53, 0x6d, 0x61, 0x72, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x34, 0x0a, 0x08,
	0x66, 0x69, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e,
	0x46, 0x69, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4b, 0x65,
	0x79, 0x73, 0x1a, 0x3b, 0x0a, 0x0d, 0x4c, 0x6f, 0x67, 0x48, 0x65, 0x61, 0x64, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a,
	0x8f, 0x01, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68,
	0x12, 0x36, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e,
	0x46, 0x69, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x2e, 0x4b, 0x65, 0x79, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x1a, 0x37, 0x0a, 0x09, 0x4b, 0x65, 0x79, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x1a, 0xc5, 0x0b, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x3f, 0x0a,
	0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48,
	0x00, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x3f,
	0x0a, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x48, 0x00, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x3f, 0x0a, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x48, 0x00, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x12, 0x39, 0x0a, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4d, 0x6f, 0x76, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4d, 0x6f, 0x76, 0x65, 0x48, 0x00,
	0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4d, 0x6f, 0x76, 0x65, 0x12, 0x48, 0x0a, 0x0e, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x75, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x0e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x75, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x3f, 0x0a, 0x0b, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x41, 0x64, 0x64, 0x18, 0x32, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x6e, 0x79,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x64, 0x48, 0x00, 0x52, 0x0b, 0x72, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x41, 0x64, 0x64, 0x12, 0x48, 0x0a, 0x0e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x18, 0x33, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e,
	0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x48, 0x00,
	0x52, 0x0e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x12, 0x3c, 0x0a, 0x0a, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x53, 0x65, 0x74, 0x18, 0x64,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x53, 0x65, 0x74,
	0x48, 0x00, 0x52, 0x0a, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x53, 0x65, 0x74, 0x12, 0x42,
	0x0a, 0x0c, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x55, 0x6e, 0x73, 0x65, 0x74, 0x18, 0x65,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x55, 0x6e, 0x73,
	0x65, 0x74, 0x48, 0x00, 0x52, 0x0c, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x55, 0x6e, 0x73,
	0x65, 0x74, 0x12, 0x45, 0x0a, 0x0d, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x41, 0x64, 0x64, 0x18, 0x69, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x6e, 0x79, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x41, 0x64, 0x64, 0x48, 0x00, 0x52, 0x0d, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x41, 0x64, 0x64, 0x12, 0x4e, 0x0a, 0x10, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x18, 0x6a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x48, 0x00, 0x52, 0x10, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x12, 0x3f, 0x0a, 0x0b, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x4b, 0x65, 0x79, 0x53, 0x65, 0x74, 0x18, 0x6b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x53, 0x65, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x53, 0x65, 0x74, 0x12, 0x45, 0x0a, 0x0d, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x55, 0x6e, 0x73, 0x65, 0x74, 0x18, 0x6c, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x55, 0x6e, 0x73, 0x65, 0x74,
	0x48, 0x00, 0x52, 0x0d, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x55, 0x6e, 0x73, 0x65,
	0x74, 0x12, 0x4e, 0x0a, 0x10, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x6d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x6e,
	0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52,
	0x10, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x12, 0x6f, 0x0a, 0x1b, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x53, 0x65, 0x74,
	0x18, 0x6e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x53, 0x65, 0x74, 0x48, 0x00, 0x52, 0x1b, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x53,
	0x65, 0x74, 0x12, 0x3f, 0x0a, 0x0b, 0x73, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x6f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x54, 0x0a, 0x12, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x18, 0x70, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x12, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x54, 0x0a, 0x12, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x71, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x12, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x39, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x41, 0x64, 0x64, 0x18, 0x72, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x41, 0x64, 0x64, 0x48, 0x00, 0x52,
	0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x41, 0x64, 0x64, 0x12, 0x42, 0x0a, 0x0c, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x73, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x00,
	0x52, 0x0c, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x07,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x4a, 0x04, 0x08, 0x66, 0x10, 0x67, 0x4a, 0x04, 0x08,
	0x67, 0x10, 0x68, 0x4a, 0x04, 0x08, 0x68, 0x10, 0x69, 0x1a, 0x92, 0x01, 0x0a, 0x0b, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x50, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x2c, 0x0a, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x1a, 0x3d,
	0x0a, 0x0b, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x2e, 0x0a,
	0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x1f, 0x0a,
	0x0b, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x1a, 0x74,
	0x0a, 0x09, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4d, 0x6f, 0x76, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x61, 0x6e, 0x79, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e,
	0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x03, 0x69, 0x64, 0x73, 0x1a, 0x79, 0x0a, 0x0e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x75, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x49, 0x64, 0x12, 0x39, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a,
	0x03, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x1a,
	0x4c, 0x0a, 0x0a, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x53, 0x65, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x2c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x20, 0x0a,
	0x0c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x55, 0x6e, 0x73, 0x65, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x1a,
	0x50, 0x0a, 0x0b, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x64, 0x12, 0x41,
	0x0a, 0x0d, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69,
	0x6e, 0x6b, 0x52, 0x0d, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x6e, 0x6b,
	0x73, 0x1a, 0x32, 0x0a, 0x0e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x1a, 0x33, 0x0a, 0x0d, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x41, 0x64, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x1a, 0x36, 0x0a, 0x10, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x1a, 0x4f, 0x0a, 0x0b, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x53, 0x65,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x2c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x1a, 0x23, 0x0a, 0x0d, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x55,
	0x6e, 0x73, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x1a, 0xee, 0x02, 0x0a, 0x10, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x38, 0x0a, 0x03, 0x61, 0x64, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61,
	0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x41,
	0x64, 0x64, 0x48, 0x00, 0x52, 0x03, 0x61, 0x64, 0x64, 0x12, 0x41, 0x0a, 0x06, 0x72, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x6e, 0x79, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x53, 0x6c, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x48, 0x00, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x12, 0x3b, 0x0a, 0x04,
	0x6d, 0x6f, 0x76, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x6e, 0x79,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x53, 0x74, 0x6f, 0x72,
	0x65, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x4d, 0x6f, 0x76,
	0x65, 0x48, 0x00, 0x52, 0x04, 0x6d, 0x6f, 0x76, 0x65, 0x1a, 0x31, 0x0a, 0x03, 0x41, 0x64, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x66, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x66, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x1a, 0x1a, 0x0a, 0x06,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x1a, 0x32, 0x0a, 0x04, 0x4d, 0x6f, 0x76, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x66, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x66, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x42, 0x0b, 0x0a, 0x09,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x2d, 0x0a, 0x1b, 0x4f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x61, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x53, 0x65, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x74, 0x73, 0x1a, 0x42, 0x0a, 0x0b, 0x53, 0x65, 0x74, 0x46,
	0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x33, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x6e, 0x79, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x55, 0x0a, 0x12,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x12, 0x3f, 0x0a, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x1a, 0x60, 0x0a, 0x12, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3a, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x61, 0x6e, 0x79, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x1a, 0x3e, 0x0a, 0x09, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x41,
	0x64, 0x64, 0x12, 0x31, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x32, 0x0a, 0x0c, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xb3, 0x01, 0x0a, 0x10, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x4e, 0x6f, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x31,
	0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x12, 0x34, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22,
	0x48, 0x0a, 0x0b, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x39,
	0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x65, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x53, 0x74, 0x6f, 0x72,
	0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x09,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x65, 0x74, 0x22, 0xb7, 0x01, 0x0a, 0x12, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x12, 0x31, 0x0a, 0x06, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x06, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x44, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x48, 0x00, 0x52, 0x06,
	0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x12, 0x31, 0x0a, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48,
	0x00, 0x52, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x22, 0x66, 0x0a, 0x0e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x78, 0x0a, 0x0e, 0x44,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x12, 0x1e, 0x0a,
	0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a,
	0x0a, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x26, 0x0a,
	0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x6e,
	0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x4b, 0x65, 0x79, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x52,
	0x04, 0x6b, 0x65, 0x79, 0x73, 0x22, 0x76, 0x0a, 0x09, 0x4b, 0x65, 0x79, 0x4d, 0x6f, 0x64, 0x69,
	0x66, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x50, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x50, 0x61, 0x74, 0x68, 0x12, 0x2d, 0x0a, 0x08,
	0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x4f, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11,
	0x2e, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x4f,
	0x70, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x4f, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x6d,
	0x6f, 0x64, 0x69, 0x66, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x50, 0x0a,
	0x0e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1e, 0x0a, 0x0a, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x2a,
	0x3f, 0x0a, 0x08, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x4f, 0x70, 0x12, 0x07, 0x0a, 0x03, 0x53,
	0x65, 0x74, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x55, 0x6e, 0x73, 0x65, 0x74, 0x10, 0x01, 0x12,
	0x07, 0x0a, 0x03, 0x49, 0x6e, 0x63, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x64, 0x64, 0x54,
	0x6f, 0x53, 0x65, 0x74, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x50, 0x75, 0x6c, 0x6c, 0x10, 0x04,
	0x42, 0x26, 0x5a, 0x24, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61,
	0x6e, 0x79, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x2d,
	0x68, 0x65, 0x61, 0x72, 0x74, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_pb_protos_changes_proto_rawDescOnce sync.Once
	file_pb_protos_changes_proto_rawDescData []byte
)

func file_pb_protos_changes_proto_rawDescGZIP() []byte {
	file_pb_protos_changes_proto_rawDescOnce.Do(func() {
		file_pb_protos_changes_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pb_protos_changes_proto_rawDesc), len(file_pb_protos_changes_proto_rawDesc)))
	})
	return file_pb_protos_changes_proto_rawDescData
}

var file_pb_protos_changes_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_pb_protos_changes_proto_msgTypes = make([]protoimpl.MessageInfo, 36)
var file_pb_protos_changes_proto_goTypes = []any{
	(ModifyOp)(0),                             // 0: anytype.ModifyOp
	(*Change)(nil),                            // 1: anytype.Change
	(*ChangeNoSnapshot)(nil),                  // 2: anytype.ChangeNoSnapshot
	(*StoreChange)(nil),                       // 3: anytype.StoreChange
	(*StoreChangeContent)(nil),                // 4: anytype.StoreChangeContent
	(*DocumentCreate)(nil),                    // 5: anytype.DocumentCreate
	(*DocumentModify)(nil),                    // 6: anytype.DocumentModify
	(*KeyModify)(nil),                         // 7: anytype.KeyModify
	(*DocumentDelete)(nil),                    // 8: anytype.DocumentDelete
	(*ChangeSnapshot)(nil),                    // 9: anytype.Change.Snapshot
	(*ChangeFileKeys)(nil),                    // 10: anytype.Change.FileKeys
	(*ChangeContent)(nil),                     // 11: anytype.Change.Content
	(*ChangeBlockCreate)(nil),                 // 12: anytype.Change.BlockCreate
	(*ChangeBlockUpdate)(nil),                 // 13: anytype.Change.BlockUpdate
	(*ChangeBlockRemove)(nil),                 // 14: anytype.Change.BlockRemove
	(*ChangeBlockMove)(nil),                   // 15: anytype.Change.BlockMove
	(*ChangeBlockDuplicate)(nil),              // 16: anytype.Change.BlockDuplicate
	(*ChangeDetailsSet)(nil),                  // 17: anytype.Change.DetailsSet
	(*ChangeDetailsUnset)(nil),                // 18: anytype.Change.DetailsUnset
	(*ChangeRelationAdd)(nil),                 // 19: anytype.Change.RelationAdd
	(*ChangeRelationRemove)(nil),              // 20: anytype.Change.RelationRemove
	(*ChangeObjectTypeAdd)(nil),               // 21: anytype.Change.ObjectTypeAdd
	(*ChangeObjectTypeRemove)(nil),            // 22: anytype.Change.ObjectTypeRemove
	(*ChangeStoreKeySet)(nil),                 // 23: anytype.Change.StoreKeySet
	(*ChangeStoreKeyUnset)(nil),               // 24: anytype.Change.StoreKeyUnset
	(*ChangeStoreSliceUpdate)(nil),            // 25: anytype.Change.StoreSliceUpdate
	(*ChangeOriginalCreatedTimestampSet)(nil), // 26: anytype.Change.OriginalCreatedTimestampSet
	(*ChangeSetFileInfo)(nil),                 // 27: anytype.Change.SetFileInfo
	(*ChangeNotificationCreate)(nil),          // 28: anytype.Change.NotificationCreate
	(*ChangeNotificationUpdate)(nil),          // 29: anytype.Change.NotificationUpdate
	(*ChangeDeviceAdd)(nil),                   // 30: anytype.Change.DeviceAdd
	(*ChangeDeviceUpdate)(nil),                // 31: anytype.Change.DeviceUpdate
	nil,                                       // 32: anytype.Change.Snapshot.LogHeadsEntry
	nil,                                       // 33: anytype.Change.FileKeys.KeysEntry
	(*ChangeStoreSliceUpdateAdd)(nil),         // 34: anytype.Change.StoreSliceUpdate.Add
	(*ChangeStoreSliceUpdateRemove)(nil),      // 35: anytype.Change.StoreSliceUpdate.Remove
	(*ChangeStoreSliceUpdateMove)(nil),        // 36: anytype.Change.StoreSliceUpdate.Move
	(*model.SmartBlockSnapshotBase)(nil),      // 37: anytype.model.SmartBlockSnapshotBase
	(model.BlockPosition)(0),                  // 38: anytype.model.Block.Position
	(*model.Block)(nil),                       // 39: anytype.model.Block
	(*EventMessage)(nil),                      // 40: anytype.Event.Message
	(*structpb.Value)(nil),                    // 41: google.protobuf.Value
	(*model.RelationLink)(nil),                // 42: anytype.model.RelationLink
	(*model.FileInfo)(nil),                    // 43: anytype.model.FileInfo
	(*model.Notification)(nil),                // 44: anytype.model.Notification
	(model.NotificationStatus)(0),             // 45: anytype.model.Notification.Status
	(*model.DeviceInfo)(nil),                  // 46: anytype.model.DeviceInfo
}
var file_pb_protos_changes_proto_depIdxs = []int32{
	11, // 0: anytype.Change.content:type_name -> anytype.Change.Content
	9,  // 1: anytype.Change.snapshot:type_name -> anytype.Change.Snapshot
	10, // 2: anytype.Change.fileKeys:type_name -> anytype.Change.FileKeys
	11, // 3: anytype.ChangeNoSnapshot.content:type_name -> anytype.Change.Content
	10, // 4: anytype.ChangeNoSnapshot.fileKeys:type_name -> anytype.Change.FileKeys
	4,  // 5: anytype.StoreChange.changeSet:type_name -> anytype.StoreChangeContent
	5,  // 6: anytype.StoreChangeContent.create:type_name -> anytype.DocumentCreate
	6,  // 7: anytype.StoreChangeContent.modify:type_name -> anytype.DocumentModify
	8,  // 8: anytype.StoreChangeContent.delete:type_name -> anytype.DocumentDelete
	7,  // 9: anytype.DocumentModify.keys:type_name -> anytype.KeyModify
	0,  // 10: anytype.KeyModify.modifyOp:type_name -> anytype.ModifyOp
	32, // 11: anytype.Change.Snapshot.logHeads:type_name -> anytype.Change.Snapshot.LogHeadsEntry
	37, // 12: anytype.Change.Snapshot.data:type_name -> anytype.model.SmartBlockSnapshotBase
	10, // 13: anytype.Change.Snapshot.fileKeys:type_name -> anytype.Change.FileKeys
	33, // 14: anytype.Change.FileKeys.keys:type_name -> anytype.Change.FileKeys.KeysEntry
	12, // 15: anytype.Change.Content.blockCreate:type_name -> anytype.Change.BlockCreate
	13, // 16: anytype.Change.Content.blockUpdate:type_name -> anytype.Change.BlockUpdate
	14, // 17: anytype.Change.Content.blockRemove:type_name -> anytype.Change.BlockRemove
	15, // 18: anytype.Change.Content.blockMove:type_name -> anytype.Change.BlockMove
	16, // 19: anytype.Change.Content.blockDuplicate:type_name -> anytype.Change.BlockDuplicate
	19, // 20: anytype.Change.Content.relationAdd:type_name -> anytype.Change.RelationAdd
	20, // 21: anytype.Change.Content.relationRemove:type_name -> anytype.Change.RelationRemove
	17, // 22: anytype.Change.Content.detailsSet:type_name -> anytype.Change.DetailsSet
	18, // 23: anytype.Change.Content.detailsUnset:type_name -> anytype.Change.DetailsUnset
	21, // 24: anytype.Change.Content.objectTypeAdd:type_name -> anytype.Change.ObjectTypeAdd
	22, // 25: anytype.Change.Content.objectTypeRemove:type_name -> anytype.Change.ObjectTypeRemove
	23, // 26: anytype.Change.Content.storeKeySet:type_name -> anytype.Change.StoreKeySet
	24, // 27: anytype.Change.Content.storeKeyUnset:type_name -> anytype.Change.StoreKeyUnset
	25, // 28: anytype.Change.Content.storeSliceUpdate:type_name -> anytype.Change.StoreSliceUpdate
	26, // 29: anytype.Change.Content.originalCreatedTimestampSet:type_name -> anytype.Change.OriginalCreatedTimestampSet
	27, // 30: anytype.Change.Content.setFileInfo:type_name -> anytype.Change.SetFileInfo
	28, // 31: anytype.Change.Content.notificationCreate:type_name -> anytype.Change.NotificationCreate
	29, // 32: anytype.Change.Content.notificationUpdate:type_name -> anytype.Change.NotificationUpdate
	30, // 33: anytype.Change.Content.deviceAdd:type_name -> anytype.Change.DeviceAdd
	31, // 34: anytype.Change.Content.deviceUpdate:type_name -> anytype.Change.DeviceUpdate
	38, // 35: anytype.Change.BlockCreate.position:type_name -> anytype.model.Block.Position
	39, // 36: anytype.Change.BlockCreate.blocks:type_name -> anytype.model.Block
	40, // 37: anytype.Change.BlockUpdate.events:type_name -> anytype.Event.Message
	38, // 38: anytype.Change.BlockMove.position:type_name -> anytype.model.Block.Position
	38, // 39: anytype.Change.BlockDuplicate.position:type_name -> anytype.model.Block.Position
	41, // 40: anytype.Change.DetailsSet.value:type_name -> google.protobuf.Value
	42, // 41: anytype.Change.RelationAdd.relationLinks:type_name -> anytype.model.RelationLink
	41, // 42: anytype.Change.StoreKeySet.value:type_name -> google.protobuf.Value
	34, // 43: anytype.Change.StoreSliceUpdate.add:type_name -> anytype.Change.StoreSliceUpdate.Add
	35, // 44: anytype.Change.StoreSliceUpdate.remove:type_name -> anytype.Change.StoreSliceUpdate.Remove
	36, // 45: anytype.Change.StoreSliceUpdate.move:type_name -> anytype.Change.StoreSliceUpdate.Move
	43, // 46: anytype.Change.SetFileInfo.fileInfo:type_name -> anytype.model.FileInfo
	44, // 47: anytype.Change.NotificationCreate.notification:type_name -> anytype.model.Notification
	45, // 48: anytype.Change.NotificationUpdate.status:type_name -> anytype.model.Notification.Status
	46, // 49: anytype.Change.DeviceAdd.device:type_name -> anytype.model.DeviceInfo
	50, // [50:50] is the sub-list for method output_type
	50, // [50:50] is the sub-list for method input_type
	50, // [50:50] is the sub-list for extension type_name
	50, // [50:50] is the sub-list for extension extendee
	0,  // [0:50] is the sub-list for field type_name
}

func init() { file_pb_protos_changes_proto_init() }
func file_pb_protos_changes_proto_init() {
	if File_pb_protos_changes_proto != nil {
		return
	}
	file_pb_protos_events_proto_init()
	file_pb_protos_changes_proto_msgTypes[3].OneofWrappers = []any{
		(*StoreChangeContentChangeOfCreate)(nil),
		(*StoreChangeContentChangeOfModify)(nil),
		(*StoreChangeContentChangeOfDelete)(nil),
	}
	file_pb_protos_changes_proto_msgTypes[10].OneofWrappers = []any{
		(*ChangeContentValueOfBlockCreate)(nil),
		(*ChangeContentValueOfBlockUpdate)(nil),
		(*ChangeContentValueOfBlockRemove)(nil),
		(*ChangeContentValueOfBlockMove)(nil),
		(*ChangeContentValueOfBlockDuplicate)(nil),
		(*ChangeContentValueOfRelationAdd)(nil),
		(*ChangeContentValueOfRelationRemove)(nil),
		(*ChangeContentValueOfDetailsSet)(nil),
		(*ChangeContentValueOfDetailsUnset)(nil),
		(*ChangeContentValueOfObjectTypeAdd)(nil),
		(*ChangeContentValueOfObjectTypeRemove)(nil),
		(*ChangeContentValueOfStoreKeySet)(nil),
		(*ChangeContentValueOfStoreKeyUnset)(nil),
		(*ChangeContentValueOfStoreSliceUpdate)(nil),
		(*ChangeContentValueOfOriginalCreatedTimestampSet)(nil),
		(*ChangeContentValueOfSetFileInfo)(nil),
		(*ChangeContentValueOfNotificationCreate)(nil),
		(*ChangeContentValueOfNotificationUpdate)(nil),
		(*ChangeContentValueOfDeviceAdd)(nil),
		(*ChangeContentValueOfDeviceUpdate)(nil),
	}
	file_pb_protos_changes_proto_msgTypes[24].OneofWrappers = []any{
		(*ChangeStoreSliceUpdateOperationOfAdd)(nil),
		(*ChangeStoreSliceUpdateOperationOfRemove)(nil),
		(*ChangeStoreSliceUpdateOperationOfMove)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pb_protos_changes_proto_rawDesc), len(file_pb_protos_changes_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   36,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pb_protos_changes_proto_goTypes,
		DependencyIndexes: file_pb_protos_changes_proto_depIdxs,
		EnumInfos:         file_pb_protos_changes_proto_enumTypes,
		MessageInfos:      file_pb_protos_changes_proto_msgTypes,
	}.Build()
	File_pb_protos_changes_proto = out.File
	file_pb_protos_changes_proto_goTypes = nil
	file_pb_protos_changes_proto_depIdxs = nil
}
